"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ledgerhq";
exports.ids = ["vendor-chunks/@ledgerhq"];
exports.modules = {

/***/ "(ssr)/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/lib-es/hid-framing.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\");\n\nconst Tag = 0x05;\nfunction asUInt16BE(value) {\n    const b = Buffer.alloc(2);\n    b.writeUInt16BE(value, 0);\n    return b;\n}\nconst initialAcc = {\n    data: Buffer.alloc(0),\n    dataLength: 0,\n    sequence: 0\n};\n/**\n *\n */ const createHIDframing = (channel, packetSize)=>{\n    return {\n        makeBlocks (apdu) {\n            let data = Buffer.concat([\n                asUInt16BE(apdu.length),\n                apdu\n            ]);\n            const blockSize = packetSize - 5;\n            const nbBlocks = Math.ceil(data.length / blockSize);\n            data = Buffer.concat([\n                data,\n                Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0)\n            ]);\n            const blocks = [];\n            for(let i = 0; i < nbBlocks; i++){\n                const head = Buffer.alloc(5);\n                head.writeUInt16BE(channel, 0);\n                head.writeUInt8(Tag, 2);\n                head.writeUInt16BE(i, 3);\n                const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n                blocks.push(Buffer.concat([\n                    head,\n                    chunk\n                ]));\n            }\n            return blocks;\n        },\n        reduceResponse (acc, chunk) {\n            let { data, dataLength, sequence } = acc || initialAcc;\n            if (chunk.readUInt16BE(0) !== channel) {\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(\"Invalid channel\", \"InvalidChannel\");\n            }\n            if (chunk.readUInt8(2) !== Tag) {\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(\"Invalid tag\", \"InvalidTag\");\n            }\n            if (chunk.readUInt16BE(3) !== sequence) {\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(\"Invalid sequence\", \"InvalidSequence\");\n            }\n            if (!acc) {\n                dataLength = chunk.readUInt16BE(5);\n            }\n            sequence++;\n            const chunkData = chunk.slice(acc ? 5 : 7);\n            data = Buffer.concat([\n                data,\n                chunkData\n            ]);\n            if (data.length > dataLength) {\n                data = data.slice(0, dataLength);\n            }\n            return {\n                data,\n                dataLength,\n                sequence\n            };\n        },\n        getReducedResult (acc) {\n            if (acc && acc.dataLength === acc.data.length) {\n                return acc.data;\n            }\n        }\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createHIDframing); //# sourceMappingURL=hid-framing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbGliLWVzL2hpZC1mcmFtaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xELE1BQU1DLE1BQU07QUFDWixTQUFTQyxXQUFXQyxLQUFLO0lBQ3JCLE1BQU1DLElBQUlDLE9BQU9DLEtBQUssQ0FBQztJQUN2QkYsRUFBRUcsYUFBYSxDQUFDSixPQUFPO0lBQ3ZCLE9BQU9DO0FBQ1g7QUFDQSxNQUFNSSxhQUFhO0lBQ2ZDLE1BQU1KLE9BQU9DLEtBQUssQ0FBQztJQUNuQkksWUFBWTtJQUNaQyxVQUFVO0FBQ2Q7QUFDQTs7Q0FFQyxHQUNELE1BQU1DLG1CQUFtQixDQUFDQyxTQUFTQztJQUMvQixPQUFPO1FBQ0hDLFlBQVdDLElBQUk7WUFDWCxJQUFJUCxPQUFPSixPQUFPWSxNQUFNLENBQUM7Z0JBQUNmLFdBQVdjLEtBQUtFLE1BQU07Z0JBQUdGO2FBQUs7WUFDeEQsTUFBTUcsWUFBWUwsYUFBYTtZQUMvQixNQUFNTSxXQUFXQyxLQUFLQyxJQUFJLENBQUNiLEtBQUtTLE1BQU0sR0FBR0M7WUFDekNWLE9BQU9KLE9BQU9ZLE1BQU0sQ0FBQztnQkFDakJSO2dCQUNBSixPQUFPQyxLQUFLLENBQUNjLFdBQVdELFlBQVlWLEtBQUtTLE1BQU0sR0FBRyxHQUFHSyxJQUFJLENBQUM7YUFDN0Q7WUFDRCxNQUFNQyxTQUFTLEVBQUU7WUFDakIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlMLFVBQVVLLElBQUs7Z0JBQy9CLE1BQU1DLE9BQU9yQixPQUFPQyxLQUFLLENBQUM7Z0JBQzFCb0IsS0FBS25CLGFBQWEsQ0FBQ00sU0FBUztnQkFDNUJhLEtBQUtDLFVBQVUsQ0FBQzFCLEtBQUs7Z0JBQ3JCeUIsS0FBS25CLGFBQWEsQ0FBQ2tCLEdBQUc7Z0JBQ3RCLE1BQU1HLFFBQVFuQixLQUFLb0IsS0FBSyxDQUFDSixJQUFJTixXQUFXLENBQUNNLElBQUksS0FBS047Z0JBQ2xESyxPQUFPTSxJQUFJLENBQUN6QixPQUFPWSxNQUFNLENBQUM7b0JBQUNTO29CQUFNRTtpQkFBTTtZQUMzQztZQUNBLE9BQU9KO1FBQ1g7UUFDQU8sZ0JBQWVDLEdBQUcsRUFBRUosS0FBSztZQUNyQixJQUFJLEVBQUVuQixJQUFJLEVBQUVDLFVBQVUsRUFBRUMsUUFBUSxFQUFFLEdBQUdxQixPQUFPeEI7WUFDNUMsSUFBSW9CLE1BQU1LLFlBQVksQ0FBQyxPQUFPcEIsU0FBUztnQkFDbkMsTUFBTSxJQUFJYiw0REFBY0EsQ0FBQyxtQkFBbUI7WUFDaEQ7WUFDQSxJQUFJNEIsTUFBTU0sU0FBUyxDQUFDLE9BQU9qQyxLQUFLO2dCQUM1QixNQUFNLElBQUlELDREQUFjQSxDQUFDLGVBQWU7WUFDNUM7WUFDQSxJQUFJNEIsTUFBTUssWUFBWSxDQUFDLE9BQU90QixVQUFVO2dCQUNwQyxNQUFNLElBQUlYLDREQUFjQSxDQUFDLG9CQUFvQjtZQUNqRDtZQUNBLElBQUksQ0FBQ2dDLEtBQUs7Z0JBQ050QixhQUFha0IsTUFBTUssWUFBWSxDQUFDO1lBQ3BDO1lBQ0F0QjtZQUNBLE1BQU13QixZQUFZUCxNQUFNQyxLQUFLLENBQUNHLE1BQU0sSUFBSTtZQUN4Q3ZCLE9BQU9KLE9BQU9ZLE1BQU0sQ0FBQztnQkFBQ1I7Z0JBQU0wQjthQUFVO1lBQ3RDLElBQUkxQixLQUFLUyxNQUFNLEdBQUdSLFlBQVk7Z0JBQzFCRCxPQUFPQSxLQUFLb0IsS0FBSyxDQUFDLEdBQUduQjtZQUN6QjtZQUNBLE9BQU87Z0JBQ0hEO2dCQUNBQztnQkFDQUM7WUFDSjtRQUNKO1FBQ0F5QixrQkFBaUJKLEdBQUc7WUFDaEIsSUFBSUEsT0FBT0EsSUFBSXRCLFVBQVUsS0FBS3NCLElBQUl2QixJQUFJLENBQUNTLE1BQU0sRUFBRTtnQkFDM0MsT0FBT2MsSUFBSXZCLElBQUk7WUFDbkI7UUFDSjtJQUNKO0FBQ0o7QUFDQSxpRUFBZUcsZ0JBQWdCQSxFQUFDLENBQ2hDLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9saWItZXMvaGlkLWZyYW1pbmcuanM/ZGU4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUcmFuc3BvcnRFcnJvciB9IGZyb20gXCJAbGVkZ2VyaHEvZXJyb3JzXCI7XG5jb25zdCBUYWcgPSAweDA1O1xuZnVuY3Rpb24gYXNVSW50MTZCRSh2YWx1ZSkge1xuICAgIGNvbnN0IGIgPSBCdWZmZXIuYWxsb2MoMik7XG4gICAgYi53cml0ZVVJbnQxNkJFKHZhbHVlLCAwKTtcbiAgICByZXR1cm4gYjtcbn1cbmNvbnN0IGluaXRpYWxBY2MgPSB7XG4gICAgZGF0YTogQnVmZmVyLmFsbG9jKDApLFxuICAgIGRhdGFMZW5ndGg6IDAsXG4gICAgc2VxdWVuY2U6IDAsXG59O1xuLyoqXG4gKlxuICovXG5jb25zdCBjcmVhdGVISURmcmFtaW5nID0gKGNoYW5uZWwsIHBhY2tldFNpemUpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBtYWtlQmxvY2tzKGFwZHUpIHtcbiAgICAgICAgICAgIGxldCBkYXRhID0gQnVmZmVyLmNvbmNhdChbYXNVSW50MTZCRShhcGR1Lmxlbmd0aCksIGFwZHVdKTtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrU2l6ZSA9IHBhY2tldFNpemUgLSA1O1xuICAgICAgICAgICAgY29uc3QgbmJCbG9ja3MgPSBNYXRoLmNlaWwoZGF0YS5sZW5ndGggLyBibG9ja1NpemUpO1xuICAgICAgICAgICAgZGF0YSA9IEJ1ZmZlci5jb25jYXQoW1xuICAgICAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICAgICAgQnVmZmVyLmFsbG9jKG5iQmxvY2tzICogYmxvY2tTaXplIC0gZGF0YS5sZW5ndGggKyAxKS5maWxsKDApLFxuICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICBjb25zdCBibG9ja3MgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbmJCbG9ja3M7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWQgPSBCdWZmZXIuYWxsb2MoNSk7XG4gICAgICAgICAgICAgICAgaGVhZC53cml0ZVVJbnQxNkJFKGNoYW5uZWwsIDApO1xuICAgICAgICAgICAgICAgIGhlYWQud3JpdGVVSW50OChUYWcsIDIpO1xuICAgICAgICAgICAgICAgIGhlYWQud3JpdGVVSW50MTZCRShpLCAzKTtcbiAgICAgICAgICAgICAgICBjb25zdCBjaHVuayA9IGRhdGEuc2xpY2UoaSAqIGJsb2NrU2l6ZSwgKGkgKyAxKSAqIGJsb2NrU2l6ZSk7XG4gICAgICAgICAgICAgICAgYmxvY2tzLnB1c2goQnVmZmVyLmNvbmNhdChbaGVhZCwgY2h1bmtdKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYmxvY2tzO1xuICAgICAgICB9LFxuICAgICAgICByZWR1Y2VSZXNwb25zZShhY2MsIGNodW5rKSB7XG4gICAgICAgICAgICBsZXQgeyBkYXRhLCBkYXRhTGVuZ3RoLCBzZXF1ZW5jZSB9ID0gYWNjIHx8IGluaXRpYWxBY2M7XG4gICAgICAgICAgICBpZiAoY2h1bmsucmVhZFVJbnQxNkJFKDApICE9PSBjaGFubmVsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRyYW5zcG9ydEVycm9yKFwiSW52YWxpZCBjaGFubmVsXCIsIFwiSW52YWxpZENoYW5uZWxcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2h1bmsucmVhZFVJbnQ4KDIpICE9PSBUYWcpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHJhbnNwb3J0RXJyb3IoXCJJbnZhbGlkIHRhZ1wiLCBcIkludmFsaWRUYWdcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2h1bmsucmVhZFVJbnQxNkJFKDMpICE9PSBzZXF1ZW5jZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUcmFuc3BvcnRFcnJvcihcIkludmFsaWQgc2VxdWVuY2VcIiwgXCJJbnZhbGlkU2VxdWVuY2VcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWFjYykge1xuICAgICAgICAgICAgICAgIGRhdGFMZW5ndGggPSBjaHVuay5yZWFkVUludDE2QkUoNSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXF1ZW5jZSsrO1xuICAgICAgICAgICAgY29uc3QgY2h1bmtEYXRhID0gY2h1bmsuc2xpY2UoYWNjID8gNSA6IDcpO1xuICAgICAgICAgICAgZGF0YSA9IEJ1ZmZlci5jb25jYXQoW2RhdGEsIGNodW5rRGF0YV0pO1xuICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gZGF0YUxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhLnNsaWNlKDAsIGRhdGFMZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgICAgIGRhdGFMZW5ndGgsXG4gICAgICAgICAgICAgICAgc2VxdWVuY2UsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBnZXRSZWR1Y2VkUmVzdWx0KGFjYykge1xuICAgICAgICAgICAgaWYgKGFjYyAmJiBhY2MuZGF0YUxlbmd0aCA9PT0gYWNjLmRhdGEubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYy5kYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSElEZnJhbWluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhpZC1mcmFtaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJUcmFuc3BvcnRFcnJvciIsIlRhZyIsImFzVUludDE2QkUiLCJ2YWx1ZSIsImIiLCJCdWZmZXIiLCJhbGxvYyIsIndyaXRlVUludDE2QkUiLCJpbml0aWFsQWNjIiwiZGF0YSIsImRhdGFMZW5ndGgiLCJzZXF1ZW5jZSIsImNyZWF0ZUhJRGZyYW1pbmciLCJjaGFubmVsIiwicGFja2V0U2l6ZSIsIm1ha2VCbG9ja3MiLCJhcGR1IiwiY29uY2F0IiwibGVuZ3RoIiwiYmxvY2tTaXplIiwibmJCbG9ja3MiLCJNYXRoIiwiY2VpbCIsImZpbGwiLCJibG9ja3MiLCJpIiwiaGVhZCIsIndyaXRlVUludDgiLCJjaHVuayIsInNsaWNlIiwicHVzaCIsInJlZHVjZVJlc3BvbnNlIiwiYWNjIiwicmVhZFVJbnQxNkJFIiwicmVhZFVJbnQ4IiwiY2h1bmtEYXRhIiwiZ2V0UmVkdWNlZFJlc3VsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/lib-es/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeviceModelId: () => (/* binding */ DeviceModelId),\n/* harmony export */   IICCID: () => (/* binding */ IICCID),\n/* harmony export */   IIGenericHID: () => (/* binding */ IIGenericHID),\n/* harmony export */   IIKeyboardHID: () => (/* binding */ IIKeyboardHID),\n/* harmony export */   IIU2F: () => (/* binding */ IIU2F),\n/* harmony export */   IIWebUSB: () => (/* binding */ IIWebUSB),\n/* harmony export */   getBluetoothServiceUuids: () => (/* binding */ getBluetoothServiceUuids),\n/* harmony export */   getDeviceModel: () => (/* binding */ getDeviceModel),\n/* harmony export */   getInfosForServiceUuid: () => (/* binding */ getInfosForServiceUuid),\n/* harmony export */   identifyProductName: () => (/* binding */ identifyProductName),\n/* harmony export */   identifyTargetId: () => (/* binding */ identifyTargetId),\n/* harmony export */   identifyUSBProductId: () => (/* binding */ identifyUSBProductId),\n/* harmony export */   ledgerUSBVendorId: () => (/* binding */ ledgerUSBVendorId)\n/* harmony export */ });\n/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/index.js\");\n/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(semver__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */ const IIGenericHID = 0x01;\nconst IIKeyboardHID = 0x02;\nconst IIU2F = 0x04;\nconst IICCID = 0x08;\nconst IIWebUSB = 0x10;\nvar DeviceModelId;\n(function(DeviceModelId) {\n    DeviceModelId[\"blue\"] = \"blue\";\n    DeviceModelId[\"nanoS\"] = \"nanoS\";\n    DeviceModelId[\"nanoSP\"] = \"nanoSP\";\n    DeviceModelId[\"nanoX\"] = \"nanoX\";\n    DeviceModelId[\"stax\"] = \"stax\";\n})(DeviceModelId || (DeviceModelId = {}));\nconst devices = {\n    [DeviceModelId.blue]: {\n        id: DeviceModelId.blue,\n        productName: \"Ledger\\xa0Blue\",\n        productIdMM: 0x00,\n        legacyUsbProductId: 0x0000,\n        usbOnly: true,\n        memorySize: 480 * 1024,\n        masks: [\n            0x31000000,\n            0x31010000\n        ],\n        getBlockSize: (_firwareVersion)=>4 * 1024\n    },\n    [DeviceModelId.nanoS]: {\n        id: DeviceModelId.nanoS,\n        productName: \"Ledger\\xa0Nano\\xa0S\",\n        productIdMM: 0x10,\n        legacyUsbProductId: 0x0001,\n        usbOnly: true,\n        memorySize: 320 * 1024,\n        masks: [\n            0x31100000\n        ],\n        getBlockSize: (firmwareVersion)=>{\n            var _a;\n            return semver__WEBPACK_IMPORTED_MODULE_0___default().lt((_a = semver__WEBPACK_IMPORTED_MODULE_0___default().coerce(firmwareVersion)) !== null && _a !== void 0 ? _a : \"\", \"2.0.0\") ? 4 * 1024 : 2 * 1024;\n        }\n    },\n    [DeviceModelId.nanoSP]: {\n        id: DeviceModelId.nanoSP,\n        productName: \"Ledger Nano S Plus\",\n        productIdMM: 0x50,\n        legacyUsbProductId: 0x0005,\n        usbOnly: true,\n        memorySize: 1536 * 1024,\n        masks: [\n            0x33100000\n        ],\n        getBlockSize: (_firmwareVersion)=>32\n    },\n    [DeviceModelId.nanoX]: {\n        id: DeviceModelId.nanoX,\n        productName: \"Ledger\\xa0Nano\\xa0X\",\n        productIdMM: 0x40,\n        legacyUsbProductId: 0x0004,\n        usbOnly: false,\n        memorySize: 2 * 1024 * 1024,\n        masks: [\n            0x33000000\n        ],\n        getBlockSize: (_firwareVersion)=>4 * 1024,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\"\n            }\n        ]\n    },\n    [DeviceModelId.stax]: {\n        id: DeviceModelId.stax,\n        productName: \"Ledger\\xa0Stax\",\n        productIdMM: 0x60,\n        legacyUsbProductId: 0x0006,\n        usbOnly: false,\n        memorySize: 1536 * 1024,\n        masks: [\n            0x33200000\n        ],\n        getBlockSize: (_firmwareVersion)=>32,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\"\n            }\n        ]\n    }\n};\nconst productMap = {\n    Blue: DeviceModelId.blue,\n    \"Nano S\": DeviceModelId.nanoS,\n    \"Nano S Plus\": DeviceModelId.nanoSP,\n    \"Nano X\": DeviceModelId.nanoX,\n    Stax: DeviceModelId.stax\n};\nconst devicesList = Object.values(devices);\n/**\n *\n */ const ledgerUSBVendorId = 0x2c97;\n/**\n *\n */ const getDeviceModel = (id)=>{\n    const info = devices[id];\n    if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n    return info;\n};\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */ const identifyTargetId = (targetId)=>{\n    const deviceModel = devicesList.find(({ masks })=>masks.find((mask)=>(targetId & 0xffff0000) === mask));\n    return deviceModel;\n};\n/**\n *\n */ const identifyUSBProductId = (usbProductId)=>{\n    const legacy = devicesList.find((d)=>d.legacyUsbProductId === usbProductId);\n    if (legacy) return legacy;\n    const mm = usbProductId >> 8;\n    const deviceModel = devicesList.find((d)=>d.productIdMM === mm);\n    return deviceModel;\n};\nconst identifyProductName = (productName)=>{\n    const deviceModel = devicesList.find((d)=>d.id === productMap[productName]);\n    return deviceModel;\n};\nconst bluetoothServices = [];\nconst serviceUuidToInfos = {};\nfor(const id in devices){\n    const deviceModel = devices[id];\n    const { bluetoothSpec } = deviceModel;\n    if (bluetoothSpec) {\n        for(let i = 0; i < bluetoothSpec.length; i++){\n            const spec = bluetoothSpec[i];\n            bluetoothServices.push(spec.serviceUuid);\n            serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = Object.assign({\n                deviceModel\n            }, spec);\n        }\n    }\n}\n/**\n *\n */ const getBluetoothServiceUuids = ()=>bluetoothServices;\n/**\n *\n */ const getInfosForServiceUuid = (uuid)=>serviceUuidToInfos[uuid.toLowerCase()]; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst ANY = Symbol(\"SemVer ANY\");\n// hoisted class for cyclic dependency\nclass Comparator {\n    static get ANY() {\n        return ANY;\n    }\n    constructor(comp, options){\n        options = parseOptions(options);\n        if (comp instanceof Comparator) {\n            if (comp.loose === !!options.loose) {\n                return comp;\n            } else {\n                comp = comp.value;\n            }\n        }\n        comp = comp.trim().split(/\\s+/).join(\" \");\n        debug(\"comparator\", comp, options);\n        this.options = options;\n        this.loose = !!options.loose;\n        this.parse(comp);\n        if (this.semver === ANY) {\n            this.value = \"\";\n        } else {\n            this.value = this.operator + this.semver.version;\n        }\n        debug(\"comp\", this);\n    }\n    parse(comp) {\n        const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n        const m = comp.match(r);\n        if (!m) {\n            throw new TypeError(`Invalid comparator: ${comp}`);\n        }\n        this.operator = m[1] !== undefined ? m[1] : \"\";\n        if (this.operator === \"=\") {\n            this.operator = \"\";\n        }\n        // if it literally is just '>' or '' then allow anything.\n        if (!m[2]) {\n            this.semver = ANY;\n        } else {\n            this.semver = new SemVer(m[2], this.options.loose);\n        }\n    }\n    toString() {\n        return this.value;\n    }\n    test(version) {\n        debug(\"Comparator.test\", version, this.options.loose);\n        if (this.semver === ANY || version === ANY) {\n            return true;\n        }\n        if (typeof version === \"string\") {\n            try {\n                version = new SemVer(version, this.options);\n            } catch (er) {\n                return false;\n            }\n        }\n        return cmp(version, this.operator, this.semver, this.options);\n    }\n    intersects(comp, options) {\n        if (!(comp instanceof Comparator)) {\n            throw new TypeError(\"a Comparator is required\");\n        }\n        if (this.operator === \"\") {\n            if (this.value === \"\") {\n                return true;\n            }\n            return new Range(comp.value, options).test(this.value);\n        } else if (comp.operator === \"\") {\n            if (comp.value === \"\") {\n                return true;\n            }\n            return new Range(this.value, options).test(comp.semver);\n        }\n        options = parseOptions(options);\n        // Special cases where nothing can possibly be lower\n        if (options.includePrerelease && (this.value === \"<0.0.0-0\" || comp.value === \"<0.0.0-0\")) {\n            return false;\n        }\n        if (!options.includePrerelease && (this.value.startsWith(\"<0.0.0\") || comp.value.startsWith(\"<0.0.0\"))) {\n            return false;\n        }\n        // Same direction increasing (> or >=)\n        if (this.operator.startsWith(\">\") && comp.operator.startsWith(\">\")) {\n            return true;\n        }\n        // Same direction decreasing (< or <=)\n        if (this.operator.startsWith(\"<\") && comp.operator.startsWith(\"<\")) {\n            return true;\n        }\n        // same SemVer and both sides are inclusive (<= or >=)\n        if (this.semver.version === comp.semver.version && this.operator.includes(\"=\") && comp.operator.includes(\"=\")) {\n            return true;\n        }\n        // opposite directions less than\n        if (cmp(this.semver, \"<\", comp.semver, options) && this.operator.startsWith(\">\") && comp.operator.startsWith(\"<\")) {\n            return true;\n        }\n        // opposite directions greater than\n        if (cmp(this.semver, \">\", comp.semver, options) && this.operator.startsWith(\"<\") && comp.operator.startsWith(\">\")) {\n            return true;\n        }\n        return false;\n    }\n}\nmodule.exports = Comparator;\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js\");\nconst { safeRe: re, t } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js\");\nconst cmp = __webpack_require__(/*! ../functions/cmp */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js\");\nconst debug = __webpack_require__(/*! ../internal/debug */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js\");\nconst SemVer = __webpack_require__(/*! ./semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ./range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SPACE_CHARACTERS = /\\s+/g;\n// hoisted class for cyclic dependency\nclass Range {\n    constructor(range, options){\n        options = parseOptions(options);\n        if (range instanceof Range) {\n            if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n                return range;\n            } else {\n                return new Range(range.raw, options);\n            }\n        }\n        if (range instanceof Comparator) {\n            // just put it in the set and return\n            this.raw = range.value;\n            this.set = [\n                [\n                    range\n                ]\n            ];\n            this.formatted = undefined;\n            return this;\n        }\n        this.options = options;\n        this.loose = !!options.loose;\n        this.includePrerelease = !!options.includePrerelease;\n        // First reduce all whitespace as much as possible so we do not have to rely\n        // on potentially slow regexes like \\s*. This is then stored and used for\n        // future error messages as well.\n        this.raw = range.trim().replace(SPACE_CHARACTERS, \" \");\n        // First, split on ||\n        this.set = this.raw.split(\"||\")// map the range to a 2d array of comparators\n        .map((r)=>this.parseRange(r.trim()))// throw out any comparator lists that are empty\n        // this generally means that it was not a valid range, which is allowed\n        // in loose mode, but will still throw if the WHOLE range is invalid.\n        .filter((c)=>c.length);\n        if (!this.set.length) {\n            throw new TypeError(`Invalid SemVer Range: ${this.raw}`);\n        }\n        // if we have any that are not the null set, throw out null sets.\n        if (this.set.length > 1) {\n            // keep the first one, in case they're all null sets\n            const first = this.set[0];\n            this.set = this.set.filter((c)=>!isNullSet(c[0]));\n            if (this.set.length === 0) {\n                this.set = [\n                    first\n                ];\n            } else if (this.set.length > 1) {\n                // if we have any that are *, then the range is just *\n                for (const c of this.set){\n                    if (c.length === 1 && isAny(c[0])) {\n                        this.set = [\n                            c\n                        ];\n                        break;\n                    }\n                }\n            }\n        }\n        this.formatted = undefined;\n    }\n    get range() {\n        if (this.formatted === undefined) {\n            this.formatted = \"\";\n            for(let i = 0; i < this.set.length; i++){\n                if (i > 0) {\n                    this.formatted += \"||\";\n                }\n                const comps = this.set[i];\n                for(let k = 0; k < comps.length; k++){\n                    if (k > 0) {\n                        this.formatted += \" \";\n                    }\n                    this.formatted += comps[k].toString().trim();\n                }\n            }\n        }\n        return this.formatted;\n    }\n    format() {\n        return this.range;\n    }\n    toString() {\n        return this.range;\n    }\n    parseRange(range) {\n        // memoize range parsing for performance.\n        // this is a very hot path, and fully deterministic.\n        const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);\n        const memoKey = memoOpts + \":\" + range;\n        const cached = cache.get(memoKey);\n        if (cached) {\n            return cached;\n        }\n        const loose = this.options.loose;\n        // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n        const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];\n        range = range.replace(hr, hyphenReplace(this.options.includePrerelease));\n        debug(\"hyphen replace\", range);\n        // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n        range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);\n        debug(\"comparator trim\", range);\n        // `~ 1.2.3` => `~1.2.3`\n        range = range.replace(re[t.TILDETRIM], tildeTrimReplace);\n        debug(\"tilde trim\", range);\n        // `^ 1.2.3` => `^1.2.3`\n        range = range.replace(re[t.CARETTRIM], caretTrimReplace);\n        debug(\"caret trim\", range);\n        // At this point, the range is completely trimmed and\n        // ready to be split into comparators.\n        let rangeList = range.split(\" \").map((comp)=>parseComparator(comp, this.options)).join(\" \").split(/\\s+/)// >=0.0.0 is equivalent to *\n        .map((comp)=>replaceGTE0(comp, this.options));\n        if (loose) {\n            // in loose mode, throw out any that are not valid comparators\n            rangeList = rangeList.filter((comp)=>{\n                debug(\"loose invalid filter\", comp, this.options);\n                return !!comp.match(re[t.COMPARATORLOOSE]);\n            });\n        }\n        debug(\"range list\", rangeList);\n        // if any comparators are the null set, then replace with JUST null set\n        // if more than one comparator, remove any * comparators\n        // also, don't include the same comparator more than once\n        const rangeMap = new Map();\n        const comparators = rangeList.map((comp)=>new Comparator(comp, this.options));\n        for (const comp of comparators){\n            if (isNullSet(comp)) {\n                return [\n                    comp\n                ];\n            }\n            rangeMap.set(comp.value, comp);\n        }\n        if (rangeMap.size > 1 && rangeMap.has(\"\")) {\n            rangeMap.delete(\"\");\n        }\n        const result = [\n            ...rangeMap.values()\n        ];\n        cache.set(memoKey, result);\n        return result;\n    }\n    intersects(range, options) {\n        if (!(range instanceof Range)) {\n            throw new TypeError(\"a Range is required\");\n        }\n        return this.set.some((thisComparators)=>{\n            return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators)=>{\n                return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator)=>{\n                    return rangeComparators.every((rangeComparator)=>{\n                        return thisComparator.intersects(rangeComparator, options);\n                    });\n                });\n            });\n        });\n    }\n    // if ANY of the sets match ALL of its comparators, then pass\n    test(version) {\n        if (!version) {\n            return false;\n        }\n        if (typeof version === \"string\") {\n            try {\n                version = new SemVer(version, this.options);\n            } catch (er) {\n                return false;\n            }\n        }\n        for(let i = 0; i < this.set.length; i++){\n            if (testSet(this.set[i], version, this.options)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nmodule.exports = Range;\nconst LRU = __webpack_require__(/*! ../internal/lrucache */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/lrucache.js\");\nconst cache = new LRU();\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js\");\nconst Comparator = __webpack_require__(/*! ./comparator */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js\");\nconst debug = __webpack_require__(/*! ../internal/debug */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js\");\nconst SemVer = __webpack_require__(/*! ./semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst { safeRe: re, t, comparatorTrimReplace, tildeTrimReplace, caretTrimReplace } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js\");\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = __webpack_require__(/*! ../internal/constants */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js\");\nconst isNullSet = (c)=>c.value === \"<0.0.0-0\";\nconst isAny = (c)=>c.value === \"\";\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options)=>{\n    let result = true;\n    const remainingComparators = comparators.slice();\n    let testComparator = remainingComparators.pop();\n    while(result && remainingComparators.length){\n        result = remainingComparators.every((otherComparator)=>{\n            return testComparator.intersects(otherComparator, options);\n        });\n        testComparator = remainingComparators.pop();\n    }\n    return result;\n};\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options)=>{\n    debug(\"comp\", comp, options);\n    comp = replaceCarets(comp, options);\n    debug(\"caret\", comp);\n    comp = replaceTildes(comp, options);\n    debug(\"tildes\", comp);\n    comp = replaceXRanges(comp, options);\n    debug(\"xrange\", comp);\n    comp = replaceStars(comp, options);\n    debug(\"stars\", comp);\n    return comp;\n};\nconst isX = (id)=>!id || id.toLowerCase() === \"x\" || id === \"*\";\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options)=>{\n    return comp.trim().split(/\\s+/).map((c)=>replaceTilde(c, options)).join(\" \");\n};\nconst replaceTilde = (comp, options)=>{\n    const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];\n    return comp.replace(r, (_, M, m, p, pr)=>{\n        debug(\"tilde\", comp, _, M, m, p, pr);\n        let ret;\n        if (isX(M)) {\n            ret = \"\";\n        } else if (isX(m)) {\n            ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;\n        } else if (isX(p)) {\n            // ~1.2 == >=1.2.0 <1.3.0-0\n            ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;\n        } else if (pr) {\n            debug(\"replaceTilde pr\", pr);\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n        } else {\n            // ~1.2.3 == >=1.2.3 <1.3.0-0\n            ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;\n        }\n        debug(\"tilde return\", ret);\n        return ret;\n    });\n};\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options)=>{\n    return comp.trim().split(/\\s+/).map((c)=>replaceCaret(c, options)).join(\" \");\n};\nconst replaceCaret = (comp, options)=>{\n    debug(\"caret\", comp, options);\n    const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];\n    const z = options.includePrerelease ? \"-0\" : \"\";\n    return comp.replace(r, (_, M, m, p, pr)=>{\n        debug(\"caret\", comp, _, M, m, p, pr);\n        let ret;\n        if (isX(M)) {\n            ret = \"\";\n        } else if (isX(m)) {\n            ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;\n        } else if (isX(p)) {\n            if (M === \"0\") {\n                ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;\n            } else {\n                ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;\n            }\n        } else if (pr) {\n            debug(\"replaceCaret pr\", pr);\n            if (M === \"0\") {\n                if (m === \"0\") {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;\n                } else {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n                }\n            } else {\n                ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;\n            }\n        } else {\n            debug(\"no pr\");\n            if (M === \"0\") {\n                if (m === \"0\") {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;\n                } else {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;\n                }\n            } else {\n                ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;\n            }\n        }\n        debug(\"caret return\", ret);\n        return ret;\n    });\n};\nconst replaceXRanges = (comp, options)=>{\n    debug(\"replaceXRanges\", comp, options);\n    return comp.split(/\\s+/).map((c)=>replaceXRange(c, options)).join(\" \");\n};\nconst replaceXRange = (comp, options)=>{\n    comp = comp.trim();\n    const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];\n    return comp.replace(r, (ret, gtlt, M, m, p, pr)=>{\n        debug(\"xRange\", comp, ret, gtlt, M, m, p, pr);\n        const xM = isX(M);\n        const xm = xM || isX(m);\n        const xp = xm || isX(p);\n        const anyX = xp;\n        if (gtlt === \"=\" && anyX) {\n            gtlt = \"\";\n        }\n        // if we're including prereleases in the match, then we need\n        // to fix this to -0, the lowest possible prerelease value\n        pr = options.includePrerelease ? \"-0\" : \"\";\n        if (xM) {\n            if (gtlt === \">\" || gtlt === \"<\") {\n                // nothing is allowed\n                ret = \"<0.0.0-0\";\n            } else {\n                // nothing is forbidden\n                ret = \"*\";\n            }\n        } else if (gtlt && anyX) {\n            // we know patch is an x, because we have any x at all.\n            // replace X with 0\n            if (xm) {\n                m = 0;\n            }\n            p = 0;\n            if (gtlt === \">\") {\n                // >1 => >=2.0.0\n                // >1.2 => >=1.3.0\n                gtlt = \">=\";\n                if (xm) {\n                    M = +M + 1;\n                    m = 0;\n                    p = 0;\n                } else {\n                    m = +m + 1;\n                    p = 0;\n                }\n            } else if (gtlt === \"<=\") {\n                // <=0.7.x is actually <0.8.0, since any 0.7.x should\n                // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n                gtlt = \"<\";\n                if (xm) {\n                    M = +M + 1;\n                } else {\n                    m = +m + 1;\n                }\n            }\n            if (gtlt === \"<\") {\n                pr = \"-0\";\n            }\n            ret = `${gtlt + M}.${m}.${p}${pr}`;\n        } else if (xm) {\n            ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;\n        } else if (xp) {\n            ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;\n        }\n        debug(\"xRange return\", ret);\n        return ret;\n    });\n};\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options)=>{\n    debug(\"replaceStars\", comp, options);\n    // Looseness is ignored here.  star is always as loose as it gets!\n    return comp.trim().replace(re[t.STAR], \"\");\n};\nconst replaceGTE0 = (comp, options)=>{\n    debug(\"replaceGTE0\", comp, options);\n    return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], \"\");\n};\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = (incPr)=>($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr)=>{\n        if (isX(fM)) {\n            from = \"\";\n        } else if (isX(fm)) {\n            from = `>=${fM}.0.0${incPr ? \"-0\" : \"\"}`;\n        } else if (isX(fp)) {\n            from = `>=${fM}.${fm}.0${incPr ? \"-0\" : \"\"}`;\n        } else if (fpr) {\n            from = `>=${from}`;\n        } else {\n            from = `>=${from}${incPr ? \"-0\" : \"\"}`;\n        }\n        if (isX(tM)) {\n            to = \"\";\n        } else if (isX(tm)) {\n            to = `<${+tM + 1}.0.0-0`;\n        } else if (isX(tp)) {\n            to = `<${tM}.${+tm + 1}.0-0`;\n        } else if (tpr) {\n            to = `<=${tM}.${tm}.${tp}-${tpr}`;\n        } else if (incPr) {\n            to = `<${tM}.${tm}.${+tp + 1}-0`;\n        } else {\n            to = `<=${to}`;\n        }\n        return `${from} ${to}`.trim();\n    };\nconst testSet = (set, version, options)=>{\n    for(let i = 0; i < set.length; i++){\n        if (!set[i].test(version)) {\n            return false;\n        }\n    }\n    if (version.prerelease.length && !options.includePrerelease) {\n        // Find the set of versions that are allowed to have prereleases\n        // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n        // That should allow `1.2.3-pr.2` to pass.\n        // However, `1.2.4-alpha.notready` should NOT be allowed,\n        // even though it's within the range set by the comparators.\n        for(let i = 0; i < set.length; i++){\n            debug(set[i].semver);\n            if (set[i].semver === Comparator.ANY) {\n                continue;\n            }\n            if (set[i].semver.prerelease.length > 0) {\n                const allowed = set[i].semver;\n                if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n                    return true;\n                }\n            }\n        }\n        // Version has a -pre, but it's not one of the ones we like.\n        return false;\n    }\n    return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst debug = __webpack_require__(/*! ../internal/debug */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js\");\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = __webpack_require__(/*! ../internal/constants */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js\");\nconst { safeRe: re, t } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js\");\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js\");\nconst { compareIdentifiers } = __webpack_require__(/*! ../internal/identifiers */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js\");\nclass SemVer {\n    constructor(version, options){\n        options = parseOptions(options);\n        if (version instanceof SemVer) {\n            if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {\n                return version;\n            } else {\n                version = version.version;\n            }\n        } else if (typeof version !== \"string\") {\n            throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`);\n        }\n        if (version.length > MAX_LENGTH) {\n            throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);\n        }\n        debug(\"SemVer\", version, options);\n        this.options = options;\n        this.loose = !!options.loose;\n        // this isn't actually relevant for versions, but keep it so that we\n        // don't run into trouble passing this.options around.\n        this.includePrerelease = !!options.includePrerelease;\n        const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);\n        if (!m) {\n            throw new TypeError(`Invalid Version: ${version}`);\n        }\n        this.raw = version;\n        // these are actually numbers\n        this.major = +m[1];\n        this.minor = +m[2];\n        this.patch = +m[3];\n        if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n            throw new TypeError(\"Invalid major version\");\n        }\n        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n            throw new TypeError(\"Invalid minor version\");\n        }\n        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n            throw new TypeError(\"Invalid patch version\");\n        }\n        // numberify any prerelease numeric ids\n        if (!m[4]) {\n            this.prerelease = [];\n        } else {\n            this.prerelease = m[4].split(\".\").map((id)=>{\n                if (/^[0-9]+$/.test(id)) {\n                    const num = +id;\n                    if (num >= 0 && num < MAX_SAFE_INTEGER) {\n                        return num;\n                    }\n                }\n                return id;\n            });\n        }\n        this.build = m[5] ? m[5].split(\".\") : [];\n        this.format();\n    }\n    format() {\n        this.version = `${this.major}.${this.minor}.${this.patch}`;\n        if (this.prerelease.length) {\n            this.version += `-${this.prerelease.join(\".\")}`;\n        }\n        return this.version;\n    }\n    toString() {\n        return this.version;\n    }\n    compare(other) {\n        debug(\"SemVer.compare\", this.version, this.options, other);\n        if (!(other instanceof SemVer)) {\n            if (typeof other === \"string\" && other === this.version) {\n                return 0;\n            }\n            other = new SemVer(other, this.options);\n        }\n        if (other.version === this.version) {\n            return 0;\n        }\n        return this.compareMain(other) || this.comparePre(other);\n    }\n    compareMain(other) {\n        if (!(other instanceof SemVer)) {\n            other = new SemVer(other, this.options);\n        }\n        return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n    }\n    comparePre(other) {\n        if (!(other instanceof SemVer)) {\n            other = new SemVer(other, this.options);\n        }\n        // NOT having a prerelease is > having one\n        if (this.prerelease.length && !other.prerelease.length) {\n            return -1;\n        } else if (!this.prerelease.length && other.prerelease.length) {\n            return 1;\n        } else if (!this.prerelease.length && !other.prerelease.length) {\n            return 0;\n        }\n        let i = 0;\n        do {\n            const a = this.prerelease[i];\n            const b = other.prerelease[i];\n            debug(\"prerelease compare\", i, a, b);\n            if (a === undefined && b === undefined) {\n                return 0;\n            } else if (b === undefined) {\n                return 1;\n            } else if (a === undefined) {\n                return -1;\n            } else if (a === b) {\n                continue;\n            } else {\n                return compareIdentifiers(a, b);\n            }\n        }while (++i);\n    }\n    compareBuild(other) {\n        if (!(other instanceof SemVer)) {\n            other = new SemVer(other, this.options);\n        }\n        let i = 0;\n        do {\n            const a = this.build[i];\n            const b = other.build[i];\n            debug(\"build compare\", i, a, b);\n            if (a === undefined && b === undefined) {\n                return 0;\n            } else if (b === undefined) {\n                return 1;\n            } else if (a === undefined) {\n                return -1;\n            } else if (a === b) {\n                continue;\n            } else {\n                return compareIdentifiers(a, b);\n            }\n        }while (++i);\n    }\n    // preminor will bump the version up to the next minor release, and immediately\n    // down to pre-release. premajor and prepatch work the same way.\n    inc(release, identifier, identifierBase) {\n        switch(release){\n            case \"premajor\":\n                this.prerelease.length = 0;\n                this.patch = 0;\n                this.minor = 0;\n                this.major++;\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            case \"preminor\":\n                this.prerelease.length = 0;\n                this.patch = 0;\n                this.minor++;\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            case \"prepatch\":\n                // If this is already a prerelease, it will bump to the next version\n                // drop any prereleases that might already exist, since they are not\n                // relevant at this point.\n                this.prerelease.length = 0;\n                this.inc(\"patch\", identifier, identifierBase);\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            // If the input is a non-prerelease version, this acts the same as\n            // prepatch.\n            case \"prerelease\":\n                if (this.prerelease.length === 0) {\n                    this.inc(\"patch\", identifier, identifierBase);\n                }\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            case \"major\":\n                // If this is a pre-major version, bump up to the same major version.\n                // Otherwise increment major.\n                // 1.0.0-5 bumps to 1.0.0\n                // 1.1.0 bumps to 2.0.0\n                if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n                    this.major++;\n                }\n                this.minor = 0;\n                this.patch = 0;\n                this.prerelease = [];\n                break;\n            case \"minor\":\n                // If this is a pre-minor version, bump up to the same minor version.\n                // Otherwise increment minor.\n                // 1.2.0-5 bumps to 1.2.0\n                // 1.2.1 bumps to 1.3.0\n                if (this.patch !== 0 || this.prerelease.length === 0) {\n                    this.minor++;\n                }\n                this.patch = 0;\n                this.prerelease = [];\n                break;\n            case \"patch\":\n                // If this is not a pre-release version, it will increment the patch.\n                // If it is a pre-release it will bump up to the same patch version.\n                // 1.2.0-5 patches to 1.2.0\n                // 1.2.0 patches to 1.2.1\n                if (this.prerelease.length === 0) {\n                    this.patch++;\n                }\n                this.prerelease = [];\n                break;\n            // This probably shouldn't be used publicly.\n            // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n            case \"pre\":\n                {\n                    const base = Number(identifierBase) ? 1 : 0;\n                    if (!identifier && identifierBase === false) {\n                        throw new Error(\"invalid increment argument: identifier is empty\");\n                    }\n                    if (this.prerelease.length === 0) {\n                        this.prerelease = [\n                            base\n                        ];\n                    } else {\n                        let i = this.prerelease.length;\n                        while(--i >= 0){\n                            if (typeof this.prerelease[i] === \"number\") {\n                                this.prerelease[i]++;\n                                i = -2;\n                            }\n                        }\n                        if (i === -1) {\n                            // didn't increment anything\n                            if (identifier === this.prerelease.join(\".\") && identifierBase === false) {\n                                throw new Error(\"invalid increment argument: identifier already exists\");\n                            }\n                            this.prerelease.push(base);\n                        }\n                    }\n                    if (identifier) {\n                        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n                        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n                        let prerelease = [\n                            identifier,\n                            base\n                        ];\n                        if (identifierBase === false) {\n                            prerelease = [\n                                identifier\n                            ];\n                        }\n                        if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n                            if (isNaN(this.prerelease[1])) {\n                                this.prerelease = prerelease;\n                            }\n                        } else {\n                            this.prerelease = prerelease;\n                        }\n                    }\n                    break;\n                }\n            default:\n                throw new Error(`invalid increment argument: ${release}`);\n        }\n        this.raw = this.format();\n        if (this.build.length) {\n            this.raw += `+${this.build.join(\".\")}`;\n        }\n        return this;\n    }\n}\nmodule.exports = SemVer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js\");\nconst clean = (version, options)=>{\n    const s = parse(version.trim().replace(/^[=v]+/, \"\"), options);\n    return s ? s.version : null;\n};\nmodule.exports = clean;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY2xlYW4uanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1DLFFBQVEsQ0FBQ0MsU0FBU0M7SUFDdEIsTUFBTUMsSUFBSUwsTUFBTUcsUUFBUUcsSUFBSSxHQUFHQyxPQUFPLENBQUMsVUFBVSxLQUFLSDtJQUN0RCxPQUFPQyxJQUFJQSxFQUFFRixPQUFPLEdBQUc7QUFDekI7QUFDQUssT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9jbGVhbi5qcz9hYWJlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhcnNlID0gcmVxdWlyZSgnLi9wYXJzZScpXG5jb25zdCBjbGVhbiA9ICh2ZXJzaW9uLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IHMgPSBwYXJzZSh2ZXJzaW9uLnRyaW0oKS5yZXBsYWNlKC9eWz12XSsvLCAnJyksIG9wdGlvbnMpXG4gIHJldHVybiBzID8gcy52ZXJzaW9uIDogbnVsbFxufVxubW9kdWxlLmV4cG9ydHMgPSBjbGVhblxuIl0sIm5hbWVzIjpbInBhcnNlIiwicmVxdWlyZSIsImNsZWFuIiwidmVyc2lvbiIsIm9wdGlvbnMiLCJzIiwidHJpbSIsInJlcGxhY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst eq = __webpack_require__(/*! ./eq */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js\");\nconst neq = __webpack_require__(/*! ./neq */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js\");\nconst gt = __webpack_require__(/*! ./gt */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js\");\nconst gte = __webpack_require__(/*! ./gte */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js\");\nconst lt = __webpack_require__(/*! ./lt */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js\");\nconst lte = __webpack_require__(/*! ./lte */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js\");\nconst cmp = (a, op, b, loose)=>{\n    switch(op){\n        case \"===\":\n            if (typeof a === \"object\") {\n                a = a.version;\n            }\n            if (typeof b === \"object\") {\n                b = b.version;\n            }\n            return a === b;\n        case \"!==\":\n            if (typeof a === \"object\") {\n                a = a.version;\n            }\n            if (typeof b === \"object\") {\n                b = b.version;\n            }\n            return a !== b;\n        case \"\":\n        case \"=\":\n        case \"==\":\n            return eq(a, b, loose);\n        case \"!=\":\n            return neq(a, b, loose);\n        case \">\":\n            return gt(a, b, loose);\n        case \">=\":\n            return gte(a, b, loose);\n        case \"<\":\n            return lt(a, b, loose);\n        case \"<=\":\n            return lte(a, b, loose);\n        default:\n            throw new TypeError(`Invalid operator: ${op}`);\n    }\n};\nmodule.exports = cmp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY21wLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxLQUFLQyxtQkFBT0EsQ0FBQztBQUNuQixNQUFNQyxNQUFNRCxtQkFBT0EsQ0FBQztBQUNwQixNQUFNRSxLQUFLRixtQkFBT0EsQ0FBQztBQUNuQixNQUFNRyxNQUFNSCxtQkFBT0EsQ0FBQztBQUNwQixNQUFNSSxLQUFLSixtQkFBT0EsQ0FBQztBQUNuQixNQUFNSyxNQUFNTCxtQkFBT0EsQ0FBQztBQUVwQixNQUFNTSxNQUFNLENBQUNDLEdBQUdDLElBQUlDLEdBQUdDO0lBQ3JCLE9BQVFGO1FBQ04sS0FBSztZQUNILElBQUksT0FBT0QsTUFBTSxVQUFVO2dCQUN6QkEsSUFBSUEsRUFBRUksT0FBTztZQUNmO1lBQ0EsSUFBSSxPQUFPRixNQUFNLFVBQVU7Z0JBQ3pCQSxJQUFJQSxFQUFFRSxPQUFPO1lBQ2Y7WUFDQSxPQUFPSixNQUFNRTtRQUVmLEtBQUs7WUFDSCxJQUFJLE9BQU9GLE1BQU0sVUFBVTtnQkFDekJBLElBQUlBLEVBQUVJLE9BQU87WUFDZjtZQUNBLElBQUksT0FBT0YsTUFBTSxVQUFVO2dCQUN6QkEsSUFBSUEsRUFBRUUsT0FBTztZQUNmO1lBQ0EsT0FBT0osTUFBTUU7UUFFZixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPVixHQUFHUSxHQUFHRSxHQUFHQztRQUVsQixLQUFLO1lBQ0gsT0FBT1QsSUFBSU0sR0FBR0UsR0FBR0M7UUFFbkIsS0FBSztZQUNILE9BQU9SLEdBQUdLLEdBQUdFLEdBQUdDO1FBRWxCLEtBQUs7WUFDSCxPQUFPUCxJQUFJSSxHQUFHRSxHQUFHQztRQUVuQixLQUFLO1lBQ0gsT0FBT04sR0FBR0csR0FBR0UsR0FBR0M7UUFFbEIsS0FBSztZQUNILE9BQU9MLElBQUlFLEdBQUdFLEdBQUdDO1FBRW5CO1lBQ0UsTUFBTSxJQUFJRSxVQUFVLENBQUMsa0JBQWtCLEVBQUVKLEdBQUcsQ0FBQztJQUNqRDtBQUNGO0FBQ0FLLE9BQU9DLE9BQU8sR0FBR1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY21wLmpzPzQ1YWIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXEgPSByZXF1aXJlKCcuL2VxJylcbmNvbnN0IG5lcSA9IHJlcXVpcmUoJy4vbmVxJylcbmNvbnN0IGd0ID0gcmVxdWlyZSgnLi9ndCcpXG5jb25zdCBndGUgPSByZXF1aXJlKCcuL2d0ZScpXG5jb25zdCBsdCA9IHJlcXVpcmUoJy4vbHQnKVxuY29uc3QgbHRlID0gcmVxdWlyZSgnLi9sdGUnKVxuXG5jb25zdCBjbXAgPSAoYSwgb3AsIGIsIGxvb3NlKSA9PiB7XG4gIHN3aXRjaCAob3ApIHtcbiAgICBjYXNlICc9PT0nOlxuICAgICAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0Jykge1xuICAgICAgICBhID0gYS52ZXJzaW9uXG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGIgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGIgPSBiLnZlcnNpb25cbiAgICAgIH1cbiAgICAgIHJldHVybiBhID09PSBiXG5cbiAgICBjYXNlICchPT0nOlxuICAgICAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0Jykge1xuICAgICAgICBhID0gYS52ZXJzaW9uXG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGIgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGIgPSBiLnZlcnNpb25cbiAgICAgIH1cbiAgICAgIHJldHVybiBhICE9PSBiXG5cbiAgICBjYXNlICcnOlxuICAgIGNhc2UgJz0nOlxuICAgIGNhc2UgJz09JzpcbiAgICAgIHJldHVybiBlcShhLCBiLCBsb29zZSlcblxuICAgIGNhc2UgJyE9JzpcbiAgICAgIHJldHVybiBuZXEoYSwgYiwgbG9vc2UpXG5cbiAgICBjYXNlICc+JzpcbiAgICAgIHJldHVybiBndChhLCBiLCBsb29zZSlcblxuICAgIGNhc2UgJz49JzpcbiAgICAgIHJldHVybiBndGUoYSwgYiwgbG9vc2UpXG5cbiAgICBjYXNlICc8JzpcbiAgICAgIHJldHVybiBsdChhLCBiLCBsb29zZSlcblxuICAgIGNhc2UgJzw9JzpcbiAgICAgIHJldHVybiBsdGUoYSwgYiwgbG9vc2UpXG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBvcGVyYXRvcjogJHtvcH1gKVxuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGNtcFxuIl0sIm5hbWVzIjpbImVxIiwicmVxdWlyZSIsIm5lcSIsImd0IiwiZ3RlIiwibHQiLCJsdGUiLCJjbXAiLCJhIiwib3AiLCJiIiwibG9vc2UiLCJ2ZXJzaW9uIiwiVHlwZUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js\");\nconst { safeRe: re, t } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js\");\nconst coerce = (version, options)=>{\n    if (version instanceof SemVer) {\n        return version;\n    }\n    if (typeof version === \"number\") {\n        version = String(version);\n    }\n    if (typeof version !== \"string\") {\n        return null;\n    }\n    options = options || {};\n    let match = null;\n    if (!options.rtl) {\n        match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE]);\n    } else {\n        // Find the right-most coercible string that does not share\n        // a terminus with a more left-ward coercible string.\n        // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n        // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n        //\n        // Walk through the string checking with a /g regexp\n        // Manually set the index so as to pick up overlapping matches.\n        // Stop when we get a match that ends at the string end, since no\n        // coercible string can be more right-ward without the same terminus.\n        const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL];\n        let next;\n        while((next = coerceRtlRegex.exec(version)) && (!match || match.index + match[0].length !== version.length)){\n            if (!match || next.index + next[0].length !== match.index + match[0].length) {\n                match = next;\n            }\n            coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length;\n        }\n        // leave it in a clean state\n        coerceRtlRegex.lastIndex = -1;\n    }\n    if (match === null) {\n        return null;\n    }\n    const major = match[2];\n    const minor = match[3] || \"0\";\n    const patch = match[4] || \"0\";\n    const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : \"\";\n    const build = options.includePrerelease && match[6] ? `+${match[6]}` : \"\";\n    return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options);\n};\nmodule.exports = coerce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29lcmNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNLEVBQUVFLFFBQVFDLEVBQUUsRUFBRUMsQ0FBQyxFQUFFLEdBQUdKLG1CQUFPQSxDQUFDO0FBRWxDLE1BQU1LLFNBQVMsQ0FBQ0MsU0FBU0M7SUFDdkIsSUFBSUQsbUJBQW1CUCxRQUFRO1FBQzdCLE9BQU9PO0lBQ1Q7SUFFQSxJQUFJLE9BQU9BLFlBQVksVUFBVTtRQUMvQkEsVUFBVUUsT0FBT0Y7SUFDbkI7SUFFQSxJQUFJLE9BQU9BLFlBQVksVUFBVTtRQUMvQixPQUFPO0lBQ1Q7SUFFQUMsVUFBVUEsV0FBVyxDQUFDO0lBRXRCLElBQUlFLFFBQVE7SUFDWixJQUFJLENBQUNGLFFBQVFHLEdBQUcsRUFBRTtRQUNoQkQsUUFBUUgsUUFBUUcsS0FBSyxDQUFDRixRQUFRSSxpQkFBaUIsR0FBR1IsRUFBRSxDQUFDQyxFQUFFUSxVQUFVLENBQUMsR0FBR1QsRUFBRSxDQUFDQyxFQUFFUyxNQUFNLENBQUM7SUFDbkYsT0FBTztRQUNMLDJEQUEyRDtRQUMzRCxxREFBcUQ7UUFDckQsMERBQTBEO1FBQzFELDBGQUEwRjtRQUMxRixFQUFFO1FBQ0Ysb0RBQW9EO1FBQ3BELCtEQUErRDtRQUMvRCxpRUFBaUU7UUFDakUscUVBQXFFO1FBQ3JFLE1BQU1DLGlCQUFpQlAsUUFBUUksaUJBQWlCLEdBQUdSLEVBQUUsQ0FBQ0MsRUFBRVcsYUFBYSxDQUFDLEdBQUdaLEVBQUUsQ0FBQ0MsRUFBRVksU0FBUyxDQUFDO1FBQ3hGLElBQUlDO1FBQ0osTUFBTyxDQUFDQSxPQUFPSCxlQUFlSSxJQUFJLENBQUNaLFFBQU8sS0FDckMsRUFBQ0csU0FBU0EsTUFBTVUsS0FBSyxHQUFHVixLQUFLLENBQUMsRUFBRSxDQUFDVyxNQUFNLEtBQUtkLFFBQVFjLE1BQU0sRUFDN0Q7WUFDQSxJQUFJLENBQUNYLFNBQ0NRLEtBQUtFLEtBQUssR0FBR0YsSUFBSSxDQUFDLEVBQUUsQ0FBQ0csTUFBTSxLQUFLWCxNQUFNVSxLQUFLLEdBQUdWLEtBQUssQ0FBQyxFQUFFLENBQUNXLE1BQU0sRUFBRTtnQkFDbkVYLFFBQVFRO1lBQ1Y7WUFDQUgsZUFBZU8sU0FBUyxHQUFHSixLQUFLRSxLQUFLLEdBQUdGLElBQUksQ0FBQyxFQUFFLENBQUNHLE1BQU0sR0FBR0gsSUFBSSxDQUFDLEVBQUUsQ0FBQ0csTUFBTTtRQUN6RTtRQUNBLDRCQUE0QjtRQUM1Qk4sZUFBZU8sU0FBUyxHQUFHLENBQUM7SUFDOUI7SUFFQSxJQUFJWixVQUFVLE1BQU07UUFDbEIsT0FBTztJQUNUO0lBRUEsTUFBTWEsUUFBUWIsS0FBSyxDQUFDLEVBQUU7SUFDdEIsTUFBTWMsUUFBUWQsS0FBSyxDQUFDLEVBQUUsSUFBSTtJQUMxQixNQUFNZSxRQUFRZixLQUFLLENBQUMsRUFBRSxJQUFJO0lBQzFCLE1BQU1nQixhQUFhbEIsUUFBUUksaUJBQWlCLElBQUlGLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUVBLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHO0lBQzVFLE1BQU1pQixRQUFRbkIsUUFBUUksaUJBQWlCLElBQUlGLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUVBLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHO0lBRXZFLE9BQU9SLE1BQU0sQ0FBQyxFQUFFcUIsTUFBTSxDQUFDLEVBQUVDLE1BQU0sQ0FBQyxFQUFFQyxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsTUFBTSxDQUFDLEVBQUVuQjtBQUNsRTtBQUNBb0IsT0FBT0MsT0FBTyxHQUFHdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29lcmNlLmpzP2Q5MjYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgcGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlJylcbmNvbnN0IHsgc2FmZVJlOiByZSwgdCB9ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWwvcmUnKVxuXG5jb25zdCBjb2VyY2UgPSAodmVyc2lvbiwgb3B0aW9ucykgPT4ge1xuICBpZiAodmVyc2lvbiBpbnN0YW5jZW9mIFNlbVZlcikge1xuICAgIHJldHVybiB2ZXJzaW9uXG4gIH1cblxuICBpZiAodHlwZW9mIHZlcnNpb24gPT09ICdudW1iZXInKSB7XG4gICAgdmVyc2lvbiA9IFN0cmluZyh2ZXJzaW9uKVxuICB9XG5cbiAgaWYgKHR5cGVvZiB2ZXJzaW9uICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGxldCBtYXRjaCA9IG51bGxcbiAgaWYgKCFvcHRpb25zLnJ0bCkge1xuICAgIG1hdGNoID0gdmVyc2lvbi5tYXRjaChvcHRpb25zLmluY2x1ZGVQcmVyZWxlYXNlID8gcmVbdC5DT0VSQ0VGVUxMXSA6IHJlW3QuQ09FUkNFXSlcbiAgfSBlbHNlIHtcbiAgICAvLyBGaW5kIHRoZSByaWdodC1tb3N0IGNvZXJjaWJsZSBzdHJpbmcgdGhhdCBkb2VzIG5vdCBzaGFyZVxuICAgIC8vIGEgdGVybWludXMgd2l0aCBhIG1vcmUgbGVmdC13YXJkIGNvZXJjaWJsZSBzdHJpbmcuXG4gICAgLy8gRWcsICcxLjIuMy40JyB3YW50cyB0byBjb2VyY2UgJzIuMy40Jywgbm90ICczLjQnIG9yICc0J1xuICAgIC8vIFdpdGggaW5jbHVkZVByZXJlbGVhc2Ugb3B0aW9uIHNldCwgJzEuMi4zLjQtcmMnIHdhbnRzIHRvIGNvZXJjZSAnMi4zLjQtcmMnLCBub3QgJzIuMy40J1xuICAgIC8vXG4gICAgLy8gV2FsayB0aHJvdWdoIHRoZSBzdHJpbmcgY2hlY2tpbmcgd2l0aCBhIC9nIHJlZ2V4cFxuICAgIC8vIE1hbnVhbGx5IHNldCB0aGUgaW5kZXggc28gYXMgdG8gcGljayB1cCBvdmVybGFwcGluZyBtYXRjaGVzLlxuICAgIC8vIFN0b3Agd2hlbiB3ZSBnZXQgYSBtYXRjaCB0aGF0IGVuZHMgYXQgdGhlIHN0cmluZyBlbmQsIHNpbmNlIG5vXG4gICAgLy8gY29lcmNpYmxlIHN0cmluZyBjYW4gYmUgbW9yZSByaWdodC13YXJkIHdpdGhvdXQgdGhlIHNhbWUgdGVybWludXMuXG4gICAgY29uc3QgY29lcmNlUnRsUmVnZXggPSBvcHRpb25zLmluY2x1ZGVQcmVyZWxlYXNlID8gcmVbdC5DT0VSQ0VSVExGVUxMXSA6IHJlW3QuQ09FUkNFUlRMXVxuICAgIGxldCBuZXh0XG4gICAgd2hpbGUgKChuZXh0ID0gY29lcmNlUnRsUmVnZXguZXhlYyh2ZXJzaW9uKSkgJiZcbiAgICAgICAgKCFtYXRjaCB8fCBtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aCAhPT0gdmVyc2lvbi5sZW5ndGgpXG4gICAgKSB7XG4gICAgICBpZiAoIW1hdGNoIHx8XG4gICAgICAgICAgICBuZXh0LmluZGV4ICsgbmV4dFswXS5sZW5ndGggIT09IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoKSB7XG4gICAgICAgIG1hdGNoID0gbmV4dFxuICAgICAgfVxuICAgICAgY29lcmNlUnRsUmVnZXgubGFzdEluZGV4ID0gbmV4dC5pbmRleCArIG5leHRbMV0ubGVuZ3RoICsgbmV4dFsyXS5sZW5ndGhcbiAgICB9XG4gICAgLy8gbGVhdmUgaXQgaW4gYSBjbGVhbiBzdGF0ZVxuICAgIGNvZXJjZVJ0bFJlZ2V4Lmxhc3RJbmRleCA9IC0xXG4gIH1cblxuICBpZiAobWF0Y2ggPT09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG5cbiAgY29uc3QgbWFqb3IgPSBtYXRjaFsyXVxuICBjb25zdCBtaW5vciA9IG1hdGNoWzNdIHx8ICcwJ1xuICBjb25zdCBwYXRjaCA9IG1hdGNoWzRdIHx8ICcwJ1xuICBjb25zdCBwcmVyZWxlYXNlID0gb3B0aW9ucy5pbmNsdWRlUHJlcmVsZWFzZSAmJiBtYXRjaFs1XSA/IGAtJHttYXRjaFs1XX1gIDogJydcbiAgY29uc3QgYnVpbGQgPSBvcHRpb25zLmluY2x1ZGVQcmVyZWxlYXNlICYmIG1hdGNoWzZdID8gYCske21hdGNoWzZdfWAgOiAnJ1xuXG4gIHJldHVybiBwYXJzZShgJHttYWpvcn0uJHttaW5vcn0uJHtwYXRjaH0ke3ByZXJlbGVhc2V9JHtidWlsZH1gLCBvcHRpb25zKVxufVxubW9kdWxlLmV4cG9ydHMgPSBjb2VyY2VcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwicGFyc2UiLCJzYWZlUmUiLCJyZSIsInQiLCJjb2VyY2UiLCJ2ZXJzaW9uIiwib3B0aW9ucyIsIlN0cmluZyIsIm1hdGNoIiwicnRsIiwiaW5jbHVkZVByZXJlbGVhc2UiLCJDT0VSQ0VGVUxMIiwiQ09FUkNFIiwiY29lcmNlUnRsUmVnZXgiLCJDT0VSQ0VSVExGVUxMIiwiQ09FUkNFUlRMIiwibmV4dCIsImV4ZWMiLCJpbmRleCIsImxlbmd0aCIsImxhc3RJbmRleCIsIm1ham9yIiwibWlub3IiLCJwYXRjaCIsInByZXJlbGVhc2UiLCJidWlsZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst compareBuild = (a, b, loose)=>{\n    const versionA = new SemVer(a, loose);\n    const versionB = new SemVer(b, loose);\n    return versionA.compare(versionB) || versionA.compareBuild(versionB);\n};\nmodule.exports = compareBuild;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29tcGFyZS1idWlsZC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsZUFBZSxDQUFDQyxHQUFHQyxHQUFHQztJQUMxQixNQUFNQyxXQUFXLElBQUlOLE9BQU9HLEdBQUdFO0lBQy9CLE1BQU1FLFdBQVcsSUFBSVAsT0FBT0ksR0FBR0M7SUFDL0IsT0FBT0MsU0FBU0UsT0FBTyxDQUFDRCxhQUFhRCxTQUFTSixZQUFZLENBQUNLO0FBQzdEO0FBQ0FFLE9BQU9DLE9BQU8sR0FBR1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29tcGFyZS1idWlsZC5qcz81ZTU4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlbVZlciA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvc2VtdmVyJylcbmNvbnN0IGNvbXBhcmVCdWlsZCA9IChhLCBiLCBsb29zZSkgPT4ge1xuICBjb25zdCB2ZXJzaW9uQSA9IG5ldyBTZW1WZXIoYSwgbG9vc2UpXG4gIGNvbnN0IHZlcnNpb25CID0gbmV3IFNlbVZlcihiLCBsb29zZSlcbiAgcmV0dXJuIHZlcnNpb25BLmNvbXBhcmUodmVyc2lvbkIpIHx8IHZlcnNpb25BLmNvbXBhcmVCdWlsZCh2ZXJzaW9uQilcbn1cbm1vZHVsZS5leHBvcnRzID0gY29tcGFyZUJ1aWxkXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsImNvbXBhcmVCdWlsZCIsImEiLCJiIiwibG9vc2UiLCJ2ZXJzaW9uQSIsInZlcnNpb25CIiwiY29tcGFyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst compareLoose = (a, b)=>compare(a, b, true);\nmodule.exports = compareLoose;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29tcGFyZS1sb29zZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsZUFBZSxDQUFDQyxHQUFHQyxJQUFNSixRQUFRRyxHQUFHQyxHQUFHO0FBQzdDQyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NvbXBhcmUtbG9vc2UuanM/ZTYxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9jb21wYXJlJylcbmNvbnN0IGNvbXBhcmVMb29zZSA9IChhLCBiKSA9PiBjb21wYXJlKGEsIGIsIHRydWUpXG5tb2R1bGUuZXhwb3J0cyA9IGNvbXBhcmVMb29zZVxuIl0sIm5hbWVzIjpbImNvbXBhcmUiLCJyZXF1aXJlIiwiY29tcGFyZUxvb3NlIiwiYSIsImIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst compare = (a, b, loose)=>new SemVer(a, loose).compare(new SemVer(b, loose));\nmodule.exports = compare;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29tcGFyZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsVUFBVSxDQUFDQyxHQUFHQyxHQUFHQyxRQUNyQixJQUFJTCxPQUFPRyxHQUFHRSxPQUFPSCxPQUFPLENBQUMsSUFBSUYsT0FBT0ksR0FBR0M7QUFFN0NDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29tcGFyZS5qcz9iYWU0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlbVZlciA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvc2VtdmVyJylcbmNvbnN0IGNvbXBhcmUgPSAoYSwgYiwgbG9vc2UpID0+XG4gIG5ldyBTZW1WZXIoYSwgbG9vc2UpLmNvbXBhcmUobmV3IFNlbVZlcihiLCBsb29zZSkpXG5cbm1vZHVsZS5leHBvcnRzID0gY29tcGFyZVxuIl0sIm5hbWVzIjpbIlNlbVZlciIsInJlcXVpcmUiLCJjb21wYXJlIiwiYSIsImIiLCJsb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js\");\nconst diff = (version1, version2)=>{\n    const v1 = parse(version1, null, true);\n    const v2 = parse(version2, null, true);\n    const comparison = v1.compare(v2);\n    if (comparison === 0) {\n        return null;\n    }\n    const v1Higher = comparison > 0;\n    const highVersion = v1Higher ? v1 : v2;\n    const lowVersion = v1Higher ? v2 : v1;\n    const highHasPre = !!highVersion.prerelease.length;\n    const lowHasPre = !!lowVersion.prerelease.length;\n    if (lowHasPre && !highHasPre) {\n        // Going from prerelease -> no prerelease requires some special casing\n        // If the low version has only a major, then it will always be a major\n        // Some examples:\n        // 1.0.0-1 -> 1.0.0\n        // 1.0.0-1 -> 1.1.1\n        // 1.0.0-1 -> 2.0.0\n        if (!lowVersion.patch && !lowVersion.minor) {\n            return \"major\";\n        }\n        // Otherwise it can be determined by checking the high version\n        if (highVersion.patch) {\n            // anything higher than a patch bump would result in the wrong version\n            return \"patch\";\n        }\n        if (highVersion.minor) {\n            // anything higher than a minor bump would result in the wrong version\n            return \"minor\";\n        }\n        // bumping major/minor/patch all have same result\n        return \"major\";\n    }\n    // add the `pre` prefix if we are going to a prerelease version\n    const prefix = highHasPre ? \"pre\" : \"\";\n    if (v1.major !== v2.major) {\n        return prefix + \"major\";\n    }\n    if (v1.minor !== v2.minor) {\n        return prefix + \"minor\";\n    }\n    if (v1.patch !== v2.patch) {\n        return prefix + \"patch\";\n    }\n    // high and low are preleases\n    return \"prerelease\";\n};\nmodule.exports = diff;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZGlmZi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsUUFBUUMsbUJBQU9BLENBQUM7QUFFdEIsTUFBTUMsT0FBTyxDQUFDQyxVQUFVQztJQUN0QixNQUFNQyxLQUFLTCxNQUFNRyxVQUFVLE1BQU07SUFDakMsTUFBTUcsS0FBS04sTUFBTUksVUFBVSxNQUFNO0lBQ2pDLE1BQU1HLGFBQWFGLEdBQUdHLE9BQU8sQ0FBQ0Y7SUFFOUIsSUFBSUMsZUFBZSxHQUFHO1FBQ3BCLE9BQU87SUFDVDtJQUVBLE1BQU1FLFdBQVdGLGFBQWE7SUFDOUIsTUFBTUcsY0FBY0QsV0FBV0osS0FBS0M7SUFDcEMsTUFBTUssYUFBYUYsV0FBV0gsS0FBS0Q7SUFDbkMsTUFBTU8sYUFBYSxDQUFDLENBQUNGLFlBQVlHLFVBQVUsQ0FBQ0MsTUFBTTtJQUNsRCxNQUFNQyxZQUFZLENBQUMsQ0FBQ0osV0FBV0UsVUFBVSxDQUFDQyxNQUFNO0lBRWhELElBQUlDLGFBQWEsQ0FBQ0gsWUFBWTtRQUM1QixzRUFBc0U7UUFFdEUsc0VBQXNFO1FBQ3RFLGlCQUFpQjtRQUNqQixtQkFBbUI7UUFDbkIsbUJBQW1CO1FBQ25CLG1CQUFtQjtRQUNuQixJQUFJLENBQUNELFdBQVdLLEtBQUssSUFBSSxDQUFDTCxXQUFXTSxLQUFLLEVBQUU7WUFDMUMsT0FBTztRQUNUO1FBRUEsOERBQThEO1FBRTlELElBQUlQLFlBQVlNLEtBQUssRUFBRTtZQUNyQixzRUFBc0U7WUFDdEUsT0FBTztRQUNUO1FBRUEsSUFBSU4sWUFBWU8sS0FBSyxFQUFFO1lBQ3JCLHNFQUFzRTtZQUN0RSxPQUFPO1FBQ1Q7UUFFQSxpREFBaUQ7UUFDakQsT0FBTztJQUNUO0lBRUEsK0RBQStEO0lBQy9ELE1BQU1DLFNBQVNOLGFBQWEsUUFBUTtJQUVwQyxJQUFJUCxHQUFHYyxLQUFLLEtBQUtiLEdBQUdhLEtBQUssRUFBRTtRQUN6QixPQUFPRCxTQUFTO0lBQ2xCO0lBRUEsSUFBSWIsR0FBR1ksS0FBSyxLQUFLWCxHQUFHVyxLQUFLLEVBQUU7UUFDekIsT0FBT0MsU0FBUztJQUNsQjtJQUVBLElBQUliLEdBQUdXLEtBQUssS0FBS1YsR0FBR1UsS0FBSyxFQUFFO1FBQ3pCLE9BQU9FLFNBQVM7SUFDbEI7SUFFQSw2QkFBNkI7SUFDN0IsT0FBTztBQUNUO0FBRUFFLE9BQU9DLE9BQU8sR0FBR25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2RpZmYuanM/YmY5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UuanMnKVxuXG5jb25zdCBkaWZmID0gKHZlcnNpb24xLCB2ZXJzaW9uMikgPT4ge1xuICBjb25zdCB2MSA9IHBhcnNlKHZlcnNpb24xLCBudWxsLCB0cnVlKVxuICBjb25zdCB2MiA9IHBhcnNlKHZlcnNpb24yLCBudWxsLCB0cnVlKVxuICBjb25zdCBjb21wYXJpc29uID0gdjEuY29tcGFyZSh2MilcblxuICBpZiAoY29tcGFyaXNvbiA9PT0gMCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBjb25zdCB2MUhpZ2hlciA9IGNvbXBhcmlzb24gPiAwXG4gIGNvbnN0IGhpZ2hWZXJzaW9uID0gdjFIaWdoZXIgPyB2MSA6IHYyXG4gIGNvbnN0IGxvd1ZlcnNpb24gPSB2MUhpZ2hlciA/IHYyIDogdjFcbiAgY29uc3QgaGlnaEhhc1ByZSA9ICEhaGlnaFZlcnNpb24ucHJlcmVsZWFzZS5sZW5ndGhcbiAgY29uc3QgbG93SGFzUHJlID0gISFsb3dWZXJzaW9uLnByZXJlbGVhc2UubGVuZ3RoXG5cbiAgaWYgKGxvd0hhc1ByZSAmJiAhaGlnaEhhc1ByZSkge1xuICAgIC8vIEdvaW5nIGZyb20gcHJlcmVsZWFzZSAtPiBubyBwcmVyZWxlYXNlIHJlcXVpcmVzIHNvbWUgc3BlY2lhbCBjYXNpbmdcblxuICAgIC8vIElmIHRoZSBsb3cgdmVyc2lvbiBoYXMgb25seSBhIG1ham9yLCB0aGVuIGl0IHdpbGwgYWx3YXlzIGJlIGEgbWFqb3JcbiAgICAvLyBTb21lIGV4YW1wbGVzOlxuICAgIC8vIDEuMC4wLTEgLT4gMS4wLjBcbiAgICAvLyAxLjAuMC0xIC0+IDEuMS4xXG4gICAgLy8gMS4wLjAtMSAtPiAyLjAuMFxuICAgIGlmICghbG93VmVyc2lvbi5wYXRjaCAmJiAhbG93VmVyc2lvbi5taW5vcikge1xuICAgICAgcmV0dXJuICdtYWpvcidcbiAgICB9XG5cbiAgICAvLyBPdGhlcndpc2UgaXQgY2FuIGJlIGRldGVybWluZWQgYnkgY2hlY2tpbmcgdGhlIGhpZ2ggdmVyc2lvblxuXG4gICAgaWYgKGhpZ2hWZXJzaW9uLnBhdGNoKSB7XG4gICAgICAvLyBhbnl0aGluZyBoaWdoZXIgdGhhbiBhIHBhdGNoIGJ1bXAgd291bGQgcmVzdWx0IGluIHRoZSB3cm9uZyB2ZXJzaW9uXG4gICAgICByZXR1cm4gJ3BhdGNoJ1xuICAgIH1cblxuICAgIGlmIChoaWdoVmVyc2lvbi5taW5vcikge1xuICAgICAgLy8gYW55dGhpbmcgaGlnaGVyIHRoYW4gYSBtaW5vciBidW1wIHdvdWxkIHJlc3VsdCBpbiB0aGUgd3JvbmcgdmVyc2lvblxuICAgICAgcmV0dXJuICdtaW5vcidcbiAgICB9XG5cbiAgICAvLyBidW1waW5nIG1ham9yL21pbm9yL3BhdGNoIGFsbCBoYXZlIHNhbWUgcmVzdWx0XG4gICAgcmV0dXJuICdtYWpvcidcbiAgfVxuXG4gIC8vIGFkZCB0aGUgYHByZWAgcHJlZml4IGlmIHdlIGFyZSBnb2luZyB0byBhIHByZXJlbGVhc2UgdmVyc2lvblxuICBjb25zdCBwcmVmaXggPSBoaWdoSGFzUHJlID8gJ3ByZScgOiAnJ1xuXG4gIGlmICh2MS5tYWpvciAhPT0gdjIubWFqb3IpIHtcbiAgICByZXR1cm4gcHJlZml4ICsgJ21ham9yJ1xuICB9XG5cbiAgaWYgKHYxLm1pbm9yICE9PSB2Mi5taW5vcikge1xuICAgIHJldHVybiBwcmVmaXggKyAnbWlub3InXG4gIH1cblxuICBpZiAodjEucGF0Y2ggIT09IHYyLnBhdGNoKSB7XG4gICAgcmV0dXJuIHByZWZpeCArICdwYXRjaCdcbiAgfVxuXG4gIC8vIGhpZ2ggYW5kIGxvdyBhcmUgcHJlbGVhc2VzXG4gIHJldHVybiAncHJlcmVsZWFzZSdcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkaWZmXG4iXSwibmFtZXMiOlsicGFyc2UiLCJyZXF1aXJlIiwiZGlmZiIsInZlcnNpb24xIiwidmVyc2lvbjIiLCJ2MSIsInYyIiwiY29tcGFyaXNvbiIsImNvbXBhcmUiLCJ2MUhpZ2hlciIsImhpZ2hWZXJzaW9uIiwibG93VmVyc2lvbiIsImhpZ2hIYXNQcmUiLCJwcmVyZWxlYXNlIiwibGVuZ3RoIiwibG93SGFzUHJlIiwicGF0Y2giLCJtaW5vciIsInByZWZpeCIsIm1ham9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst eq = (a, b, loose)=>compare(a, b, loose) === 0;\nmodule.exports = eq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZXEuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLEtBQUssQ0FBQ0MsR0FBR0MsR0FBR0MsUUFBVUwsUUFBUUcsR0FBR0MsR0FBR0MsV0FBVztBQUNyREMsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9lcS5qcz84OTYzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmUgPSByZXF1aXJlKCcuL2NvbXBhcmUnKVxuY29uc3QgZXEgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpID09PSAwXG5tb2R1bGUuZXhwb3J0cyA9IGVxXG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJlcSIsImEiLCJiIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst gt = (a, b, loose)=>compare(a, b, loose) > 0;\nmodule.exports = gt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZ3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLEtBQUssQ0FBQ0MsR0FBR0MsR0FBR0MsUUFBVUwsUUFBUUcsR0FBR0MsR0FBR0MsU0FBUztBQUNuREMsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9ndC5qcz9mNjdjIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmUgPSByZXF1aXJlKCcuL2NvbXBhcmUnKVxuY29uc3QgZ3QgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpID4gMFxubW9kdWxlLmV4cG9ydHMgPSBndFxuIl0sIm5hbWVzIjpbImNvbXBhcmUiLCJyZXF1aXJlIiwiZ3QiLCJhIiwiYiIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst gte = (a, b, loose)=>compare(a, b, loose) >= 0;\nmodule.exports = gte;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZ3RlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxNQUFNLENBQUNDLEdBQUdDLEdBQUdDLFFBQVVMLFFBQVFHLEdBQUdDLEdBQUdDLFVBQVU7QUFDckRDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZ3RlLmpzP2QxNzkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBndGUgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpID49IDBcbm1vZHVsZS5leHBvcnRzID0gZ3RlXG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJndGUiLCJhIiwiYiIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst inc = (version, release, options, identifier, identifierBase)=>{\n    if (typeof options === \"string\") {\n        identifierBase = identifier;\n        identifier = options;\n        options = undefined;\n    }\n    try {\n        return new SemVer(version instanceof SemVer ? version.version : version, options).inc(release, identifier, identifierBase).version;\n    } catch (er) {\n        return null;\n    }\n};\nmodule.exports = inc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvaW5jLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUV2QixNQUFNQyxNQUFNLENBQUNDLFNBQVNDLFNBQVNDLFNBQVNDLFlBQVlDO0lBQ2xELElBQUksT0FBUUYsWUFBYSxVQUFVO1FBQ2pDRSxpQkFBaUJEO1FBQ2pCQSxhQUFhRDtRQUNiQSxVQUFVRztJQUNaO0lBRUEsSUFBSTtRQUNGLE9BQU8sSUFBSVIsT0FDVEcsbUJBQW1CSCxTQUFTRyxRQUFRQSxPQUFPLEdBQUdBLFNBQzlDRSxTQUNBSCxHQUFHLENBQUNFLFNBQVNFLFlBQVlDLGdCQUFnQkosT0FBTztJQUNwRCxFQUFFLE9BQU9NLElBQUk7UUFDWCxPQUFPO0lBQ1Q7QUFDRjtBQUNBQyxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2luYy5qcz9hYWYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlbVZlciA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvc2VtdmVyJylcblxuY29uc3QgaW5jID0gKHZlcnNpb24sIHJlbGVhc2UsIG9wdGlvbnMsIGlkZW50aWZpZXIsIGlkZW50aWZpZXJCYXNlKSA9PiB7XG4gIGlmICh0eXBlb2YgKG9wdGlvbnMpID09PSAnc3RyaW5nJykge1xuICAgIGlkZW50aWZpZXJCYXNlID0gaWRlbnRpZmllclxuICAgIGlkZW50aWZpZXIgPSBvcHRpb25zXG4gICAgb3B0aW9ucyA9IHVuZGVmaW5lZFxuICB9XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gbmV3IFNlbVZlcihcbiAgICAgIHZlcnNpb24gaW5zdGFuY2VvZiBTZW1WZXIgPyB2ZXJzaW9uLnZlcnNpb24gOiB2ZXJzaW9uLFxuICAgICAgb3B0aW9uc1xuICAgICkuaW5jKHJlbGVhc2UsIGlkZW50aWZpZXIsIGlkZW50aWZpZXJCYXNlKS52ZXJzaW9uXG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBpbmNcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwiaW5jIiwidmVyc2lvbiIsInJlbGVhc2UiLCJvcHRpb25zIiwiaWRlbnRpZmllciIsImlkZW50aWZpZXJCYXNlIiwidW5kZWZpbmVkIiwiZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst lt = (a, b, loose)=>compare(a, b, loose) < 0;\nmodule.exports = lt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbHQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLEtBQUssQ0FBQ0MsR0FBR0MsR0FBR0MsUUFBVUwsUUFBUUcsR0FBR0MsR0FBR0MsU0FBUztBQUNuREMsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9sdC5qcz9hNjk3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmUgPSByZXF1aXJlKCcuL2NvbXBhcmUnKVxuY29uc3QgbHQgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpIDwgMFxubW9kdWxlLmV4cG9ydHMgPSBsdFxuIl0sIm5hbWVzIjpbImNvbXBhcmUiLCJyZXF1aXJlIiwibHQiLCJhIiwiYiIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst lte = (a, b, loose)=>compare(a, b, loose) <= 0;\nmodule.exports = lte;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbHRlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxNQUFNLENBQUNDLEdBQUdDLEdBQUdDLFFBQVVMLFFBQVFHLEdBQUdDLEdBQUdDLFVBQVU7QUFDckRDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbHRlLmpzPzRhZDciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBsdGUgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpIDw9IDBcbm1vZHVsZS5leHBvcnRzID0gbHRlXG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJsdGUiLCJhIiwiYiIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst major = (a, loose)=>new SemVer(a, loose).major;\nmodule.exports = major;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbWFqb3IuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFFBQVEsQ0FBQ0MsR0FBR0MsUUFBVSxJQUFJSixPQUFPRyxHQUFHQyxPQUFPRixLQUFLO0FBQ3RERyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL21ham9yLmpzP2VjZGIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgbWFqb3IgPSAoYSwgbG9vc2UpID0+IG5ldyBTZW1WZXIoYSwgbG9vc2UpLm1ham9yXG5tb2R1bGUuZXhwb3J0cyA9IG1ham9yXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsIm1ham9yIiwiYSIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst minor = (a, loose)=>new SemVer(a, loose).minor;\nmodule.exports = minor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbWlub3IuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFFBQVEsQ0FBQ0MsR0FBR0MsUUFBVSxJQUFJSixPQUFPRyxHQUFHQyxPQUFPRixLQUFLO0FBQ3RERyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL21pbm9yLmpzPzhjNTAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgbWlub3IgPSAoYSwgbG9vc2UpID0+IG5ldyBTZW1WZXIoYSwgbG9vc2UpLm1pbm9yXG5tb2R1bGUuZXhwb3J0cyA9IG1pbm9yXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsIm1pbm9yIiwiYSIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst neq = (a, b, loose)=>compare(a, b, loose) !== 0;\nmodule.exports = neq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbmVxLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxNQUFNLENBQUNDLEdBQUdDLEdBQUdDLFFBQVVMLFFBQVFHLEdBQUdDLEdBQUdDLFdBQVc7QUFDdERDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbmVxLmpzP2Y3NmQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBuZXEgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYSwgYiwgbG9vc2UpICE9PSAwXG5tb2R1bGUuZXhwb3J0cyA9IG5lcVxuIl0sIm5hbWVzIjpbImNvbXBhcmUiLCJyZXF1aXJlIiwibmVxIiwiYSIsImIiLCJsb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst parse = (version, options, throwErrors = false)=>{\n    if (version instanceof SemVer) {\n        return version;\n    }\n    try {\n        return new SemVer(version, options);\n    } catch (er) {\n        if (!throwErrors) {\n            return null;\n        }\n        throw er;\n    }\n};\nmodule.exports = parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcGFyc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFFBQVEsQ0FBQ0MsU0FBU0MsU0FBU0MsY0FBYyxLQUFLO0lBQ2xELElBQUlGLG1CQUFtQkgsUUFBUTtRQUM3QixPQUFPRztJQUNUO0lBQ0EsSUFBSTtRQUNGLE9BQU8sSUFBSUgsT0FBT0csU0FBU0M7SUFDN0IsRUFBRSxPQUFPRSxJQUFJO1FBQ1gsSUFBSSxDQUFDRCxhQUFhO1lBQ2hCLE9BQU87UUFDVDtRQUNBLE1BQU1DO0lBQ1I7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3BhcnNlLmpzP2M3NGYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgcGFyc2UgPSAodmVyc2lvbiwgb3B0aW9ucywgdGhyb3dFcnJvcnMgPSBmYWxzZSkgPT4ge1xuICBpZiAodmVyc2lvbiBpbnN0YW5jZW9mIFNlbVZlcikge1xuICAgIHJldHVybiB2ZXJzaW9uXG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gbmV3IFNlbVZlcih2ZXJzaW9uLCBvcHRpb25zKVxuICB9IGNhdGNoIChlcikge1xuICAgIGlmICghdGhyb3dFcnJvcnMpIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuICAgIHRocm93IGVyXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXJzZVxuIl0sIm5hbWVzIjpbIlNlbVZlciIsInJlcXVpcmUiLCJwYXJzZSIsInZlcnNpb24iLCJvcHRpb25zIiwidGhyb3dFcnJvcnMiLCJlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst patch = (a, loose)=>new SemVer(a, loose).patch;\nmodule.exports = patch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcGF0Y2guanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFFBQVEsQ0FBQ0MsR0FBR0MsUUFBVSxJQUFJSixPQUFPRyxHQUFHQyxPQUFPRixLQUFLO0FBQ3RERyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3BhdGNoLmpzPzNiZjAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgcGF0Y2ggPSAoYSwgbG9vc2UpID0+IG5ldyBTZW1WZXIoYSwgbG9vc2UpLnBhdGNoXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGNoXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsInBhdGNoIiwiYSIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js\");\nconst prerelease = (version, options)=>{\n    const parsed = parse(version, options);\n    return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n};\nmodule.exports = prerelease;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcHJlcmVsZWFzZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsUUFBUUMsbUJBQU9BLENBQUM7QUFDdEIsTUFBTUMsYUFBYSxDQUFDQyxTQUFTQztJQUMzQixNQUFNQyxTQUFTTCxNQUFNRyxTQUFTQztJQUM5QixPQUFPLFVBQVdDLE9BQU9ILFVBQVUsQ0FBQ0ksTUFBTSxHQUFJRCxPQUFPSCxVQUFVLEdBQUc7QUFDcEU7QUFDQUssT0FBT0MsT0FBTyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9wcmVyZWxlYXNlLmpzPzg1Y2YiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlJylcbmNvbnN0IHByZXJlbGVhc2UgPSAodmVyc2lvbiwgb3B0aW9ucykgPT4ge1xuICBjb25zdCBwYXJzZWQgPSBwYXJzZSh2ZXJzaW9uLCBvcHRpb25zKVxuICByZXR1cm4gKHBhcnNlZCAmJiBwYXJzZWQucHJlcmVsZWFzZS5sZW5ndGgpID8gcGFyc2VkLnByZXJlbGVhc2UgOiBudWxsXG59XG5tb2R1bGUuZXhwb3J0cyA9IHByZXJlbGVhc2VcbiJdLCJuYW1lcyI6WyJwYXJzZSIsInJlcXVpcmUiLCJwcmVyZWxlYXNlIiwidmVyc2lvbiIsIm9wdGlvbnMiLCJwYXJzZWQiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst rcompare = (a, b, loose)=>compare(b, a, loose);\nmodule.exports = rcompare;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcmNvbXBhcmUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLFdBQVcsQ0FBQ0MsR0FBR0MsR0FBR0MsUUFBVUwsUUFBUUksR0FBR0QsR0FBR0U7QUFDaERDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcmNvbXBhcmUuanM/NTg0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9jb21wYXJlJylcbmNvbnN0IHJjb21wYXJlID0gKGEsIGIsIGxvb3NlKSA9PiBjb21wYXJlKGIsIGEsIGxvb3NlKVxubW9kdWxlLmV4cG9ydHMgPSByY29tcGFyZVxuIl0sIm5hbWVzIjpbImNvbXBhcmUiLCJyZXF1aXJlIiwicmNvbXBhcmUiLCJhIiwiYiIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compareBuild = __webpack_require__(/*! ./compare-build */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js\");\nconst rsort = (list, loose)=>list.sort((a, b)=>compareBuild(b, a, loose));\nmodule.exports = rsort;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcnNvcnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGVBQWVDLG1CQUFPQSxDQUFDO0FBQzdCLE1BQU1DLFFBQVEsQ0FBQ0MsTUFBTUMsUUFBVUQsS0FBS0UsSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1QLGFBQWFPLEdBQUdELEdBQUdGO0FBQ3RFSSxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3Jzb3J0LmpzP2FhNTQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZUJ1aWxkID0gcmVxdWlyZSgnLi9jb21wYXJlLWJ1aWxkJylcbmNvbnN0IHJzb3J0ID0gKGxpc3QsIGxvb3NlKSA9PiBsaXN0LnNvcnQoKGEsIGIpID0+IGNvbXBhcmVCdWlsZChiLCBhLCBsb29zZSkpXG5tb2R1bGUuZXhwb3J0cyA9IHJzb3J0XG4iXSwibmFtZXMiOlsiY29tcGFyZUJ1aWxkIiwicmVxdWlyZSIsInJzb3J0IiwibGlzdCIsImxvb3NlIiwic29ydCIsImEiLCJiIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst satisfies = (version, range, options)=>{\n    try {\n        range = new Range(range, options);\n    } catch (er) {\n        return false;\n    }\n    return range.test(version);\n};\nmodule.exports = satisfies;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvc2F0aXNmaWVzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUN0QixNQUFNQyxZQUFZLENBQUNDLFNBQVNDLE9BQU9DO0lBQ2pDLElBQUk7UUFDRkQsUUFBUSxJQUFJSixNQUFNSSxPQUFPQztJQUMzQixFQUFFLE9BQU9DLElBQUk7UUFDWCxPQUFPO0lBQ1Q7SUFDQSxPQUFPRixNQUFNRyxJQUFJLENBQUNKO0FBQ3BCO0FBQ0FLLE9BQU9DLE9BQU8sR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvc2F0aXNmaWVzLmpzPzkzMmQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmFuZ2UgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3JhbmdlJylcbmNvbnN0IHNhdGlzZmllcyA9ICh2ZXJzaW9uLCByYW5nZSwgb3B0aW9ucykgPT4ge1xuICB0cnkge1xuICAgIHJhbmdlID0gbmV3IFJhbmdlKHJhbmdlLCBvcHRpb25zKVxuICB9IGNhdGNoIChlcikge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIHJldHVybiByYW5nZS50ZXN0KHZlcnNpb24pXG59XG5tb2R1bGUuZXhwb3J0cyA9IHNhdGlzZmllc1xuIl0sIm5hbWVzIjpbIlJhbmdlIiwicmVxdWlyZSIsInNhdGlzZmllcyIsInZlcnNpb24iLCJyYW5nZSIsIm9wdGlvbnMiLCJlciIsInRlc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compareBuild = __webpack_require__(/*! ./compare-build */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js\");\nconst sort = (list, loose)=>list.sort((a, b)=>compareBuild(a, b, loose));\nmodule.exports = sort;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvc29ydC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsZUFBZUMsbUJBQU9BLENBQUM7QUFDN0IsTUFBTUMsT0FBTyxDQUFDQyxNQUFNQyxRQUFVRCxLQUFLRCxJQUFJLENBQUMsQ0FBQ0csR0FBR0MsSUFBTU4sYUFBYUssR0FBR0MsR0FBR0Y7QUFDckVHLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvc29ydC5qcz80MmQwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmVCdWlsZCA9IHJlcXVpcmUoJy4vY29tcGFyZS1idWlsZCcpXG5jb25zdCBzb3J0ID0gKGxpc3QsIGxvb3NlKSA9PiBsaXN0LnNvcnQoKGEsIGIpID0+IGNvbXBhcmVCdWlsZChhLCBiLCBsb29zZSkpXG5tb2R1bGUuZXhwb3J0cyA9IHNvcnRcbiJdLCJuYW1lcyI6WyJjb21wYXJlQnVpbGQiLCJyZXF1aXJlIiwic29ydCIsImxpc3QiLCJsb29zZSIsImEiLCJiIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js\");\nconst valid = (version, options)=>{\n    const v = parse(version, options);\n    return v ? v.version : null;\n};\nmodule.exports = valid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvdmFsaWQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1DLFFBQVEsQ0FBQ0MsU0FBU0M7SUFDdEIsTUFBTUMsSUFBSUwsTUFBTUcsU0FBU0M7SUFDekIsT0FBT0MsSUFBSUEsRUFBRUYsT0FBTyxHQUFHO0FBQ3pCO0FBQ0FHLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvdmFsaWQuanM/Y2UzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKVxuY29uc3QgdmFsaWQgPSAodmVyc2lvbiwgb3B0aW9ucykgPT4ge1xuICBjb25zdCB2ID0gcGFyc2UodmVyc2lvbiwgb3B0aW9ucylcbiAgcmV0dXJuIHYgPyB2LnZlcnNpb24gOiBudWxsXG59XG5tb2R1bGUuZXhwb3J0cyA9IHZhbGlkXG4iXSwibmFtZXMiOlsicGFyc2UiLCJyZXF1aXJlIiwidmFsaWQiLCJ2ZXJzaW9uIiwib3B0aW9ucyIsInYiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// just pre-load all the stuff that index.js lazily exports\n\nconst internalRe = __webpack_require__(/*! ./internal/re */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js\");\nconst constants = __webpack_require__(/*! ./internal/constants */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js\");\nconst SemVer = __webpack_require__(/*! ./classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst identifiers = __webpack_require__(/*! ./internal/identifiers */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js\");\nconst parse = __webpack_require__(/*! ./functions/parse */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js\");\nconst valid = __webpack_require__(/*! ./functions/valid */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js\");\nconst clean = __webpack_require__(/*! ./functions/clean */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js\");\nconst inc = __webpack_require__(/*! ./functions/inc */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js\");\nconst diff = __webpack_require__(/*! ./functions/diff */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js\");\nconst major = __webpack_require__(/*! ./functions/major */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js\");\nconst minor = __webpack_require__(/*! ./functions/minor */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js\");\nconst patch = __webpack_require__(/*! ./functions/patch */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js\");\nconst prerelease = __webpack_require__(/*! ./functions/prerelease */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js\");\nconst compare = __webpack_require__(/*! ./functions/compare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nconst rcompare = __webpack_require__(/*! ./functions/rcompare */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js\");\nconst compareLoose = __webpack_require__(/*! ./functions/compare-loose */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js\");\nconst compareBuild = __webpack_require__(/*! ./functions/compare-build */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js\");\nconst sort = __webpack_require__(/*! ./functions/sort */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js\");\nconst rsort = __webpack_require__(/*! ./functions/rsort */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js\");\nconst gt = __webpack_require__(/*! ./functions/gt */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js\");\nconst lt = __webpack_require__(/*! ./functions/lt */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js\");\nconst eq = __webpack_require__(/*! ./functions/eq */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js\");\nconst neq = __webpack_require__(/*! ./functions/neq */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js\");\nconst gte = __webpack_require__(/*! ./functions/gte */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js\");\nconst lte = __webpack_require__(/*! ./functions/lte */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js\");\nconst cmp = __webpack_require__(/*! ./functions/cmp */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js\");\nconst coerce = __webpack_require__(/*! ./functions/coerce */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js\");\nconst Comparator = __webpack_require__(/*! ./classes/comparator */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js\");\nconst Range = __webpack_require__(/*! ./classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst satisfies = __webpack_require__(/*! ./functions/satisfies */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js\");\nconst toComparators = __webpack_require__(/*! ./ranges/to-comparators */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js\");\nconst maxSatisfying = __webpack_require__(/*! ./ranges/max-satisfying */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js\");\nconst minSatisfying = __webpack_require__(/*! ./ranges/min-satisfying */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js\");\nconst minVersion = __webpack_require__(/*! ./ranges/min-version */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js\");\nconst validRange = __webpack_require__(/*! ./ranges/valid */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js\");\nconst outside = __webpack_require__(/*! ./ranges/outside */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js\");\nconst gtr = __webpack_require__(/*! ./ranges/gtr */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js\");\nconst ltr = __webpack_require__(/*! ./ranges/ltr */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js\");\nconst intersects = __webpack_require__(/*! ./ranges/intersects */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js\");\nconst simplifyRange = __webpack_require__(/*! ./ranges/simplify */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js\");\nconst subset = __webpack_require__(/*! ./ranges/subset */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js\");\nmodule.exports = {\n    parse,\n    valid,\n    clean,\n    inc,\n    diff,\n    major,\n    minor,\n    patch,\n    prerelease,\n    compare,\n    rcompare,\n    compareLoose,\n    compareBuild,\n    sort,\n    rsort,\n    gt,\n    lt,\n    eq,\n    neq,\n    gte,\n    lte,\n    cmp,\n    coerce,\n    Comparator,\n    Range,\n    satisfies,\n    toComparators,\n    maxSatisfying,\n    minSatisfying,\n    minVersion,\n    validRange,\n    outside,\n    gtr,\n    ltr,\n    intersects,\n    simplifyRange,\n    subset,\n    SemVer,\n    re: internalRe.re,\n    src: internalRe.src,\n    tokens: internalRe.t,\n    SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n    RELEASE_TYPES: constants.RELEASE_TYPES,\n    compareIdentifiers: identifiers.compareIdentifiers,\n    rcompareIdentifiers: identifiers.rcompareIdentifiers\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyREFBMkQ7O0FBQzNELE1BQU1BLGFBQWFDLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1DLFlBQVlELG1CQUFPQSxDQUFDO0FBQzFCLE1BQU1FLFNBQVNGLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1HLGNBQWNILG1CQUFPQSxDQUFDO0FBQzVCLE1BQU1JLFFBQVFKLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1LLFFBQVFMLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1NLFFBQVFOLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1PLE1BQU1QLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU1RLE9BQU9SLG1CQUFPQSxDQUFDO0FBQ3JCLE1BQU1TLFFBQVFULG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1VLFFBQVFWLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1XLFFBQVFYLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1ZLGFBQWFaLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1hLFVBQVViLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1jLFdBQVdkLG1CQUFPQSxDQUFDO0FBQ3pCLE1BQU1lLGVBQWVmLG1CQUFPQSxDQUFDO0FBQzdCLE1BQU1nQixlQUFlaEIsbUJBQU9BLENBQUM7QUFDN0IsTUFBTWlCLE9BQU9qQixtQkFBT0EsQ0FBQztBQUNyQixNQUFNa0IsUUFBUWxCLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1tQixLQUFLbkIsbUJBQU9BLENBQUM7QUFDbkIsTUFBTW9CLEtBQUtwQixtQkFBT0EsQ0FBQztBQUNuQixNQUFNcUIsS0FBS3JCLG1CQUFPQSxDQUFDO0FBQ25CLE1BQU1zQixNQUFNdEIsbUJBQU9BLENBQUM7QUFDcEIsTUFBTXVCLE1BQU12QixtQkFBT0EsQ0FBQztBQUNwQixNQUFNd0IsTUFBTXhCLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU15QixNQUFNekIsbUJBQU9BLENBQUM7QUFDcEIsTUFBTTBCLFNBQVMxQixtQkFBT0EsQ0FBQztBQUN2QixNQUFNMkIsYUFBYTNCLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU00QixRQUFRNUIsbUJBQU9BLENBQUM7QUFDdEIsTUFBTTZCLFlBQVk3QixtQkFBT0EsQ0FBQztBQUMxQixNQUFNOEIsZ0JBQWdCOUIsbUJBQU9BLENBQUM7QUFDOUIsTUFBTStCLGdCQUFnQi9CLG1CQUFPQSxDQUFDO0FBQzlCLE1BQU1nQyxnQkFBZ0JoQyxtQkFBT0EsQ0FBQztBQUM5QixNQUFNaUMsYUFBYWpDLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1rQyxhQUFhbEMsbUJBQU9BLENBQUM7QUFDM0IsTUFBTW1DLFVBQVVuQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNb0MsTUFBTXBDLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU1xQyxNQUFNckMsbUJBQU9BLENBQUM7QUFDcEIsTUFBTXNDLGFBQWF0QyxtQkFBT0EsQ0FBQztBQUMzQixNQUFNdUMsZ0JBQWdCdkMsbUJBQU9BLENBQUM7QUFDOUIsTUFBTXdDLFNBQVN4QyxtQkFBT0EsQ0FBQztBQUN2QnlDLE9BQU9DLE9BQU8sR0FBRztJQUNmdEM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQXRDO0lBQ0F5QyxJQUFJNUMsV0FBVzRDLEVBQUU7SUFDakJDLEtBQUs3QyxXQUFXNkMsR0FBRztJQUNuQkMsUUFBUTlDLFdBQVcrQyxDQUFDO0lBQ3BCQyxxQkFBcUI5QyxVQUFVOEMsbUJBQW1CO0lBQ2xEQyxlQUFlL0MsVUFBVStDLGFBQWE7SUFDdENDLG9CQUFvQjlDLFlBQVk4QyxrQkFBa0I7SUFDbERDLHFCQUFxQi9DLFlBQVkrQyxtQkFBbUI7QUFDdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbmRleC5qcz81NTU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGp1c3QgcHJlLWxvYWQgYWxsIHRoZSBzdHVmZiB0aGF0IGluZGV4LmpzIGxhemlseSBleHBvcnRzXG5jb25zdCBpbnRlcm5hbFJlID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9yZScpXG5jb25zdCBjb25zdGFudHMgPSByZXF1aXJlKCcuL2ludGVybmFsL2NvbnN0YW50cycpXG5jb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuL2NsYXNzZXMvc2VtdmVyJylcbmNvbnN0IGlkZW50aWZpZXJzID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9pZGVudGlmaWVycycpXG5jb25zdCBwYXJzZSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL3BhcnNlJylcbmNvbnN0IHZhbGlkID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvdmFsaWQnKVxuY29uc3QgY2xlYW4gPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9jbGVhbicpXG5jb25zdCBpbmMgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9pbmMnKVxuY29uc3QgZGlmZiA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2RpZmYnKVxuY29uc3QgbWFqb3IgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9tYWpvcicpXG5jb25zdCBtaW5vciA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL21pbm9yJylcbmNvbnN0IHBhdGNoID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvcGF0Y2gnKVxuY29uc3QgcHJlcmVsZWFzZSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL3ByZXJlbGVhc2UnKVxuY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2NvbXBhcmUnKVxuY29uc3QgcmNvbXBhcmUgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9yY29tcGFyZScpXG5jb25zdCBjb21wYXJlTG9vc2UgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9jb21wYXJlLWxvb3NlJylcbmNvbnN0IGNvbXBhcmVCdWlsZCA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2NvbXBhcmUtYnVpbGQnKVxuY29uc3Qgc29ydCA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL3NvcnQnKVxuY29uc3QgcnNvcnQgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9yc29ydCcpXG5jb25zdCBndCA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2d0JylcbmNvbnN0IGx0ID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvbHQnKVxuY29uc3QgZXEgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9lcScpXG5jb25zdCBuZXEgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9uZXEnKVxuY29uc3QgZ3RlID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvZ3RlJylcbmNvbnN0IGx0ZSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2x0ZScpXG5jb25zdCBjbXAgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9jbXAnKVxuY29uc3QgY29lcmNlID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvY29lcmNlJylcbmNvbnN0IENvbXBhcmF0b3IgPSByZXF1aXJlKCcuL2NsYXNzZXMvY29tcGFyYXRvcicpXG5jb25zdCBSYW5nZSA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9yYW5nZScpXG5jb25zdCBzYXRpc2ZpZXMgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9zYXRpc2ZpZXMnKVxuY29uc3QgdG9Db21wYXJhdG9ycyA9IHJlcXVpcmUoJy4vcmFuZ2VzL3RvLWNvbXBhcmF0b3JzJylcbmNvbnN0IG1heFNhdGlzZnlpbmcgPSByZXF1aXJlKCcuL3Jhbmdlcy9tYXgtc2F0aXNmeWluZycpXG5jb25zdCBtaW5TYXRpc2Z5aW5nID0gcmVxdWlyZSgnLi9yYW5nZXMvbWluLXNhdGlzZnlpbmcnKVxuY29uc3QgbWluVmVyc2lvbiA9IHJlcXVpcmUoJy4vcmFuZ2VzL21pbi12ZXJzaW9uJylcbmNvbnN0IHZhbGlkUmFuZ2UgPSByZXF1aXJlKCcuL3Jhbmdlcy92YWxpZCcpXG5jb25zdCBvdXRzaWRlID0gcmVxdWlyZSgnLi9yYW5nZXMvb3V0c2lkZScpXG5jb25zdCBndHIgPSByZXF1aXJlKCcuL3Jhbmdlcy9ndHInKVxuY29uc3QgbHRyID0gcmVxdWlyZSgnLi9yYW5nZXMvbHRyJylcbmNvbnN0IGludGVyc2VjdHMgPSByZXF1aXJlKCcuL3Jhbmdlcy9pbnRlcnNlY3RzJylcbmNvbnN0IHNpbXBsaWZ5UmFuZ2UgPSByZXF1aXJlKCcuL3Jhbmdlcy9zaW1wbGlmeScpXG5jb25zdCBzdWJzZXQgPSByZXF1aXJlKCcuL3Jhbmdlcy9zdWJzZXQnKVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHBhcnNlLFxuICB2YWxpZCxcbiAgY2xlYW4sXG4gIGluYyxcbiAgZGlmZixcbiAgbWFqb3IsXG4gIG1pbm9yLFxuICBwYXRjaCxcbiAgcHJlcmVsZWFzZSxcbiAgY29tcGFyZSxcbiAgcmNvbXBhcmUsXG4gIGNvbXBhcmVMb29zZSxcbiAgY29tcGFyZUJ1aWxkLFxuICBzb3J0LFxuICByc29ydCxcbiAgZ3QsXG4gIGx0LFxuICBlcSxcbiAgbmVxLFxuICBndGUsXG4gIGx0ZSxcbiAgY21wLFxuICBjb2VyY2UsXG4gIENvbXBhcmF0b3IsXG4gIFJhbmdlLFxuICBzYXRpc2ZpZXMsXG4gIHRvQ29tcGFyYXRvcnMsXG4gIG1heFNhdGlzZnlpbmcsXG4gIG1pblNhdGlzZnlpbmcsXG4gIG1pblZlcnNpb24sXG4gIHZhbGlkUmFuZ2UsXG4gIG91dHNpZGUsXG4gIGd0cixcbiAgbHRyLFxuICBpbnRlcnNlY3RzLFxuICBzaW1wbGlmeVJhbmdlLFxuICBzdWJzZXQsXG4gIFNlbVZlcixcbiAgcmU6IGludGVybmFsUmUucmUsXG4gIHNyYzogaW50ZXJuYWxSZS5zcmMsXG4gIHRva2VuczogaW50ZXJuYWxSZS50LFxuICBTRU1WRVJfU1BFQ19WRVJTSU9OOiBjb25zdGFudHMuU0VNVkVSX1NQRUNfVkVSU0lPTixcbiAgUkVMRUFTRV9UWVBFUzogY29uc3RhbnRzLlJFTEVBU0VfVFlQRVMsXG4gIGNvbXBhcmVJZGVudGlmaWVyczogaWRlbnRpZmllcnMuY29tcGFyZUlkZW50aWZpZXJzLFxuICByY29tcGFyZUlkZW50aWZpZXJzOiBpZGVudGlmaWVycy5yY29tcGFyZUlkZW50aWZpZXJzLFxufVxuIl0sIm5hbWVzIjpbImludGVybmFsUmUiLCJyZXF1aXJlIiwiY29uc3RhbnRzIiwiU2VtVmVyIiwiaWRlbnRpZmllcnMiLCJwYXJzZSIsInZhbGlkIiwiY2xlYW4iLCJpbmMiLCJkaWZmIiwibWFqb3IiLCJtaW5vciIsInBhdGNoIiwicHJlcmVsZWFzZSIsImNvbXBhcmUiLCJyY29tcGFyZSIsImNvbXBhcmVMb29zZSIsImNvbXBhcmVCdWlsZCIsInNvcnQiLCJyc29ydCIsImd0IiwibHQiLCJlcSIsIm5lcSIsImd0ZSIsImx0ZSIsImNtcCIsImNvZXJjZSIsIkNvbXBhcmF0b3IiLCJSYW5nZSIsInNhdGlzZmllcyIsInRvQ29tcGFyYXRvcnMiLCJtYXhTYXRpc2Z5aW5nIiwibWluU2F0aXNmeWluZyIsIm1pblZlcnNpb24iLCJ2YWxpZFJhbmdlIiwib3V0c2lkZSIsImd0ciIsImx0ciIsImludGVyc2VjdHMiLCJzaW1wbGlmeVJhbmdlIiwic3Vic2V0IiwibW9kdWxlIiwiZXhwb3J0cyIsInJlIiwic3JjIiwidG9rZW5zIiwidCIsIlNFTVZFUl9TUEVDX1ZFUlNJT04iLCJSRUxFQVNFX1RZUEVTIiwiY29tcGFyZUlkZW50aWZpZXJzIiwicmNvbXBhcmVJZGVudGlmaWVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js ***!
  \**********************************************************************************/
/***/ ((module) => {

eval("// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\n\nconst SEMVER_SPEC_VERSION = \"2.0.0\";\nconst MAX_LENGTH = 256;\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */ 9007199254740991;\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16;\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;\nconst RELEASE_TYPES = [\n    \"major\",\n    \"premajor\",\n    \"minor\",\n    \"preminor\",\n    \"patch\",\n    \"prepatch\",\n    \"prerelease\"\n];\nmodule.exports = {\n    MAX_LENGTH,\n    MAX_SAFE_COMPONENT_LENGTH,\n    MAX_SAFE_BUILD_LENGTH,\n    MAX_SAFE_INTEGER,\n    RELEASE_TYPES,\n    SEMVER_SPEC_VERSION,\n    FLAG_INCLUDE_PRERELEASE: 1,\n    FLAG_LOOSE: 2\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsc0VBQXNFO0FBQ3RFLG9EQUFvRDs7QUFDcEQsTUFBTUEsc0JBQXNCO0FBRTVCLE1BQU1DLGFBQWE7QUFDbkIsTUFBTUMsbUJBQW1CQyxPQUFPRCxnQkFBZ0IsSUFDaEQsd0JBQXdCLEdBQUc7QUFFM0Isd0NBQXdDO0FBQ3hDLE1BQU1FLDRCQUE0QjtBQUVsQyxnRkFBZ0Y7QUFDaEYsaURBQWlEO0FBQ2pELE1BQU1DLHdCQUF3QkosYUFBYTtBQUUzQyxNQUFNSyxnQkFBZ0I7SUFDcEI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVEQyxPQUFPQyxPQUFPLEdBQUc7SUFDZlA7SUFDQUc7SUFDQUM7SUFDQUg7SUFDQUk7SUFDQU47SUFDQVMseUJBQXlCO0lBQ3pCQyxZQUFZO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9jb25zdGFudHMuanM/MTQ5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOb3RlOiB0aGlzIGlzIHRoZSBzZW12ZXIub3JnIHZlcnNpb24gb2YgdGhlIHNwZWMgdGhhdCBpdCBpbXBsZW1lbnRzXG4vLyBOb3QgbmVjZXNzYXJpbHkgdGhlIHBhY2thZ2UgdmVyc2lvbiBvZiB0aGlzIGNvZGUuXG5jb25zdCBTRU1WRVJfU1BFQ19WRVJTSU9OID0gJzIuMC4wJ1xuXG5jb25zdCBNQVhfTEVOR1RIID0gMjU2XG5jb25zdCBNQVhfU0FGRV9JTlRFR0VSID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIgfHxcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIDkwMDcxOTkyNTQ3NDA5OTFcblxuLy8gTWF4IHNhZmUgc2VnbWVudCBsZW5ndGggZm9yIGNvZXJjaW9uLlxuY29uc3QgTUFYX1NBRkVfQ09NUE9ORU5UX0xFTkdUSCA9IDE2XG5cbi8vIE1heCBzYWZlIGxlbmd0aCBmb3IgYSBidWlsZCBpZGVudGlmaWVyLiBUaGUgbWF4IGxlbmd0aCBtaW51cyA2IGNoYXJhY3RlcnMgZm9yXG4vLyB0aGUgc2hvcnRlc3QgdmVyc2lvbiB3aXRoIGEgYnVpbGQgMC4wLjArQlVJTEQuXG5jb25zdCBNQVhfU0FGRV9CVUlMRF9MRU5HVEggPSBNQVhfTEVOR1RIIC0gNlxuXG5jb25zdCBSRUxFQVNFX1RZUEVTID0gW1xuICAnbWFqb3InLFxuICAncHJlbWFqb3InLFxuICAnbWlub3InLFxuICAncHJlbWlub3InLFxuICAncGF0Y2gnLFxuICAncHJlcGF0Y2gnLFxuICAncHJlcmVsZWFzZScsXG5dXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBNQVhfTEVOR1RILFxuICBNQVhfU0FGRV9DT01QT05FTlRfTEVOR1RILFxuICBNQVhfU0FGRV9CVUlMRF9MRU5HVEgsXG4gIE1BWF9TQUZFX0lOVEVHRVIsXG4gIFJFTEVBU0VfVFlQRVMsXG4gIFNFTVZFUl9TUEVDX1ZFUlNJT04sXG4gIEZMQUdfSU5DTFVERV9QUkVSRUxFQVNFOiAwYjAwMSxcbiAgRkxBR19MT09TRTogMGIwMTAsXG59XG4iXSwibmFtZXMiOlsiU0VNVkVSX1NQRUNfVkVSU0lPTiIsIk1BWF9MRU5HVEgiLCJNQVhfU0FGRV9JTlRFR0VSIiwiTnVtYmVyIiwiTUFYX1NBRkVfQ09NUE9ORU5UX0xFTkdUSCIsIk1BWF9TQUZFX0JVSUxEX0xFTkdUSCIsIlJFTEVBU0VfVFlQRVMiLCJtb2R1bGUiLCJleHBvcnRzIiwiRkxBR19JTkNMVURFX1BSRVJFTEVBU0UiLCJGTEFHX0xPT1NFIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js ***!
  \******************************************************************************/
/***/ ((module) => {

eval("\nconst debug = typeof process === \"object\" && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG) ? (...args)=>console.error(\"SEMVER\", ...args) : ()=>{};\nmodule.exports = debug;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9kZWJ1Zy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsUUFBUSxPQUNMQyxZQUFZLFlBQ25CQSxRQUFRQyxHQUFHLElBQ1hELFFBQVFDLEdBQUcsQ0FBQ0MsVUFBVSxJQUN0QixjQUFjQyxJQUFJLENBQUNILFFBQVFDLEdBQUcsQ0FBQ0MsVUFBVSxJQUN2QyxDQUFDLEdBQUdFLE9BQVNDLFFBQVFDLEtBQUssQ0FBQyxhQUFhRixRQUN4QyxLQUFPO0FBRVhHLE9BQU9DLE9BQU8sR0FBR1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9kZWJ1Zy5qcz85ZWMwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRlYnVnID0gKFxuICB0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiZcbiAgcHJvY2Vzcy5lbnYgJiZcbiAgcHJvY2Vzcy5lbnYuTk9ERV9ERUJVRyAmJlxuICAvXFxic2VtdmVyXFxiL2kudGVzdChwcm9jZXNzLmVudi5OT0RFX0RFQlVHKVxuKSA/ICguLi5hcmdzKSA9PiBjb25zb2xlLmVycm9yKCdTRU1WRVInLCAuLi5hcmdzKVxuICA6ICgpID0+IHt9XG5cbm1vZHVsZS5leHBvcnRzID0gZGVidWdcbiJdLCJuYW1lcyI6WyJkZWJ1ZyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0RFQlVHIiwidGVzdCIsImFyZ3MiLCJjb25zb2xlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js ***!
  \************************************************************************************/
/***/ ((module) => {

eval("\nconst numeric = /^[0-9]+$/;\nconst compareIdentifiers = (a, b)=>{\n    const anum = numeric.test(a);\n    const bnum = numeric.test(b);\n    if (anum && bnum) {\n        a = +a;\n        b = +b;\n    }\n    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n};\nconst rcompareIdentifiers = (a, b)=>compareIdentifiers(b, a);\nmodule.exports = {\n    compareIdentifiers,\n    rcompareIdentifiers\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9pZGVudGlmaWVycy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsVUFBVTtBQUNoQixNQUFNQyxxQkFBcUIsQ0FBQ0MsR0FBR0M7SUFDN0IsTUFBTUMsT0FBT0osUUFBUUssSUFBSSxDQUFDSDtJQUMxQixNQUFNSSxPQUFPTixRQUFRSyxJQUFJLENBQUNGO0lBRTFCLElBQUlDLFFBQVFFLE1BQU07UUFDaEJKLElBQUksQ0FBQ0E7UUFDTEMsSUFBSSxDQUFDQTtJQUNQO0lBRUEsT0FBT0QsTUFBTUMsSUFBSSxJQUNiLFFBQVMsQ0FBQ0csT0FBUSxDQUFDLElBQ25CLFFBQVMsQ0FBQ0YsT0FBUSxJQUNsQkYsSUFBSUMsSUFBSSxDQUFDLElBQ1Q7QUFDTjtBQUVBLE1BQU1JLHNCQUFzQixDQUFDTCxHQUFHQyxJQUFNRixtQkFBbUJFLEdBQUdEO0FBRTVETSxPQUFPQyxPQUFPLEdBQUc7SUFDZlI7SUFDQU07QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2lkZW50aWZpZXJzLmpzP2Y2ODAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbnVtZXJpYyA9IC9eWzAtOV0rJC9cbmNvbnN0IGNvbXBhcmVJZGVudGlmaWVycyA9IChhLCBiKSA9PiB7XG4gIGNvbnN0IGFudW0gPSBudW1lcmljLnRlc3QoYSlcbiAgY29uc3QgYm51bSA9IG51bWVyaWMudGVzdChiKVxuXG4gIGlmIChhbnVtICYmIGJudW0pIHtcbiAgICBhID0gK2FcbiAgICBiID0gK2JcbiAgfVxuXG4gIHJldHVybiBhID09PSBiID8gMFxuICAgIDogKGFudW0gJiYgIWJudW0pID8gLTFcbiAgICA6IChibnVtICYmICFhbnVtKSA/IDFcbiAgICA6IGEgPCBiID8gLTFcbiAgICA6IDFcbn1cblxuY29uc3QgcmNvbXBhcmVJZGVudGlmaWVycyA9IChhLCBiKSA9PiBjb21wYXJlSWRlbnRpZmllcnMoYiwgYSlcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNvbXBhcmVJZGVudGlmaWVycyxcbiAgcmNvbXBhcmVJZGVudGlmaWVycyxcbn1cbiJdLCJuYW1lcyI6WyJudW1lcmljIiwiY29tcGFyZUlkZW50aWZpZXJzIiwiYSIsImIiLCJhbnVtIiwidGVzdCIsImJudW0iLCJyY29tcGFyZUlkZW50aWZpZXJzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/lrucache.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/internal/lrucache.js ***!
  \*********************************************************************************/
/***/ ((module) => {

eval("\nclass LRUCache {\n    constructor(){\n        this.max = 1000;\n        this.map = new Map();\n    }\n    get(key) {\n        const value = this.map.get(key);\n        if (value === undefined) {\n            return undefined;\n        } else {\n            // Remove the key from the map and add it to the end\n            this.map.delete(key);\n            this.map.set(key, value);\n            return value;\n        }\n    }\n    delete(key) {\n        return this.map.delete(key);\n    }\n    set(key, value) {\n        const deleted = this.delete(key);\n        if (!deleted && value !== undefined) {\n            // If cache is full, delete the least recently used item\n            if (this.map.size >= this.max) {\n                const firstKey = this.map.keys().next().value;\n                this.delete(firstKey);\n            }\n            this.map.set(key, value);\n        }\n        return this;\n    }\n}\nmodule.exports = LRUCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9scnVjYWNoZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUE7SUFDSkMsYUFBZTtRQUNiLElBQUksQ0FBQ0MsR0FBRyxHQUFHO1FBQ1gsSUFBSSxDQUFDQyxHQUFHLEdBQUcsSUFBSUM7SUFDakI7SUFFQUMsSUFBS0MsR0FBRyxFQUFFO1FBQ1IsTUFBTUMsUUFBUSxJQUFJLENBQUNKLEdBQUcsQ0FBQ0UsR0FBRyxDQUFDQztRQUMzQixJQUFJQyxVQUFVQyxXQUFXO1lBQ3ZCLE9BQU9BO1FBQ1QsT0FBTztZQUNMLG9EQUFvRDtZQUNwRCxJQUFJLENBQUNMLEdBQUcsQ0FBQ00sTUFBTSxDQUFDSDtZQUNoQixJQUFJLENBQUNILEdBQUcsQ0FBQ08sR0FBRyxDQUFDSixLQUFLQztZQUNsQixPQUFPQTtRQUNUO0lBQ0Y7SUFFQUUsT0FBUUgsR0FBRyxFQUFFO1FBQ1gsT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ00sTUFBTSxDQUFDSDtJQUN6QjtJQUVBSSxJQUFLSixHQUFHLEVBQUVDLEtBQUssRUFBRTtRQUNmLE1BQU1JLFVBQVUsSUFBSSxDQUFDRixNQUFNLENBQUNIO1FBRTVCLElBQUksQ0FBQ0ssV0FBV0osVUFBVUMsV0FBVztZQUNuQyx3REFBd0Q7WUFDeEQsSUFBSSxJQUFJLENBQUNMLEdBQUcsQ0FBQ1MsSUFBSSxJQUFJLElBQUksQ0FBQ1YsR0FBRyxFQUFFO2dCQUM3QixNQUFNVyxXQUFXLElBQUksQ0FBQ1YsR0FBRyxDQUFDVyxJQUFJLEdBQUdDLElBQUksR0FBR1IsS0FBSztnQkFDN0MsSUFBSSxDQUFDRSxNQUFNLENBQUNJO1lBQ2Q7WUFFQSxJQUFJLENBQUNWLEdBQUcsQ0FBQ08sR0FBRyxDQUFDSixLQUFLQztRQUNwQjtRQUVBLE9BQU8sSUFBSTtJQUNiO0FBQ0Y7QUFFQVMsT0FBT0MsT0FBTyxHQUFHakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9scnVjYWNoZS5qcz8zMTc2Il0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIExSVUNhY2hlIHtcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMubWF4ID0gMTAwMFxuICAgIHRoaXMubWFwID0gbmV3IE1hcCgpXG4gIH1cblxuICBnZXQgKGtleSkge1xuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5tYXAuZ2V0KGtleSlcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZW1vdmUgdGhlIGtleSBmcm9tIHRoZSBtYXAgYW5kIGFkZCBpdCB0byB0aGUgZW5kXG4gICAgICB0aGlzLm1hcC5kZWxldGUoa2V5KVxuICAgICAgdGhpcy5tYXAuc2V0KGtleSwgdmFsdWUpXG4gICAgICByZXR1cm4gdmFsdWVcbiAgICB9XG4gIH1cblxuICBkZWxldGUgKGtleSkge1xuICAgIHJldHVybiB0aGlzLm1hcC5kZWxldGUoa2V5KVxuICB9XG5cbiAgc2V0IChrZXksIHZhbHVlKSB7XG4gICAgY29uc3QgZGVsZXRlZCA9IHRoaXMuZGVsZXRlKGtleSlcblxuICAgIGlmICghZGVsZXRlZCAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBJZiBjYWNoZSBpcyBmdWxsLCBkZWxldGUgdGhlIGxlYXN0IHJlY2VudGx5IHVzZWQgaXRlbVxuICAgICAgaWYgKHRoaXMubWFwLnNpemUgPj0gdGhpcy5tYXgpIHtcbiAgICAgICAgY29uc3QgZmlyc3RLZXkgPSB0aGlzLm1hcC5rZXlzKCkubmV4dCgpLnZhbHVlXG4gICAgICAgIHRoaXMuZGVsZXRlKGZpcnN0S2V5KVxuICAgICAgfVxuXG4gICAgICB0aGlzLm1hcC5zZXQoa2V5LCB2YWx1ZSlcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTFJVQ2FjaGVcbiJdLCJuYW1lcyI6WyJMUlVDYWNoZSIsImNvbnN0cnVjdG9yIiwibWF4IiwibWFwIiwiTWFwIiwiZ2V0Iiwia2V5IiwidmFsdWUiLCJ1bmRlZmluZWQiLCJkZWxldGUiLCJzZXQiLCJkZWxldGVkIiwic2l6ZSIsImZpcnN0S2V5Iiwia2V5cyIsIm5leHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/lrucache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js ***!
  \**************************************************************************************/
/***/ ((module) => {

eval("// parse out just the options we care about\n\nconst looseOption = Object.freeze({\n    loose: true\n});\nconst emptyOpts = Object.freeze({});\nconst parseOptions = (options)=>{\n    if (!options) {\n        return emptyOpts;\n    }\n    if (typeof options !== \"object\") {\n        return looseOption;\n    }\n    return options;\n};\nmodule.exports = parseOptions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9pbnRlcm5hbC9wYXJzZS1vcHRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFBLDJDQUEyQzs7QUFDM0MsTUFBTUEsY0FBY0MsT0FBT0MsTUFBTSxDQUFDO0lBQUVDLE9BQU87QUFBSztBQUNoRCxNQUFNQyxZQUFZSCxPQUFPQyxNQUFNLENBQUMsQ0FBRTtBQUNsQyxNQUFNRyxlQUFlQyxDQUFBQTtJQUNuQixJQUFJLENBQUNBLFNBQVM7UUFDWixPQUFPRjtJQUNUO0lBRUEsSUFBSSxPQUFPRSxZQUFZLFVBQVU7UUFDL0IsT0FBT047SUFDVDtJQUVBLE9BQU9NO0FBQ1Q7QUFDQUMsT0FBT0MsT0FBTyxHQUFHSCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL3BhcnNlLW9wdGlvbnMuanM/YWVkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYXJzZSBvdXQganVzdCB0aGUgb3B0aW9ucyB3ZSBjYXJlIGFib3V0XG5jb25zdCBsb29zZU9wdGlvbiA9IE9iamVjdC5mcmVlemUoeyBsb29zZTogdHJ1ZSB9KVxuY29uc3QgZW1wdHlPcHRzID0gT2JqZWN0LmZyZWV6ZSh7IH0pXG5jb25zdCBwYXJzZU9wdGlvbnMgPSBvcHRpb25zID0+IHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgcmV0dXJuIGVtcHR5T3B0c1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBsb29zZU9wdGlvblxuICB9XG5cbiAgcmV0dXJuIG9wdGlvbnNcbn1cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VPcHRpb25zXG4iXSwibmFtZXMiOlsibG9vc2VPcHRpb24iLCJPYmplY3QiLCJmcmVlemUiLCJsb29zZSIsImVtcHR5T3B0cyIsInBhcnNlT3B0aW9ucyIsIm9wdGlvbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst { MAX_SAFE_COMPONENT_LENGTH, MAX_SAFE_BUILD_LENGTH, MAX_LENGTH } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js\");\nconst debug = __webpack_require__(/*! ./debug */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js\");\nexports = module.exports = {};\n// The actual regexps go on exports.re\nconst re = exports.re = [];\nconst safeRe = exports.safeRe = [];\nconst src = exports.src = [];\nconst t = exports.t = {};\nlet R = 0;\nconst LETTERDASHNUMBER = \"[a-zA-Z0-9-]\";\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n    [\n        \"\\\\s\",\n        1\n    ],\n    [\n        \"\\\\d\",\n        MAX_LENGTH\n    ],\n    [\n        LETTERDASHNUMBER,\n        MAX_SAFE_BUILD_LENGTH\n    ]\n];\nconst makeSafeRegex = (value)=>{\n    for (const [token, max] of safeRegexReplacements){\n        value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);\n    }\n    return value;\n};\nconst createToken = (name, value, isGlobal)=>{\n    const safe = makeSafeRegex(value);\n    const index = R++;\n    debug(name, index, value);\n    t[name] = index;\n    src[index] = value;\n    re[index] = new RegExp(value, isGlobal ? \"g\" : undefined);\n    safeRe[index] = new RegExp(safe, isGlobal ? \"g\" : undefined);\n};\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\ncreateToken(\"NUMERICIDENTIFIER\", \"0|[1-9]\\\\d*\");\ncreateToken(\"NUMERICIDENTIFIERLOOSE\", \"\\\\d+\");\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\ncreateToken(\"NONNUMERICIDENTIFIER\", `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);\n// ## Main Version\n// Three dot-separated numeric identifiers.\ncreateToken(\"MAINVERSION\", `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})`);\ncreateToken(\"MAINVERSIONLOOSE\", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})`);\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\ncreateToken(\"PRERELEASEIDENTIFIER\", `(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);\ncreateToken(\"PRERELEASEIDENTIFIERLOOSE\", `(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\ncreateToken(\"PRERELEASE\", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`);\ncreateToken(\"PRERELEASELOOSE\", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\ncreateToken(\"BUILDIDENTIFIER\", `${LETTERDASHNUMBER}+`);\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\ncreateToken(\"BUILD\", `(?:\\\\+(${src[t.BUILDIDENTIFIER]}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`);\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\ncreateToken(\"FULLPLAIN\", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);\ncreateToken(\"FULL\", `^${src[t.FULLPLAIN]}$`);\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken(\"LOOSEPLAIN\", `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);\ncreateToken(\"LOOSE\", `^${src[t.LOOSEPLAIN]}$`);\ncreateToken(\"GTLT\", \"((?:<|>)?=?)\");\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken(\"XRANGEIDENTIFIERLOOSE\", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);\ncreateToken(\"XRANGEIDENTIFIER\", `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`);\ncreateToken(\"XRANGEPLAIN\", `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?` + `)?)?`);\ncreateToken(\"XRANGEPLAINLOOSE\", `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?` + `)?)?`);\ncreateToken(\"XRANGE\", `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`);\ncreateToken(\"XRANGELOOSE\", `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`);\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken(\"COERCEPLAIN\", `${\"(^|[^\\\\d])\" + \"(\\\\d{1,\"}${MAX_SAFE_COMPONENT_LENGTH}})` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);\ncreateToken(\"COERCE\", `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`);\ncreateToken(\"COERCEFULL\", src[t.COERCEPLAIN] + `(?:${src[t.PRERELEASE]})?` + `(?:${src[t.BUILD]})?` + `(?:$|[^\\\\d])`);\ncreateToken(\"COERCERTL\", src[t.COERCE], true);\ncreateToken(\"COERCERTLFULL\", src[t.COERCEFULL], true);\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken(\"LONETILDE\", \"(?:~>?)\");\ncreateToken(\"TILDETRIM\", `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true);\nexports.tildeTrimReplace = \"$1~\";\ncreateToken(\"TILDE\", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);\ncreateToken(\"TILDELOOSE\", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken(\"LONECARET\", \"(?:\\\\^)\");\ncreateToken(\"CARETTRIM\", `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true);\nexports.caretTrimReplace = \"$1^\";\ncreateToken(\"CARET\", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);\ncreateToken(\"CARETLOOSE\", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken(\"COMPARATORLOOSE\", `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`);\ncreateToken(\"COMPARATOR\", `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`);\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken(\"COMPARATORTRIM\", `(\\\\s*)${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);\nexports.comparatorTrimReplace = \"$1$2$3\";\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken(\"HYPHENRANGE\", `^\\\\s*(${src[t.XRANGEPLAIN]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAIN]})` + `\\\\s*$`);\ncreateToken(\"HYPHENRANGELOOSE\", `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s*$`);\n// Star ranges basically just allow anything at all.\ncreateToken(\"STAR\", \"(<|>)?=?\\\\s*\\\\*\");\n// >=0.0.0 is like a star\ncreateToken(\"GTE0\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$\");\ncreateToken(\"GTE0PRE\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Determine if version is greater than all the versions possible in the range.\n\nconst outside = __webpack_require__(/*! ./outside */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js\");\nconst gtr = (version, range, options)=>outside(version, range, \">\", options);\nmodule.exports = gtr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvZ3RyLmpzIiwibWFwcGluZ3MiOiJBQUFBLCtFQUErRTs7QUFDL0UsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsTUFBTSxDQUFDQyxTQUFTQyxPQUFPQyxVQUFZTCxRQUFRRyxTQUFTQyxPQUFPLEtBQUtDO0FBQ3RFQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL2d0ci5qcz80Yjg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIERldGVybWluZSBpZiB2ZXJzaW9uIGlzIGdyZWF0ZXIgdGhhbiBhbGwgdGhlIHZlcnNpb25zIHBvc3NpYmxlIGluIHRoZSByYW5nZS5cbmNvbnN0IG91dHNpZGUgPSByZXF1aXJlKCcuL291dHNpZGUnKVxuY29uc3QgZ3RyID0gKHZlcnNpb24sIHJhbmdlLCBvcHRpb25zKSA9PiBvdXRzaWRlKHZlcnNpb24sIHJhbmdlLCAnPicsIG9wdGlvbnMpXG5tb2R1bGUuZXhwb3J0cyA9IGd0clxuIl0sIm5hbWVzIjpbIm91dHNpZGUiLCJyZXF1aXJlIiwiZ3RyIiwidmVyc2lvbiIsInJhbmdlIiwib3B0aW9ucyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst intersects = (r1, r2, options)=>{\n    r1 = new Range(r1, options);\n    r2 = new Range(r2, options);\n    return r1.intersects(r2, options);\n};\nmodule.exports = intersects;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvaW50ZXJzZWN0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsUUFBUUMsbUJBQU9BLENBQUM7QUFDdEIsTUFBTUMsYUFBYSxDQUFDQyxJQUFJQyxJQUFJQztJQUMxQkYsS0FBSyxJQUFJSCxNQUFNRyxJQUFJRTtJQUNuQkQsS0FBSyxJQUFJSixNQUFNSSxJQUFJQztJQUNuQixPQUFPRixHQUFHRCxVQUFVLENBQUNFLElBQUlDO0FBQzNCO0FBQ0FDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvaW50ZXJzZWN0cy5qcz9jY2YzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJhbmdlID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9yYW5nZScpXG5jb25zdCBpbnRlcnNlY3RzID0gKHIxLCByMiwgb3B0aW9ucykgPT4ge1xuICByMSA9IG5ldyBSYW5nZShyMSwgb3B0aW9ucylcbiAgcjIgPSBuZXcgUmFuZ2UocjIsIG9wdGlvbnMpXG4gIHJldHVybiByMS5pbnRlcnNlY3RzKHIyLCBvcHRpb25zKVxufVxubW9kdWxlLmV4cG9ydHMgPSBpbnRlcnNlY3RzXG4iXSwibmFtZXMiOlsiUmFuZ2UiLCJyZXF1aXJlIiwiaW50ZXJzZWN0cyIsInIxIiwicjIiLCJvcHRpb25zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst outside = __webpack_require__(/*! ./outside */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js\");\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options)=>outside(version, range, \"<\", options);\nmodule.exports = ltr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvbHRyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QiwyRUFBMkU7QUFDM0UsTUFBTUMsTUFBTSxDQUFDQyxTQUFTQyxPQUFPQyxVQUFZTCxRQUFRRyxTQUFTQyxPQUFPLEtBQUtDO0FBQ3RFQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL2x0ci5qcz82N2U4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG91dHNpZGUgPSByZXF1aXJlKCcuL291dHNpZGUnKVxuLy8gRGV0ZXJtaW5lIGlmIHZlcnNpb24gaXMgbGVzcyB0aGFuIGFsbCB0aGUgdmVyc2lvbnMgcG9zc2libGUgaW4gdGhlIHJhbmdlXG5jb25zdCBsdHIgPSAodmVyc2lvbiwgcmFuZ2UsIG9wdGlvbnMpID0+IG91dHNpZGUodmVyc2lvbiwgcmFuZ2UsICc8Jywgb3B0aW9ucylcbm1vZHVsZS5leHBvcnRzID0gbHRyXG4iXSwibmFtZXMiOlsib3V0c2lkZSIsInJlcXVpcmUiLCJsdHIiLCJ2ZXJzaW9uIiwicmFuZ2UiLCJvcHRpb25zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst maxSatisfying = (versions, range, options)=>{\n    let max = null;\n    let maxSV = null;\n    let rangeObj = null;\n    try {\n        rangeObj = new Range(range, options);\n    } catch (er) {\n        return null;\n    }\n    versions.forEach((v)=>{\n        if (rangeObj.test(v)) {\n            // satisfies(v, range, options)\n            if (!max || maxSV.compare(v) === -1) {\n                // compare(max, v, true)\n                max = v;\n                maxSV = new SemVer(max, options);\n            }\n        }\n    });\n    return max;\n};\nmodule.exports = maxSatisfying;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvbWF4LXNhdGlzZnlpbmcuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFFBQVFELG1CQUFPQSxDQUFDO0FBRXRCLE1BQU1FLGdCQUFnQixDQUFDQyxVQUFVQyxPQUFPQztJQUN0QyxJQUFJQyxNQUFNO0lBQ1YsSUFBSUMsUUFBUTtJQUNaLElBQUlDLFdBQVc7SUFDZixJQUFJO1FBQ0ZBLFdBQVcsSUFBSVAsTUFBTUcsT0FBT0M7SUFDOUIsRUFBRSxPQUFPSSxJQUFJO1FBQ1gsT0FBTztJQUNUO0lBQ0FOLFNBQVNPLE9BQU8sQ0FBQyxDQUFDQztRQUNoQixJQUFJSCxTQUFTSSxJQUFJLENBQUNELElBQUk7WUFDcEIsK0JBQStCO1lBQy9CLElBQUksQ0FBQ0wsT0FBT0MsTUFBTU0sT0FBTyxDQUFDRixPQUFPLENBQUMsR0FBRztnQkFDbkMsd0JBQXdCO2dCQUN4QkwsTUFBTUs7Z0JBQ05KLFFBQVEsSUFBSVIsT0FBT08sS0FBS0Q7WUFDMUI7UUFDRjtJQUNGO0lBQ0EsT0FBT0M7QUFDVDtBQUNBUSxPQUFPQyxPQUFPLEdBQUdiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL21heC1zYXRpc2Z5aW5nLmpzPzBmZjkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgUmFuZ2UgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3JhbmdlJylcblxuY29uc3QgbWF4U2F0aXNmeWluZyA9ICh2ZXJzaW9ucywgcmFuZ2UsIG9wdGlvbnMpID0+IHtcbiAgbGV0IG1heCA9IG51bGxcbiAgbGV0IG1heFNWID0gbnVsbFxuICBsZXQgcmFuZ2VPYmogPSBudWxsXG4gIHRyeSB7XG4gICAgcmFuZ2VPYmogPSBuZXcgUmFuZ2UocmFuZ2UsIG9wdGlvbnMpXG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuICB2ZXJzaW9ucy5mb3JFYWNoKCh2KSA9PiB7XG4gICAgaWYgKHJhbmdlT2JqLnRlc3QodikpIHtcbiAgICAgIC8vIHNhdGlzZmllcyh2LCByYW5nZSwgb3B0aW9ucylcbiAgICAgIGlmICghbWF4IHx8IG1heFNWLmNvbXBhcmUodikgPT09IC0xKSB7XG4gICAgICAgIC8vIGNvbXBhcmUobWF4LCB2LCB0cnVlKVxuICAgICAgICBtYXggPSB2XG4gICAgICAgIG1heFNWID0gbmV3IFNlbVZlcihtYXgsIG9wdGlvbnMpXG4gICAgICB9XG4gICAgfVxuICB9KVxuICByZXR1cm4gbWF4XG59XG5tb2R1bGUuZXhwb3J0cyA9IG1heFNhdGlzZnlpbmdcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwiUmFuZ2UiLCJtYXhTYXRpc2Z5aW5nIiwidmVyc2lvbnMiLCJyYW5nZSIsIm9wdGlvbnMiLCJtYXgiLCJtYXhTViIsInJhbmdlT2JqIiwiZXIiLCJmb3JFYWNoIiwidiIsInRlc3QiLCJjb21wYXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst minSatisfying = (versions, range, options)=>{\n    let min = null;\n    let minSV = null;\n    let rangeObj = null;\n    try {\n        rangeObj = new Range(range, options);\n    } catch (er) {\n        return null;\n    }\n    versions.forEach((v)=>{\n        if (rangeObj.test(v)) {\n            // satisfies(v, range, options)\n            if (!min || minSV.compare(v) === 1) {\n                // compare(min, v, true)\n                min = v;\n                minSV = new SemVer(min, options);\n            }\n        }\n    });\n    return min;\n};\nmodule.exports = minSatisfying;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvbWluLXNhdGlzZnlpbmcuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFFBQVFELG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1FLGdCQUFnQixDQUFDQyxVQUFVQyxPQUFPQztJQUN0QyxJQUFJQyxNQUFNO0lBQ1YsSUFBSUMsUUFBUTtJQUNaLElBQUlDLFdBQVc7SUFDZixJQUFJO1FBQ0ZBLFdBQVcsSUFBSVAsTUFBTUcsT0FBT0M7SUFDOUIsRUFBRSxPQUFPSSxJQUFJO1FBQ1gsT0FBTztJQUNUO0lBQ0FOLFNBQVNPLE9BQU8sQ0FBQyxDQUFDQztRQUNoQixJQUFJSCxTQUFTSSxJQUFJLENBQUNELElBQUk7WUFDcEIsK0JBQStCO1lBQy9CLElBQUksQ0FBQ0wsT0FBT0MsTUFBTU0sT0FBTyxDQUFDRixPQUFPLEdBQUc7Z0JBQ2xDLHdCQUF3QjtnQkFDeEJMLE1BQU1LO2dCQUNOSixRQUFRLElBQUlSLE9BQU9PLEtBQUtEO1lBQzFCO1FBQ0Y7SUFDRjtJQUNBLE9BQU9DO0FBQ1Q7QUFDQVEsT0FBT0MsT0FBTyxHQUFHYiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL3Jhbmdlcy9taW4tc2F0aXNmeWluZy5qcz84ZDgwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlbVZlciA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvc2VtdmVyJylcbmNvbnN0IFJhbmdlID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9yYW5nZScpXG5jb25zdCBtaW5TYXRpc2Z5aW5nID0gKHZlcnNpb25zLCByYW5nZSwgb3B0aW9ucykgPT4ge1xuICBsZXQgbWluID0gbnVsbFxuICBsZXQgbWluU1YgPSBudWxsXG4gIGxldCByYW5nZU9iaiA9IG51bGxcbiAgdHJ5IHtcbiAgICByYW5nZU9iaiA9IG5ldyBSYW5nZShyYW5nZSwgb3B0aW9ucylcbiAgfSBjYXRjaCAoZXIpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIHZlcnNpb25zLmZvckVhY2goKHYpID0+IHtcbiAgICBpZiAocmFuZ2VPYmoudGVzdCh2KSkge1xuICAgICAgLy8gc2F0aXNmaWVzKHYsIHJhbmdlLCBvcHRpb25zKVxuICAgICAgaWYgKCFtaW4gfHwgbWluU1YuY29tcGFyZSh2KSA9PT0gMSkge1xuICAgICAgICAvLyBjb21wYXJlKG1pbiwgdiwgdHJ1ZSlcbiAgICAgICAgbWluID0gdlxuICAgICAgICBtaW5TViA9IG5ldyBTZW1WZXIobWluLCBvcHRpb25zKVxuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIG1pblxufVxubW9kdWxlLmV4cG9ydHMgPSBtaW5TYXRpc2Z5aW5nXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsIlJhbmdlIiwibWluU2F0aXNmeWluZyIsInZlcnNpb25zIiwicmFuZ2UiLCJvcHRpb25zIiwibWluIiwibWluU1YiLCJyYW5nZU9iaiIsImVyIiwiZm9yRWFjaCIsInYiLCJ0ZXN0IiwiY29tcGFyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst gt = __webpack_require__(/*! ../functions/gt */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js\");\nconst minVersion = (range, loose)=>{\n    range = new Range(range, loose);\n    let minver = new SemVer(\"0.0.0\");\n    if (range.test(minver)) {\n        return minver;\n    }\n    minver = new SemVer(\"0.0.0-0\");\n    if (range.test(minver)) {\n        return minver;\n    }\n    minver = null;\n    for(let i = 0; i < range.set.length; ++i){\n        const comparators = range.set[i];\n        let setMin = null;\n        comparators.forEach((comparator)=>{\n            // Clone to avoid manipulating the comparator's semver object.\n            const compver = new SemVer(comparator.semver.version);\n            switch(comparator.operator){\n                case \">\":\n                    if (compver.prerelease.length === 0) {\n                        compver.patch++;\n                    } else {\n                        compver.prerelease.push(0);\n                    }\n                    compver.raw = compver.format();\n                /* fallthrough */ case \"\":\n                case \">=\":\n                    if (!setMin || gt(compver, setMin)) {\n                        setMin = compver;\n                    }\n                    break;\n                case \"<\":\n                case \"<=\":\n                    break;\n                /* istanbul ignore next */ default:\n                    throw new Error(`Unexpected operation: ${comparator.operator}`);\n            }\n        });\n        if (setMin && (!minver || gt(minver, setMin))) {\n            minver = setMin;\n        }\n    }\n    if (minver && range.test(minver)) {\n        return minver;\n    }\n    return null;\n};\nmodule.exports = minVersion;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvbWluLXZlcnNpb24uanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFFBQVFELG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1FLEtBQUtGLG1CQUFPQSxDQUFDO0FBRW5CLE1BQU1HLGFBQWEsQ0FBQ0MsT0FBT0M7SUFDekJELFFBQVEsSUFBSUgsTUFBTUcsT0FBT0M7SUFFekIsSUFBSUMsU0FBUyxJQUFJUCxPQUFPO0lBQ3hCLElBQUlLLE1BQU1HLElBQUksQ0FBQ0QsU0FBUztRQUN0QixPQUFPQTtJQUNUO0lBRUFBLFNBQVMsSUFBSVAsT0FBTztJQUNwQixJQUFJSyxNQUFNRyxJQUFJLENBQUNELFNBQVM7UUFDdEIsT0FBT0E7SUFDVDtJQUVBQSxTQUFTO0lBQ1QsSUFBSyxJQUFJRSxJQUFJLEdBQUdBLElBQUlKLE1BQU1LLEdBQUcsQ0FBQ0MsTUFBTSxFQUFFLEVBQUVGLEVBQUc7UUFDekMsTUFBTUcsY0FBY1AsTUFBTUssR0FBRyxDQUFDRCxFQUFFO1FBRWhDLElBQUlJLFNBQVM7UUFDYkQsWUFBWUUsT0FBTyxDQUFDLENBQUNDO1lBQ25CLDhEQUE4RDtZQUM5RCxNQUFNQyxVQUFVLElBQUloQixPQUFPZSxXQUFXRSxNQUFNLENBQUNDLE9BQU87WUFDcEQsT0FBUUgsV0FBV0ksUUFBUTtnQkFDekIsS0FBSztvQkFDSCxJQUFJSCxRQUFRSSxVQUFVLENBQUNULE1BQU0sS0FBSyxHQUFHO3dCQUNuQ0ssUUFBUUssS0FBSztvQkFDZixPQUFPO3dCQUNMTCxRQUFRSSxVQUFVLENBQUNFLElBQUksQ0FBQztvQkFDMUI7b0JBQ0FOLFFBQVFPLEdBQUcsR0FBR1AsUUFBUVEsTUFBTTtnQkFDNUIsZUFBZSxHQUNqQixLQUFLO2dCQUNMLEtBQUs7b0JBQ0gsSUFBSSxDQUFDWCxVQUFVVixHQUFHYSxTQUFTSCxTQUFTO3dCQUNsQ0EsU0FBU0c7b0JBQ1g7b0JBQ0E7Z0JBQ0YsS0FBSztnQkFDTCxLQUFLO29CQUVIO2dCQUNGLHdCQUF3QixHQUN4QjtvQkFDRSxNQUFNLElBQUlTLE1BQU0sQ0FBQyxzQkFBc0IsRUFBRVYsV0FBV0ksUUFBUSxDQUFDLENBQUM7WUFDbEU7UUFDRjtRQUNBLElBQUlOLFVBQVcsRUFBQ04sVUFBVUosR0FBR0ksUUFBUU0sT0FBTSxHQUFJO1lBQzdDTixTQUFTTTtRQUNYO0lBQ0Y7SUFFQSxJQUFJTixVQUFVRixNQUFNRyxJQUFJLENBQUNELFNBQVM7UUFDaEMsT0FBT0E7SUFDVDtJQUVBLE9BQU87QUFDVDtBQUNBbUIsT0FBT0MsT0FBTyxHQUFHdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvbWluLXZlcnNpb24uanM/ZThkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBSYW5nZSA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvcmFuZ2UnKVxuY29uc3QgZ3QgPSByZXF1aXJlKCcuLi9mdW5jdGlvbnMvZ3QnKVxuXG5jb25zdCBtaW5WZXJzaW9uID0gKHJhbmdlLCBsb29zZSkgPT4ge1xuICByYW5nZSA9IG5ldyBSYW5nZShyYW5nZSwgbG9vc2UpXG5cbiAgbGV0IG1pbnZlciA9IG5ldyBTZW1WZXIoJzAuMC4wJylcbiAgaWYgKHJhbmdlLnRlc3QobWludmVyKSkge1xuICAgIHJldHVybiBtaW52ZXJcbiAgfVxuXG4gIG1pbnZlciA9IG5ldyBTZW1WZXIoJzAuMC4wLTAnKVxuICBpZiAocmFuZ2UudGVzdChtaW52ZXIpKSB7XG4gICAgcmV0dXJuIG1pbnZlclxuICB9XG5cbiAgbWludmVyID0gbnVsbFxuICBmb3IgKGxldCBpID0gMDsgaSA8IHJhbmdlLnNldC5sZW5ndGg7ICsraSkge1xuICAgIGNvbnN0IGNvbXBhcmF0b3JzID0gcmFuZ2Uuc2V0W2ldXG5cbiAgICBsZXQgc2V0TWluID0gbnVsbFxuICAgIGNvbXBhcmF0b3JzLmZvckVhY2goKGNvbXBhcmF0b3IpID0+IHtcbiAgICAgIC8vIENsb25lIHRvIGF2b2lkIG1hbmlwdWxhdGluZyB0aGUgY29tcGFyYXRvcidzIHNlbXZlciBvYmplY3QuXG4gICAgICBjb25zdCBjb21wdmVyID0gbmV3IFNlbVZlcihjb21wYXJhdG9yLnNlbXZlci52ZXJzaW9uKVxuICAgICAgc3dpdGNoIChjb21wYXJhdG9yLm9wZXJhdG9yKSB7XG4gICAgICAgIGNhc2UgJz4nOlxuICAgICAgICAgIGlmIChjb21wdmVyLnByZXJlbGVhc2UubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjb21wdmVyLnBhdGNoKytcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29tcHZlci5wcmVyZWxlYXNlLnB1c2goMClcbiAgICAgICAgICB9XG4gICAgICAgICAgY29tcHZlci5yYXcgPSBjb21wdmVyLmZvcm1hdCgpXG4gICAgICAgICAgLyogZmFsbHRocm91Z2ggKi9cbiAgICAgICAgY2FzZSAnJzpcbiAgICAgICAgY2FzZSAnPj0nOlxuICAgICAgICAgIGlmICghc2V0TWluIHx8IGd0KGNvbXB2ZXIsIHNldE1pbikpIHtcbiAgICAgICAgICAgIHNldE1pbiA9IGNvbXB2ZXJcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAnPCc6XG4gICAgICAgIGNhc2UgJzw9JzpcbiAgICAgICAgICAvKiBJZ25vcmUgbWF4aW11bSB2ZXJzaW9ucyAqL1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIG9wZXJhdGlvbjogJHtjb21wYXJhdG9yLm9wZXJhdG9yfWApXG4gICAgICB9XG4gICAgfSlcbiAgICBpZiAoc2V0TWluICYmICghbWludmVyIHx8IGd0KG1pbnZlciwgc2V0TWluKSkpIHtcbiAgICAgIG1pbnZlciA9IHNldE1pblxuICAgIH1cbiAgfVxuXG4gIGlmIChtaW52ZXIgJiYgcmFuZ2UudGVzdChtaW52ZXIpKSB7XG4gICAgcmV0dXJuIG1pbnZlclxuICB9XG5cbiAgcmV0dXJuIG51bGxcbn1cbm1vZHVsZS5leHBvcnRzID0gbWluVmVyc2lvblxuIl0sIm5hbWVzIjpbIlNlbVZlciIsInJlcXVpcmUiLCJSYW5nZSIsImd0IiwibWluVmVyc2lvbiIsInJhbmdlIiwibG9vc2UiLCJtaW52ZXIiLCJ0ZXN0IiwiaSIsInNldCIsImxlbmd0aCIsImNvbXBhcmF0b3JzIiwic2V0TWluIiwiZm9yRWFjaCIsImNvbXBhcmF0b3IiLCJjb21wdmVyIiwic2VtdmVyIiwidmVyc2lvbiIsIm9wZXJhdG9yIiwicHJlcmVsZWFzZSIsInBhdGNoIiwicHVzaCIsInJhdyIsImZvcm1hdCIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js\");\nconst Comparator = __webpack_require__(/*! ../classes/comparator */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js\");\nconst { ANY } = Comparator;\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst satisfies = __webpack_require__(/*! ../functions/satisfies */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js\");\nconst gt = __webpack_require__(/*! ../functions/gt */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js\");\nconst lt = __webpack_require__(/*! ../functions/lt */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js\");\nconst lte = __webpack_require__(/*! ../functions/lte */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js\");\nconst gte = __webpack_require__(/*! ../functions/gte */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js\");\nconst outside = (version, range, hilo, options)=>{\n    version = new SemVer(version, options);\n    range = new Range(range, options);\n    let gtfn, ltefn, ltfn, comp, ecomp;\n    switch(hilo){\n        case \">\":\n            gtfn = gt;\n            ltefn = lte;\n            ltfn = lt;\n            comp = \">\";\n            ecomp = \">=\";\n            break;\n        case \"<\":\n            gtfn = lt;\n            ltefn = gte;\n            ltfn = gt;\n            comp = \"<\";\n            ecomp = \"<=\";\n            break;\n        default:\n            throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n    }\n    // If it satisfies the range it is not outside\n    if (satisfies(version, range, options)) {\n        return false;\n    }\n    // From now on, variable terms are as if we're in \"gtr\" mode.\n    // but note that everything is flipped for the \"ltr\" function.\n    for(let i = 0; i < range.set.length; ++i){\n        const comparators = range.set[i];\n        let high = null;\n        let low = null;\n        comparators.forEach((comparator)=>{\n            if (comparator.semver === ANY) {\n                comparator = new Comparator(\">=0.0.0\");\n            }\n            high = high || comparator;\n            low = low || comparator;\n            if (gtfn(comparator.semver, high.semver, options)) {\n                high = comparator;\n            } else if (ltfn(comparator.semver, low.semver, options)) {\n                low = comparator;\n            }\n        });\n        // If the edge version comparator has a operator then our version\n        // isn't outside it\n        if (high.operator === comp || high.operator === ecomp) {\n            return false;\n        }\n        // If the lowest version comparator has an operator and our version\n        // is less than it then it isn't higher than the range\n        if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n            return false;\n        } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n            return false;\n        }\n    }\n    return true;\n};\nmodule.exports = outside;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvb3V0c2lkZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsYUFBYUQsbUJBQU9BLENBQUM7QUFDM0IsTUFBTSxFQUFFRSxHQUFHLEVBQUUsR0FBR0Q7QUFDaEIsTUFBTUUsUUFBUUgsbUJBQU9BLENBQUM7QUFDdEIsTUFBTUksWUFBWUosbUJBQU9BLENBQUM7QUFDMUIsTUFBTUssS0FBS0wsbUJBQU9BLENBQUM7QUFDbkIsTUFBTU0sS0FBS04sbUJBQU9BLENBQUM7QUFDbkIsTUFBTU8sTUFBTVAsbUJBQU9BLENBQUM7QUFDcEIsTUFBTVEsTUFBTVIsbUJBQU9BLENBQUM7QUFFcEIsTUFBTVMsVUFBVSxDQUFDQyxTQUFTQyxPQUFPQyxNQUFNQztJQUNyQ0gsVUFBVSxJQUFJWCxPQUFPVyxTQUFTRztJQUM5QkYsUUFBUSxJQUFJUixNQUFNUSxPQUFPRTtJQUV6QixJQUFJQyxNQUFNQyxPQUFPQyxNQUFNQyxNQUFNQztJQUM3QixPQUFRTjtRQUNOLEtBQUs7WUFDSEUsT0FBT1Q7WUFDUFUsUUFBUVI7WUFDUlMsT0FBT1Y7WUFDUFcsT0FBTztZQUNQQyxRQUFRO1lBQ1I7UUFDRixLQUFLO1lBQ0hKLE9BQU9SO1lBQ1BTLFFBQVFQO1lBQ1JRLE9BQU9YO1lBQ1BZLE9BQU87WUFDUEMsUUFBUTtZQUNSO1FBQ0Y7WUFDRSxNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFFQSw4Q0FBOEM7SUFDOUMsSUFBSWYsVUFBVU0sU0FBU0MsT0FBT0UsVUFBVTtRQUN0QyxPQUFPO0lBQ1Q7SUFFQSw2REFBNkQ7SUFDN0QsOERBQThEO0lBRTlELElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJVCxNQUFNVSxHQUFHLENBQUNDLE1BQU0sRUFBRSxFQUFFRixFQUFHO1FBQ3pDLE1BQU1HLGNBQWNaLE1BQU1VLEdBQUcsQ0FBQ0QsRUFBRTtRQUVoQyxJQUFJSSxPQUFPO1FBQ1gsSUFBSUMsTUFBTTtRQUVWRixZQUFZRyxPQUFPLENBQUMsQ0FBQ0M7WUFDbkIsSUFBSUEsV0FBV0MsTUFBTSxLQUFLMUIsS0FBSztnQkFDN0J5QixhQUFhLElBQUkxQixXQUFXO1lBQzlCO1lBQ0F1QixPQUFPQSxRQUFRRztZQUNmRixNQUFNQSxPQUFPRTtZQUNiLElBQUliLEtBQUthLFdBQVdDLE1BQU0sRUFBRUosS0FBS0ksTUFBTSxFQUFFZixVQUFVO2dCQUNqRFcsT0FBT0c7WUFDVCxPQUFPLElBQUlYLEtBQUtXLFdBQVdDLE1BQU0sRUFBRUgsSUFBSUcsTUFBTSxFQUFFZixVQUFVO2dCQUN2RFksTUFBTUU7WUFDUjtRQUNGO1FBRUEsaUVBQWlFO1FBQ2pFLG1CQUFtQjtRQUNuQixJQUFJSCxLQUFLSyxRQUFRLEtBQUtaLFFBQVFPLEtBQUtLLFFBQVEsS0FBS1gsT0FBTztZQUNyRCxPQUFPO1FBQ1Q7UUFFQSxtRUFBbUU7UUFDbkUsc0RBQXNEO1FBQ3RELElBQUksQ0FBQyxDQUFDTyxJQUFJSSxRQUFRLElBQUlKLElBQUlJLFFBQVEsS0FBS1osSUFBRyxLQUN0Q0YsTUFBTUwsU0FBU2UsSUFBSUcsTUFBTSxHQUFHO1lBQzlCLE9BQU87UUFDVCxPQUFPLElBQUlILElBQUlJLFFBQVEsS0FBS1gsU0FBU0YsS0FBS04sU0FBU2UsSUFBSUcsTUFBTSxHQUFHO1lBQzlELE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNUO0FBRUFFLE9BQU9DLE9BQU8sR0FBR3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL291dHNpZGUuanM/ZDY1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBDb21wYXJhdG9yID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9jb21wYXJhdG9yJylcbmNvbnN0IHsgQU5ZIH0gPSBDb21wYXJhdG9yXG5jb25zdCBSYW5nZSA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvcmFuZ2UnKVxuY29uc3Qgc2F0aXNmaWVzID0gcmVxdWlyZSgnLi4vZnVuY3Rpb25zL3NhdGlzZmllcycpXG5jb25zdCBndCA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9ucy9ndCcpXG5jb25zdCBsdCA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9ucy9sdCcpXG5jb25zdCBsdGUgPSByZXF1aXJlKCcuLi9mdW5jdGlvbnMvbHRlJylcbmNvbnN0IGd0ZSA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9ucy9ndGUnKVxuXG5jb25zdCBvdXRzaWRlID0gKHZlcnNpb24sIHJhbmdlLCBoaWxvLCBvcHRpb25zKSA9PiB7XG4gIHZlcnNpb24gPSBuZXcgU2VtVmVyKHZlcnNpb24sIG9wdGlvbnMpXG4gIHJhbmdlID0gbmV3IFJhbmdlKHJhbmdlLCBvcHRpb25zKVxuXG4gIGxldCBndGZuLCBsdGVmbiwgbHRmbiwgY29tcCwgZWNvbXBcbiAgc3dpdGNoIChoaWxvKSB7XG4gICAgY2FzZSAnPic6XG4gICAgICBndGZuID0gZ3RcbiAgICAgIGx0ZWZuID0gbHRlXG4gICAgICBsdGZuID0gbHRcbiAgICAgIGNvbXAgPSAnPidcbiAgICAgIGVjb21wID0gJz49J1xuICAgICAgYnJlYWtcbiAgICBjYXNlICc8JzpcbiAgICAgIGd0Zm4gPSBsdFxuICAgICAgbHRlZm4gPSBndGVcbiAgICAgIGx0Zm4gPSBndFxuICAgICAgY29tcCA9ICc8J1xuICAgICAgZWNvbXAgPSAnPD0nXG4gICAgICBicmVha1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdNdXN0IHByb3ZpZGUgYSBoaWxvIHZhbCBvZiBcIjxcIiBvciBcIj5cIicpXG4gIH1cblxuICAvLyBJZiBpdCBzYXRpc2ZpZXMgdGhlIHJhbmdlIGl0IGlzIG5vdCBvdXRzaWRlXG4gIGlmIChzYXRpc2ZpZXModmVyc2lvbiwgcmFuZ2UsIG9wdGlvbnMpKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBGcm9tIG5vdyBvbiwgdmFyaWFibGUgdGVybXMgYXJlIGFzIGlmIHdlJ3JlIGluIFwiZ3RyXCIgbW9kZS5cbiAgLy8gYnV0IG5vdGUgdGhhdCBldmVyeXRoaW5nIGlzIGZsaXBwZWQgZm9yIHRoZSBcImx0clwiIGZ1bmN0aW9uLlxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmFuZ2Uuc2V0Lmxlbmd0aDsgKytpKSB7XG4gICAgY29uc3QgY29tcGFyYXRvcnMgPSByYW5nZS5zZXRbaV1cblxuICAgIGxldCBoaWdoID0gbnVsbFxuICAgIGxldCBsb3cgPSBudWxsXG5cbiAgICBjb21wYXJhdG9ycy5mb3JFYWNoKChjb21wYXJhdG9yKSA9PiB7XG4gICAgICBpZiAoY29tcGFyYXRvci5zZW12ZXIgPT09IEFOWSkge1xuICAgICAgICBjb21wYXJhdG9yID0gbmV3IENvbXBhcmF0b3IoJz49MC4wLjAnKVxuICAgICAgfVxuICAgICAgaGlnaCA9IGhpZ2ggfHwgY29tcGFyYXRvclxuICAgICAgbG93ID0gbG93IHx8IGNvbXBhcmF0b3JcbiAgICAgIGlmIChndGZuKGNvbXBhcmF0b3Iuc2VtdmVyLCBoaWdoLnNlbXZlciwgb3B0aW9ucykpIHtcbiAgICAgICAgaGlnaCA9IGNvbXBhcmF0b3JcbiAgICAgIH0gZWxzZSBpZiAobHRmbihjb21wYXJhdG9yLnNlbXZlciwgbG93LnNlbXZlciwgb3B0aW9ucykpIHtcbiAgICAgICAgbG93ID0gY29tcGFyYXRvclxuICAgICAgfVxuICAgIH0pXG5cbiAgICAvLyBJZiB0aGUgZWRnZSB2ZXJzaW9uIGNvbXBhcmF0b3IgaGFzIGEgb3BlcmF0b3IgdGhlbiBvdXIgdmVyc2lvblxuICAgIC8vIGlzbid0IG91dHNpZGUgaXRcbiAgICBpZiAoaGlnaC5vcGVyYXRvciA9PT0gY29tcCB8fCBoaWdoLm9wZXJhdG9yID09PSBlY29tcCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgLy8gSWYgdGhlIGxvd2VzdCB2ZXJzaW9uIGNvbXBhcmF0b3IgaGFzIGFuIG9wZXJhdG9yIGFuZCBvdXIgdmVyc2lvblxuICAgIC8vIGlzIGxlc3MgdGhhbiBpdCB0aGVuIGl0IGlzbid0IGhpZ2hlciB0aGFuIHRoZSByYW5nZVxuICAgIGlmICgoIWxvdy5vcGVyYXRvciB8fCBsb3cub3BlcmF0b3IgPT09IGNvbXApICYmXG4gICAgICAgIGx0ZWZuKHZlcnNpb24sIGxvdy5zZW12ZXIpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9IGVsc2UgaWYgKGxvdy5vcGVyYXRvciA9PT0gZWNvbXAgJiYgbHRmbih2ZXJzaW9uLCBsb3cuc2VtdmVyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlXG59XG5cbm1vZHVsZS5leHBvcnRzID0gb3V0c2lkZVxuIl0sIm5hbWVzIjpbIlNlbVZlciIsInJlcXVpcmUiLCJDb21wYXJhdG9yIiwiQU5ZIiwiUmFuZ2UiLCJzYXRpc2ZpZXMiLCJndCIsImx0IiwibHRlIiwiZ3RlIiwib3V0c2lkZSIsInZlcnNpb24iLCJyYW5nZSIsImhpbG8iLCJvcHRpb25zIiwiZ3RmbiIsImx0ZWZuIiwibHRmbiIsImNvbXAiLCJlY29tcCIsIlR5cGVFcnJvciIsImkiLCJzZXQiLCJsZW5ndGgiLCJjb21wYXJhdG9ycyIsImhpZ2giLCJsb3ciLCJmb3JFYWNoIiwiY29tcGFyYXRvciIsInNlbXZlciIsIm9wZXJhdG9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\n\nconst satisfies = __webpack_require__(/*! ../functions/satisfies.js */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js\");\nconst compare = __webpack_require__(/*! ../functions/compare.js */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\nmodule.exports = (versions, range, options)=>{\n    const set = [];\n    let first = null;\n    let prev = null;\n    const v = versions.sort((a, b)=>compare(a, b, options));\n    for (const version of v){\n        const included = satisfies(version, range, options);\n        if (included) {\n            prev = version;\n            if (!first) {\n                first = version;\n            }\n        } else {\n            if (prev) {\n                set.push([\n                    first,\n                    prev\n                ]);\n            }\n            prev = null;\n            first = null;\n        }\n    }\n    if (first) {\n        set.push([\n            first,\n            null\n        ]);\n    }\n    const ranges = [];\n    for (const [min, max] of set){\n        if (min === max) {\n            ranges.push(min);\n        } else if (!max && min === v[0]) {\n            ranges.push(\"*\");\n        } else if (!max) {\n            ranges.push(`>=${min}`);\n        } else if (min === v[0]) {\n            ranges.push(`<=${max}`);\n        } else {\n            ranges.push(`${min} - ${max}`);\n        }\n    }\n    const simplified = ranges.join(\" || \");\n    const original = typeof range.raw === \"string\" ? range.raw : String(range);\n    return simplified.length < original.length ? simplified : range;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvc2ltcGxpZnkuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUVBQW1FO0FBQ25FLCtEQUErRDtBQUMvRCx5RUFBeUU7O0FBQ3pFLE1BQU1BLFlBQVlDLG1CQUFPQSxDQUFDO0FBQzFCLE1BQU1DLFVBQVVELG1CQUFPQSxDQUFDO0FBQ3hCRSxPQUFPQyxPQUFPLEdBQUcsQ0FBQ0MsVUFBVUMsT0FBT0M7SUFDakMsTUFBTUMsTUFBTSxFQUFFO0lBQ2QsSUFBSUMsUUFBUTtJQUNaLElBQUlDLE9BQU87SUFDWCxNQUFNQyxJQUFJTixTQUFTTyxJQUFJLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTVosUUFBUVcsR0FBR0MsR0FBR1A7SUFDaEQsS0FBSyxNQUFNUSxXQUFXSixFQUFHO1FBQ3ZCLE1BQU1LLFdBQVdoQixVQUFVZSxTQUFTVCxPQUFPQztRQUMzQyxJQUFJUyxVQUFVO1lBQ1pOLE9BQU9LO1lBQ1AsSUFBSSxDQUFDTixPQUFPO2dCQUNWQSxRQUFRTTtZQUNWO1FBQ0YsT0FBTztZQUNMLElBQUlMLE1BQU07Z0JBQ1JGLElBQUlTLElBQUksQ0FBQztvQkFBQ1I7b0JBQU9DO2lCQUFLO1lBQ3hCO1lBQ0FBLE9BQU87WUFDUEQsUUFBUTtRQUNWO0lBQ0Y7SUFDQSxJQUFJQSxPQUFPO1FBQ1RELElBQUlTLElBQUksQ0FBQztZQUFDUjtZQUFPO1NBQUs7SUFDeEI7SUFFQSxNQUFNUyxTQUFTLEVBQUU7SUFDakIsS0FBSyxNQUFNLENBQUNDLEtBQUtDLElBQUksSUFBSVosSUFBSztRQUM1QixJQUFJVyxRQUFRQyxLQUFLO1lBQ2ZGLE9BQU9ELElBQUksQ0FBQ0U7UUFDZCxPQUFPLElBQUksQ0FBQ0MsT0FBT0QsUUFBUVIsQ0FBQyxDQUFDLEVBQUUsRUFBRTtZQUMvQk8sT0FBT0QsSUFBSSxDQUFDO1FBQ2QsT0FBTyxJQUFJLENBQUNHLEtBQUs7WUFDZkYsT0FBT0QsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFRSxJQUFJLENBQUM7UUFDeEIsT0FBTyxJQUFJQSxRQUFRUixDQUFDLENBQUMsRUFBRSxFQUFFO1lBQ3ZCTyxPQUFPRCxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUVHLElBQUksQ0FBQztRQUN4QixPQUFPO1lBQ0xGLE9BQU9ELElBQUksQ0FBQyxDQUFDLEVBQUVFLElBQUksR0FBRyxFQUFFQyxJQUFJLENBQUM7UUFDL0I7SUFDRjtJQUNBLE1BQU1DLGFBQWFILE9BQU9JLElBQUksQ0FBQztJQUMvQixNQUFNQyxXQUFXLE9BQU9qQixNQUFNa0IsR0FBRyxLQUFLLFdBQVdsQixNQUFNa0IsR0FBRyxHQUFHQyxPQUFPbkI7SUFDcEUsT0FBT2UsV0FBV0ssTUFBTSxHQUFHSCxTQUFTRyxNQUFNLEdBQUdMLGFBQWFmO0FBQzVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL3NpbXBsaWZ5LmpzPzExMmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2l2ZW4gYSBzZXQgb2YgdmVyc2lvbnMgYW5kIGEgcmFuZ2UsIGNyZWF0ZSBhIFwic2ltcGxpZmllZFwiIHJhbmdlXG4vLyB0aGF0IGluY2x1ZGVzIHRoZSBzYW1lIHZlcnNpb25zIHRoYXQgdGhlIG9yaWdpbmFsIHJhbmdlIGRvZXNcbi8vIElmIHRoZSBvcmlnaW5hbCByYW5nZSBpcyBzaG9ydGVyIHRoYW4gdGhlIHNpbXBsaWZpZWQgb25lLCByZXR1cm4gdGhhdC5cbmNvbnN0IHNhdGlzZmllcyA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9ucy9zYXRpc2ZpZXMuanMnKVxuY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9ucy9jb21wYXJlLmpzJylcbm1vZHVsZS5leHBvcnRzID0gKHZlcnNpb25zLCByYW5nZSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCBzZXQgPSBbXVxuICBsZXQgZmlyc3QgPSBudWxsXG4gIGxldCBwcmV2ID0gbnVsbFxuICBjb25zdCB2ID0gdmVyc2lvbnMuc29ydCgoYSwgYikgPT4gY29tcGFyZShhLCBiLCBvcHRpb25zKSlcbiAgZm9yIChjb25zdCB2ZXJzaW9uIG9mIHYpIHtcbiAgICBjb25zdCBpbmNsdWRlZCA9IHNhdGlzZmllcyh2ZXJzaW9uLCByYW5nZSwgb3B0aW9ucylcbiAgICBpZiAoaW5jbHVkZWQpIHtcbiAgICAgIHByZXYgPSB2ZXJzaW9uXG4gICAgICBpZiAoIWZpcnN0KSB7XG4gICAgICAgIGZpcnN0ID0gdmVyc2lvblxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocHJldikge1xuICAgICAgICBzZXQucHVzaChbZmlyc3QsIHByZXZdKVxuICAgICAgfVxuICAgICAgcHJldiA9IG51bGxcbiAgICAgIGZpcnN0ID0gbnVsbFxuICAgIH1cbiAgfVxuICBpZiAoZmlyc3QpIHtcbiAgICBzZXQucHVzaChbZmlyc3QsIG51bGxdKVxuICB9XG5cbiAgY29uc3QgcmFuZ2VzID0gW11cbiAgZm9yIChjb25zdCBbbWluLCBtYXhdIG9mIHNldCkge1xuICAgIGlmIChtaW4gPT09IG1heCkge1xuICAgICAgcmFuZ2VzLnB1c2gobWluKVxuICAgIH0gZWxzZSBpZiAoIW1heCAmJiBtaW4gPT09IHZbMF0pIHtcbiAgICAgIHJhbmdlcy5wdXNoKCcqJylcbiAgICB9IGVsc2UgaWYgKCFtYXgpIHtcbiAgICAgIHJhbmdlcy5wdXNoKGA+PSR7bWlufWApXG4gICAgfSBlbHNlIGlmIChtaW4gPT09IHZbMF0pIHtcbiAgICAgIHJhbmdlcy5wdXNoKGA8PSR7bWF4fWApXG4gICAgfSBlbHNlIHtcbiAgICAgIHJhbmdlcy5wdXNoKGAke21pbn0gLSAke21heH1gKVxuICAgIH1cbiAgfVxuICBjb25zdCBzaW1wbGlmaWVkID0gcmFuZ2VzLmpvaW4oJyB8fCAnKVxuICBjb25zdCBvcmlnaW5hbCA9IHR5cGVvZiByYW5nZS5yYXcgPT09ICdzdHJpbmcnID8gcmFuZ2UucmF3IDogU3RyaW5nKHJhbmdlKVxuICByZXR1cm4gc2ltcGxpZmllZC5sZW5ndGggPCBvcmlnaW5hbC5sZW5ndGggPyBzaW1wbGlmaWVkIDogcmFuZ2Vcbn1cbiJdLCJuYW1lcyI6WyJzYXRpc2ZpZXMiLCJyZXF1aXJlIiwiY29tcGFyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2ZXJzaW9ucyIsInJhbmdlIiwib3B0aW9ucyIsInNldCIsImZpcnN0IiwicHJldiIsInYiLCJzb3J0IiwiYSIsImIiLCJ2ZXJzaW9uIiwiaW5jbHVkZWQiLCJwdXNoIiwicmFuZ2VzIiwibWluIiwibWF4Iiwic2ltcGxpZmllZCIsImpvaW4iLCJvcmlnaW5hbCIsInJhdyIsIlN0cmluZyIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range.js */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst Comparator = __webpack_require__(/*! ../classes/comparator.js */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js\");\nconst { ANY } = Comparator;\nconst satisfies = __webpack_require__(/*! ../functions/satisfies.js */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js\");\nconst compare = __webpack_require__(/*! ../functions/compare.js */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js\");\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\nconst subset = (sub, dom, options = {})=>{\n    if (sub === dom) {\n        return true;\n    }\n    sub = new Range(sub, options);\n    dom = new Range(dom, options);\n    let sawNonNull = false;\n    OUTER: for (const simpleSub of sub.set){\n        for (const simpleDom of dom.set){\n            const isSub = simpleSubset(simpleSub, simpleDom, options);\n            sawNonNull = sawNonNull || isSub !== null;\n            if (isSub) {\n                continue OUTER;\n            }\n        }\n        // the null set is a subset of everything, but null simple ranges in\n        // a complex range should be ignored.  so if we saw a non-null range,\n        // then we know this isn't a subset, but if EVERY simple range was null,\n        // then it is a subset.\n        if (sawNonNull) {\n            return false;\n        }\n    }\n    return true;\n};\nconst minimumVersionWithPreRelease = [\n    new Comparator(\">=0.0.0-0\")\n];\nconst minimumVersion = [\n    new Comparator(\">=0.0.0\")\n];\nconst simpleSubset = (sub, dom, options)=>{\n    if (sub === dom) {\n        return true;\n    }\n    if (sub.length === 1 && sub[0].semver === ANY) {\n        if (dom.length === 1 && dom[0].semver === ANY) {\n            return true;\n        } else if (options.includePrerelease) {\n            sub = minimumVersionWithPreRelease;\n        } else {\n            sub = minimumVersion;\n        }\n    }\n    if (dom.length === 1 && dom[0].semver === ANY) {\n        if (options.includePrerelease) {\n            return true;\n        } else {\n            dom = minimumVersion;\n        }\n    }\n    const eqSet = new Set();\n    let gt, lt;\n    for (const c of sub){\n        if (c.operator === \">\" || c.operator === \">=\") {\n            gt = higherGT(gt, c, options);\n        } else if (c.operator === \"<\" || c.operator === \"<=\") {\n            lt = lowerLT(lt, c, options);\n        } else {\n            eqSet.add(c.semver);\n        }\n    }\n    if (eqSet.size > 1) {\n        return null;\n    }\n    let gtltComp;\n    if (gt && lt) {\n        gtltComp = compare(gt.semver, lt.semver, options);\n        if (gtltComp > 0) {\n            return null;\n        } else if (gtltComp === 0 && (gt.operator !== \">=\" || lt.operator !== \"<=\")) {\n            return null;\n        }\n    }\n    // will iterate one or zero times\n    for (const eq of eqSet){\n        if (gt && !satisfies(eq, String(gt), options)) {\n            return null;\n        }\n        if (lt && !satisfies(eq, String(lt), options)) {\n            return null;\n        }\n        for (const c of dom){\n            if (!satisfies(eq, String(c), options)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    let higher, lower;\n    let hasDomLT, hasDomGT;\n    // if the subset has a prerelease, we need a comparator in the superset\n    // with the same tuple and a prerelease, or it's not a subset\n    let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;\n    let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;\n    // exception: <1.2.3-0 is the same as <1.2.3\n    if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === \"<\" && needDomLTPre.prerelease[0] === 0) {\n        needDomLTPre = false;\n    }\n    for (const c of dom){\n        hasDomGT = hasDomGT || c.operator === \">\" || c.operator === \">=\";\n        hasDomLT = hasDomLT || c.operator === \"<\" || c.operator === \"<=\";\n        if (gt) {\n            if (needDomGTPre) {\n                if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {\n                    needDomGTPre = false;\n                }\n            }\n            if (c.operator === \">\" || c.operator === \">=\") {\n                higher = higherGT(gt, c, options);\n                if (higher === c && higher !== gt) {\n                    return false;\n                }\n            } else if (gt.operator === \">=\" && !satisfies(gt.semver, String(c), options)) {\n                return false;\n            }\n        }\n        if (lt) {\n            if (needDomLTPre) {\n                if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {\n                    needDomLTPre = false;\n                }\n            }\n            if (c.operator === \"<\" || c.operator === \"<=\") {\n                lower = lowerLT(lt, c, options);\n                if (lower === c && lower !== lt) {\n                    return false;\n                }\n            } else if (lt.operator === \"<=\" && !satisfies(lt.semver, String(c), options)) {\n                return false;\n            }\n        }\n        if (!c.operator && (lt || gt) && gtltComp !== 0) {\n            return false;\n        }\n    }\n    // if there was a < or >, and nothing in the dom, then must be false\n    // UNLESS it was limited by another range in the other direction.\n    // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n    if (gt && hasDomLT && !lt && gtltComp !== 0) {\n        return false;\n    }\n    if (lt && hasDomGT && !gt && gtltComp !== 0) {\n        return false;\n    }\n    // we needed a prerelease range in a specific tuple, but didn't get one\n    // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n    // because it includes prereleases in the 1.2.3 tuple\n    if (needDomGTPre || needDomLTPre) {\n        return false;\n    }\n    return true;\n};\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options)=>{\n    if (!a) {\n        return b;\n    }\n    const comp = compare(a.semver, b.semver, options);\n    return comp > 0 ? a : comp < 0 ? b : b.operator === \">\" && a.operator === \">=\" ? b : a;\n};\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options)=>{\n    if (!a) {\n        return b;\n    }\n    const comp = compare(a.semver, b.semver, options);\n    return comp < 0 ? a : comp > 0 ? b : b.operator === \"<\" && a.operator === \"<=\" ? b : a;\n};\nmodule.exports = subset;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options)=>new Range(range, options).set.map((comp)=>comp.map((c)=>c.value).join(\" \").trim().split(\" \"));\nmodule.exports = toComparators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvdG8tY29tcGFyYXRvcnMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXRCLGlEQUFpRDtBQUNqRCxNQUFNQyxnQkFBZ0IsQ0FBQ0MsT0FBT0MsVUFDNUIsSUFBSUosTUFBTUcsT0FBT0MsU0FBU0MsR0FBRyxDQUMxQkMsR0FBRyxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLRCxHQUFHLENBQUNFLENBQUFBLElBQUtBLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxDQUFDLEtBQUtDLElBQUksR0FBR0MsS0FBSyxDQUFDO0FBRS9EQyxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9kZXZpY2VzL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL3RvLWNvbXBhcmF0b3JzLmpzPzAwOTgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmFuZ2UgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3JhbmdlJylcblxuLy8gTW9zdGx5IGp1c3QgZm9yIHRlc3RpbmcgYW5kIGxlZ2FjeSBBUEkgcmVhc29uc1xuY29uc3QgdG9Db21wYXJhdG9ycyA9IChyYW5nZSwgb3B0aW9ucykgPT5cbiAgbmV3IFJhbmdlKHJhbmdlLCBvcHRpb25zKS5zZXRcbiAgICAubWFwKGNvbXAgPT4gY29tcC5tYXAoYyA9PiBjLnZhbHVlKS5qb2luKCcgJykudHJpbSgpLnNwbGl0KCcgJykpXG5cbm1vZHVsZS5leHBvcnRzID0gdG9Db21wYXJhdG9yc1xuIl0sIm5hbWVzIjpbIlJhbmdlIiwicmVxdWlyZSIsInRvQ29tcGFyYXRvcnMiLCJyYW5nZSIsIm9wdGlvbnMiLCJzZXQiLCJtYXAiLCJjb21wIiwiYyIsInZhbHVlIiwiam9pbiIsInRyaW0iLCJzcGxpdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js\");\nconst validRange = (range, options)=>{\n    try {\n        // Return '*' instead of '' so that truthiness works.\n        // This will throw if it's invalid anyway\n        return new Range(range, options).range || \"*\";\n    } catch (er) {\n        return null;\n    }\n};\nmodule.exports = validRange;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvdmFsaWQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1DLGFBQWEsQ0FBQ0MsT0FBT0M7SUFDekIsSUFBSTtRQUNGLHFEQUFxRDtRQUNyRCx5Q0FBeUM7UUFDekMsT0FBTyxJQUFJSixNQUFNRyxPQUFPQyxTQUFTRCxLQUFLLElBQUk7SUFDNUMsRUFBRSxPQUFPRSxJQUFJO1FBQ1gsT0FBTztJQUNUO0FBQ0Y7QUFDQUMsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9ub2RlX21vZHVsZXMvc2VtdmVyL3Jhbmdlcy92YWxpZC5qcz9iMzczIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJhbmdlID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9yYW5nZScpXG5jb25zdCB2YWxpZFJhbmdlID0gKHJhbmdlLCBvcHRpb25zKSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gUmV0dXJuICcqJyBpbnN0ZWFkIG9mICcnIHNvIHRoYXQgdHJ1dGhpbmVzcyB3b3Jrcy5cbiAgICAvLyBUaGlzIHdpbGwgdGhyb3cgaWYgaXQncyBpbnZhbGlkIGFueXdheVxuICAgIHJldHVybiBuZXcgUmFuZ2UocmFuZ2UsIG9wdGlvbnMpLnJhbmdlIHx8ICcqJ1xuICB9IGNhdGNoIChlcikge1xuICAgIHJldHVybiBudWxsXG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gdmFsaWRSYW5nZVxuIl0sIm5hbWVzIjpbIlJhbmdlIiwicmVxdWlyZSIsInZhbGlkUmFuZ2UiLCJyYW5nZSIsIm9wdGlvbnMiLCJlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/errors/lib-es/helpers.js":
/*!*********************************************************!*\
  !*** ./node_modules/@ledgerhq/errors/lib-es/helpers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addCustomErrorDeserializer: () => (/* binding */ addCustomErrorDeserializer),\n/* harmony export */   createCustomErrorClass: () => (/* binding */ createCustomErrorClass),\n/* harmony export */   deserializeError: () => (/* binding */ deserializeError),\n/* harmony export */   serializeError: () => (/* binding */ serializeError)\n/* harmony export */ });\n/* eslint-disable no-continue */ /* eslint-disable no-unused-vars */ /* eslint-disable no-param-reassign */ /* eslint-disable no-prototype-builtins */ const errorClasses = {};\nconst deserializers = {};\nconst addCustomErrorDeserializer = (name, deserializer)=>{\n    deserializers[name] = deserializer;\n};\nconst createCustomErrorClass = (name)=>{\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options){\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for(const k in fields){\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nconst deserializeError = (object)=>{\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        } catch (e) {\n        // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            } else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for(const prop in object){\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                } catch (e) {\n                // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        } else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nconst serializeError = (value)=>{\n    if (!value) return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)){\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n} //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/errors/lib-es/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@ledgerhq/errors/lib-es/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountNameRequiredError: () => (/* binding */ AccountNameRequiredError),\n/* harmony export */   AccountNotSupported: () => (/* binding */ AccountNotSupported),\n/* harmony export */   AmountRequired: () => (/* binding */ AmountRequired),\n/* harmony export */   BluetoothRequired: () => (/* binding */ BluetoothRequired),\n/* harmony export */   BtcUnmatchedApp: () => (/* binding */ BtcUnmatchedApp),\n/* harmony export */   CantOpenDevice: () => (/* binding */ CantOpenDevice),\n/* harmony export */   CantScanQRCode: () => (/* binding */ CantScanQRCode),\n/* harmony export */   CashAddrNotSupported: () => (/* binding */ CashAddrNotSupported),\n/* harmony export */   ClaimRewardsFeesWarning: () => (/* binding */ ClaimRewardsFeesWarning),\n/* harmony export */   CurrencyNotSupported: () => (/* binding */ CurrencyNotSupported),\n/* harmony export */   DBNotReset: () => (/* binding */ DBNotReset),\n/* harmony export */   DBWrongPassword: () => (/* binding */ DBWrongPassword),\n/* harmony export */   DeviceAppVerifyNotSupported: () => (/* binding */ DeviceAppVerifyNotSupported),\n/* harmony export */   DeviceExtractOnboardingStateError: () => (/* binding */ DeviceExtractOnboardingStateError),\n/* harmony export */   DeviceGenuineSocketEarlyClose: () => (/* binding */ DeviceGenuineSocketEarlyClose),\n/* harmony export */   DeviceHalted: () => (/* binding */ DeviceHalted),\n/* harmony export */   DeviceInOSUExpected: () => (/* binding */ DeviceInOSUExpected),\n/* harmony export */   DeviceNameInvalid: () => (/* binding */ DeviceNameInvalid),\n/* harmony export */   DeviceNotGenuineError: () => (/* binding */ DeviceNotGenuineError),\n/* harmony export */   DeviceOnDashboardExpected: () => (/* binding */ DeviceOnDashboardExpected),\n/* harmony export */   DeviceOnDashboardUnexpected: () => (/* binding */ DeviceOnDashboardUnexpected),\n/* harmony export */   DeviceOnboardingStatePollingError: () => (/* binding */ DeviceOnboardingStatePollingError),\n/* harmony export */   DeviceShouldStayInApp: () => (/* binding */ DeviceShouldStayInApp),\n/* harmony export */   DeviceSocketFail: () => (/* binding */ DeviceSocketFail),\n/* harmony export */   DeviceSocketNoBulkStatus: () => (/* binding */ DeviceSocketNoBulkStatus),\n/* harmony export */   DisconnectedDevice: () => (/* binding */ DisconnectedDevice),\n/* harmony export */   DisconnectedDeviceDuringOperation: () => (/* binding */ DisconnectedDeviceDuringOperation),\n/* harmony export */   DustLimit: () => (/* binding */ DustLimit),\n/* harmony export */   ETHAddressNonEIP: () => (/* binding */ ETHAddressNonEIP),\n/* harmony export */   EnpointConfigError: () => (/* binding */ EnpointConfigError),\n/* harmony export */   EthAppPleaseEnableContractData: () => (/* binding */ EthAppPleaseEnableContractData),\n/* harmony export */   FeeEstimationFailed: () => (/* binding */ FeeEstimationFailed),\n/* harmony export */   FeeNotLoaded: () => (/* binding */ FeeNotLoaded),\n/* harmony export */   FeeRequired: () => (/* binding */ FeeRequired),\n/* harmony export */   FeeTooHigh: () => (/* binding */ FeeTooHigh),\n/* harmony export */   FirmwareNotRecognized: () => (/* binding */ FirmwareNotRecognized),\n/* harmony export */   FirmwareOrAppUpdateRequired: () => (/* binding */ FirmwareOrAppUpdateRequired),\n/* harmony export */   GasLessThanEstimate: () => (/* binding */ GasLessThanEstimate),\n/* harmony export */   GenuineCheckFailed: () => (/* binding */ GenuineCheckFailed),\n/* harmony export */   HardResetFail: () => (/* binding */ HardResetFail),\n/* harmony export */   HwTransportError: () => (/* binding */ HwTransportError),\n/* harmony export */   HwTransportErrorType: () => (/* binding */ HwTransportErrorType),\n/* harmony export */   InvalidAddress: () => (/* binding */ InvalidAddress),\n/* harmony export */   InvalidAddressBecauseDestinationIsAlsoSource: () => (/* binding */ InvalidAddressBecauseDestinationIsAlsoSource),\n/* harmony export */   InvalidXRPTag: () => (/* binding */ InvalidXRPTag),\n/* harmony export */   LanguageNotFound: () => (/* binding */ LanguageNotFound),\n/* harmony export */   LatestMCUInstalledError: () => (/* binding */ LatestMCUInstalledError),\n/* harmony export */   LedgerAPI4xx: () => (/* binding */ LedgerAPI4xx),\n/* harmony export */   LedgerAPI5xx: () => (/* binding */ LedgerAPI5xx),\n/* harmony export */   LedgerAPIError: () => (/* binding */ LedgerAPIError),\n/* harmony export */   LedgerAPIErrorWithMessage: () => (/* binding */ LedgerAPIErrorWithMessage),\n/* harmony export */   LedgerAPINotAvailable: () => (/* binding */ LedgerAPINotAvailable),\n/* harmony export */   LockedDeviceError: () => (/* binding */ LockedDeviceError),\n/* harmony export */   MCUNotGenuineToDashboard: () => (/* binding */ MCUNotGenuineToDashboard),\n/* harmony export */   ManagerAppAlreadyInstalledError: () => (/* binding */ ManagerAppAlreadyInstalledError),\n/* harmony export */   ManagerAppDepInstallRequired: () => (/* binding */ ManagerAppDepInstallRequired),\n/* harmony export */   ManagerAppDepUninstallRequired: () => (/* binding */ ManagerAppDepUninstallRequired),\n/* harmony export */   ManagerAppRelyOnBTCError: () => (/* binding */ ManagerAppRelyOnBTCError),\n/* harmony export */   ManagerDeviceLockedError: () => (/* binding */ ManagerDeviceLockedError),\n/* harmony export */   ManagerFirmwareNotEnoughSpaceError: () => (/* binding */ ManagerFirmwareNotEnoughSpaceError),\n/* harmony export */   ManagerNotEnoughSpaceError: () => (/* binding */ ManagerNotEnoughSpaceError),\n/* harmony export */   ManagerUninstallBTCDep: () => (/* binding */ ManagerUninstallBTCDep),\n/* harmony export */   MaxFeeTooLow: () => (/* binding */ MaxFeeTooLow),\n/* harmony export */   NetworkDown: () => (/* binding */ NetworkDown),\n/* harmony export */   NoAccessToCamera: () => (/* binding */ NoAccessToCamera),\n/* harmony export */   NoAddressesFound: () => (/* binding */ NoAddressesFound),\n/* harmony export */   NoDBPathGiven: () => (/* binding */ NoDBPathGiven),\n/* harmony export */   NotEnoughBalance: () => (/* binding */ NotEnoughBalance),\n/* harmony export */   NotEnoughBalanceBecauseDestinationNotCreated: () => (/* binding */ NotEnoughBalanceBecauseDestinationNotCreated),\n/* harmony export */   NotEnoughBalanceInParentAccount: () => (/* binding */ NotEnoughBalanceInParentAccount),\n/* harmony export */   NotEnoughBalanceToDelegate: () => (/* binding */ NotEnoughBalanceToDelegate),\n/* harmony export */   NotEnoughGas: () => (/* binding */ NotEnoughGas),\n/* harmony export */   NotEnoughSpendableBalance: () => (/* binding */ NotEnoughSpendableBalance),\n/* harmony export */   NotSupportedLegacyAddress: () => (/* binding */ NotSupportedLegacyAddress),\n/* harmony export */   OpReturnDataSizeLimit: () => (/* binding */ OpReturnDataSizeLimit),\n/* harmony export */   PairingFailed: () => (/* binding */ PairingFailed),\n/* harmony export */   PasswordIncorrectError: () => (/* binding */ PasswordIncorrectError),\n/* harmony export */   PasswordsDontMatchError: () => (/* binding */ PasswordsDontMatchError),\n/* harmony export */   PeerRemovedPairing: () => (/* binding */ PeerRemovedPairing),\n/* harmony export */   PendingOperation: () => (/* binding */ PendingOperation),\n/* harmony export */   PriorityFeeHigherThanMaxFee: () => (/* binding */ PriorityFeeHigherThanMaxFee),\n/* harmony export */   PriorityFeeTooHigh: () => (/* binding */ PriorityFeeTooHigh),\n/* harmony export */   PriorityFeeTooLow: () => (/* binding */ PriorityFeeTooLow),\n/* harmony export */   RecipientRequired: () => (/* binding */ RecipientRequired),\n/* harmony export */   RecommendSubAccountsToEmpty: () => (/* binding */ RecommendSubAccountsToEmpty),\n/* harmony export */   RecommendUndelegation: () => (/* binding */ RecommendUndelegation),\n/* harmony export */   StatusCodes: () => (/* binding */ StatusCodes),\n/* harmony export */   SyncError: () => (/* binding */ SyncError),\n/* harmony export */   TimeoutTagged: () => (/* binding */ TimeoutTagged),\n/* harmony export */   TransportError: () => (/* binding */ TransportError),\n/* harmony export */   TransportInterfaceNotAvailable: () => (/* binding */ TransportInterfaceNotAvailable),\n/* harmony export */   TransportOpenUserCancelled: () => (/* binding */ TransportOpenUserCancelled),\n/* harmony export */   TransportRaceCondition: () => (/* binding */ TransportRaceCondition),\n/* harmony export */   TransportStatusError: () => (/* binding */ TransportStatusError),\n/* harmony export */   TransportWebUSBGestureRequired: () => (/* binding */ TransportWebUSBGestureRequired),\n/* harmony export */   UnavailableTezosOriginatedAccountReceive: () => (/* binding */ UnavailableTezosOriginatedAccountReceive),\n/* harmony export */   UnavailableTezosOriginatedAccountSend: () => (/* binding */ UnavailableTezosOriginatedAccountSend),\n/* harmony export */   UnexpectedBootloader: () => (/* binding */ UnexpectedBootloader),\n/* harmony export */   UnknownMCU: () => (/* binding */ UnknownMCU),\n/* harmony export */   UpdateFetchFileFail: () => (/* binding */ UpdateFetchFileFail),\n/* harmony export */   UpdateIncorrectHash: () => (/* binding */ UpdateIncorrectHash),\n/* harmony export */   UpdateIncorrectSig: () => (/* binding */ UpdateIncorrectSig),\n/* harmony export */   UpdateYourApp: () => (/* binding */ UpdateYourApp),\n/* harmony export */   UserRefusedAddress: () => (/* binding */ UserRefusedAddress),\n/* harmony export */   UserRefusedAllowManager: () => (/* binding */ UserRefusedAllowManager),\n/* harmony export */   UserRefusedDeviceNameChange: () => (/* binding */ UserRefusedDeviceNameChange),\n/* harmony export */   UserRefusedFirmwareUpdate: () => (/* binding */ UserRefusedFirmwareUpdate),\n/* harmony export */   UserRefusedOnDevice: () => (/* binding */ UserRefusedOnDevice),\n/* harmony export */   WebsocketConnectionError: () => (/* binding */ WebsocketConnectionError),\n/* harmony export */   WebsocketConnectionFailed: () => (/* binding */ WebsocketConnectionFailed),\n/* harmony export */   WrongAppForCurrency: () => (/* binding */ WrongAppForCurrency),\n/* harmony export */   WrongDeviceForAccount: () => (/* binding */ WrongDeviceForAccount),\n/* harmony export */   addCustomErrorDeserializer: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer),\n/* harmony export */   createCustomErrorClass: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass),\n/* harmony export */   deserializeError: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.deserializeError),\n/* harmony export */   getAltStatusMessage: () => (/* binding */ getAltStatusMessage),\n/* harmony export */   serializeError: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.serializeError)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/helpers.js\");\n\n\nconst AccountNameRequiredError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountNameRequired\");\nconst AccountNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountNotSupported\");\nconst AmountRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AmountRequired\");\nconst BluetoothRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"BluetoothRequired\");\nconst BtcUnmatchedApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"BtcUnmatchedApp\");\nconst CantOpenDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CantOpenDevice\");\nconst CashAddrNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CashAddrNotSupported\");\nconst ClaimRewardsFeesWarning = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ClaimRewardsFeesWarning\");\nconst CurrencyNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CurrencyNotSupported\");\nconst DeviceAppVerifyNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceAppVerifyNotSupported\");\nconst DeviceGenuineSocketEarlyClose = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceGenuineSocketEarlyClose\");\nconst DeviceNotGenuineError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceNotGenuine\");\nconst DeviceOnDashboardExpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnDashboardExpected\");\nconst DeviceOnDashboardUnexpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnDashboardUnexpected\");\nconst DeviceInOSUExpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceInOSUExpected\");\nconst DeviceHalted = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceHalted\");\nconst DeviceNameInvalid = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceNameInvalid\");\nconst DeviceSocketFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketFail\");\nconst DeviceSocketNoBulkStatus = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketNoBulkStatus\");\nconst LockedDeviceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LockedDeviceError\");\nconst DisconnectedDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisconnectedDevice\");\nconst DisconnectedDeviceDuringOperation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisconnectedDeviceDuringOperation\");\nconst DeviceExtractOnboardingStateError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceExtractOnboardingStateError\");\nconst DeviceOnboardingStatePollingError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnboardingStatePollingError\");\nconst EnpointConfigError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"EnpointConfig\");\nconst EthAppPleaseEnableContractData = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"EthAppPleaseEnableContractData\");\nconst FeeEstimationFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeEstimationFailed\");\nconst FirmwareNotRecognized = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FirmwareNotRecognized\");\nconst HardResetFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"HardResetFail\");\nconst InvalidXRPTag = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidXRPTag\");\nconst InvalidAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidAddress\");\nconst InvalidAddressBecauseDestinationIsAlsoSource = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nconst LatestMCUInstalledError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LatestMCUInstalledError\");\nconst UnknownMCU = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnknownMCU\");\nconst LedgerAPIError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPIError\");\nconst LedgerAPIErrorWithMessage = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPIErrorWithMessage\");\nconst LedgerAPINotAvailable = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPINotAvailable\");\nconst ManagerAppAlreadyInstalledError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppAlreadyInstalled\");\nconst ManagerAppRelyOnBTCError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppRelyOnBTC\");\nconst ManagerAppDepInstallRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppDepInstallRequired\");\nconst ManagerAppDepUninstallRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppDepUninstallRequired\");\nconst ManagerDeviceLockedError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerDeviceLocked\");\nconst ManagerFirmwareNotEnoughSpaceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerFirmwareNotEnoughSpace\");\nconst ManagerNotEnoughSpaceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerNotEnoughSpace\");\nconst ManagerUninstallBTCDep = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerUninstallBTCDep\");\nconst NetworkDown = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NetworkDown\");\nconst NoAddressesFound = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoAddressesFound\");\nconst NotEnoughBalance = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalance\");\nconst NotEnoughBalanceToDelegate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceToDelegate\");\nconst NotEnoughBalanceInParentAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceInParentAccount\");\nconst NotEnoughSpendableBalance = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughSpendableBalance\");\nconst NotEnoughBalanceBecauseDestinationNotCreated = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nconst NoAccessToCamera = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoAccessToCamera\");\nconst NotEnoughGas = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughGas\");\nconst NotSupportedLegacyAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotSupportedLegacyAddress\");\nconst GasLessThanEstimate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"GasLessThanEstimate\");\nconst PriorityFeeTooLow = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeTooLow\");\nconst PriorityFeeTooHigh = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeTooHigh\");\nconst PriorityFeeHigherThanMaxFee = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeHigherThanMaxFee\");\nconst MaxFeeTooLow = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MaxFeeTooLow\");\nconst PasswordsDontMatchError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PasswordsDontMatch\");\nconst PasswordIncorrectError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PasswordIncorrect\");\nconst RecommendSubAccountsToEmpty = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecommendSubAccountsToEmpty\");\nconst RecommendUndelegation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecommendUndelegation\");\nconst TimeoutTagged = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TimeoutTagged\");\nconst UnexpectedBootloader = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnexpectedBootloader\");\nconst MCUNotGenuineToDashboard = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MCUNotGenuineToDashboard\");\nconst RecipientRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecipientRequired\");\nconst UnavailableTezosOriginatedAccountReceive = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountReceive\");\nconst UnavailableTezosOriginatedAccountSend = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountSend\");\nconst UpdateFetchFileFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateFetchFileFail\");\nconst UpdateIncorrectHash = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateIncorrectHash\");\nconst UpdateIncorrectSig = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateIncorrectSig\");\nconst UpdateYourApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateYourApp\");\nconst UserRefusedDeviceNameChange = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedDeviceNameChange\");\nconst UserRefusedAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedAddress\");\nconst UserRefusedFirmwareUpdate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedFirmwareUpdate\");\nconst UserRefusedAllowManager = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedAllowManager\");\nconst UserRefusedOnDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nconst TransportOpenUserCancelled = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportOpenUserCancelled\");\nconst TransportInterfaceNotAvailable = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportInterfaceNotAvailable\");\nconst TransportRaceCondition = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportRaceCondition\");\nconst TransportWebUSBGestureRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportWebUSBGestureRequired\");\nconst DeviceShouldStayInApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceShouldStayInApp\");\nconst WebsocketConnectionError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WebsocketConnectionError\");\nconst WebsocketConnectionFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WebsocketConnectionFailed\");\nconst WrongDeviceForAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongDeviceForAccount\");\nconst WrongAppForCurrency = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongAppForCurrency\");\nconst ETHAddressNonEIP = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ETHAddressNonEIP\");\nconst CantScanQRCode = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CantScanQRCode\");\nconst FeeNotLoaded = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeNotLoaded\");\nconst FeeRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeRequired\");\nconst FeeTooHigh = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeTooHigh\");\nconst PendingOperation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PendingOperation\");\nconst SyncError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"SyncError\");\nconst PairingFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PairingFailed\");\nconst PeerRemovedPairing = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PeerRemovedPairing\");\nconst GenuineCheckFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"GenuineCheckFailed\");\nconst LedgerAPI4xx = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPI4xx\");\nconst LedgerAPI5xx = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPI5xx\");\nconst FirmwareOrAppUpdateRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FirmwareOrAppUpdateRequired\");\n// Bitcoin family\nconst OpReturnDataSizeLimit = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"OpReturnSizeLimit\");\nconst DustLimit = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DustLimit\");\n// Language\nconst LanguageNotFound = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LanguageNotFound\");\n// db stuff, no need to translate\nconst NoDBPathGiven = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoDBPathGiven\");\nconst DBWrongPassword = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DBWrongPassword\");\nconst DBNotReset = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */ var HwTransportErrorType;\n(function(HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */ class HwTransportError extends Error {\n    constructor(type, message){\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */ class TransportError extends Error {\n    constructor(message, id){\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error().stack;\n        this.id = id;\n    }\n}\n(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer)(\"TransportError\", (e)=>new TransportError(e.message, e.id));\nconst StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102\n};\nfunction getAltStatusMessage(code) {\n    switch(code){\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */ function TransportStatusError(statusCode) {\n    const statusText = Object.keys(StatusCodes).find((k)=>StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n    const smsg = getAltStatusMessage(statusCode) || statusText;\n    const statusCodeStr = statusCode.toString(16);\n    const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n    // Maps to a LockedDeviceError\n    if (statusCode === StatusCodes.LOCKED_DEVICE) {\n        throw new LockedDeviceError(message);\n    }\n    this.name = \"TransportStatusError\";\n    this.message = message;\n    this.stack = new Error().stack;\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n}\nTransportStatusError.prototype = new Error();\n(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer)(\"TransportStatusError\", (e)=>new TransportStatusError(e.statusCode)); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/lib-es/TransportWebBLE.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/lib-es/TransportWebBLE.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/hw-transport */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js\");\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ledgerhq/devices */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_devices_ble_sendAPDU__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ledgerhq/devices/ble/sendAPDU */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/sendAPDU.js\");\n/* harmony import */ var _ledgerhq_devices_ble_receiveAPDU__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ledgerhq/devices/ble/receiveAPDU */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/receiveAPDU.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,defer,from,merge!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/Observable.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,defer,from,merge!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/observable/merge.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,defer,from,merge!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/observable/defer.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,defer,from,merge!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/_esm5/internal/operators/tap.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/_esm5/internal/operators/share.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/_esm5/internal/operators/first.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/_esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ \"(ssr)/./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js\");\n/* harmony import */ var _monitorCharacteristic__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./monitorCharacteristic */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/lib-es/monitorCharacteristic.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\n/* eslint-disable prefer-template */ \n\n\n\n\n\n\n\n\nconst requiresBluetooth = ()=>{\n    // $FlowFixMe\n    const { bluetooth } = navigator;\n    if (typeof bluetooth === \"undefined\") {\n        throw new Error(\"web bluetooth not supported\");\n    }\n    return bluetooth;\n};\nconst availability = ()=>_barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_7__.Observable.create((observer)=>{\n        const bluetooth = requiresBluetooth();\n        const onAvailabilityChanged = (e)=>{\n            observer.next(e.value);\n        };\n        bluetooth.addEventListener(\"availabilitychanged\", onAvailabilityChanged);\n        let unsubscribed = false;\n        bluetooth.getAvailability().then((available)=>{\n            if (!unsubscribed) {\n                observer.next(available);\n            }\n        });\n        return ()=>{\n            unsubscribed = true;\n            bluetooth.removeEventListener(\"availabilitychanged\", onAvailabilityChanged);\n        };\n    });\nconst transportsCache = {};\nconst requestDeviceParam = ()=>({\n        filters: (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.getBluetoothServiceUuids)().map((uuid)=>({\n                services: [\n                    uuid\n                ]\n            }))\n    });\nconst retrieveService = (device)=>__awaiter(void 0, void 0, void 0, function*() {\n        if (!device.gatt) throw new Error(\"bluetooth gatt not found\");\n        const [service] = yield device.gatt.getPrimaryServices();\n        if (!service) throw new Error(\"bluetooth service not found\");\n        const infos = (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.getInfosForServiceUuid)(service.uuid);\n        if (!infos) throw new Error(\"bluetooth service infos not found\");\n        return [\n            service,\n            infos\n        ];\n    });\nfunction open(deviceOrId, needsReconnect) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let device;\n        if (typeof deviceOrId === \"string\") {\n            if (transportsCache[deviceOrId]) {\n                (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-verbose\", \"Transport in cache, using that.\");\n                return transportsCache[deviceOrId];\n            }\n            const bluetooth = requiresBluetooth();\n            // TODO instead we should \"query\" the device by its ID\n            device = yield bluetooth.requestDevice(requestDeviceParam());\n        } else {\n            device = deviceOrId;\n        }\n        if (!device.gatt.connected) {\n            (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-verbose\", \"not connected. connecting...\");\n            yield device.gatt.connect();\n        }\n        const [service, infos] = yield retrieveService(device);\n        const { deviceModel, writeUuid, notifyUuid } = infos;\n        const [writeC, notifyC] = yield Promise.all([\n            service.getCharacteristic(writeUuid),\n            service.getCharacteristic(notifyUuid)\n        ]);\n        const notifyObservable = (0,_monitorCharacteristic__WEBPACK_IMPORTED_MODULE_6__.monitorCharacteristic)(notifyC).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.tap)((value)=>{\n            (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-frame\", \"<= \" + value.toString(\"hex\"));\n        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.share)());\n        const notif = notifyObservable.subscribe();\n        const transport = new BluetoothTransport(device, writeC, notifyObservable, deviceModel);\n        if (!device.gatt.connected) {\n            throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.DisconnectedDevice();\n        }\n        // eslint-disable-next-line require-atomic-updates\n        transportsCache[transport.id] = transport;\n        const onDisconnect = (e)=>{\n            console.log(\"onDisconnect!\", e);\n            delete transportsCache[transport.id];\n            transport.notYetDisconnected = false;\n            notif.unsubscribe();\n            device.removeEventListener(\"gattserverdisconnected\", onDisconnect);\n            (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-verbose\", `BleTransport(${transport.id}) disconnected`);\n            transport.emit(\"disconnect\", e);\n        };\n        device.addEventListener(\"gattserverdisconnected\", onDisconnect);\n        const beforeMTUTime = Date.now();\n        try {\n            yield transport.inferMTU();\n        } finally{\n            const afterMTUTime = Date.now();\n            // workaround for #279: we need to open() again if we come the first time here,\n            // to make sure we do a disconnect() after the first pairing time\n            // because of a firmware bug\n            if (afterMTUTime - beforeMTUTime < 1000) {\n                needsReconnect = false; // (optim) there is likely no new pairing done because mtu answer was fast.\n            }\n            if (needsReconnect) {\n                yield device.gatt.disconnect();\n                // necessary time for the bonding workaround\n                yield new Promise((s)=>setTimeout(s, 4000));\n            }\n        }\n        if (needsReconnect) {\n            return open(device, false);\n        }\n        return transport;\n    });\n}\n/**\n * react-native bluetooth BLE implementation\n * @example\n * import BluetoothTransport from \"@ledgerhq/hw-transport-web-ble\";\n */ class BluetoothTransport extends _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /**\n     * Scan for Ledger Bluetooth devices.\n     * On this web implementation, it only emits ONE device, the one that was selected in the UI (if any).\n     */ static listen(observer) {\n        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-verbose\", \"listen...\");\n        let unsubscribed;\n        const bluetooth = requiresBluetooth();\n        bluetooth.requestDevice(requestDeviceParam()).then((device)=>{\n            if (!unsubscribed) {\n                observer.next({\n                    type: \"add\",\n                    descriptor: device\n                });\n                observer.complete();\n            }\n        }, (error)=>{\n            observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportOpenUserCancelled(error.message));\n        });\n        function unsubscribe() {\n            unsubscribed = true;\n        }\n        return {\n            unsubscribe\n        };\n    }\n    /**\n     * open a bluetooth device.\n     */ static open(deviceOrId) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return open(deviceOrId, true);\n        });\n    }\n    constructor(device, writeCharacteristic, notifyObservable, deviceModel){\n        super();\n        this.mtuSize = 20;\n        this.notYetDisconnected = true;\n        this.write = (buffer)=>__awaiter(this, void 0, void 0, function*() {\n                (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-frame\", \"=> \" + buffer.toString(\"hex\"));\n                yield this.writeCharacteristic.writeValue(buffer);\n            });\n        this.id = device.id;\n        this.device = device;\n        this.writeCharacteristic = writeCharacteristic;\n        this.notifyObservable = notifyObservable;\n        this.deviceModel = deviceModel;\n        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-verbose\", `BleTransport(${String(this.id)}) new instance`);\n    }\n    inferMTU() {\n        return __awaiter(this, void 0, void 0, function*() {\n            let mtu = 23;\n            yield this.exchangeAtomicImpl(()=>__awaiter(this, void 0, void 0, function*() {\n                    try {\n                        mtu = (yield (0,_barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_10__.merge)(this.notifyObservable.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.first)((buffer)=>buffer.readUInt8(0) === 0x08), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.map)((buffer)=>buffer.readUInt8(5))), (0,_barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_13__.defer)(()=>(0,_barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_14__.from)(this.write(Buffer.from([\n                                0x08,\n                                0,\n                                0,\n                                0,\n                                0\n                            ])))).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.ignoreElements)())).toPromise()) + 3;\n                    } catch (e) {\n                        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-error\", \"inferMTU got \" + String(e));\n                        this.device.gatt.disconnect();\n                        throw e;\n                    }\n                }));\n            if (mtu > 23) {\n                const mtuSize = mtu - 3;\n                (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-verbose\", `BleTransport(${String(this.id)}) mtu set to ${String(mtuSize)}`);\n                this.mtuSize = mtuSize;\n            }\n            return this.mtuSize;\n        });\n    }\n    /**\n     * Exchange with the device using APDU protocol.\n     * @param apdu\n     * @returns a promise of apdu response\n     */ exchange(apdu) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const b = yield this.exchangeAtomicImpl(()=>__awaiter(this, void 0, void 0, function*() {\n                    try {\n                        const msgIn = apdu.toString(\"hex\");\n                        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"apdu\", `=> ${msgIn}`);\n                        const data = yield (0,_barrel_optimize_names_Observable_defer_from_merge_rxjs__WEBPACK_IMPORTED_MODULE_10__.merge)(this.notifyObservable.pipe(_ledgerhq_devices_ble_receiveAPDU__WEBPACK_IMPORTED_MODULE_4__.receiveAPDU), (0,_ledgerhq_devices_ble_sendAPDU__WEBPACK_IMPORTED_MODULE_3__.sendAPDU)(this.write, apdu, this.mtuSize)).toPromise();\n                        const msgOut = data.toString(\"hex\");\n                        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"apdu\", `<= ${msgOut}`);\n                        return data;\n                    } catch (e) {\n                        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-error\", \"exchange got \" + String(e));\n                        if (this.notYetDisconnected) {\n                            // in such case we will always disconnect because something is bad.\n                            this.device.gatt.disconnect();\n                        }\n                        throw e;\n                    }\n                }));\n            return b;\n        });\n    }\n    setScrambleKey() {}\n    close() {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (this.exchangeBusyPromise) {\n                yield this.exchangeBusyPromise;\n            }\n        });\n    }\n}\n_a = BluetoothTransport;\nBluetoothTransport.isSupported = ()=>Promise.resolve().then(requiresBluetooth).then(()=>true, ()=>false);\n/**\n * observe event with { available: bool, type: string }\n * (available is generic, type is specific)\n * an event is emit once and then each time it changes\n */ BluetoothTransport.observeAvailability = (observer)=>availability().subscribe(observer);\nBluetoothTransport.list = ()=>Promise.resolve([]);\n/**\n * globally disconnect a bluetooth device by its id.\n */ BluetoothTransport.disconnect = (id)=>__awaiter(void 0, void 0, void 0, function*() {\n        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_5__.log)(\"ble-verbose\", `user disconnect(${id})`);\n        const transport = transportsCache[id];\n        if (transport) {\n            transport.device.gatt.disconnect();\n        }\n    });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BluetoothTransport); //# sourceMappingURL=TransportWebBLE.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL2xpYi1lcy9UcmFuc3BvcnRXZWJCTEUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxZQUFZLFNBQUssSUFBSSxTQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDQSxJQUFJTztBQUNKLGtDQUFrQyxHQUNhO0FBQ21DO0FBQ0c7QUFDM0I7QUFDTTtBQUMzQjtBQUNpQjtBQUNrQjtBQUNSO0FBQ2hFLE1BQU1tQixvQkFBb0I7SUFDdEIsYUFBYTtJQUNiLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdDO0lBQ3RCLElBQUksT0FBT0QsY0FBYyxhQUFhO1FBQ2xDLE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtJQUNBLE9BQU9GO0FBQ1g7QUFDQSxNQUFNRyxlQUFlLElBQU1kLCtGQUFVQSxDQUFDZSxNQUFNLENBQUNDLENBQUFBO1FBQ3pDLE1BQU1MLFlBQVlEO1FBQ2xCLE1BQU1PLHdCQUF3QmhDLENBQUFBO1lBQzFCK0IsU0FBU2hDLElBQUksQ0FBQ0MsRUFBRVAsS0FBSztRQUN6QjtRQUNBaUMsVUFBVU8sZ0JBQWdCLENBQUMsdUJBQXVCRDtRQUNsRCxJQUFJRSxlQUFlO1FBQ25CUixVQUFVUyxlQUFlLEdBQUcvQixJQUFJLENBQUNnQyxDQUFBQTtZQUM3QixJQUFJLENBQUNGLGNBQWM7Z0JBQ2ZILFNBQVNoQyxJQUFJLENBQUNxQztZQUNsQjtRQUNKO1FBQ0EsT0FBTztZQUNIRixlQUFlO1lBQ2ZSLFVBQVVXLG1CQUFtQixDQUFDLHVCQUF1Qkw7UUFDekQ7SUFDSjtBQUNBLE1BQU1NLGtCQUFrQixDQUFDO0FBQ3pCLE1BQU1DLHFCQUFxQixJQUFPO1FBQzlCQyxTQUFTOUIsMkVBQXdCQSxHQUFHWSxHQUFHLENBQUNtQixDQUFBQSxPQUFTO2dCQUM3Q0MsVUFBVTtvQkFBQ0Q7aUJBQUs7WUFDcEI7SUFDSjtBQUNBLE1BQU1FLGtCQUFrQixDQUFDQyxTQUFXekQsVUFBVSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNsRSxJQUFJLENBQUN5RCxPQUFPQyxJQUFJLEVBQ1osTUFBTSxJQUFJakIsTUFBTTtRQUNwQixNQUFNLENBQUNrQixRQUFRLEdBQUcsTUFBTUYsT0FBT0MsSUFBSSxDQUFDRSxrQkFBa0I7UUFDdEQsSUFBSSxDQUFDRCxTQUNELE1BQU0sSUFBSWxCLE1BQU07UUFDcEIsTUFBTW9CLFFBQVFyQyx5RUFBc0JBLENBQUNtQyxRQUFRTCxJQUFJO1FBQ2pELElBQUksQ0FBQ08sT0FDRCxNQUFNLElBQUlwQixNQUFNO1FBQ3BCLE9BQU87WUFBQ2tCO1lBQVNFO1NBQU07SUFDM0I7QUFDQSxTQUFTQyxLQUFLQyxVQUFVLEVBQUVDLGNBQWM7SUFDcEMsT0FBT2hFLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsSUFBSXlEO1FBQ0osSUFBSSxPQUFPTSxlQUFlLFVBQVU7WUFDaEMsSUFBSVosZUFBZSxDQUFDWSxXQUFXLEVBQUU7Z0JBQzdCcEMsbURBQUdBLENBQUMsZUFBZTtnQkFDbkIsT0FBT3dCLGVBQWUsQ0FBQ1ksV0FBVztZQUN0QztZQUNBLE1BQU14QixZQUFZRDtZQUNsQixzREFBc0Q7WUFDdERtQixTQUFTLE1BQU1sQixVQUFVMEIsYUFBYSxDQUFDYjtRQUMzQyxPQUNLO1lBQ0RLLFNBQVNNO1FBQ2I7UUFDQSxJQUFJLENBQUNOLE9BQU9DLElBQUksQ0FBQ1EsU0FBUyxFQUFFO1lBQ3hCdkMsbURBQUdBLENBQUMsZUFBZTtZQUNuQixNQUFNOEIsT0FBT0MsSUFBSSxDQUFDUyxPQUFPO1FBQzdCO1FBQ0EsTUFBTSxDQUFDUixTQUFTRSxNQUFNLEdBQUcsTUFBTUwsZ0JBQWdCQztRQUMvQyxNQUFNLEVBQUVXLFdBQVcsRUFBRUMsU0FBUyxFQUFFQyxVQUFVLEVBQUUsR0FBR1Q7UUFDL0MsTUFBTSxDQUFDVSxRQUFRQyxRQUFRLEdBQUcsTUFBTWhFLFFBQVFpRSxHQUFHLENBQUM7WUFDeENkLFFBQVFlLGlCQUFpQixDQUFDTDtZQUMxQlYsUUFBUWUsaUJBQWlCLENBQUNKO1NBQzdCO1FBQ0QsTUFBTUssbUJBQW1CdEMsNkVBQXFCQSxDQUFDbUMsU0FBU0ksSUFBSSxDQUFDeEMsbURBQUdBLENBQUM5QixDQUFBQTtZQUM3RHFCLG1EQUFHQSxDQUFDLGFBQWEsUUFBUXJCLE1BQU11RSxRQUFRLENBQUM7UUFDNUMsSUFBSTdDLHFEQUFLQTtRQUNULE1BQU04QyxRQUFRSCxpQkFBaUJJLFNBQVM7UUFDeEMsTUFBTUMsWUFBWSxJQUFJQyxtQkFBbUJ4QixRQUFRYyxRQUFRSSxrQkFBa0JQO1FBQzNFLElBQUksQ0FBQ1gsT0FBT0MsSUFBSSxDQUFDUSxTQUFTLEVBQUU7WUFDeEIsTUFBTSxJQUFJN0MsZ0VBQWtCQTtRQUNoQztRQUNBLGtEQUFrRDtRQUNsRDhCLGVBQWUsQ0FBQzZCLFVBQVVFLEVBQUUsQ0FBQyxHQUFHRjtRQUNoQyxNQUFNRyxlQUFldEUsQ0FBQUE7WUFDakJ1RSxRQUFRekQsR0FBRyxDQUFDLGlCQUFpQmQ7WUFDN0IsT0FBT3NDLGVBQWUsQ0FBQzZCLFVBQVVFLEVBQUUsQ0FBQztZQUNwQ0YsVUFBVUssa0JBQWtCLEdBQUc7WUFDL0JQLE1BQU1RLFdBQVc7WUFDakI3QixPQUFPUCxtQkFBbUIsQ0FBQywwQkFBMEJpQztZQUNyRHhELG1EQUFHQSxDQUFDLGVBQWUsQ0FBQyxhQUFhLEVBQUVxRCxVQUFVRSxFQUFFLENBQUMsY0FBYyxDQUFDO1lBQy9ERixVQUFVTyxJQUFJLENBQUMsY0FBYzFFO1FBQ2pDO1FBQ0E0QyxPQUFPWCxnQkFBZ0IsQ0FBQywwQkFBMEJxQztRQUNsRCxNQUFNSyxnQkFBZ0JDLEtBQUtDLEdBQUc7UUFDOUIsSUFBSTtZQUNBLE1BQU1WLFVBQVVXLFFBQVE7UUFDNUIsU0FDUTtZQUNKLE1BQU1DLGVBQWVILEtBQUtDLEdBQUc7WUFDN0IsK0VBQStFO1lBQy9FLGlFQUFpRTtZQUNqRSw0QkFBNEI7WUFDNUIsSUFBSUUsZUFBZUosZ0JBQWdCLE1BQU07Z0JBQ3JDeEIsaUJBQWlCLE9BQU8sMkVBQTJFO1lBQ3ZHO1lBQ0EsSUFBSUEsZ0JBQWdCO2dCQUNoQixNQUFNUCxPQUFPQyxJQUFJLENBQUNtQyxVQUFVO2dCQUM1Qiw0Q0FBNEM7Z0JBQzVDLE1BQU0sSUFBSXJGLFFBQVFzRixDQUFBQSxJQUFLQyxXQUFXRCxHQUFHO1lBQ3pDO1FBQ0o7UUFDQSxJQUFJOUIsZ0JBQWdCO1lBQ2hCLE9BQU9GLEtBQUtMLFFBQVE7UUFDeEI7UUFDQSxPQUFPdUI7SUFDWDtBQUNKO0FBQ0E7Ozs7Q0FJQyxHQUNELE1BQU1DLDJCQUEyQjdELDhEQUFTQTtJQUN0Qzs7O0tBR0MsR0FDRCxPQUFPNEUsT0FBT3BELFFBQVEsRUFBRTtRQUNwQmpCLG1EQUFHQSxDQUFDLGVBQWU7UUFDbkIsSUFBSW9CO1FBQ0osTUFBTVIsWUFBWUQ7UUFDbEJDLFVBQVUwQixhQUFhLENBQUNiLHNCQUFzQm5DLElBQUksQ0FBQ3dDLENBQUFBO1lBQy9DLElBQUksQ0FBQ1YsY0FBYztnQkFDZkgsU0FBU2hDLElBQUksQ0FBQztvQkFDVnFGLE1BQU07b0JBQ05DLFlBQVl6QztnQkFDaEI7Z0JBQ0FiLFNBQVN1RCxRQUFRO1lBQ3JCO1FBQ0osR0FBR0MsQ0FBQUE7WUFDQ3hELFNBQVN3RCxLQUFLLENBQUMsSUFBSTlFLHdFQUEwQkEsQ0FBQzhFLE1BQU1DLE9BQU87UUFDL0Q7UUFDQSxTQUFTZjtZQUNMdkMsZUFBZTtRQUNuQjtRQUNBLE9BQU87WUFDSHVDO1FBQ0o7SUFDSjtJQUNBOztLQUVDLEdBQ0QsT0FBT3hCLEtBQUtDLFVBQVUsRUFBRTtRQUNwQixPQUFPL0QsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxPQUFPOEQsS0FBS0MsWUFBWTtRQUM1QjtJQUNKO0lBQ0F1QyxZQUFZN0MsTUFBTSxFQUFFOEMsbUJBQW1CLEVBQUU1QixnQkFBZ0IsRUFBRVAsV0FBVyxDQUFFO1FBQ3BFLEtBQUs7UUFDTCxJQUFJLENBQUNvQyxPQUFPLEdBQUc7UUFDZixJQUFJLENBQUNuQixrQkFBa0IsR0FBRztRQUMxQixJQUFJLENBQUNvQixLQUFLLEdBQUcsQ0FBQ0MsU0FBVzFHLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7Z0JBQ3JEMkIsbURBQUdBLENBQUMsYUFBYSxRQUFRK0UsT0FBTzdCLFFBQVEsQ0FBQztnQkFDekMsTUFBTSxJQUFJLENBQUMwQixtQkFBbUIsQ0FBQ0ksVUFBVSxDQUFDRDtZQUM5QztRQUNBLElBQUksQ0FBQ3hCLEVBQUUsR0FBR3pCLE9BQU95QixFQUFFO1FBQ25CLElBQUksQ0FBQ3pCLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUM4QyxtQkFBbUIsR0FBR0E7UUFDM0IsSUFBSSxDQUFDNUIsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ1AsV0FBVyxHQUFHQTtRQUNuQnpDLG1EQUFHQSxDQUFDLGVBQWUsQ0FBQyxhQUFhLEVBQUVpRixPQUFPLElBQUksQ0FBQzFCLEVBQUUsRUFBRSxjQUFjLENBQUM7SUFDdEU7SUFDQVMsV0FBVztRQUNQLE9BQU8zRixVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLElBQUk2RyxNQUFNO1lBQ1YsTUFBTSxJQUFJLENBQUNDLGtCQUFrQixDQUFDLElBQU05RyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO29CQUNoRSxJQUFJO3dCQUNBNkcsTUFDSSxDQUFDLE1BQU0vRSwrRkFBS0EsQ0FBQyxJQUFJLENBQUM2QyxnQkFBZ0IsQ0FBQ0MsSUFBSSxDQUFDMUMsc0RBQUtBLENBQUN3RSxDQUFBQSxTQUFVQSxPQUFPSyxTQUFTLENBQUMsT0FBTyxPQUFPNUUsb0RBQUdBLENBQUN1RSxDQUFBQSxTQUFVQSxPQUFPSyxTQUFTLENBQUMsTUFBTWxGLCtGQUFLQSxDQUFDLElBQU1FLDhGQUFJQSxDQUFDLElBQUksQ0FBQzBFLEtBQUssQ0FBQ08sT0FBT2pGLElBQUksQ0FBQztnQ0FBQztnQ0FBTTtnQ0FBRztnQ0FBRztnQ0FBRzs2QkFBRSxLQUFLNkMsSUFBSSxDQUFDM0MsK0RBQWNBLEtBQUtnRixTQUFTLEVBQUMsSUFBSztvQkFDMU8sRUFDQSxPQUFPcEcsR0FBRzt3QkFDTmMsbURBQUdBLENBQUMsYUFBYSxrQkFBa0JpRixPQUFPL0Y7d0JBQzFDLElBQUksQ0FBQzRDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDbUMsVUFBVTt3QkFDM0IsTUFBTWhGO29CQUNWO2dCQUNKO1lBQ0EsSUFBSWdHLE1BQU0sSUFBSTtnQkFDVixNQUFNTCxVQUFVSyxNQUFNO2dCQUN0QmxGLG1EQUFHQSxDQUFDLGVBQWUsQ0FBQyxhQUFhLEVBQUVpRixPQUFPLElBQUksQ0FBQzFCLEVBQUUsRUFBRSxhQUFhLEVBQUUwQixPQUFPSixTQUFTLENBQUM7Z0JBQ25GLElBQUksQ0FBQ0EsT0FBTyxHQUFHQTtZQUNuQjtZQUNBLE9BQU8sSUFBSSxDQUFDQSxPQUFPO1FBQ3ZCO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RVLFNBQVNDLElBQUksRUFBRTtRQUNYLE9BQU9uSCxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DLE1BQU1vSCxJQUFJLE1BQU0sSUFBSSxDQUFDTixrQkFBa0IsQ0FBQyxJQUFNOUcsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztvQkFDMUUsSUFBSTt3QkFDQSxNQUFNcUgsUUFBUUYsS0FBS3RDLFFBQVEsQ0FBQzt3QkFDNUJsRCxtREFBR0EsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFMEYsTUFBTSxDQUFDO3dCQUN6QixNQUFNQyxPQUFPLE1BQU14RiwrRkFBS0EsQ0FBQyxJQUFJLENBQUM2QyxnQkFBZ0IsQ0FBQ0MsSUFBSSxDQUFDbEQsMEVBQVdBLEdBQUdELHdFQUFRQSxDQUFDLElBQUksQ0FBQ2dGLEtBQUssRUFBRVUsTUFBTSxJQUFJLENBQUNYLE9BQU8sR0FBR1MsU0FBUzt3QkFDckgsTUFBTU0sU0FBU0QsS0FBS3pDLFFBQVEsQ0FBQzt3QkFDN0JsRCxtREFBR0EsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFNEYsT0FBTyxDQUFDO3dCQUMxQixPQUFPRDtvQkFDWCxFQUNBLE9BQU96RyxHQUFHO3dCQUNOYyxtREFBR0EsQ0FBQyxhQUFhLGtCQUFrQmlGLE9BQU8vRjt3QkFDMUMsSUFBSSxJQUFJLENBQUN3RSxrQkFBa0IsRUFBRTs0QkFDekIsbUVBQW1FOzRCQUNuRSxJQUFJLENBQUM1QixNQUFNLENBQUNDLElBQUksQ0FBQ21DLFVBQVU7d0JBQy9CO3dCQUNBLE1BQU1oRjtvQkFDVjtnQkFDSjtZQUNBLE9BQU91RztRQUNYO0lBQ0o7SUFDQUksaUJBQWlCLENBQUU7SUFDbkJDLFFBQVE7UUFDSixPQUFPekgsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUNuQyxJQUFJLElBQUksQ0FBQzBILG1CQUFtQixFQUFFO2dCQUMxQixNQUFNLElBQUksQ0FBQ0EsbUJBQW1CO1lBQ2xDO1FBQ0o7SUFDSjtBQUNKO0FBQ0F2RyxLQUFLOEQ7QUFDTEEsbUJBQW1CMEMsV0FBVyxHQUFHLElBQU1uSCxRQUFRRCxPQUFPLEdBQ2pEVSxJQUFJLENBQUNxQixtQkFDTHJCLElBQUksQ0FBQyxJQUFNLE1BQU0sSUFBTTtBQUM1Qjs7OztDQUlDLEdBQ0RnRSxtQkFBbUIyQyxtQkFBbUIsR0FBRyxDQUFDaEYsV0FBYUYsZUFBZXFDLFNBQVMsQ0FBQ25DO0FBQ2hGcUMsbUJBQW1CNEMsSUFBSSxHQUFHLElBQU1ySCxRQUFRRCxPQUFPLENBQUMsRUFBRTtBQUNsRDs7Q0FFQyxHQUNEMEUsbUJBQW1CWSxVQUFVLEdBQUcsQ0FBQ1gsS0FBT2xGLFVBQVUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDdEUyQixtREFBR0EsQ0FBQyxlQUFlLENBQUMsZ0JBQWdCLEVBQUV1RCxHQUFHLENBQUMsQ0FBQztRQUMzQyxNQUFNRixZQUFZN0IsZUFBZSxDQUFDK0IsR0FBRztRQUNyQyxJQUFJRixXQUFXO1lBQ1hBLFVBQVV2QixNQUFNLENBQUNDLElBQUksQ0FBQ21DLFVBQVU7UUFDcEM7SUFDSjtBQUNBLGlFQUFlWixrQkFBa0JBLEVBQUMsQ0FDbEMsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9saWItZXMvVHJhbnNwb3J0V2ViQkxFLmpzPzUyODkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX2E7XG4vKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItdGVtcGxhdGUgKi9cbmltcG9ydCBUcmFuc3BvcnQgZnJvbSBcIkBsZWRnZXJocS9ody10cmFuc3BvcnRcIjtcbmltcG9ydCB7IERpc2Nvbm5lY3RlZERldmljZSwgVHJhbnNwb3J0T3BlblVzZXJDYW5jZWxsZWQgfSBmcm9tIFwiQGxlZGdlcmhxL2Vycm9yc1wiO1xuaW1wb3J0IHsgZ2V0Qmx1ZXRvb3RoU2VydmljZVV1aWRzLCBnZXRJbmZvc0ZvclNlcnZpY2VVdWlkIH0gZnJvbSBcIkBsZWRnZXJocS9kZXZpY2VzXCI7XG5pbXBvcnQgeyBzZW5kQVBEVSB9IGZyb20gXCJAbGVkZ2VyaHEvZGV2aWNlcy9ibGUvc2VuZEFQRFVcIjtcbmltcG9ydCB7IHJlY2VpdmVBUERVIH0gZnJvbSBcIkBsZWRnZXJocS9kZXZpY2VzL2JsZS9yZWNlaXZlQVBEVVwiO1xuaW1wb3J0IHsgbG9nIH0gZnJvbSBcIkBsZWRnZXJocS9sb2dzXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBkZWZlciwgbWVyZ2UsIGZyb20gfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgc2hhcmUsIGlnbm9yZUVsZW1lbnRzLCBmaXJzdCwgbWFwLCB0YXAgfSBmcm9tIFwicnhqcy9vcGVyYXRvcnNcIjtcbmltcG9ydCB7IG1vbml0b3JDaGFyYWN0ZXJpc3RpYyB9IGZyb20gXCIuL21vbml0b3JDaGFyYWN0ZXJpc3RpY1wiO1xuY29uc3QgcmVxdWlyZXNCbHVldG9vdGggPSAoKSA9PiB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGNvbnN0IHsgYmx1ZXRvb3RoIH0gPSBuYXZpZ2F0b3I7XG4gICAgaWYgKHR5cGVvZiBibHVldG9vdGggPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwid2ViIGJsdWV0b290aCBub3Qgc3VwcG9ydGVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gYmx1ZXRvb3RoO1xufTtcbmNvbnN0IGF2YWlsYWJpbGl0eSA9ICgpID0+IE9ic2VydmFibGUuY3JlYXRlKG9ic2VydmVyID0+IHtcbiAgICBjb25zdCBibHVldG9vdGggPSByZXF1aXJlc0JsdWV0b290aCgpO1xuICAgIGNvbnN0IG9uQXZhaWxhYmlsaXR5Q2hhbmdlZCA9IGUgPT4ge1xuICAgICAgICBvYnNlcnZlci5uZXh0KGUudmFsdWUpO1xuICAgIH07XG4gICAgYmx1ZXRvb3RoLmFkZEV2ZW50TGlzdGVuZXIoXCJhdmFpbGFiaWxpdHljaGFuZ2VkXCIsIG9uQXZhaWxhYmlsaXR5Q2hhbmdlZCk7XG4gICAgbGV0IHVuc3Vic2NyaWJlZCA9IGZhbHNlO1xuICAgIGJsdWV0b290aC5nZXRBdmFpbGFiaWxpdHkoKS50aGVuKGF2YWlsYWJsZSA9PiB7XG4gICAgICAgIGlmICghdW5zdWJzY3JpYmVkKSB7XG4gICAgICAgICAgICBvYnNlcnZlci5uZXh0KGF2YWlsYWJsZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICB1bnN1YnNjcmliZWQgPSB0cnVlO1xuICAgICAgICBibHVldG9vdGgucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImF2YWlsYWJpbGl0eWNoYW5nZWRcIiwgb25BdmFpbGFiaWxpdHlDaGFuZ2VkKTtcbiAgICB9O1xufSk7XG5jb25zdCB0cmFuc3BvcnRzQ2FjaGUgPSB7fTtcbmNvbnN0IHJlcXVlc3REZXZpY2VQYXJhbSA9ICgpID0+ICh7XG4gICAgZmlsdGVyczogZ2V0Qmx1ZXRvb3RoU2VydmljZVV1aWRzKCkubWFwKHV1aWQgPT4gKHtcbiAgICAgICAgc2VydmljZXM6IFt1dWlkXSxcbiAgICB9KSksXG59KTtcbmNvbnN0IHJldHJpZXZlU2VydmljZSA9IChkZXZpY2UpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIGlmICghZGV2aWNlLmdhdHQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImJsdWV0b290aCBnYXR0IG5vdCBmb3VuZFwiKTtcbiAgICBjb25zdCBbc2VydmljZV0gPSB5aWVsZCBkZXZpY2UuZ2F0dC5nZXRQcmltYXJ5U2VydmljZXMoKTtcbiAgICBpZiAoIXNlcnZpY2UpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImJsdWV0b290aCBzZXJ2aWNlIG5vdCBmb3VuZFwiKTtcbiAgICBjb25zdCBpbmZvcyA9IGdldEluZm9zRm9yU2VydmljZVV1aWQoc2VydmljZS51dWlkKTtcbiAgICBpZiAoIWluZm9zKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJibHVldG9vdGggc2VydmljZSBpbmZvcyBub3QgZm91bmRcIik7XG4gICAgcmV0dXJuIFtzZXJ2aWNlLCBpbmZvc107XG59KTtcbmZ1bmN0aW9uIG9wZW4oZGV2aWNlT3JJZCwgbmVlZHNSZWNvbm5lY3QpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBsZXQgZGV2aWNlO1xuICAgICAgICBpZiAodHlwZW9mIGRldmljZU9ySWQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGlmICh0cmFuc3BvcnRzQ2FjaGVbZGV2aWNlT3JJZF0pIHtcbiAgICAgICAgICAgICAgICBsb2coXCJibGUtdmVyYm9zZVwiLCBcIlRyYW5zcG9ydCBpbiBjYWNoZSwgdXNpbmcgdGhhdC5cIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zcG9ydHNDYWNoZVtkZXZpY2VPcklkXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGJsdWV0b290aCA9IHJlcXVpcmVzQmx1ZXRvb3RoKCk7XG4gICAgICAgICAgICAvLyBUT0RPIGluc3RlYWQgd2Ugc2hvdWxkIFwicXVlcnlcIiB0aGUgZGV2aWNlIGJ5IGl0cyBJRFxuICAgICAgICAgICAgZGV2aWNlID0geWllbGQgYmx1ZXRvb3RoLnJlcXVlc3REZXZpY2UocmVxdWVzdERldmljZVBhcmFtKCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZGV2aWNlID0gZGV2aWNlT3JJZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWRldmljZS5nYXR0LmNvbm5lY3RlZCkge1xuICAgICAgICAgICAgbG9nKFwiYmxlLXZlcmJvc2VcIiwgXCJub3QgY29ubmVjdGVkLiBjb25uZWN0aW5nLi4uXCIpO1xuICAgICAgICAgICAgeWllbGQgZGV2aWNlLmdhdHQuY29ubmVjdCgpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFtzZXJ2aWNlLCBpbmZvc10gPSB5aWVsZCByZXRyaWV2ZVNlcnZpY2UoZGV2aWNlKTtcbiAgICAgICAgY29uc3QgeyBkZXZpY2VNb2RlbCwgd3JpdGVVdWlkLCBub3RpZnlVdWlkIH0gPSBpbmZvcztcbiAgICAgICAgY29uc3QgW3dyaXRlQywgbm90aWZ5Q10gPSB5aWVsZCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICBzZXJ2aWNlLmdldENoYXJhY3RlcmlzdGljKHdyaXRlVXVpZCksXG4gICAgICAgICAgICBzZXJ2aWNlLmdldENoYXJhY3RlcmlzdGljKG5vdGlmeVV1aWQpLFxuICAgICAgICBdKTtcbiAgICAgICAgY29uc3Qgbm90aWZ5T2JzZXJ2YWJsZSA9IG1vbml0b3JDaGFyYWN0ZXJpc3RpYyhub3RpZnlDKS5waXBlKHRhcCh2YWx1ZSA9PiB7XG4gICAgICAgICAgICBsb2coXCJibGUtZnJhbWVcIiwgXCI8PSBcIiArIHZhbHVlLnRvU3RyaW5nKFwiaGV4XCIpKTtcbiAgICAgICAgfSksIHNoYXJlKCkpO1xuICAgICAgICBjb25zdCBub3RpZiA9IG5vdGlmeU9ic2VydmFibGUuc3Vic2NyaWJlKCk7XG4gICAgICAgIGNvbnN0IHRyYW5zcG9ydCA9IG5ldyBCbHVldG9vdGhUcmFuc3BvcnQoZGV2aWNlLCB3cml0ZUMsIG5vdGlmeU9ic2VydmFibGUsIGRldmljZU1vZGVsKTtcbiAgICAgICAgaWYgKCFkZXZpY2UuZ2F0dC5jb25uZWN0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBEaXNjb25uZWN0ZWREZXZpY2UoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVxdWlyZS1hdG9taWMtdXBkYXRlc1xuICAgICAgICB0cmFuc3BvcnRzQ2FjaGVbdHJhbnNwb3J0LmlkXSA9IHRyYW5zcG9ydDtcbiAgICAgICAgY29uc3Qgb25EaXNjb25uZWN0ID0gZSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIm9uRGlzY29ubmVjdCFcIiwgZSk7XG4gICAgICAgICAgICBkZWxldGUgdHJhbnNwb3J0c0NhY2hlW3RyYW5zcG9ydC5pZF07XG4gICAgICAgICAgICB0cmFuc3BvcnQubm90WWV0RGlzY29ubmVjdGVkID0gZmFsc2U7XG4gICAgICAgICAgICBub3RpZi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgZGV2aWNlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJnYXR0c2VydmVyZGlzY29ubmVjdGVkXCIsIG9uRGlzY29ubmVjdCk7XG4gICAgICAgICAgICBsb2coXCJibGUtdmVyYm9zZVwiLCBgQmxlVHJhbnNwb3J0KCR7dHJhbnNwb3J0LmlkfSkgZGlzY29ubmVjdGVkYCk7XG4gICAgICAgICAgICB0cmFuc3BvcnQuZW1pdChcImRpc2Nvbm5lY3RcIiwgZSk7XG4gICAgICAgIH07XG4gICAgICAgIGRldmljZS5hZGRFdmVudExpc3RlbmVyKFwiZ2F0dHNlcnZlcmRpc2Nvbm5lY3RlZFwiLCBvbkRpc2Nvbm5lY3QpO1xuICAgICAgICBjb25zdCBiZWZvcmVNVFVUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHlpZWxkIHRyYW5zcG9ydC5pbmZlck1UVSgpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgY29uc3QgYWZ0ZXJNVFVUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIC8vIHdvcmthcm91bmQgZm9yICMyNzk6IHdlIG5lZWQgdG8gb3BlbigpIGFnYWluIGlmIHdlIGNvbWUgdGhlIGZpcnN0IHRpbWUgaGVyZSxcbiAgICAgICAgICAgIC8vIHRvIG1ha2Ugc3VyZSB3ZSBkbyBhIGRpc2Nvbm5lY3QoKSBhZnRlciB0aGUgZmlyc3QgcGFpcmluZyB0aW1lXG4gICAgICAgICAgICAvLyBiZWNhdXNlIG9mIGEgZmlybXdhcmUgYnVnXG4gICAgICAgICAgICBpZiAoYWZ0ZXJNVFVUaW1lIC0gYmVmb3JlTVRVVGltZSA8IDEwMDApIHtcbiAgICAgICAgICAgICAgICBuZWVkc1JlY29ubmVjdCA9IGZhbHNlOyAvLyAob3B0aW0pIHRoZXJlIGlzIGxpa2VseSBubyBuZXcgcGFpcmluZyBkb25lIGJlY2F1c2UgbXR1IGFuc3dlciB3YXMgZmFzdC5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChuZWVkc1JlY29ubmVjdCkge1xuICAgICAgICAgICAgICAgIHlpZWxkIGRldmljZS5nYXR0LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICAvLyBuZWNlc3NhcnkgdGltZSBmb3IgdGhlIGJvbmRpbmcgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgIHlpZWxkIG5ldyBQcm9taXNlKHMgPT4gc2V0VGltZW91dChzLCA0MDAwKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5lZWRzUmVjb25uZWN0KSB7XG4gICAgICAgICAgICByZXR1cm4gb3BlbihkZXZpY2UsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJhbnNwb3J0O1xuICAgIH0pO1xufVxuLyoqXG4gKiByZWFjdC1uYXRpdmUgYmx1ZXRvb3RoIEJMRSBpbXBsZW1lbnRhdGlvblxuICogQGV4YW1wbGVcbiAqIGltcG9ydCBCbHVldG9vdGhUcmFuc3BvcnQgZnJvbSBcIkBsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZVwiO1xuICovXG5jbGFzcyBCbHVldG9vdGhUcmFuc3BvcnQgZXh0ZW5kcyBUcmFuc3BvcnQge1xuICAgIC8qKlxuICAgICAqIFNjYW4gZm9yIExlZGdlciBCbHVldG9vdGggZGV2aWNlcy5cbiAgICAgKiBPbiB0aGlzIHdlYiBpbXBsZW1lbnRhdGlvbiwgaXQgb25seSBlbWl0cyBPTkUgZGV2aWNlLCB0aGUgb25lIHRoYXQgd2FzIHNlbGVjdGVkIGluIHRoZSBVSSAoaWYgYW55KS5cbiAgICAgKi9cbiAgICBzdGF0aWMgbGlzdGVuKG9ic2VydmVyKSB7XG4gICAgICAgIGxvZyhcImJsZS12ZXJib3NlXCIsIFwibGlzdGVuLi4uXCIpO1xuICAgICAgICBsZXQgdW5zdWJzY3JpYmVkO1xuICAgICAgICBjb25zdCBibHVldG9vdGggPSByZXF1aXJlc0JsdWV0b290aCgpO1xuICAgICAgICBibHVldG9vdGgucmVxdWVzdERldmljZShyZXF1ZXN0RGV2aWNlUGFyYW0oKSkudGhlbihkZXZpY2UgPT4ge1xuICAgICAgICAgICAgaWYgKCF1bnN1YnNjcmliZWQpIHtcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0KHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJhZGRcIixcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRvcjogZGV2aWNlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgICAgIG9ic2VydmVyLmVycm9yKG5ldyBUcmFuc3BvcnRPcGVuVXNlckNhbmNlbGxlZChlcnJvci5tZXNzYWdlKSk7XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgICAgICAgIHVuc3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHVuc3Vic2NyaWJlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBvcGVuIGEgYmx1ZXRvb3RoIGRldmljZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgb3BlbihkZXZpY2VPcklkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gb3BlbihkZXZpY2VPcklkLCB0cnVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGRldmljZSwgd3JpdGVDaGFyYWN0ZXJpc3RpYywgbm90aWZ5T2JzZXJ2YWJsZSwgZGV2aWNlTW9kZWwpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5tdHVTaXplID0gMjA7XG4gICAgICAgIHRoaXMubm90WWV0RGlzY29ubmVjdGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy53cml0ZSA9IChidWZmZXIpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGxvZyhcImJsZS1mcmFtZVwiLCBcIj0+IFwiICsgYnVmZmVyLnRvU3RyaW5nKFwiaGV4XCIpKTtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMud3JpdGVDaGFyYWN0ZXJpc3RpYy53cml0ZVZhbHVlKGJ1ZmZlcik7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmlkID0gZGV2aWNlLmlkO1xuICAgICAgICB0aGlzLmRldmljZSA9IGRldmljZTtcbiAgICAgICAgdGhpcy53cml0ZUNoYXJhY3RlcmlzdGljID0gd3JpdGVDaGFyYWN0ZXJpc3RpYztcbiAgICAgICAgdGhpcy5ub3RpZnlPYnNlcnZhYmxlID0gbm90aWZ5T2JzZXJ2YWJsZTtcbiAgICAgICAgdGhpcy5kZXZpY2VNb2RlbCA9IGRldmljZU1vZGVsO1xuICAgICAgICBsb2coXCJibGUtdmVyYm9zZVwiLCBgQmxlVHJhbnNwb3J0KCR7U3RyaW5nKHRoaXMuaWQpfSkgbmV3IGluc3RhbmNlYCk7XG4gICAgfVxuICAgIGluZmVyTVRVKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgbGV0IG10dSA9IDIzO1xuICAgICAgICAgICAgeWllbGQgdGhpcy5leGNoYW5nZUF0b21pY0ltcGwoKCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIG10dSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAoeWllbGQgbWVyZ2UodGhpcy5ub3RpZnlPYnNlcnZhYmxlLnBpcGUoZmlyc3QoYnVmZmVyID0+IGJ1ZmZlci5yZWFkVUludDgoMCkgPT09IDB4MDgpLCBtYXAoYnVmZmVyID0+IGJ1ZmZlci5yZWFkVUludDgoNSkpKSwgZGVmZXIoKCkgPT4gZnJvbSh0aGlzLndyaXRlKEJ1ZmZlci5mcm9tKFsweDA4LCAwLCAwLCAwLCAwXSkpKSkucGlwZShpZ25vcmVFbGVtZW50cygpKSkudG9Qcm9taXNlKCkpICsgMztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9nKFwiYmxlLWVycm9yXCIsIFwiaW5mZXJNVFUgZ290IFwiICsgU3RyaW5nKGUpKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZXZpY2UuZ2F0dC5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgaWYgKG10dSA+IDIzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbXR1U2l6ZSA9IG10dSAtIDM7XG4gICAgICAgICAgICAgICAgbG9nKFwiYmxlLXZlcmJvc2VcIiwgYEJsZVRyYW5zcG9ydCgke1N0cmluZyh0aGlzLmlkKX0pIG10dSBzZXQgdG8gJHtTdHJpbmcobXR1U2l6ZSl9YCk7XG4gICAgICAgICAgICAgICAgdGhpcy5tdHVTaXplID0gbXR1U2l6ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLm10dVNpemU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFeGNoYW5nZSB3aXRoIHRoZSBkZXZpY2UgdXNpbmcgQVBEVSBwcm90b2NvbC5cbiAgICAgKiBAcGFyYW0gYXBkdVxuICAgICAqIEByZXR1cm5zIGEgcHJvbWlzZSBvZiBhcGR1IHJlc3BvbnNlXG4gICAgICovXG4gICAgZXhjaGFuZ2UoYXBkdSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgYiA9IHlpZWxkIHRoaXMuZXhjaGFuZ2VBdG9taWNJbXBsKCgpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtc2dJbiA9IGFwZHUudG9TdHJpbmcoXCJoZXhcIik7XG4gICAgICAgICAgICAgICAgICAgIGxvZyhcImFwZHVcIiwgYD0+ICR7bXNnSW59YCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCBtZXJnZSh0aGlzLm5vdGlmeU9ic2VydmFibGUucGlwZShyZWNlaXZlQVBEVSksIHNlbmRBUERVKHRoaXMud3JpdGUsIGFwZHUsIHRoaXMubXR1U2l6ZSkpLnRvUHJvbWlzZSgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtc2dPdXQgPSBkYXRhLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgICAgICAgICAgICAgICAgICBsb2coXCJhcGR1XCIsIGA8PSAke21zZ091dH1gKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZyhcImJsZS1lcnJvclwiLCBcImV4Y2hhbmdlIGdvdCBcIiArIFN0cmluZyhlKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm5vdFlldERpc2Nvbm5lY3RlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaW4gc3VjaCBjYXNlIHdlIHdpbGwgYWx3YXlzIGRpc2Nvbm5lY3QgYmVjYXVzZSBzb21ldGhpbmcgaXMgYmFkLlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kZXZpY2UuZ2F0dC5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXR1cm4gYjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNldFNjcmFtYmxlS2V5KCkgeyB9XG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5leGNoYW5nZUJ1c3lQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5leGNoYW5nZUJ1c3lQcm9taXNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5fYSA9IEJsdWV0b290aFRyYW5zcG9ydDtcbkJsdWV0b290aFRyYW5zcG9ydC5pc1N1cHBvcnRlZCA9ICgpID0+IFByb21pc2UucmVzb2x2ZSgpXG4gICAgLnRoZW4ocmVxdWlyZXNCbHVldG9vdGgpXG4gICAgLnRoZW4oKCkgPT4gdHJ1ZSwgKCkgPT4gZmFsc2UpO1xuLyoqXG4gKiBvYnNlcnZlIGV2ZW50IHdpdGggeyBhdmFpbGFibGU6IGJvb2wsIHR5cGU6IHN0cmluZyB9XG4gKiAoYXZhaWxhYmxlIGlzIGdlbmVyaWMsIHR5cGUgaXMgc3BlY2lmaWMpXG4gKiBhbiBldmVudCBpcyBlbWl0IG9uY2UgYW5kIHRoZW4gZWFjaCB0aW1lIGl0IGNoYW5nZXNcbiAqL1xuQmx1ZXRvb3RoVHJhbnNwb3J0Lm9ic2VydmVBdmFpbGFiaWxpdHkgPSAob2JzZXJ2ZXIpID0+IGF2YWlsYWJpbGl0eSgpLnN1YnNjcmliZShvYnNlcnZlcik7XG5CbHVldG9vdGhUcmFuc3BvcnQubGlzdCA9ICgpID0+IFByb21pc2UucmVzb2x2ZShbXSk7XG4vKipcbiAqIGdsb2JhbGx5IGRpc2Nvbm5lY3QgYSBibHVldG9vdGggZGV2aWNlIGJ5IGl0cyBpZC5cbiAqL1xuQmx1ZXRvb3RoVHJhbnNwb3J0LmRpc2Nvbm5lY3QgPSAoaWQpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIGxvZyhcImJsZS12ZXJib3NlXCIsIGB1c2VyIGRpc2Nvbm5lY3QoJHtpZH0pYCk7XG4gICAgY29uc3QgdHJhbnNwb3J0ID0gdHJhbnNwb3J0c0NhY2hlW2lkXTtcbiAgICBpZiAodHJhbnNwb3J0KSB7XG4gICAgICAgIHRyYW5zcG9ydC5kZXZpY2UuZ2F0dC5kaXNjb25uZWN0KCk7XG4gICAgfVxufSk7XG5leHBvcnQgZGVmYXVsdCBCbHVldG9vdGhUcmFuc3BvcnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFuc3BvcnRXZWJCTEUuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIl9hIiwiVHJhbnNwb3J0IiwiRGlzY29ubmVjdGVkRGV2aWNlIiwiVHJhbnNwb3J0T3BlblVzZXJDYW5jZWxsZWQiLCJnZXRCbHVldG9vdGhTZXJ2aWNlVXVpZHMiLCJnZXRJbmZvc0ZvclNlcnZpY2VVdWlkIiwic2VuZEFQRFUiLCJyZWNlaXZlQVBEVSIsImxvZyIsIk9ic2VydmFibGUiLCJkZWZlciIsIm1lcmdlIiwiZnJvbSIsInNoYXJlIiwiaWdub3JlRWxlbWVudHMiLCJmaXJzdCIsIm1hcCIsInRhcCIsIm1vbml0b3JDaGFyYWN0ZXJpc3RpYyIsInJlcXVpcmVzQmx1ZXRvb3RoIiwiYmx1ZXRvb3RoIiwibmF2aWdhdG9yIiwiRXJyb3IiLCJhdmFpbGFiaWxpdHkiLCJjcmVhdGUiLCJvYnNlcnZlciIsIm9uQXZhaWxhYmlsaXR5Q2hhbmdlZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ1bnN1YnNjcmliZWQiLCJnZXRBdmFpbGFiaWxpdHkiLCJhdmFpbGFibGUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwidHJhbnNwb3J0c0NhY2hlIiwicmVxdWVzdERldmljZVBhcmFtIiwiZmlsdGVycyIsInV1aWQiLCJzZXJ2aWNlcyIsInJldHJpZXZlU2VydmljZSIsImRldmljZSIsImdhdHQiLCJzZXJ2aWNlIiwiZ2V0UHJpbWFyeVNlcnZpY2VzIiwiaW5mb3MiLCJvcGVuIiwiZGV2aWNlT3JJZCIsIm5lZWRzUmVjb25uZWN0IiwicmVxdWVzdERldmljZSIsImNvbm5lY3RlZCIsImNvbm5lY3QiLCJkZXZpY2VNb2RlbCIsIndyaXRlVXVpZCIsIm5vdGlmeVV1aWQiLCJ3cml0ZUMiLCJub3RpZnlDIiwiYWxsIiwiZ2V0Q2hhcmFjdGVyaXN0aWMiLCJub3RpZnlPYnNlcnZhYmxlIiwicGlwZSIsInRvU3RyaW5nIiwibm90aWYiLCJzdWJzY3JpYmUiLCJ0cmFuc3BvcnQiLCJCbHVldG9vdGhUcmFuc3BvcnQiLCJpZCIsIm9uRGlzY29ubmVjdCIsImNvbnNvbGUiLCJub3RZZXREaXNjb25uZWN0ZWQiLCJ1bnN1YnNjcmliZSIsImVtaXQiLCJiZWZvcmVNVFVUaW1lIiwiRGF0ZSIsIm5vdyIsImluZmVyTVRVIiwiYWZ0ZXJNVFVUaW1lIiwiZGlzY29ubmVjdCIsInMiLCJzZXRUaW1lb3V0IiwibGlzdGVuIiwidHlwZSIsImRlc2NyaXB0b3IiLCJjb21wbGV0ZSIsImVycm9yIiwibWVzc2FnZSIsImNvbnN0cnVjdG9yIiwid3JpdGVDaGFyYWN0ZXJpc3RpYyIsIm10dVNpemUiLCJ3cml0ZSIsImJ1ZmZlciIsIndyaXRlVmFsdWUiLCJTdHJpbmciLCJtdHUiLCJleGNoYW5nZUF0b21pY0ltcGwiLCJyZWFkVUludDgiLCJCdWZmZXIiLCJ0b1Byb21pc2UiLCJleGNoYW5nZSIsImFwZHUiLCJiIiwibXNnSW4iLCJkYXRhIiwibXNnT3V0Iiwic2V0U2NyYW1ibGVLZXkiLCJjbG9zZSIsImV4Y2hhbmdlQnVzeVByb21pc2UiLCJpc1N1cHBvcnRlZCIsIm9ic2VydmVBdmFpbGFiaWxpdHkiLCJsaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/lib-es/TransportWebBLE.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/lib-es/monitorCharacteristic.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/lib-es/monitorCharacteristic.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   monitorCharacteristic: () => (/* binding */ monitorCharacteristic)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_Observable_rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=Observable!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/Observable.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\n\n\nconst monitorCharacteristic = (characteristic)=>_barrel_optimize_names_Observable_rxjs__WEBPACK_IMPORTED_MODULE_1__.Observable.create((o)=>{\n        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_0__.log)(\"ble-verbose\", \"start monitor \" + characteristic.uuid);\n        function onCharacteristicValueChanged(event) {\n            const characteristic = event.target;\n            if (characteristic.value) {\n                o.next(Buffer.from(characteristic.value.buffer));\n            }\n        }\n        characteristic.startNotifications().then(()=>{\n            characteristic.addEventListener(\"characteristicvaluechanged\", onCharacteristicValueChanged);\n        });\n        return ()=>{\n            (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_0__.log)(\"ble-verbose\", \"end monitor \" + characteristic.uuid);\n            characteristic.stopNotifications();\n        };\n    }); //# sourceMappingURL=monitorCharacteristic.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL2xpYi1lcy9tb25pdG9yQ2hhcmFjdGVyaXN0aWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ0c7QUFDOUIsTUFBTUUsd0JBQXdCLENBQUNDLGlCQUFtQkgsOEVBQVVBLENBQUNJLE1BQU0sQ0FBQ0MsQ0FBQUE7UUFDdkVKLG1EQUFHQSxDQUFDLGVBQWUsbUJBQW1CRSxlQUFlRyxJQUFJO1FBQ3pELFNBQVNDLDZCQUE2QkMsS0FBSztZQUN2QyxNQUFNTCxpQkFBaUJLLE1BQU1DLE1BQU07WUFDbkMsSUFBSU4sZUFBZU8sS0FBSyxFQUFFO2dCQUN0QkwsRUFBRU0sSUFBSSxDQUFDQyxPQUFPQyxJQUFJLENBQUNWLGVBQWVPLEtBQUssQ0FBQ0ksTUFBTTtZQUNsRDtRQUNKO1FBQ0FYLGVBQWVZLGtCQUFrQixHQUFHQyxJQUFJLENBQUM7WUFDckNiLGVBQWVjLGdCQUFnQixDQUFDLDhCQUE4QlY7UUFDbEU7UUFDQSxPQUFPO1lBQ0hOLG1EQUFHQSxDQUFDLGVBQWUsaUJBQWlCRSxlQUFlRyxJQUFJO1lBQ3ZESCxlQUFlZSxpQkFBaUI7UUFDcEM7SUFDSixHQUFHLENBQ0gsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9saWItZXMvbW9uaXRvckNoYXJhY3RlcmlzdGljLmpzPzA1YTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBsb2cgfSBmcm9tIFwiQGxlZGdlcmhxL2xvZ3NcIjtcbmV4cG9ydCBjb25zdCBtb25pdG9yQ2hhcmFjdGVyaXN0aWMgPSAoY2hhcmFjdGVyaXN0aWMpID0+IE9ic2VydmFibGUuY3JlYXRlKG8gPT4ge1xuICAgIGxvZyhcImJsZS12ZXJib3NlXCIsIFwic3RhcnQgbW9uaXRvciBcIiArIGNoYXJhY3RlcmlzdGljLnV1aWQpO1xuICAgIGZ1bmN0aW9uIG9uQ2hhcmFjdGVyaXN0aWNWYWx1ZUNoYW5nZWQoZXZlbnQpIHtcbiAgICAgICAgY29uc3QgY2hhcmFjdGVyaXN0aWMgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIGlmIChjaGFyYWN0ZXJpc3RpYy52YWx1ZSkge1xuICAgICAgICAgICAgby5uZXh0KEJ1ZmZlci5mcm9tKGNoYXJhY3RlcmlzdGljLnZhbHVlLmJ1ZmZlcikpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNoYXJhY3RlcmlzdGljLnN0YXJ0Tm90aWZpY2F0aW9ucygpLnRoZW4oKCkgPT4ge1xuICAgICAgICBjaGFyYWN0ZXJpc3RpYy5hZGRFdmVudExpc3RlbmVyKFwiY2hhcmFjdGVyaXN0aWN2YWx1ZWNoYW5nZWRcIiwgb25DaGFyYWN0ZXJpc3RpY1ZhbHVlQ2hhbmdlZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgbG9nKFwiYmxlLXZlcmJvc2VcIiwgXCJlbmQgbW9uaXRvciBcIiArIGNoYXJhY3RlcmlzdGljLnV1aWQpO1xuICAgICAgICBjaGFyYWN0ZXJpc3RpYy5zdG9wTm90aWZpY2F0aW9ucygpO1xuICAgIH07XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vbml0b3JDaGFyYWN0ZXJpc3RpYy5qcy5tYXAiXSwibmFtZXMiOlsiT2JzZXJ2YWJsZSIsImxvZyIsIm1vbml0b3JDaGFyYWN0ZXJpc3RpYyIsImNoYXJhY3RlcmlzdGljIiwiY3JlYXRlIiwibyIsInV1aWQiLCJvbkNoYXJhY3RlcmlzdGljVmFsdWVDaGFuZ2VkIiwiZXZlbnQiLCJ0YXJnZXQiLCJ2YWx1ZSIsIm5leHQiLCJCdWZmZXIiLCJmcm9tIiwiYnVmZmVyIiwic3RhcnROb3RpZmljYXRpb25zIiwidGhlbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdG9wTm90aWZpY2F0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/lib-es/monitorCharacteristic.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/receiveAPDU.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/receiveAPDU.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   receiveAPDU: () => (/* binding */ receiveAPDU)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/index.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_ReplaySubject_takeUntil_rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,ReplaySubject,takeUntil!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/Observable.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_ReplaySubject_takeUntil_rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,ReplaySubject,takeUntil!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/ReplaySubject.js\");\n/* harmony import */ var _barrel_optimize_names_Observable_ReplaySubject_takeUntil_rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Observable,ReplaySubject,takeUntil!=!rxjs */ \"(ssr)/__barrel_optimize__?names=Observable,ReplaySubject,takeUntil!=!./node_modules/rxjs/_esm5/index.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\n\n\n\nconst TagId = 0x05;\n/**\n * Parses a raw stream coming from a BLE communication into an APDU response\n *\n * @param rawStream An observable containing the raw stream as emitted buffers\n * @param options Optional options containing:\n *   - context An optional context object for log/tracing strategy\n * @returns An observable containing the APDU response as one emitted buffer\n */ const receiveAPDU = (rawStream, { context } = {})=>new _barrel_optimize_names_Observable_ReplaySubject_takeUntil_rxjs__WEBPACK_IMPORTED_MODULE_2__.Observable((o)=>{\n        let notifiedIndex = 0;\n        let notifiedDataLength = 0;\n        let notifiedData = Buffer.alloc(0);\n        const subscriptionCleaner = new _barrel_optimize_names_Observable_ReplaySubject_takeUntil_rxjs__WEBPACK_IMPORTED_MODULE_3__.ReplaySubject();\n        // The raw stream is listened/subscribed to until a full message (that can be made of several frames) is received\n        rawStream.pipe((0,_barrel_optimize_names_Observable_ReplaySubject_takeUntil_rxjs__WEBPACK_IMPORTED_MODULE_4__.takeUntil)(subscriptionCleaner)).subscribe({\n            complete: ()=>{\n                o.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.DisconnectedDevice());\n            },\n            error: (error)=>{\n                (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_1__.trace)({\n                    type: \"ble-error\",\n                    message: `Error in receiveAPDU: ${error}`,\n                    data: {\n                        error\n                    },\n                    context\n                });\n                o.error(error);\n            },\n            next: (value)=>{\n                // Silences emitted errors in next\n                if (value instanceof Error) {\n                    (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_1__.trace)({\n                        type: \"ble-error\",\n                        message: `Error emitted to receiveAPDU next: ${value}`,\n                        data: {\n                            error: value\n                        },\n                        context\n                    });\n                    return;\n                }\n                const tag = value.readUInt8(0);\n                const chunkIndex = value.readUInt16BE(1);\n                // `slice` and not `subarray`: this is not a Node Buffer, but probably only a Uint8Array.\n                let chunkData = value.slice(3);\n                if (tag !== TagId) {\n                    o.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(\"Invalid tag \" + tag.toString(16), \"InvalidTag\"));\n                    return;\n                }\n                // A chunk was probably missed\n                if (notifiedIndex !== chunkIndex) {\n                    o.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(`BLE: Invalid sequence number. discontinued chunk. Received ${chunkIndex} but expected ${notifiedIndex}`, \"InvalidSequence\"));\n                    return;\n                }\n                // The total length of the response is located on the next 2 bytes on the 1st chunk\n                if (chunkIndex === 0) {\n                    notifiedDataLength = chunkData.readUInt16BE(0);\n                    // `slice` and not `subarray`: this is not a Node Buffer, but probably only a Uint8Array.\n                    chunkData = chunkData.slice(2);\n                }\n                notifiedIndex++;\n                // The cost of creating a new buffer for each received chunk is low because the response is often contained in 1 chunk.\n                // Allocating `notifiedData` buffer with the received total length and mutating it will probably not improve any performance.\n                notifiedData = Buffer.concat([\n                    notifiedData,\n                    chunkData\n                ]);\n                if (notifiedData.length > notifiedDataLength) {\n                    o.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_0__.TransportError(`BLE: received too much data. discontinued chunk. Received ${notifiedData.length} but expected ${notifiedDataLength}`, \"BLETooMuchData\"));\n                    return;\n                }\n                if (notifiedData.length === notifiedDataLength) {\n                    o.next(notifiedData);\n                    o.complete();\n                    // Tries to unsubscribe from the raw stream as soon as we complete the parent observer\n                    subscriptionCleaner.next();\n                }\n            }\n        });\n        return ()=>{\n            subscriptionCleaner.next();\n        };\n    }); //# sourceMappingURL=receiveAPDU.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvZGV2aWNlcy9saWItZXMvYmxlL3JlY2VpdmVBUERVLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRTtBQUNWO0FBQ3JCO0FBQ3ZDLE1BQU1NLFFBQVE7QUFDZDs7Ozs7OztDQU9DLEdBQ00sTUFBTUMsY0FBYyxDQUFDQyxXQUFXLEVBQUVDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFLLElBQUlQLHNHQUFVQSxDQUFDUSxDQUFBQTtRQUN2RSxJQUFJQyxnQkFBZ0I7UUFDcEIsSUFBSUMscUJBQXFCO1FBQ3pCLElBQUlDLGVBQWVDLE9BQU9DLEtBQUssQ0FBQztRQUNoQyxNQUFNQyxzQkFBc0IsSUFBSWIseUdBQWFBO1FBQzdDLGlIQUFpSDtRQUNqSEssVUFBVVMsSUFBSSxDQUFDYix5R0FBU0EsQ0FBQ1ksc0JBQXNCRSxTQUFTLENBQUM7WUFDckRDLFVBQVU7Z0JBQ05ULEVBQUVVLEtBQUssQ0FBQyxJQUFJbkIsZ0VBQWtCQTtZQUNsQztZQUNBbUIsT0FBT0EsQ0FBQUE7Z0JBQ0hmLHFEQUFLQSxDQUFDO29CQUNGZ0IsTUFBTTtvQkFDTkMsU0FBUyxDQUFDLHNCQUFzQixFQUFFRixNQUFNLENBQUM7b0JBQ3pDRyxNQUFNO3dCQUFFSDtvQkFBTTtvQkFDZFg7Z0JBQ0o7Z0JBQ0FDLEVBQUVVLEtBQUssQ0FBQ0E7WUFDWjtZQUNBSSxNQUFNQyxDQUFBQTtnQkFDRixrQ0FBa0M7Z0JBQ2xDLElBQUlBLGlCQUFpQkMsT0FBTztvQkFDeEJyQixxREFBS0EsQ0FBQzt3QkFDRmdCLE1BQU07d0JBQ05DLFNBQVMsQ0FBQyxtQ0FBbUMsRUFBRUcsTUFBTSxDQUFDO3dCQUN0REYsTUFBTTs0QkFBRUgsT0FBT0s7d0JBQU07d0JBQ3JCaEI7b0JBQ0o7b0JBQ0E7Z0JBQ0o7Z0JBQ0EsTUFBTWtCLE1BQU1GLE1BQU1HLFNBQVMsQ0FBQztnQkFDNUIsTUFBTUMsYUFBYUosTUFBTUssWUFBWSxDQUFDO2dCQUN0Qyx5RkFBeUY7Z0JBQ3pGLElBQUlDLFlBQVlOLE1BQU1PLEtBQUssQ0FBQztnQkFDNUIsSUFBSUwsUUFBUXJCLE9BQU87b0JBQ2ZJLEVBQUVVLEtBQUssQ0FBQyxJQUFJcEIsNERBQWNBLENBQUMsaUJBQWlCMkIsSUFBSU0sUUFBUSxDQUFDLEtBQUs7b0JBQzlEO2dCQUNKO2dCQUNBLDhCQUE4QjtnQkFDOUIsSUFBSXRCLGtCQUFrQmtCLFlBQVk7b0JBQzlCbkIsRUFBRVUsS0FBSyxDQUFDLElBQUlwQiw0REFBY0EsQ0FBQyxDQUFDLDJEQUEyRCxFQUFFNkIsV0FBVyxjQUFjLEVBQUVsQixjQUFjLENBQUMsRUFBRTtvQkFDckk7Z0JBQ0o7Z0JBQ0EsbUZBQW1GO2dCQUNuRixJQUFJa0IsZUFBZSxHQUFHO29CQUNsQmpCLHFCQUFxQm1CLFVBQVVELFlBQVksQ0FBQztvQkFDNUMseUZBQXlGO29CQUN6RkMsWUFBWUEsVUFBVUMsS0FBSyxDQUFDO2dCQUNoQztnQkFDQXJCO2dCQUNBLHVIQUF1SDtnQkFDdkgsNkhBQTZIO2dCQUM3SEUsZUFBZUMsT0FBT29CLE1BQU0sQ0FBQztvQkFBQ3JCO29CQUFja0I7aUJBQVU7Z0JBQ3RELElBQUlsQixhQUFhc0IsTUFBTSxHQUFHdkIsb0JBQW9CO29CQUMxQ0YsRUFBRVUsS0FBSyxDQUFDLElBQUlwQiw0REFBY0EsQ0FBQyxDQUFDLDBEQUEwRCxFQUFFYSxhQUFhc0IsTUFBTSxDQUFDLGNBQWMsRUFBRXZCLG1CQUFtQixDQUFDLEVBQUU7b0JBQ2xKO2dCQUNKO2dCQUNBLElBQUlDLGFBQWFzQixNQUFNLEtBQUt2QixvQkFBb0I7b0JBQzVDRixFQUFFYyxJQUFJLENBQUNYO29CQUNQSCxFQUFFUyxRQUFRO29CQUNWLHNGQUFzRjtvQkFDdEZILG9CQUFvQlEsSUFBSTtnQkFDNUI7WUFDSjtRQUNKO1FBQ0EsT0FBTztZQUNIUixvQkFBb0JRLElBQUk7UUFDNUI7SUFDSixHQUFHLENBQ0gsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2RldmljZXMvbGliLWVzL2JsZS9yZWNlaXZlQVBEVS5qcz9lMTJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zcG9ydEVycm9yLCBEaXNjb25uZWN0ZWREZXZpY2UgfSBmcm9tIFwiQGxlZGdlcmhxL2Vycm9yc1wiO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgUmVwbGF5U3ViamVjdCwgdGFrZVVudGlsIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IHRyYWNlIH0gZnJvbSBcIkBsZWRnZXJocS9sb2dzXCI7XG5jb25zdCBUYWdJZCA9IDB4MDU7XG4vKipcbiAqIFBhcnNlcyBhIHJhdyBzdHJlYW0gY29taW5nIGZyb20gYSBCTEUgY29tbXVuaWNhdGlvbiBpbnRvIGFuIEFQRFUgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0gcmF3U3RyZWFtIEFuIG9ic2VydmFibGUgY29udGFpbmluZyB0aGUgcmF3IHN0cmVhbSBhcyBlbWl0dGVkIGJ1ZmZlcnNcbiAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIG9wdGlvbnMgY29udGFpbmluZzpcbiAqICAgLSBjb250ZXh0IEFuIG9wdGlvbmFsIGNvbnRleHQgb2JqZWN0IGZvciBsb2cvdHJhY2luZyBzdHJhdGVneVxuICogQHJldHVybnMgQW4gb2JzZXJ2YWJsZSBjb250YWluaW5nIHRoZSBBUERVIHJlc3BvbnNlIGFzIG9uZSBlbWl0dGVkIGJ1ZmZlclxuICovXG5leHBvcnQgY29uc3QgcmVjZWl2ZUFQRFUgPSAocmF3U3RyZWFtLCB7IGNvbnRleHQgfSA9IHt9KSA9PiBuZXcgT2JzZXJ2YWJsZShvID0+IHtcbiAgICBsZXQgbm90aWZpZWRJbmRleCA9IDA7XG4gICAgbGV0IG5vdGlmaWVkRGF0YUxlbmd0aCA9IDA7XG4gICAgbGV0IG5vdGlmaWVkRGF0YSA9IEJ1ZmZlci5hbGxvYygwKTtcbiAgICBjb25zdCBzdWJzY3JpcHRpb25DbGVhbmVyID0gbmV3IFJlcGxheVN1YmplY3QoKTtcbiAgICAvLyBUaGUgcmF3IHN0cmVhbSBpcyBsaXN0ZW5lZC9zdWJzY3JpYmVkIHRvIHVudGlsIGEgZnVsbCBtZXNzYWdlICh0aGF0IGNhbiBiZSBtYWRlIG9mIHNldmVyYWwgZnJhbWVzKSBpcyByZWNlaXZlZFxuICAgIHJhd1N0cmVhbS5waXBlKHRha2VVbnRpbChzdWJzY3JpcHRpb25DbGVhbmVyKSkuc3Vic2NyaWJlKHtcbiAgICAgICAgY29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgIG8uZXJyb3IobmV3IERpc2Nvbm5lY3RlZERldmljZSgpKTtcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3I6IGVycm9yID0+IHtcbiAgICAgICAgICAgIHRyYWNlKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJsZS1lcnJvclwiLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGBFcnJvciBpbiByZWNlaXZlQVBEVTogJHtlcnJvcn1gLFxuICAgICAgICAgICAgICAgIGRhdGE6IHsgZXJyb3IgfSxcbiAgICAgICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBvLmVycm9yKGVycm9yKTtcbiAgICAgICAgfSxcbiAgICAgICAgbmV4dDogdmFsdWUgPT4ge1xuICAgICAgICAgICAgLy8gU2lsZW5jZXMgZW1pdHRlZCBlcnJvcnMgaW4gbmV4dFxuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0cmFjZSh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYmxlLWVycm9yXCIsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGBFcnJvciBlbWl0dGVkIHRvIHJlY2VpdmVBUERVIG5leHQ6ICR7dmFsdWV9YCxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBlcnJvcjogdmFsdWUgfSxcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0YWcgPSB2YWx1ZS5yZWFkVUludDgoMCk7XG4gICAgICAgICAgICBjb25zdCBjaHVua0luZGV4ID0gdmFsdWUucmVhZFVJbnQxNkJFKDEpO1xuICAgICAgICAgICAgLy8gYHNsaWNlYCBhbmQgbm90IGBzdWJhcnJheWA6IHRoaXMgaXMgbm90IGEgTm9kZSBCdWZmZXIsIGJ1dCBwcm9iYWJseSBvbmx5IGEgVWludDhBcnJheS5cbiAgICAgICAgICAgIGxldCBjaHVua0RhdGEgPSB2YWx1ZS5zbGljZSgzKTtcbiAgICAgICAgICAgIGlmICh0YWcgIT09IFRhZ0lkKSB7XG4gICAgICAgICAgICAgICAgby5lcnJvcihuZXcgVHJhbnNwb3J0RXJyb3IoXCJJbnZhbGlkIHRhZyBcIiArIHRhZy50b1N0cmluZygxNiksIFwiSW52YWxpZFRhZ1wiKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQSBjaHVuayB3YXMgcHJvYmFibHkgbWlzc2VkXG4gICAgICAgICAgICBpZiAobm90aWZpZWRJbmRleCAhPT0gY2h1bmtJbmRleCkge1xuICAgICAgICAgICAgICAgIG8uZXJyb3IobmV3IFRyYW5zcG9ydEVycm9yKGBCTEU6IEludmFsaWQgc2VxdWVuY2UgbnVtYmVyLiBkaXNjb250aW51ZWQgY2h1bmsuIFJlY2VpdmVkICR7Y2h1bmtJbmRleH0gYnV0IGV4cGVjdGVkICR7bm90aWZpZWRJbmRleH1gLCBcIkludmFsaWRTZXF1ZW5jZVwiKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVGhlIHRvdGFsIGxlbmd0aCBvZiB0aGUgcmVzcG9uc2UgaXMgbG9jYXRlZCBvbiB0aGUgbmV4dCAyIGJ5dGVzIG9uIHRoZSAxc3QgY2h1bmtcbiAgICAgICAgICAgIGlmIChjaHVua0luZGV4ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgbm90aWZpZWREYXRhTGVuZ3RoID0gY2h1bmtEYXRhLnJlYWRVSW50MTZCRSgwKTtcbiAgICAgICAgICAgICAgICAvLyBgc2xpY2VgIGFuZCBub3QgYHN1YmFycmF5YDogdGhpcyBpcyBub3QgYSBOb2RlIEJ1ZmZlciwgYnV0IHByb2JhYmx5IG9ubHkgYSBVaW50OEFycmF5LlxuICAgICAgICAgICAgICAgIGNodW5rRGF0YSA9IGNodW5rRGF0YS5zbGljZSgyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5vdGlmaWVkSW5kZXgrKztcbiAgICAgICAgICAgIC8vIFRoZSBjb3N0IG9mIGNyZWF0aW5nIGEgbmV3IGJ1ZmZlciBmb3IgZWFjaCByZWNlaXZlZCBjaHVuayBpcyBsb3cgYmVjYXVzZSB0aGUgcmVzcG9uc2UgaXMgb2Z0ZW4gY29udGFpbmVkIGluIDEgY2h1bmsuXG4gICAgICAgICAgICAvLyBBbGxvY2F0aW5nIGBub3RpZmllZERhdGFgIGJ1ZmZlciB3aXRoIHRoZSByZWNlaXZlZCB0b3RhbCBsZW5ndGggYW5kIG11dGF0aW5nIGl0IHdpbGwgcHJvYmFibHkgbm90IGltcHJvdmUgYW55IHBlcmZvcm1hbmNlLlxuICAgICAgICAgICAgbm90aWZpZWREYXRhID0gQnVmZmVyLmNvbmNhdChbbm90aWZpZWREYXRhLCBjaHVua0RhdGFdKTtcbiAgICAgICAgICAgIGlmIChub3RpZmllZERhdGEubGVuZ3RoID4gbm90aWZpZWREYXRhTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgby5lcnJvcihuZXcgVHJhbnNwb3J0RXJyb3IoYEJMRTogcmVjZWl2ZWQgdG9vIG11Y2ggZGF0YS4gZGlzY29udGludWVkIGNodW5rLiBSZWNlaXZlZCAke25vdGlmaWVkRGF0YS5sZW5ndGh9IGJ1dCBleHBlY3RlZCAke25vdGlmaWVkRGF0YUxlbmd0aH1gLCBcIkJMRVRvb011Y2hEYXRhXCIpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm90aWZpZWREYXRhLmxlbmd0aCA9PT0gbm90aWZpZWREYXRhTGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgby5uZXh0KG5vdGlmaWVkRGF0YSk7XG4gICAgICAgICAgICAgICAgby5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIC8vIFRyaWVzIHRvIHVuc3Vic2NyaWJlIGZyb20gdGhlIHJhdyBzdHJlYW0gYXMgc29vbiBhcyB3ZSBjb21wbGV0ZSB0aGUgcGFyZW50IG9ic2VydmVyXG4gICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uQ2xlYW5lci5uZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgc3Vic2NyaXB0aW9uQ2xlYW5lci5uZXh0KCk7XG4gICAgfTtcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVjZWl2ZUFQRFUuanMubWFwIl0sIm5hbWVzIjpbIlRyYW5zcG9ydEVycm9yIiwiRGlzY29ubmVjdGVkRGV2aWNlIiwiT2JzZXJ2YWJsZSIsIlJlcGxheVN1YmplY3QiLCJ0YWtlVW50aWwiLCJ0cmFjZSIsIlRhZ0lkIiwicmVjZWl2ZUFQRFUiLCJyYXdTdHJlYW0iLCJjb250ZXh0IiwibyIsIm5vdGlmaWVkSW5kZXgiLCJub3RpZmllZERhdGFMZW5ndGgiLCJub3RpZmllZERhdGEiLCJCdWZmZXIiLCJhbGxvYyIsInN1YnNjcmlwdGlvbkNsZWFuZXIiLCJwaXBlIiwic3Vic2NyaWJlIiwiY29tcGxldGUiLCJlcnJvciIsInR5cGUiLCJtZXNzYWdlIiwiZGF0YSIsIm5leHQiLCJ2YWx1ZSIsIkVycm9yIiwidGFnIiwicmVhZFVJbnQ4IiwiY2h1bmtJbmRleCIsInJlYWRVSW50MTZCRSIsImNodW5rRGF0YSIsInNsaWNlIiwidG9TdHJpbmciLCJjb25jYXQiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/receiveAPDU.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/sendAPDU.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/sendAPDU.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendAPDU: () => (/* binding */ sendAPDU)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_Observable_rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=Observable!=!rxjs */ \"(ssr)/./node_modules/rxjs/_esm5/internal/Observable.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nconst TagId = 0x05;\n/**\n * Creates a list of chunked buffer from one buffer\n *\n * If this is using a Node buffer: the chunked buffers reference to the same memory as the original buffer.\n * If this is using a Uint8Array: each part of the original buffer is copied into the chunked buffers\n *\n * @param buffer a Node Buffer, or a Uint8Array\n * @param sizeForIndex A function that takes an index (on the buffer) and returns the size of the chunk at that index\n * @returns a list of chunked buffers\n */ function createChunkedBuffers(buffer, sizeForIndex) {\n    const chunks = [];\n    for(let i = 0, size = sizeForIndex(0); i < buffer.length; i += size, size = sizeForIndex(i)){\n        // If this is a Node buffer: this chunked buffer points to the same memory but with cropped starting and ending indices\n        // `slice` and not `subarray`: this might not be a Node Buffer, but probably only a Uint8Array.\n        chunks.push(buffer.slice(i, i + size));\n    }\n    return chunks;\n}\n/**\n * Sends an APDU by encoding it into chunks and sending the chunks using the given `write` function\n *\n * @param write The function to send each chunk to the device\n * @param apdu\n * @param mtuSize The negotiated maximum size of the data to be sent in one chunk\n * @param options Optional options containing:\n *   - context An optional context object for log/tracing strategy\n * @returns An observable that will only emit if an error occurred, otherwise it will complete\n */ const sendAPDU = (write, apdu, mtuSize, { context } = {})=>{\n    // Prepares the data to be sent in chunks, by adding a header to chunked of the APDU\n    // The first chunk will contain the total length of the APDU, which reduces the size of the data written in the first chunk.\n    // The total length of the APDU is encoded in 2 bytes (so 5 bytes for the header with the tag id and the chunk index).\n    const chunks = createChunkedBuffers(apdu, (i)=>mtuSize - (i === 0 ? 5 : 3)).map((buffer, i)=>{\n        const head = Buffer.alloc(i === 0 ? 5 : 3);\n        head.writeUInt8(TagId, 0);\n        // Index of the chunk as the 2 next bytes\n        head.writeUInt16BE(i, 1);\n        // The total length of the APDU is written on the first chunk\n        if (i === 0) {\n            head.writeUInt16BE(apdu.length, 3);\n        }\n        // No 0-padding is needed\n        return Buffer.concat([\n            head,\n            buffer\n        ]);\n    });\n    return new _barrel_optimize_names_Observable_rxjs__WEBPACK_IMPORTED_MODULE_1__.Observable((o)=>{\n        let terminated = false;\n        function main() {\n            return __awaiter(this, void 0, void 0, function*() {\n                for (const chunk of chunks){\n                    if (terminated) return;\n                    yield write(chunk);\n                }\n            });\n        }\n        main().then(()=>{\n            terminated = true;\n            o.complete();\n        }, (error)=>{\n            terminated = true;\n            (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_0__.trace)({\n                type: \"ble-error\",\n                message: `sendAPDU failure: ${error}`,\n                data: {\n                    error\n                },\n                context\n            });\n            o.error(error);\n        });\n        const unsubscribe = ()=>{\n            if (!terminated) {\n                (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_0__.trace)({\n                    type: \"ble-error\",\n                    message: \"sendAPDU interruption\",\n                    context\n                });\n                terminated = true;\n            }\n        };\n        return unsubscribe;\n    });\n}; //# sourceMappingURL=sendAPDU.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/ble/sendAPDU.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeviceModelId: () => (/* binding */ DeviceModelId),\n/* harmony export */   IICCID: () => (/* binding */ IICCID),\n/* harmony export */   IIGenericHID: () => (/* binding */ IIGenericHID),\n/* harmony export */   IIKeyboardHID: () => (/* binding */ IIKeyboardHID),\n/* harmony export */   IIU2F: () => (/* binding */ IIU2F),\n/* harmony export */   IIWebUSB: () => (/* binding */ IIWebUSB),\n/* harmony export */   getBluetoothServiceUuids: () => (/* binding */ getBluetoothServiceUuids),\n/* harmony export */   getDeviceModel: () => (/* binding */ getDeviceModel),\n/* harmony export */   getInfosForServiceUuid: () => (/* binding */ getInfosForServiceUuid),\n/* harmony export */   identifyProductName: () => (/* binding */ identifyProductName),\n/* harmony export */   identifyTargetId: () => (/* binding */ identifyTargetId),\n/* harmony export */   identifyUSBProductId: () => (/* binding */ identifyUSBProductId),\n/* harmony export */   ledgerUSBVendorId: () => (/* binding */ ledgerUSBVendorId)\n/* harmony export */ });\n/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/index.js\");\n/* harmony import */ var semver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(semver__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */ const IIGenericHID = 0x01;\nconst IIKeyboardHID = 0x02;\nconst IIU2F = 0x04;\nconst IICCID = 0x08;\nconst IIWebUSB = 0x10;\nvar DeviceModelId;\n(function(DeviceModelId) {\n    /** Ledger Blue */ DeviceModelId[\"blue\"] = \"blue\";\n    /** Ledger Nano S */ DeviceModelId[\"nanoS\"] = \"nanoS\";\n    /** Ledger Nano S Plus */ DeviceModelId[\"nanoSP\"] = \"nanoSP\";\n    /** Ledger Nano X */ DeviceModelId[\"nanoX\"] = \"nanoX\";\n    /** Ledger Stax */ DeviceModelId[\"stax\"] = \"stax\";\n    /** Ledger Flex (\"europa\" is the internal name) */ DeviceModelId[\"europa\"] = \"europa\";\n})(DeviceModelId || (DeviceModelId = {}));\nconst devices = {\n    [DeviceModelId.blue]: {\n        id: DeviceModelId.blue,\n        productName: \"Ledger\\xa0Blue\",\n        productIdMM: 0x00,\n        legacyUsbProductId: 0x0000,\n        usbOnly: true,\n        memorySize: 480 * 1024,\n        masks: [\n            0x31000000,\n            0x31010000\n        ],\n        getBlockSize: (_firwareVersion)=>4 * 1024\n    },\n    [DeviceModelId.nanoS]: {\n        id: DeviceModelId.nanoS,\n        productName: \"Ledger\\xa0Nano\\xa0S\",\n        productIdMM: 0x10,\n        legacyUsbProductId: 0x0001,\n        usbOnly: true,\n        memorySize: 320 * 1024,\n        masks: [\n            0x31100000\n        ],\n        getBlockSize: (firmwareVersion)=>{\n            var _a;\n            return semver__WEBPACK_IMPORTED_MODULE_0___default().lt((_a = semver__WEBPACK_IMPORTED_MODULE_0___default().coerce(firmwareVersion)) !== null && _a !== void 0 ? _a : \"\", \"2.0.0\") ? 4 * 1024 : 2 * 1024;\n        }\n    },\n    [DeviceModelId.nanoX]: {\n        id: DeviceModelId.nanoX,\n        productName: \"Ledger\\xa0Nano\\xa0X\",\n        productIdMM: 0x40,\n        legacyUsbProductId: 0x0004,\n        usbOnly: false,\n        memorySize: 2 * 1024 * 1024,\n        masks: [\n            0x33000000\n        ],\n        getBlockSize: (_firwareVersion)=>4 * 1024,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\"\n            }\n        ]\n    },\n    [DeviceModelId.nanoSP]: {\n        id: DeviceModelId.nanoSP,\n        productName: \"Ledger Nano S Plus\",\n        productIdMM: 0x50,\n        legacyUsbProductId: 0x0005,\n        usbOnly: true,\n        memorySize: 1533 * 1024,\n        masks: [\n            0x33100000\n        ],\n        getBlockSize: (_firmwareVersion)=>32\n    },\n    [DeviceModelId.stax]: {\n        id: DeviceModelId.stax,\n        productName: \"Ledger\\xa0Stax\",\n        productIdMM: 0x60,\n        legacyUsbProductId: 0x0006,\n        usbOnly: false,\n        memorySize: 1533 * 1024,\n        masks: [\n            0x33200000\n        ],\n        getBlockSize: (_firmwareVersion)=>32,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\"\n            }\n        ]\n    },\n    [DeviceModelId.europa]: {\n        id: DeviceModelId.europa,\n        productName: \"Ledger\\xa0Flex\",\n        productIdMM: 0x70,\n        legacyUsbProductId: 0x0007,\n        usbOnly: false,\n        memorySize: 1533 * 1024,\n        masks: [\n            0x33300000\n        ],\n        getBlockSize: (_firmwareVersion)=>32,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-3004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-3004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-3004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-3004-0003-4c6564676572\"\n            }\n        ]\n    }\n};\nconst productMap = {\n    Blue: DeviceModelId.blue,\n    \"Nano S\": DeviceModelId.nanoS,\n    \"Nano S Plus\": DeviceModelId.nanoSP,\n    \"Nano X\": DeviceModelId.nanoX,\n    Stax: DeviceModelId.stax,\n    Europa: DeviceModelId.europa\n};\nconst devicesList = Object.values(devices);\n/**\n *\n */ const ledgerUSBVendorId = 0x2c97;\n/**\n *\n */ const getDeviceModel = (id)=>{\n    const info = devices[id];\n    if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n    return info;\n};\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */ const identifyTargetId = (targetId)=>{\n    const deviceModel = devicesList.find(({ masks })=>masks.find((mask)=>(targetId & 0xffff0000) === mask));\n    return deviceModel;\n};\n/**\n * From a given USB product id, return the deviceModel associated to it.\n *\n * The mapping from the product id is only based on the 2 most significant bytes.\n * For example, Stax is defined with a product id of 0x60ii, a product id 0x6011 would be mapped to it.\n */ const identifyUSBProductId = (usbProductId)=>{\n    const legacy = devicesList.find((d)=>d.legacyUsbProductId === usbProductId);\n    if (legacy) return legacy;\n    const mm = usbProductId >> 8;\n    const deviceModel = devicesList.find((d)=>d.productIdMM === mm);\n    return deviceModel;\n};\nconst identifyProductName = (productName)=>{\n    const deviceModel = devicesList.find((d)=>d.id === productMap[productName]);\n    return deviceModel;\n};\nconst bluetoothServices = [];\nconst serviceUuidToInfos = {};\nfor(const id in devices){\n    const deviceModel = devices[id];\n    const { bluetoothSpec } = deviceModel;\n    if (bluetoothSpec) {\n        for(let i = 0; i < bluetoothSpec.length; i++){\n            const spec = bluetoothSpec[i];\n            bluetoothServices.push(spec.serviceUuid);\n            serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = Object.assign({\n                deviceModel\n            }, spec);\n        }\n    }\n}\n/**\n *\n */ const getBluetoothServiceUuids = ()=>bluetoothServices;\n/**\n *\n */ const getInfosForServiceUuid = (uuid)=>serviceUuidToInfos[uuid.toLowerCase()]; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/devices/lib-es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/helpers.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/helpers.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addCustomErrorDeserializer: () => (/* binding */ addCustomErrorDeserializer),\n/* harmony export */   createCustomErrorClass: () => (/* binding */ createCustomErrorClass),\n/* harmony export */   deserializeError: () => (/* binding */ deserializeError),\n/* harmony export */   serializeError: () => (/* binding */ serializeError)\n/* harmony export */ });\n/* eslint-disable no-continue */ /* eslint-disable no-unused-vars */ /* eslint-disable no-param-reassign */ /* eslint-disable no-prototype-builtins */ const errorClasses = {};\nconst deserializers = {};\nconst addCustomErrorDeserializer = (name, deserializer)=>{\n    deserializers[name] = deserializer;\n};\nconst createCustomErrorClass = (name)=>{\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options){\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for(const k in fields){\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nconst deserializeError = (object)=>{\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        } catch (e) {\n        // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            } else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for(const prop in object){\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                } catch (e) {\n                // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        } else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nconst serializeError = (value)=>{\n    if (!value) return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)){\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n} //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountAwaitingSendPendingOperations: () => (/* binding */ AccountAwaitingSendPendingOperations),\n/* harmony export */   AccountNameRequiredError: () => (/* binding */ AccountNameRequiredError),\n/* harmony export */   AccountNotSupported: () => (/* binding */ AccountNotSupported),\n/* harmony export */   AmountRequired: () => (/* binding */ AmountRequired),\n/* harmony export */   BluetoothRequired: () => (/* binding */ BluetoothRequired),\n/* harmony export */   BtcUnmatchedApp: () => (/* binding */ BtcUnmatchedApp),\n/* harmony export */   CantOpenDevice: () => (/* binding */ CantOpenDevice),\n/* harmony export */   CantScanQRCode: () => (/* binding */ CantScanQRCode),\n/* harmony export */   CashAddrNotSupported: () => (/* binding */ CashAddrNotSupported),\n/* harmony export */   ClaimRewardsFeesWarning: () => (/* binding */ ClaimRewardsFeesWarning),\n/* harmony export */   CurrencyNotSupported: () => (/* binding */ CurrencyNotSupported),\n/* harmony export */   DBNotReset: () => (/* binding */ DBNotReset),\n/* harmony export */   DBWrongPassword: () => (/* binding */ DBWrongPassword),\n/* harmony export */   DeviceAppVerifyNotSupported: () => (/* binding */ DeviceAppVerifyNotSupported),\n/* harmony export */   DeviceExtractOnboardingStateError: () => (/* binding */ DeviceExtractOnboardingStateError),\n/* harmony export */   DeviceGenuineSocketEarlyClose: () => (/* binding */ DeviceGenuineSocketEarlyClose),\n/* harmony export */   DeviceHalted: () => (/* binding */ DeviceHalted),\n/* harmony export */   DeviceInOSUExpected: () => (/* binding */ DeviceInOSUExpected),\n/* harmony export */   DeviceNameInvalid: () => (/* binding */ DeviceNameInvalid),\n/* harmony export */   DeviceNeedsRestart: () => (/* binding */ DeviceNeedsRestart),\n/* harmony export */   DeviceNotGenuineError: () => (/* binding */ DeviceNotGenuineError),\n/* harmony export */   DeviceOnDashboardExpected: () => (/* binding */ DeviceOnDashboardExpected),\n/* harmony export */   DeviceOnDashboardUnexpected: () => (/* binding */ DeviceOnDashboardUnexpected),\n/* harmony export */   DeviceOnboardingStatePollingError: () => (/* binding */ DeviceOnboardingStatePollingError),\n/* harmony export */   DeviceShouldStayInApp: () => (/* binding */ DeviceShouldStayInApp),\n/* harmony export */   DeviceSocketFail: () => (/* binding */ DeviceSocketFail),\n/* harmony export */   DeviceSocketNoBulkStatus: () => (/* binding */ DeviceSocketNoBulkStatus),\n/* harmony export */   DisabledTransactionBroadcastError: () => (/* binding */ DisabledTransactionBroadcastError),\n/* harmony export */   DisconnectedDevice: () => (/* binding */ DisconnectedDevice),\n/* harmony export */   DisconnectedDeviceDuringOperation: () => (/* binding */ DisconnectedDeviceDuringOperation),\n/* harmony export */   DustLimit: () => (/* binding */ DustLimit),\n/* harmony export */   ETHAddressNonEIP: () => (/* binding */ ETHAddressNonEIP),\n/* harmony export */   EnpointConfigError: () => (/* binding */ EnpointConfigError),\n/* harmony export */   EthAppPleaseEnableContractData: () => (/* binding */ EthAppPleaseEnableContractData),\n/* harmony export */   ExpertModeRequired: () => (/* binding */ ExpertModeRequired),\n/* harmony export */   FeeEstimationFailed: () => (/* binding */ FeeEstimationFailed),\n/* harmony export */   FeeNotLoaded: () => (/* binding */ FeeNotLoaded),\n/* harmony export */   FeeNotLoadedSwap: () => (/* binding */ FeeNotLoadedSwap),\n/* harmony export */   FeeRequired: () => (/* binding */ FeeRequired),\n/* harmony export */   FeeTooHigh: () => (/* binding */ FeeTooHigh),\n/* harmony export */   FirmwareNotRecognized: () => (/* binding */ FirmwareNotRecognized),\n/* harmony export */   FirmwareOrAppUpdateRequired: () => (/* binding */ FirmwareOrAppUpdateRequired),\n/* harmony export */   GasLessThanEstimate: () => (/* binding */ GasLessThanEstimate),\n/* harmony export */   GenuineCheckFailed: () => (/* binding */ GenuineCheckFailed),\n/* harmony export */   HardResetFail: () => (/* binding */ HardResetFail),\n/* harmony export */   HwTransportError: () => (/* binding */ HwTransportError),\n/* harmony export */   HwTransportErrorType: () => (/* binding */ HwTransportErrorType),\n/* harmony export */   InvalidAddress: () => (/* binding */ InvalidAddress),\n/* harmony export */   InvalidAddressBecauseDestinationIsAlsoSource: () => (/* binding */ InvalidAddressBecauseDestinationIsAlsoSource),\n/* harmony export */   InvalidNonce: () => (/* binding */ InvalidNonce),\n/* harmony export */   InvalidXRPTag: () => (/* binding */ InvalidXRPTag),\n/* harmony export */   LanguageNotFound: () => (/* binding */ LanguageNotFound),\n/* harmony export */   LatestMCUInstalledError: () => (/* binding */ LatestMCUInstalledError),\n/* harmony export */   LedgerAPI4xx: () => (/* binding */ LedgerAPI4xx),\n/* harmony export */   LedgerAPI5xx: () => (/* binding */ LedgerAPI5xx),\n/* harmony export */   LedgerAPIError: () => (/* binding */ LedgerAPIError),\n/* harmony export */   LedgerAPIErrorWithMessage: () => (/* binding */ LedgerAPIErrorWithMessage),\n/* harmony export */   LedgerAPINotAvailable: () => (/* binding */ LedgerAPINotAvailable),\n/* harmony export */   LockedDeviceError: () => (/* binding */ LockedDeviceError),\n/* harmony export */   MCUNotGenuineToDashboard: () => (/* binding */ MCUNotGenuineToDashboard),\n/* harmony export */   ManagerAppAlreadyInstalledError: () => (/* binding */ ManagerAppAlreadyInstalledError),\n/* harmony export */   ManagerAppDepInstallRequired: () => (/* binding */ ManagerAppDepInstallRequired),\n/* harmony export */   ManagerAppDepUninstallRequired: () => (/* binding */ ManagerAppDepUninstallRequired),\n/* harmony export */   ManagerAppRelyOnBTCError: () => (/* binding */ ManagerAppRelyOnBTCError),\n/* harmony export */   ManagerDeviceLockedError: () => (/* binding */ ManagerDeviceLockedError),\n/* harmony export */   ManagerFirmwareNotEnoughSpaceError: () => (/* binding */ ManagerFirmwareNotEnoughSpaceError),\n/* harmony export */   ManagerNotEnoughSpaceError: () => (/* binding */ ManagerNotEnoughSpaceError),\n/* harmony export */   ManagerUninstallBTCDep: () => (/* binding */ ManagerUninstallBTCDep),\n/* harmony export */   MaxFeeTooLow: () => (/* binding */ MaxFeeTooLow),\n/* harmony export */   MaybeKeepTronAccountAlive: () => (/* binding */ MaybeKeepTronAccountAlive),\n/* harmony export */   NetworkDown: () => (/* binding */ NetworkDown),\n/* harmony export */   NetworkError: () => (/* binding */ NetworkError),\n/* harmony export */   NoAccessToCamera: () => (/* binding */ NoAccessToCamera),\n/* harmony export */   NoAddressesFound: () => (/* binding */ NoAddressesFound),\n/* harmony export */   NoDBPathGiven: () => (/* binding */ NoDBPathGiven),\n/* harmony export */   NotEnoughBalance: () => (/* binding */ NotEnoughBalance),\n/* harmony export */   NotEnoughBalanceBecauseDestinationNotCreated: () => (/* binding */ NotEnoughBalanceBecauseDestinationNotCreated),\n/* harmony export */   NotEnoughBalanceInParentAccount: () => (/* binding */ NotEnoughBalanceInParentAccount),\n/* harmony export */   NotEnoughBalanceSwap: () => (/* binding */ NotEnoughBalanceSwap),\n/* harmony export */   NotEnoughBalanceToDelegate: () => (/* binding */ NotEnoughBalanceToDelegate),\n/* harmony export */   NotEnoughGas: () => (/* binding */ NotEnoughGas),\n/* harmony export */   NotEnoughGasSwap: () => (/* binding */ NotEnoughGasSwap),\n/* harmony export */   NotEnoughSpendableBalance: () => (/* binding */ NotEnoughSpendableBalance),\n/* harmony export */   NotSupportedLegacyAddress: () => (/* binding */ NotSupportedLegacyAddress),\n/* harmony export */   OpReturnDataSizeLimit: () => (/* binding */ OpReturnDataSizeLimit),\n/* harmony export */   PairingFailed: () => (/* binding */ PairingFailed),\n/* harmony export */   PasswordIncorrectError: () => (/* binding */ PasswordIncorrectError),\n/* harmony export */   PasswordsDontMatchError: () => (/* binding */ PasswordsDontMatchError),\n/* harmony export */   PeerRemovedPairing: () => (/* binding */ PeerRemovedPairing),\n/* harmony export */   PendingOperation: () => (/* binding */ PendingOperation),\n/* harmony export */   PinNotSet: () => (/* binding */ PinNotSet),\n/* harmony export */   PriorityFeeHigherThanMaxFee: () => (/* binding */ PriorityFeeHigherThanMaxFee),\n/* harmony export */   PriorityFeeTooHigh: () => (/* binding */ PriorityFeeTooHigh),\n/* harmony export */   PriorityFeeTooLow: () => (/* binding */ PriorityFeeTooLow),\n/* harmony export */   RecipientRequired: () => (/* binding */ RecipientRequired),\n/* harmony export */   RecommendSubAccountsToEmpty: () => (/* binding */ RecommendSubAccountsToEmpty),\n/* harmony export */   RecommendUndelegation: () => (/* binding */ RecommendUndelegation),\n/* harmony export */   ReplacementTransactionUnderpriced: () => (/* binding */ ReplacementTransactionUnderpriced),\n/* harmony export */   SequenceNumberError: () => (/* binding */ SequenceNumberError),\n/* harmony export */   StatusCodes: () => (/* binding */ StatusCodes),\n/* harmony export */   SyncError: () => (/* binding */ SyncError),\n/* harmony export */   TimeoutTagged: () => (/* binding */ TimeoutTagged),\n/* harmony export */   TransactionHasBeenValidatedError: () => (/* binding */ TransactionHasBeenValidatedError),\n/* harmony export */   TransportError: () => (/* binding */ TransportError),\n/* harmony export */   TransportExchangeTimeoutError: () => (/* binding */ TransportExchangeTimeoutError),\n/* harmony export */   TransportInterfaceNotAvailable: () => (/* binding */ TransportInterfaceNotAvailable),\n/* harmony export */   TransportOpenUserCancelled: () => (/* binding */ TransportOpenUserCancelled),\n/* harmony export */   TransportRaceCondition: () => (/* binding */ TransportRaceCondition),\n/* harmony export */   TransportStatusError: () => (/* binding */ TransportStatusError),\n/* harmony export */   TransportWebUSBGestureRequired: () => (/* binding */ TransportWebUSBGestureRequired),\n/* harmony export */   TronEmptyAccount: () => (/* binding */ TronEmptyAccount),\n/* harmony export */   UnavailableTezosOriginatedAccountReceive: () => (/* binding */ UnavailableTezosOriginatedAccountReceive),\n/* harmony export */   UnavailableTezosOriginatedAccountSend: () => (/* binding */ UnavailableTezosOriginatedAccountSend),\n/* harmony export */   UnexpectedBootloader: () => (/* binding */ UnexpectedBootloader),\n/* harmony export */   UnknownMCU: () => (/* binding */ UnknownMCU),\n/* harmony export */   UnresponsiveDeviceError: () => (/* binding */ UnresponsiveDeviceError),\n/* harmony export */   UpdateFetchFileFail: () => (/* binding */ UpdateFetchFileFail),\n/* harmony export */   UpdateIncorrectHash: () => (/* binding */ UpdateIncorrectHash),\n/* harmony export */   UpdateIncorrectSig: () => (/* binding */ UpdateIncorrectSig),\n/* harmony export */   UpdateYourApp: () => (/* binding */ UpdateYourApp),\n/* harmony export */   UserRefusedAddress: () => (/* binding */ UserRefusedAddress),\n/* harmony export */   UserRefusedAllowManager: () => (/* binding */ UserRefusedAllowManager),\n/* harmony export */   UserRefusedDeviceNameChange: () => (/* binding */ UserRefusedDeviceNameChange),\n/* harmony export */   UserRefusedFirmwareUpdate: () => (/* binding */ UserRefusedFirmwareUpdate),\n/* harmony export */   UserRefusedOnDevice: () => (/* binding */ UserRefusedOnDevice),\n/* harmony export */   WebsocketConnectionError: () => (/* binding */ WebsocketConnectionError),\n/* harmony export */   WebsocketConnectionFailed: () => (/* binding */ WebsocketConnectionFailed),\n/* harmony export */   WrongAppForCurrency: () => (/* binding */ WrongAppForCurrency),\n/* harmony export */   WrongDeviceForAccount: () => (/* binding */ WrongDeviceForAccount),\n/* harmony export */   WrongDeviceForAccountPayout: () => (/* binding */ WrongDeviceForAccountPayout),\n/* harmony export */   WrongDeviceForAccountRefund: () => (/* binding */ WrongDeviceForAccountRefund),\n/* harmony export */   addCustomErrorDeserializer: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer),\n/* harmony export */   createCustomErrorClass: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass),\n/* harmony export */   deserializeError: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.deserializeError),\n/* harmony export */   getAltStatusMessage: () => (/* binding */ getAltStatusMessage),\n/* harmony export */   serializeError: () => (/* reexport safe */ _helpers__WEBPACK_IMPORTED_MODULE_0__.serializeError)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/helpers.js\");\n\n\nconst AccountNameRequiredError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountNameRequired\");\nconst AccountNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountNotSupported\");\nconst AccountAwaitingSendPendingOperations = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AccountAwaitingSendPendingOperations\");\nconst AmountRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"AmountRequired\");\nconst BluetoothRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"BluetoothRequired\");\nconst BtcUnmatchedApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"BtcUnmatchedApp\");\nconst CantOpenDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CantOpenDevice\");\nconst CashAddrNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CashAddrNotSupported\");\nconst ClaimRewardsFeesWarning = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ClaimRewardsFeesWarning\");\nconst CurrencyNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CurrencyNotSupported\");\nconst DeviceAppVerifyNotSupported = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceAppVerifyNotSupported\");\nconst DeviceGenuineSocketEarlyClose = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceGenuineSocketEarlyClose\");\nconst DeviceNotGenuineError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceNotGenuine\");\nconst DeviceOnDashboardExpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnDashboardExpected\");\nconst DeviceOnDashboardUnexpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnDashboardUnexpected\");\nconst DeviceInOSUExpected = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceInOSUExpected\");\nconst DeviceHalted = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceHalted\");\nconst DeviceNameInvalid = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceNameInvalid\");\nconst DeviceSocketFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketFail\");\nconst DeviceSocketNoBulkStatus = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketNoBulkStatus\");\nconst DeviceNeedsRestart = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceSocketNoBulkStatus\");\nconst UnresponsiveDeviceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnresponsiveDeviceError\");\nconst DisconnectedDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisconnectedDevice\");\nconst DisconnectedDeviceDuringOperation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisconnectedDeviceDuringOperation\");\nconst DeviceExtractOnboardingStateError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceExtractOnboardingStateError\");\nconst DeviceOnboardingStatePollingError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceOnboardingStatePollingError\");\nconst EnpointConfigError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"EnpointConfig\");\nconst EthAppPleaseEnableContractData = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"EthAppPleaseEnableContractData\");\nconst FeeEstimationFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeEstimationFailed\");\nconst FirmwareNotRecognized = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FirmwareNotRecognized\");\nconst HardResetFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"HardResetFail\");\nconst InvalidXRPTag = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidXRPTag\");\nconst InvalidAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidAddress\");\nconst InvalidNonce = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidNonce\");\nconst InvalidAddressBecauseDestinationIsAlsoSource = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nconst LatestMCUInstalledError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LatestMCUInstalledError\");\nconst UnknownMCU = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnknownMCU\");\nconst LedgerAPIError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPIError\");\nconst LedgerAPIErrorWithMessage = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPIErrorWithMessage\");\nconst LedgerAPINotAvailable = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPINotAvailable\");\nconst ManagerAppAlreadyInstalledError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppAlreadyInstalled\");\nconst ManagerAppRelyOnBTCError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppRelyOnBTC\");\nconst ManagerAppDepInstallRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppDepInstallRequired\");\nconst ManagerAppDepUninstallRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerAppDepUninstallRequired\");\nconst ManagerDeviceLockedError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerDeviceLocked\");\nconst ManagerFirmwareNotEnoughSpaceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerFirmwareNotEnoughSpace\");\nconst ManagerNotEnoughSpaceError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerNotEnoughSpace\");\nconst ManagerUninstallBTCDep = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ManagerUninstallBTCDep\");\nconst NetworkDown = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NetworkDown\");\nconst NetworkError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NetworkError\");\nconst NoAddressesFound = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoAddressesFound\");\nconst NotEnoughBalance = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalance\");\nconst NotEnoughBalanceSwap = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceSwap\");\nconst NotEnoughBalanceToDelegate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceToDelegate\");\nconst NotEnoughBalanceInParentAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceInParentAccount\");\nconst NotEnoughSpendableBalance = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughSpendableBalance\");\nconst NotEnoughBalanceBecauseDestinationNotCreated = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nconst NoAccessToCamera = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoAccessToCamera\");\nconst NotEnoughGas = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nconst NotEnoughGasSwap = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotEnoughGasSwap\");\nconst TronEmptyAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TronEmptyAccount\");\nconst MaybeKeepTronAccountAlive = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MaybeKeepTronAccountAlive\");\nconst NotSupportedLegacyAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NotSupportedLegacyAddress\");\nconst GasLessThanEstimate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"GasLessThanEstimate\");\nconst PriorityFeeTooLow = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeTooLow\");\nconst PriorityFeeTooHigh = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeTooHigh\");\nconst PriorityFeeHigherThanMaxFee = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PriorityFeeHigherThanMaxFee\");\nconst MaxFeeTooLow = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MaxFeeTooLow\");\nconst PasswordsDontMatchError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PasswordsDontMatch\");\nconst PasswordIncorrectError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PasswordIncorrect\");\nconst RecommendSubAccountsToEmpty = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecommendSubAccountsToEmpty\");\nconst RecommendUndelegation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecommendUndelegation\");\nconst TimeoutTagged = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TimeoutTagged\");\nconst UnexpectedBootloader = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnexpectedBootloader\");\nconst MCUNotGenuineToDashboard = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"MCUNotGenuineToDashboard\");\nconst RecipientRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"RecipientRequired\");\nconst UnavailableTezosOriginatedAccountReceive = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountReceive\");\nconst UnavailableTezosOriginatedAccountSend = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UnavailableTezosOriginatedAccountSend\");\nconst UpdateFetchFileFail = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateFetchFileFail\");\nconst UpdateIncorrectHash = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateIncorrectHash\");\nconst UpdateIncorrectSig = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateIncorrectSig\");\nconst UpdateYourApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UpdateYourApp\");\nconst UserRefusedDeviceNameChange = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedDeviceNameChange\");\nconst UserRefusedAddress = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedAddress\");\nconst UserRefusedFirmwareUpdate = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedFirmwareUpdate\");\nconst UserRefusedAllowManager = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedAllowManager\");\nconst UserRefusedOnDevice = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nconst PinNotSet = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PinNotSet\");\nconst ExpertModeRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ExpertModeRequired\");\nconst TransportOpenUserCancelled = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportOpenUserCancelled\");\nconst TransportInterfaceNotAvailable = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportInterfaceNotAvailable\");\nconst TransportRaceCondition = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportRaceCondition\");\nconst TransportWebUSBGestureRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportWebUSBGestureRequired\");\nconst TransactionHasBeenValidatedError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransactionHasBeenValidatedError\");\nconst TransportExchangeTimeoutError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"TransportExchangeTimeoutError\");\nconst DeviceShouldStayInApp = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DeviceShouldStayInApp\");\nconst WebsocketConnectionError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WebsocketConnectionError\");\nconst WebsocketConnectionFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WebsocketConnectionFailed\");\nconst WrongDeviceForAccount = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongDeviceForAccount\");\nconst WrongDeviceForAccountPayout = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongDeviceForAccountPayout\");\nconst WrongDeviceForAccountRefund = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongDeviceForAccountRefund\");\nconst WrongAppForCurrency = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"WrongAppForCurrency\");\nconst ETHAddressNonEIP = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ETHAddressNonEIP\");\nconst CantScanQRCode = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"CantScanQRCode\");\nconst FeeNotLoaded = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeNotLoaded\");\nconst FeeNotLoadedSwap = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeNotLoadedSwap\");\nconst FeeRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeRequired\");\nconst FeeTooHigh = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FeeTooHigh\");\nconst PendingOperation = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PendingOperation\");\nconst SyncError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"SyncError\");\nconst PairingFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PairingFailed\");\nconst PeerRemovedPairing = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"PeerRemovedPairing\");\nconst GenuineCheckFailed = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"GenuineCheckFailed\");\nconst LedgerAPI4xx = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPI4xx\");\nconst LedgerAPI5xx = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LedgerAPI5xx\");\nconst FirmwareOrAppUpdateRequired = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nconst ReplacementTransactionUnderpriced = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nconst OpReturnDataSizeLimit = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"OpReturnSizeLimit\");\nconst DustLimit = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DustLimit\");\n// Language\nconst LanguageNotFound = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"LanguageNotFound\");\n// db stuff, no need to translate\nconst NoDBPathGiven = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"NoDBPathGiven\");\nconst DBWrongPassword = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DBWrongPassword\");\nconst DBNotReset = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DBNotReset\");\nconst SequenceNumberError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"SequenceNumberError\");\nconst DisabledTransactionBroadcastError = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.createCustomErrorClass)(\"DisabledTransactionBroadcastError\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */ var HwTransportErrorType;\n(function(HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */ class HwTransportError extends Error {\n    constructor(type, message){\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */ class TransportError extends Error {\n    constructor(message, id){\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\n(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer)(\"TransportError\", (e)=>new TransportError(e.message, e.id));\nconst StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    DEVICE_IN_RECOVERY_MODE: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n    APP_NOT_FOUND_OR_INVALID_CONTEXT: 0x5123,\n    INVALID_APP_NAME_LENGTH: 0x670a,\n    GEN_AES_KEY_FAILED: 0x5419,\n    INTERNAL_CRYPTO_OPERATION_FAILED: 0x541a,\n    INTERNAL_COMPUTE_AES_CMAC_FAILED: 0x541b,\n    ENCRYPT_APP_STORAGE_FAILED: 0x541c,\n    INVALID_BACKUP_STATE: 0x6642,\n    PIN_NOT_SET: 0x5502,\n    INVALID_BACKUP_LENGTH: 0x6733,\n    INVALID_RESTORE_STATE: 0x6643,\n    INVALID_CHUNK_LENGTH: 0x6734,\n    INVALID_BACKUP_HEADER: 0x684a,\n    // Not documented:\n    TRUSTCHAIN_WRONG_SEED: 0xb007\n};\nfunction getAltStatusMessage(code) {\n    switch(code){\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */ class TransportStatusError extends Error {\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */ constructor(statusCode, { canBeMappedToChildError = true } = {}){\n        const statusText = Object.keys(StatusCodes).find((k)=>StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        Object.setPrototypeOf(this, TransportStatusError.prototype);\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nclass LockedDeviceError extends TransportStatusError {\n    constructor(message){\n        super(StatusCodes.LOCKED_DEVICE, {\n            canBeMappedToChildError: false\n        });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n        Object.setPrototypeOf(this, LockedDeviceError.prototype);\n    }\n}\n(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.addCustomErrorDeserializer)(\"TransportStatusError\", (e)=>new TransportStatusError(e.statusCode)); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatusCodes: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes),\n/* harmony export */   TransportError: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError),\n/* harmony export */   TransportStatusError: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAltStatusMessage: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.getAltStatusMessage)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/errors/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\nconst DEFAULT_LOG_TYPE = \"transport\";\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */ class Transport {\n    constructor({ context, logType } = {}){\n        this.exchangeTimeout = 30000;\n        this.unresponsiveTimeout = 15000;\n        this.deviceModel = null;\n        this._events = new (events__WEBPACK_IMPORTED_MODULE_0___default())();\n        /**\n         * Send data to the device using the higher level API.\n         *\n         * @param {number} cla - The instruction class for the command.\n         * @param {number} ins - The instruction code for the command.\n         * @param {number} p1 - The first parameter for the instruction.\n         * @param {number} p2 - The second parameter for the instruction.\n         * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n         * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n         * @param {Object} options - Contains optional options for the exchange function\n         *  - abortTimeoutMs: stop the send after a given timeout. Another timeout exists\n         *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n         * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n         */ this.send = (cla_1, ins_1, p1_1, p2_1, ...args_1)=>__awaiter(this, [\n                cla_1,\n                ins_1,\n                p1_1,\n                p2_1,\n                ...args_1\n            ], void 0, function*(cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [\n                _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.OK\n            ], { abortTimeoutMs } = {}) {\n                const tracer = this.tracer.withUpdatedContext({\n                    function: \"send\"\n                });\n                if (data.length >= 256) {\n                    tracer.trace(\"data.length exceeded 256 bytes limit\", {\n                        dataLength: data.length\n                    });\n                    throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n                }\n                tracer.trace(\"Starting an exchange\", {\n                    abortTimeoutMs\n                });\n                const response = yield this.exchange(// The size of the data is added in 1 byte just before `data`\n                Buffer.concat([\n                    Buffer.from([\n                        cla,\n                        ins,\n                        p1,\n                        p2\n                    ]),\n                    Buffer.from([\n                        data.length\n                    ]),\n                    data\n                ]), {\n                    abortTimeoutMs\n                });\n                tracer.trace(\"Received response from exchange\");\n                const sw = response.readUInt16BE(response.length - 2);\n                if (!statusList.some((s)=>s === sw)) {\n                    throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError(sw);\n                }\n                return response;\n            });\n        this._appAPIlock = null;\n        this.tracer = new _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_2__.LocalTracer(logType !== null && logType !== void 0 ? logType : DEFAULT_LOG_TYPE, context);\n    }\n    /**\n     * Send data to the device using a low level API.\n     * It's recommended to use the \"send\" method for a higher level API.\n     * @param {Buffer} apdu - The data to send.\n     * @param {Object} options - Contains optional options for the exchange function\n     *  - abortTimeoutMs: stop the exchange after a given timeout. Another timeout exists\n     *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */ exchange(_apdu, { abortTimeoutMs: _abortTimeoutMs } = {}) {\n        throw new Error(\"exchange not implemented\");\n    }\n    /**\n     * Send apdus in batch to the device using a low level API.\n     * The default implementation is to call exchange for each apdu.\n     * @param {Array<Buffer>} apdus - array of apdus to send.\n     * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n     */ exchangeBulk(apdus, observer) {\n        let unsubscribed = false;\n        const unsubscribe = ()=>{\n            unsubscribed = true;\n        };\n        const main = ()=>__awaiter(this, void 0, void 0, function*() {\n                if (unsubscribed) return;\n                for (const apdu of apdus){\n                    const r = yield this.exchange(apdu);\n                    if (unsubscribed) return;\n                    const status = r.readUInt16BE(r.length - 2);\n                    if (status !== _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.OK) {\n                        throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError(status);\n                    }\n                    observer.next(r);\n                }\n            });\n        main().then(()=>!unsubscribed && observer.complete(), (e)=>!unsubscribed && observer.error(e));\n        return {\n            unsubscribe\n        };\n    }\n    /**\n     * Set the \"scramble key\" for the next data exchanges with the device.\n     * Each app can have a different scramble key and it is set internally during instantiation.\n     * @param {string} key - The scramble key to set.\n     * deprecated This method is no longer needed for modern transports and should be migrated away from.\n     * no @ before deprecated as it breaks documentationjs on version 14.0.2\n     * https://github.com/documentationjs/documentation/issues/1596\n     */ setScrambleKey(_key) {}\n    /**\n     * Close the connection with the device.\n     *\n     * Note: for certain transports (hw-transport-node-hid-singleton for ex), once the promise resolved,\n     * the transport instance is actually still cached, and the device is disconnected only after a defined timeout.\n     * But for the consumer of the Transport, this does not matter and it can consider the transport to be closed.\n     *\n     * @returns {Promise<void>} A promise that resolves when the transport is closed.\n     */ close() {\n        return Promise.resolve();\n    }\n    /**\n     * Listen for an event on the transport instance.\n     * Transport implementations may have specific events. Common events include:\n     * \"disconnect\" : triggered when the transport is disconnected.\n     * @param {string} eventName - The name of the event to listen for.\n     * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n     */ on(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n    /**\n     * Stop listening to an event on an instance of transport.\n     */ off(eventName, cb) {\n        this._events.removeListener(eventName, cb);\n    }\n    emit(event, ...args) {\n        this._events.emit(event, ...args);\n    }\n    /**\n     * Enable or not logs of the binary exchange\n     */ setDebugMode() {\n        console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n    }\n    /**\n     * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n     */ setExchangeTimeout(exchangeTimeout) {\n        this.exchangeTimeout = exchangeTimeout;\n    }\n    /**\n     * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n     */ setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n        this.unresponsiveTimeout = unresponsiveTimeout;\n    }\n    /**\n     * create() allows to open the first descriptor available or\n     * throw if there is none or if timeout is reached.\n     * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n     * @example\n    TransportFoo.create().then(transport => ...)\n     */ static create(openTimeout = 3000, listenTimeout) {\n        return new Promise((resolve, reject)=>{\n            let found = false;\n            const sub = this.listen({\n                next: (e)=>{\n                    found = true;\n                    if (sub) sub.unsubscribe();\n                    if (listenTimeoutId) clearTimeout(listenTimeoutId);\n                    this.open(e.descriptor, openTimeout).then(resolve, reject);\n                },\n                error: (e)=>{\n                    if (listenTimeoutId) clearTimeout(listenTimeoutId);\n                    reject(e);\n                },\n                complete: ()=>{\n                    if (listenTimeoutId) clearTimeout(listenTimeoutId);\n                    if (!found) {\n                        reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n                    }\n                }\n            });\n            const listenTimeoutId = listenTimeout ? setTimeout(()=>{\n                sub.unsubscribe();\n                reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n            }, listenTimeout) : null;\n        });\n    }\n    /**\n     * Wrapper to make an exchange \"atomic\" (blocking any other exchange)\n     *\n     * It also handles \"unresponsiveness\" by emitting \"unresponsive\" and \"responsive\" events.\n     *\n     * @param f The exchange job, using the transport to run\n     * @returns a Promise resolving with the output of the given job\n     */ exchangeAtomicImpl(f) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const tracer = this.tracer.withUpdatedContext({\n                function: \"exchangeAtomicImpl\",\n                unresponsiveTimeout: this.unresponsiveTimeout\n            });\n            if (this.exchangeBusyPromise) {\n                tracer.trace(\"Atomic exchange is already busy\");\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n            }\n            // Sets the atomic guard\n            let resolveBusy;\n            const busyPromise = new Promise((r)=>{\n                resolveBusy = r;\n            });\n            this.exchangeBusyPromise = busyPromise;\n            // The device unresponsiveness handler\n            let unresponsiveReached = false;\n            const timeout = setTimeout(()=>{\n                tracer.trace(`Timeout reached, emitting Transport event \"unresponsive\"`, {\n                    unresponsiveTimeout: this.unresponsiveTimeout\n                });\n                unresponsiveReached = true;\n                this.emit(\"unresponsive\");\n            }, this.unresponsiveTimeout);\n            try {\n                const res = yield f();\n                if (unresponsiveReached) {\n                    tracer.trace(\"Device was unresponsive, emitting responsive\");\n                    this.emit(\"responsive\");\n                }\n                return res;\n            } finally{\n                tracer.trace(\"Finalize, clearing busy guard\");\n                clearTimeout(timeout);\n                if (resolveBusy) resolveBusy();\n                this.exchangeBusyPromise = null;\n            }\n        });\n    }\n    decorateAppAPIMethods(self, methods, scrambleKey) {\n        for (const methodName of methods){\n            self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n        }\n    }\n    decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n        return (...args)=>__awaiter(this, void 0, void 0, function*() {\n                const { _appAPIlock } = this;\n                if (_appAPIlock) {\n                    return Promise.reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n                }\n                try {\n                    this._appAPIlock = methodName;\n                    this.setScrambleKey(scrambleKey);\n                    return yield f.apply(ctx, args);\n                } finally{\n                    this._appAPIlock = null;\n                }\n            });\n    }\n    /**\n     * Sets the context used by the logging/tracing mechanism\n     *\n     * Useful when re-using (cached) the same Transport instance,\n     * but with a new tracing context.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */ setTraceContext(context) {\n        this.tracer = this.tracer.withContext(context);\n    }\n    /**\n     * Updates the context used by the logging/tracing mechanism\n     *\n     * The update only overrides the key-value that are already defined in the current context.\n     *\n     * @param contextToAdd A TraceContext that will be added to the current context\n     */ updateTraceContext(contextToAdd) {\n        this.tracer.updateContext(contextToAdd);\n    }\n    /**\n     * Gets the tracing context of the transport instance\n     */ getTraceContext() {\n        return this.tracer.getContext();\n    }\n}\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Transport); //# sourceMappingURL=Transport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/@ledgerhq/hw-transport/lib-es/Transport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/comparator.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/comparator.js ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst ANY = Symbol(\"SemVer ANY\");\n// hoisted class for cyclic dependency\nclass Comparator {\n    static get ANY() {\n        return ANY;\n    }\n    constructor(comp, options){\n        options = parseOptions(options);\n        if (comp instanceof Comparator) {\n            if (comp.loose === !!options.loose) {\n                return comp;\n            } else {\n                comp = comp.value;\n            }\n        }\n        comp = comp.trim().split(/\\s+/).join(\" \");\n        debug(\"comparator\", comp, options);\n        this.options = options;\n        this.loose = !!options.loose;\n        this.parse(comp);\n        if (this.semver === ANY) {\n            this.value = \"\";\n        } else {\n            this.value = this.operator + this.semver.version;\n        }\n        debug(\"comp\", this);\n    }\n    parse(comp) {\n        const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n        const m = comp.match(r);\n        if (!m) {\n            throw new TypeError(`Invalid comparator: ${comp}`);\n        }\n        this.operator = m[1] !== undefined ? m[1] : \"\";\n        if (this.operator === \"=\") {\n            this.operator = \"\";\n        }\n        // if it literally is just '>' or '' then allow anything.\n        if (!m[2]) {\n            this.semver = ANY;\n        } else {\n            this.semver = new SemVer(m[2], this.options.loose);\n        }\n    }\n    toString() {\n        return this.value;\n    }\n    test(version) {\n        debug(\"Comparator.test\", version, this.options.loose);\n        if (this.semver === ANY || version === ANY) {\n            return true;\n        }\n        if (typeof version === \"string\") {\n            try {\n                version = new SemVer(version, this.options);\n            } catch (er) {\n                return false;\n            }\n        }\n        return cmp(version, this.operator, this.semver, this.options);\n    }\n    intersects(comp, options) {\n        if (!(comp instanceof Comparator)) {\n            throw new TypeError(\"a Comparator is required\");\n        }\n        if (this.operator === \"\") {\n            if (this.value === \"\") {\n                return true;\n            }\n            return new Range(comp.value, options).test(this.value);\n        } else if (comp.operator === \"\") {\n            if (comp.value === \"\") {\n                return true;\n            }\n            return new Range(this.value, options).test(comp.semver);\n        }\n        options = parseOptions(options);\n        // Special cases where nothing can possibly be lower\n        if (options.includePrerelease && (this.value === \"<0.0.0-0\" || comp.value === \"<0.0.0-0\")) {\n            return false;\n        }\n        if (!options.includePrerelease && (this.value.startsWith(\"<0.0.0\") || comp.value.startsWith(\"<0.0.0\"))) {\n            return false;\n        }\n        // Same direction increasing (> or >=)\n        if (this.operator.startsWith(\">\") && comp.operator.startsWith(\">\")) {\n            return true;\n        }\n        // Same direction decreasing (< or <=)\n        if (this.operator.startsWith(\"<\") && comp.operator.startsWith(\"<\")) {\n            return true;\n        }\n        // same SemVer and both sides are inclusive (<= or >=)\n        if (this.semver.version === comp.semver.version && this.operator.includes(\"=\") && comp.operator.includes(\"=\")) {\n            return true;\n        }\n        // opposite directions less than\n        if (cmp(this.semver, \"<\", comp.semver, options) && this.operator.startsWith(\">\") && comp.operator.startsWith(\"<\")) {\n            return true;\n        }\n        // opposite directions greater than\n        if (cmp(this.semver, \">\", comp.semver, options) && this.operator.startsWith(\"<\") && comp.operator.startsWith(\">\")) {\n            return true;\n        }\n        return false;\n    }\n}\nmodule.exports = Comparator;\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/parse-options.js\");\nconst { safeRe: re, t } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js\");\nconst cmp = __webpack_require__(/*! ../functions/cmp */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/cmp.js\");\nconst debug = __webpack_require__(/*! ../internal/debug */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/debug.js\");\nconst SemVer = __webpack_require__(/*! ./semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ./range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/comparator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SPACE_CHARACTERS = /\\s+/g;\n// hoisted class for cyclic dependency\nclass Range {\n    constructor(range, options){\n        options = parseOptions(options);\n        if (range instanceof Range) {\n            if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n                return range;\n            } else {\n                return new Range(range.raw, options);\n            }\n        }\n        if (range instanceof Comparator) {\n            // just put it in the set and return\n            this.raw = range.value;\n            this.set = [\n                [\n                    range\n                ]\n            ];\n            this.formatted = undefined;\n            return this;\n        }\n        this.options = options;\n        this.loose = !!options.loose;\n        this.includePrerelease = !!options.includePrerelease;\n        // First reduce all whitespace as much as possible so we do not have to rely\n        // on potentially slow regexes like \\s*. This is then stored and used for\n        // future error messages as well.\n        this.raw = range.trim().replace(SPACE_CHARACTERS, \" \");\n        // First, split on ||\n        this.set = this.raw.split(\"||\")// map the range to a 2d array of comparators\n        .map((r)=>this.parseRange(r.trim()))// throw out any comparator lists that are empty\n        // this generally means that it was not a valid range, which is allowed\n        // in loose mode, but will still throw if the WHOLE range is invalid.\n        .filter((c)=>c.length);\n        if (!this.set.length) {\n            throw new TypeError(`Invalid SemVer Range: ${this.raw}`);\n        }\n        // if we have any that are not the null set, throw out null sets.\n        if (this.set.length > 1) {\n            // keep the first one, in case they're all null sets\n            const first = this.set[0];\n            this.set = this.set.filter((c)=>!isNullSet(c[0]));\n            if (this.set.length === 0) {\n                this.set = [\n                    first\n                ];\n            } else if (this.set.length > 1) {\n                // if we have any that are *, then the range is just *\n                for (const c of this.set){\n                    if (c.length === 1 && isAny(c[0])) {\n                        this.set = [\n                            c\n                        ];\n                        break;\n                    }\n                }\n            }\n        }\n        this.formatted = undefined;\n    }\n    get range() {\n        if (this.formatted === undefined) {\n            this.formatted = \"\";\n            for(let i = 0; i < this.set.length; i++){\n                if (i > 0) {\n                    this.formatted += \"||\";\n                }\n                const comps = this.set[i];\n                for(let k = 0; k < comps.length; k++){\n                    if (k > 0) {\n                        this.formatted += \" \";\n                    }\n                    this.formatted += comps[k].toString().trim();\n                }\n            }\n        }\n        return this.formatted;\n    }\n    format() {\n        return this.range;\n    }\n    toString() {\n        return this.range;\n    }\n    parseRange(range) {\n        // memoize range parsing for performance.\n        // this is a very hot path, and fully deterministic.\n        const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);\n        const memoKey = memoOpts + \":\" + range;\n        const cached = cache.get(memoKey);\n        if (cached) {\n            return cached;\n        }\n        const loose = this.options.loose;\n        // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n        const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];\n        range = range.replace(hr, hyphenReplace(this.options.includePrerelease));\n        debug(\"hyphen replace\", range);\n        // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n        range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);\n        debug(\"comparator trim\", range);\n        // `~ 1.2.3` => `~1.2.3`\n        range = range.replace(re[t.TILDETRIM], tildeTrimReplace);\n        debug(\"tilde trim\", range);\n        // `^ 1.2.3` => `^1.2.3`\n        range = range.replace(re[t.CARETTRIM], caretTrimReplace);\n        debug(\"caret trim\", range);\n        // At this point, the range is completely trimmed and\n        // ready to be split into comparators.\n        let rangeList = range.split(\" \").map((comp)=>parseComparator(comp, this.options)).join(\" \").split(/\\s+/)// >=0.0.0 is equivalent to *\n        .map((comp)=>replaceGTE0(comp, this.options));\n        if (loose) {\n            // in loose mode, throw out any that are not valid comparators\n            rangeList = rangeList.filter((comp)=>{\n                debug(\"loose invalid filter\", comp, this.options);\n                return !!comp.match(re[t.COMPARATORLOOSE]);\n            });\n        }\n        debug(\"range list\", rangeList);\n        // if any comparators are the null set, then replace with JUST null set\n        // if more than one comparator, remove any * comparators\n        // also, don't include the same comparator more than once\n        const rangeMap = new Map();\n        const comparators = rangeList.map((comp)=>new Comparator(comp, this.options));\n        for (const comp of comparators){\n            if (isNullSet(comp)) {\n                return [\n                    comp\n                ];\n            }\n            rangeMap.set(comp.value, comp);\n        }\n        if (rangeMap.size > 1 && rangeMap.has(\"\")) {\n            rangeMap.delete(\"\");\n        }\n        const result = [\n            ...rangeMap.values()\n        ];\n        cache.set(memoKey, result);\n        return result;\n    }\n    intersects(range, options) {\n        if (!(range instanceof Range)) {\n            throw new TypeError(\"a Range is required\");\n        }\n        return this.set.some((thisComparators)=>{\n            return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators)=>{\n                return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator)=>{\n                    return rangeComparators.every((rangeComparator)=>{\n                        return thisComparator.intersects(rangeComparator, options);\n                    });\n                });\n            });\n        });\n    }\n    // if ANY of the sets match ALL of its comparators, then pass\n    test(version) {\n        if (!version) {\n            return false;\n        }\n        if (typeof version === \"string\") {\n            try {\n                version = new SemVer(version, this.options);\n            } catch (er) {\n                return false;\n            }\n        }\n        for(let i = 0; i < this.set.length; i++){\n            if (testSet(this.set[i], version, this.options)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nmodule.exports = Range;\nconst LRU = __webpack_require__(/*! ../internal/lrucache */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/lrucache.js\");\nconst cache = new LRU();\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/parse-options.js\");\nconst Comparator = __webpack_require__(/*! ./comparator */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/comparator.js\");\nconst debug = __webpack_require__(/*! ../internal/debug */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/debug.js\");\nconst SemVer = __webpack_require__(/*! ./semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst { safeRe: re, t, comparatorTrimReplace, tildeTrimReplace, caretTrimReplace } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js\");\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = __webpack_require__(/*! ../internal/constants */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/constants.js\");\nconst isNullSet = (c)=>c.value === \"<0.0.0-0\";\nconst isAny = (c)=>c.value === \"\";\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options)=>{\n    let result = true;\n    const remainingComparators = comparators.slice();\n    let testComparator = remainingComparators.pop();\n    while(result && remainingComparators.length){\n        result = remainingComparators.every((otherComparator)=>{\n            return testComparator.intersects(otherComparator, options);\n        });\n        testComparator = remainingComparators.pop();\n    }\n    return result;\n};\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options)=>{\n    debug(\"comp\", comp, options);\n    comp = replaceCarets(comp, options);\n    debug(\"caret\", comp);\n    comp = replaceTildes(comp, options);\n    debug(\"tildes\", comp);\n    comp = replaceXRanges(comp, options);\n    debug(\"xrange\", comp);\n    comp = replaceStars(comp, options);\n    debug(\"stars\", comp);\n    return comp;\n};\nconst isX = (id)=>!id || id.toLowerCase() === \"x\" || id === \"*\";\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options)=>{\n    return comp.trim().split(/\\s+/).map((c)=>replaceTilde(c, options)).join(\" \");\n};\nconst replaceTilde = (comp, options)=>{\n    const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];\n    return comp.replace(r, (_, M, m, p, pr)=>{\n        debug(\"tilde\", comp, _, M, m, p, pr);\n        let ret;\n        if (isX(M)) {\n            ret = \"\";\n        } else if (isX(m)) {\n            ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;\n        } else if (isX(p)) {\n            // ~1.2 == >=1.2.0 <1.3.0-0\n            ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;\n        } else if (pr) {\n            debug(\"replaceTilde pr\", pr);\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n        } else {\n            // ~1.2.3 == >=1.2.3 <1.3.0-0\n            ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;\n        }\n        debug(\"tilde return\", ret);\n        return ret;\n    });\n};\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options)=>{\n    return comp.trim().split(/\\s+/).map((c)=>replaceCaret(c, options)).join(\" \");\n};\nconst replaceCaret = (comp, options)=>{\n    debug(\"caret\", comp, options);\n    const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];\n    const z = options.includePrerelease ? \"-0\" : \"\";\n    return comp.replace(r, (_, M, m, p, pr)=>{\n        debug(\"caret\", comp, _, M, m, p, pr);\n        let ret;\n        if (isX(M)) {\n            ret = \"\";\n        } else if (isX(m)) {\n            ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;\n        } else if (isX(p)) {\n            if (M === \"0\") {\n                ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;\n            } else {\n                ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;\n            }\n        } else if (pr) {\n            debug(\"replaceCaret pr\", pr);\n            if (M === \"0\") {\n                if (m === \"0\") {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;\n                } else {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n                }\n            } else {\n                ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;\n            }\n        } else {\n            debug(\"no pr\");\n            if (M === \"0\") {\n                if (m === \"0\") {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;\n                } else {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;\n                }\n            } else {\n                ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;\n            }\n        }\n        debug(\"caret return\", ret);\n        return ret;\n    });\n};\nconst replaceXRanges = (comp, options)=>{\n    debug(\"replaceXRanges\", comp, options);\n    return comp.split(/\\s+/).map((c)=>replaceXRange(c, options)).join(\" \");\n};\nconst replaceXRange = (comp, options)=>{\n    comp = comp.trim();\n    const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];\n    return comp.replace(r, (ret, gtlt, M, m, p, pr)=>{\n        debug(\"xRange\", comp, ret, gtlt, M, m, p, pr);\n        const xM = isX(M);\n        const xm = xM || isX(m);\n        const xp = xm || isX(p);\n        const anyX = xp;\n        if (gtlt === \"=\" && anyX) {\n            gtlt = \"\";\n        }\n        // if we're including prereleases in the match, then we need\n        // to fix this to -0, the lowest possible prerelease value\n        pr = options.includePrerelease ? \"-0\" : \"\";\n        if (xM) {\n            if (gtlt === \">\" || gtlt === \"<\") {\n                // nothing is allowed\n                ret = \"<0.0.0-0\";\n            } else {\n                // nothing is forbidden\n                ret = \"*\";\n            }\n        } else if (gtlt && anyX) {\n            // we know patch is an x, because we have any x at all.\n            // replace X with 0\n            if (xm) {\n                m = 0;\n            }\n            p = 0;\n            if (gtlt === \">\") {\n                // >1 => >=2.0.0\n                // >1.2 => >=1.3.0\n                gtlt = \">=\";\n                if (xm) {\n                    M = +M + 1;\n                    m = 0;\n                    p = 0;\n                } else {\n                    m = +m + 1;\n                    p = 0;\n                }\n            } else if (gtlt === \"<=\") {\n                // <=0.7.x is actually <0.8.0, since any 0.7.x should\n                // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n                gtlt = \"<\";\n                if (xm) {\n                    M = +M + 1;\n                } else {\n                    m = +m + 1;\n                }\n            }\n            if (gtlt === \"<\") {\n                pr = \"-0\";\n            }\n            ret = `${gtlt + M}.${m}.${p}${pr}`;\n        } else if (xm) {\n            ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;\n        } else if (xp) {\n            ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;\n        }\n        debug(\"xRange return\", ret);\n        return ret;\n    });\n};\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options)=>{\n    debug(\"replaceStars\", comp, options);\n    // Looseness is ignored here.  star is always as loose as it gets!\n    return comp.trim().replace(re[t.STAR], \"\");\n};\nconst replaceGTE0 = (comp, options)=>{\n    debug(\"replaceGTE0\", comp, options);\n    return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], \"\");\n};\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = (incPr)=>($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr)=>{\n        if (isX(fM)) {\n            from = \"\";\n        } else if (isX(fm)) {\n            from = `>=${fM}.0.0${incPr ? \"-0\" : \"\"}`;\n        } else if (isX(fp)) {\n            from = `>=${fM}.${fm}.0${incPr ? \"-0\" : \"\"}`;\n        } else if (fpr) {\n            from = `>=${from}`;\n        } else {\n            from = `>=${from}${incPr ? \"-0\" : \"\"}`;\n        }\n        if (isX(tM)) {\n            to = \"\";\n        } else if (isX(tm)) {\n            to = `<${+tM + 1}.0.0-0`;\n        } else if (isX(tp)) {\n            to = `<${tM}.${+tm + 1}.0-0`;\n        } else if (tpr) {\n            to = `<=${tM}.${tm}.${tp}-${tpr}`;\n        } else if (incPr) {\n            to = `<${tM}.${tm}.${+tp + 1}-0`;\n        } else {\n            to = `<=${to}`;\n        }\n        return `${from} ${to}`.trim();\n    };\nconst testSet = (set, version, options)=>{\n    for(let i = 0; i < set.length; i++){\n        if (!set[i].test(version)) {\n            return false;\n        }\n    }\n    if (version.prerelease.length && !options.includePrerelease) {\n        // Find the set of versions that are allowed to have prereleases\n        // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n        // That should allow `1.2.3-pr.2` to pass.\n        // However, `1.2.4-alpha.notready` should NOT be allowed,\n        // even though it's within the range set by the comparators.\n        for(let i = 0; i < set.length; i++){\n            debug(set[i].semver);\n            if (set[i].semver === Comparator.ANY) {\n                continue;\n            }\n            if (set[i].semver.prerelease.length > 0) {\n                const allowed = set[i].semver;\n                if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {\n                    return true;\n                }\n            }\n        }\n        // Version has a -pre, but it's not one of the ones we like.\n        return false;\n    }\n    return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst debug = __webpack_require__(/*! ../internal/debug */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/debug.js\");\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = __webpack_require__(/*! ../internal/constants */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/constants.js\");\nconst { safeRe: re, t } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js\");\nconst parseOptions = __webpack_require__(/*! ../internal/parse-options */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/parse-options.js\");\nconst { compareIdentifiers } = __webpack_require__(/*! ../internal/identifiers */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/identifiers.js\");\nclass SemVer {\n    constructor(version, options){\n        options = parseOptions(options);\n        if (version instanceof SemVer) {\n            if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {\n                return version;\n            } else {\n                version = version.version;\n            }\n        } else if (typeof version !== \"string\") {\n            throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`);\n        }\n        if (version.length > MAX_LENGTH) {\n            throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);\n        }\n        debug(\"SemVer\", version, options);\n        this.options = options;\n        this.loose = !!options.loose;\n        // this isn't actually relevant for versions, but keep it so that we\n        // don't run into trouble passing this.options around.\n        this.includePrerelease = !!options.includePrerelease;\n        const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);\n        if (!m) {\n            throw new TypeError(`Invalid Version: ${version}`);\n        }\n        this.raw = version;\n        // these are actually numbers\n        this.major = +m[1];\n        this.minor = +m[2];\n        this.patch = +m[3];\n        if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n            throw new TypeError(\"Invalid major version\");\n        }\n        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n            throw new TypeError(\"Invalid minor version\");\n        }\n        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n            throw new TypeError(\"Invalid patch version\");\n        }\n        // numberify any prerelease numeric ids\n        if (!m[4]) {\n            this.prerelease = [];\n        } else {\n            this.prerelease = m[4].split(\".\").map((id)=>{\n                if (/^[0-9]+$/.test(id)) {\n                    const num = +id;\n                    if (num >= 0 && num < MAX_SAFE_INTEGER) {\n                        return num;\n                    }\n                }\n                return id;\n            });\n        }\n        this.build = m[5] ? m[5].split(\".\") : [];\n        this.format();\n    }\n    format() {\n        this.version = `${this.major}.${this.minor}.${this.patch}`;\n        if (this.prerelease.length) {\n            this.version += `-${this.prerelease.join(\".\")}`;\n        }\n        return this.version;\n    }\n    toString() {\n        return this.version;\n    }\n    compare(other) {\n        debug(\"SemVer.compare\", this.version, this.options, other);\n        if (!(other instanceof SemVer)) {\n            if (typeof other === \"string\" && other === this.version) {\n                return 0;\n            }\n            other = new SemVer(other, this.options);\n        }\n        if (other.version === this.version) {\n            return 0;\n        }\n        return this.compareMain(other) || this.comparePre(other);\n    }\n    compareMain(other) {\n        if (!(other instanceof SemVer)) {\n            other = new SemVer(other, this.options);\n        }\n        return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n    }\n    comparePre(other) {\n        if (!(other instanceof SemVer)) {\n            other = new SemVer(other, this.options);\n        }\n        // NOT having a prerelease is > having one\n        if (this.prerelease.length && !other.prerelease.length) {\n            return -1;\n        } else if (!this.prerelease.length && other.prerelease.length) {\n            return 1;\n        } else if (!this.prerelease.length && !other.prerelease.length) {\n            return 0;\n        }\n        let i = 0;\n        do {\n            const a = this.prerelease[i];\n            const b = other.prerelease[i];\n            debug(\"prerelease compare\", i, a, b);\n            if (a === undefined && b === undefined) {\n                return 0;\n            } else if (b === undefined) {\n                return 1;\n            } else if (a === undefined) {\n                return -1;\n            } else if (a === b) {\n                continue;\n            } else {\n                return compareIdentifiers(a, b);\n            }\n        }while (++i);\n    }\n    compareBuild(other) {\n        if (!(other instanceof SemVer)) {\n            other = new SemVer(other, this.options);\n        }\n        let i = 0;\n        do {\n            const a = this.build[i];\n            const b = other.build[i];\n            debug(\"build compare\", i, a, b);\n            if (a === undefined && b === undefined) {\n                return 0;\n            } else if (b === undefined) {\n                return 1;\n            } else if (a === undefined) {\n                return -1;\n            } else if (a === b) {\n                continue;\n            } else {\n                return compareIdentifiers(a, b);\n            }\n        }while (++i);\n    }\n    // preminor will bump the version up to the next minor release, and immediately\n    // down to pre-release. premajor and prepatch work the same way.\n    inc(release, identifier, identifierBase) {\n        switch(release){\n            case \"premajor\":\n                this.prerelease.length = 0;\n                this.patch = 0;\n                this.minor = 0;\n                this.major++;\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            case \"preminor\":\n                this.prerelease.length = 0;\n                this.patch = 0;\n                this.minor++;\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            case \"prepatch\":\n                // If this is already a prerelease, it will bump to the next version\n                // drop any prereleases that might already exist, since they are not\n                // relevant at this point.\n                this.prerelease.length = 0;\n                this.inc(\"patch\", identifier, identifierBase);\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            // If the input is a non-prerelease version, this acts the same as\n            // prepatch.\n            case \"prerelease\":\n                if (this.prerelease.length === 0) {\n                    this.inc(\"patch\", identifier, identifierBase);\n                }\n                this.inc(\"pre\", identifier, identifierBase);\n                break;\n            case \"major\":\n                // If this is a pre-major version, bump up to the same major version.\n                // Otherwise increment major.\n                // 1.0.0-5 bumps to 1.0.0\n                // 1.1.0 bumps to 2.0.0\n                if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n                    this.major++;\n                }\n                this.minor = 0;\n                this.patch = 0;\n                this.prerelease = [];\n                break;\n            case \"minor\":\n                // If this is a pre-minor version, bump up to the same minor version.\n                // Otherwise increment minor.\n                // 1.2.0-5 bumps to 1.2.0\n                // 1.2.1 bumps to 1.3.0\n                if (this.patch !== 0 || this.prerelease.length === 0) {\n                    this.minor++;\n                }\n                this.patch = 0;\n                this.prerelease = [];\n                break;\n            case \"patch\":\n                // If this is not a pre-release version, it will increment the patch.\n                // If it is a pre-release it will bump up to the same patch version.\n                // 1.2.0-5 patches to 1.2.0\n                // 1.2.0 patches to 1.2.1\n                if (this.prerelease.length === 0) {\n                    this.patch++;\n                }\n                this.prerelease = [];\n                break;\n            // This probably shouldn't be used publicly.\n            // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n            case \"pre\":\n                {\n                    const base = Number(identifierBase) ? 1 : 0;\n                    if (!identifier && identifierBase === false) {\n                        throw new Error(\"invalid increment argument: identifier is empty\");\n                    }\n                    if (this.prerelease.length === 0) {\n                        this.prerelease = [\n                            base\n                        ];\n                    } else {\n                        let i = this.prerelease.length;\n                        while(--i >= 0){\n                            if (typeof this.prerelease[i] === \"number\") {\n                                this.prerelease[i]++;\n                                i = -2;\n                            }\n                        }\n                        if (i === -1) {\n                            // didn't increment anything\n                            if (identifier === this.prerelease.join(\".\") && identifierBase === false) {\n                                throw new Error(\"invalid increment argument: identifier already exists\");\n                            }\n                            this.prerelease.push(base);\n                        }\n                    }\n                    if (identifier) {\n                        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n                        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n                        let prerelease = [\n                            identifier,\n                            base\n                        ];\n                        if (identifierBase === false) {\n                            prerelease = [\n                                identifier\n                            ];\n                        }\n                        if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n                            if (isNaN(this.prerelease[1])) {\n                                this.prerelease = prerelease;\n                            }\n                        } else {\n                            this.prerelease = prerelease;\n                        }\n                    }\n                    break;\n                }\n            default:\n                throw new Error(`invalid increment argument: ${release}`);\n        }\n        this.raw = this.format();\n        if (this.build.length) {\n            this.raw += `+${this.build.join(\".\")}`;\n        }\n        return this;\n    }\n}\nmodule.exports = SemVer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/clean.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/clean.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js\");\nconst clean = (version, options)=>{\n    const s = parse(version.trim().replace(/^[=v]+/, \"\"), options);\n    return s ? s.version : null;\n};\nmodule.exports = clean;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NsZWFuLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUN0QixNQUFNQyxRQUFRLENBQUNDLFNBQVNDO0lBQ3RCLE1BQU1DLElBQUlMLE1BQU1HLFFBQVFHLElBQUksR0FBR0MsT0FBTyxDQUFDLFVBQVUsS0FBS0g7SUFDdEQsT0FBT0MsSUFBSUEsRUFBRUYsT0FBTyxHQUFHO0FBQ3pCO0FBQ0FLLE9BQU9DLE9BQU8sR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NsZWFuLmpzPzBlMmMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlJylcbmNvbnN0IGNsZWFuID0gKHZlcnNpb24sIG9wdGlvbnMpID0+IHtcbiAgY29uc3QgcyA9IHBhcnNlKHZlcnNpb24udHJpbSgpLnJlcGxhY2UoL15bPXZdKy8sICcnKSwgb3B0aW9ucylcbiAgcmV0dXJuIHMgPyBzLnZlcnNpb24gOiBudWxsXG59XG5tb2R1bGUuZXhwb3J0cyA9IGNsZWFuXG4iXSwibmFtZXMiOlsicGFyc2UiLCJyZXF1aXJlIiwiY2xlYW4iLCJ2ZXJzaW9uIiwib3B0aW9ucyIsInMiLCJ0cmltIiwicmVwbGFjZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/clean.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/cmp.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/cmp.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst eq = __webpack_require__(/*! ./eq */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/eq.js\");\nconst neq = __webpack_require__(/*! ./neq */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/neq.js\");\nconst gt = __webpack_require__(/*! ./gt */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gt.js\");\nconst gte = __webpack_require__(/*! ./gte */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gte.js\");\nconst lt = __webpack_require__(/*! ./lt */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lt.js\");\nconst lte = __webpack_require__(/*! ./lte */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lte.js\");\nconst cmp = (a, op, b, loose)=>{\n    switch(op){\n        case \"===\":\n            if (typeof a === \"object\") {\n                a = a.version;\n            }\n            if (typeof b === \"object\") {\n                b = b.version;\n            }\n            return a === b;\n        case \"!==\":\n            if (typeof a === \"object\") {\n                a = a.version;\n            }\n            if (typeof b === \"object\") {\n                b = b.version;\n            }\n            return a !== b;\n        case \"\":\n        case \"=\":\n        case \"==\":\n            return eq(a, b, loose);\n        case \"!=\":\n            return neq(a, b, loose);\n        case \">\":\n            return gt(a, b, loose);\n        case \">=\":\n            return gte(a, b, loose);\n        case \"<\":\n            return lt(a, b, loose);\n        case \"<=\":\n            return lte(a, b, loose);\n        default:\n            throw new TypeError(`Invalid operator: ${op}`);\n    }\n};\nmodule.exports = cmp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NtcC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsS0FBS0MsbUJBQU9BLENBQUM7QUFDbkIsTUFBTUMsTUFBTUQsbUJBQU9BLENBQUM7QUFDcEIsTUFBTUUsS0FBS0YsbUJBQU9BLENBQUM7QUFDbkIsTUFBTUcsTUFBTUgsbUJBQU9BLENBQUM7QUFDcEIsTUFBTUksS0FBS0osbUJBQU9BLENBQUM7QUFDbkIsTUFBTUssTUFBTUwsbUJBQU9BLENBQUM7QUFFcEIsTUFBTU0sTUFBTSxDQUFDQyxHQUFHQyxJQUFJQyxHQUFHQztJQUNyQixPQUFRRjtRQUNOLEtBQUs7WUFDSCxJQUFJLE9BQU9ELE1BQU0sVUFBVTtnQkFDekJBLElBQUlBLEVBQUVJLE9BQU87WUFDZjtZQUNBLElBQUksT0FBT0YsTUFBTSxVQUFVO2dCQUN6QkEsSUFBSUEsRUFBRUUsT0FBTztZQUNmO1lBQ0EsT0FBT0osTUFBTUU7UUFFZixLQUFLO1lBQ0gsSUFBSSxPQUFPRixNQUFNLFVBQVU7Z0JBQ3pCQSxJQUFJQSxFQUFFSSxPQUFPO1lBQ2Y7WUFDQSxJQUFJLE9BQU9GLE1BQU0sVUFBVTtnQkFDekJBLElBQUlBLEVBQUVFLE9BQU87WUFDZjtZQUNBLE9BQU9KLE1BQU1FO1FBRWYsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT1YsR0FBR1EsR0FBR0UsR0FBR0M7UUFFbEIsS0FBSztZQUNILE9BQU9ULElBQUlNLEdBQUdFLEdBQUdDO1FBRW5CLEtBQUs7WUFDSCxPQUFPUixHQUFHSyxHQUFHRSxHQUFHQztRQUVsQixLQUFLO1lBQ0gsT0FBT1AsSUFBSUksR0FBR0UsR0FBR0M7UUFFbkIsS0FBSztZQUNILE9BQU9OLEdBQUdHLEdBQUdFLEdBQUdDO1FBRWxCLEtBQUs7WUFDSCxPQUFPTCxJQUFJRSxHQUFHRSxHQUFHQztRQUVuQjtZQUNFLE1BQU0sSUFBSUUsVUFBVSxDQUFDLGtCQUFrQixFQUFFSixHQUFHLENBQUM7SUFDakQ7QUFDRjtBQUNBSyxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9jbXAuanM/ODZjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlcSA9IHJlcXVpcmUoJy4vZXEnKVxuY29uc3QgbmVxID0gcmVxdWlyZSgnLi9uZXEnKVxuY29uc3QgZ3QgPSByZXF1aXJlKCcuL2d0JylcbmNvbnN0IGd0ZSA9IHJlcXVpcmUoJy4vZ3RlJylcbmNvbnN0IGx0ID0gcmVxdWlyZSgnLi9sdCcpXG5jb25zdCBsdGUgPSByZXF1aXJlKCcuL2x0ZScpXG5cbmNvbnN0IGNtcCA9IChhLCBvcCwgYiwgbG9vc2UpID0+IHtcbiAgc3dpdGNoIChvcCkge1xuICAgIGNhc2UgJz09PSc6XG4gICAgICBpZiAodHlwZW9mIGEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGEgPSBhLnZlcnNpb25cbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgYiA9IGIudmVyc2lvblxuICAgICAgfVxuICAgICAgcmV0dXJuIGEgPT09IGJcblxuICAgIGNhc2UgJyE9PSc6XG4gICAgICBpZiAodHlwZW9mIGEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGEgPSBhLnZlcnNpb25cbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgYiA9IGIudmVyc2lvblxuICAgICAgfVxuICAgICAgcmV0dXJuIGEgIT09IGJcblxuICAgIGNhc2UgJyc6XG4gICAgY2FzZSAnPSc6XG4gICAgY2FzZSAnPT0nOlxuICAgICAgcmV0dXJuIGVxKGEsIGIsIGxvb3NlKVxuXG4gICAgY2FzZSAnIT0nOlxuICAgICAgcmV0dXJuIG5lcShhLCBiLCBsb29zZSlcblxuICAgIGNhc2UgJz4nOlxuICAgICAgcmV0dXJuIGd0KGEsIGIsIGxvb3NlKVxuXG4gICAgY2FzZSAnPj0nOlxuICAgICAgcmV0dXJuIGd0ZShhLCBiLCBsb29zZSlcblxuICAgIGNhc2UgJzwnOlxuICAgICAgcmV0dXJuIGx0KGEsIGIsIGxvb3NlKVxuXG4gICAgY2FzZSAnPD0nOlxuICAgICAgcmV0dXJuIGx0ZShhLCBiLCBsb29zZSlcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIG9wZXJhdG9yOiAke29wfWApXG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gY21wXG4iXSwibmFtZXMiOlsiZXEiLCJyZXF1aXJlIiwibmVxIiwiZ3QiLCJndGUiLCJsdCIsImx0ZSIsImNtcCIsImEiLCJvcCIsImIiLCJsb29zZSIsInZlcnNpb24iLCJUeXBlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/cmp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/coerce.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/coerce.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js\");\nconst { safeRe: re, t } = __webpack_require__(/*! ../internal/re */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js\");\nconst coerce = (version, options)=>{\n    if (version instanceof SemVer) {\n        return version;\n    }\n    if (typeof version === \"number\") {\n        version = String(version);\n    }\n    if (typeof version !== \"string\") {\n        return null;\n    }\n    options = options || {};\n    let match = null;\n    if (!options.rtl) {\n        match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE]);\n    } else {\n        // Find the right-most coercible string that does not share\n        // a terminus with a more left-ward coercible string.\n        // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n        // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n        //\n        // Walk through the string checking with a /g regexp\n        // Manually set the index so as to pick up overlapping matches.\n        // Stop when we get a match that ends at the string end, since no\n        // coercible string can be more right-ward without the same terminus.\n        const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL];\n        let next;\n        while((next = coerceRtlRegex.exec(version)) && (!match || match.index + match[0].length !== version.length)){\n            if (!match || next.index + next[0].length !== match.index + match[0].length) {\n                match = next;\n            }\n            coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length;\n        }\n        // leave it in a clean state\n        coerceRtlRegex.lastIndex = -1;\n    }\n    if (match === null) {\n        return null;\n    }\n    const major = match[2];\n    const minor = match[3] || \"0\";\n    const patch = match[4] || \"0\";\n    const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : \"\";\n    const build = options.includePrerelease && match[6] ? `+${match[6]}` : \"\";\n    return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options);\n};\nmodule.exports = coerce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NvZXJjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUMsUUFBUUQsbUJBQU9BLENBQUM7QUFDdEIsTUFBTSxFQUFFRSxRQUFRQyxFQUFFLEVBQUVDLENBQUMsRUFBRSxHQUFHSixtQkFBT0EsQ0FBQztBQUVsQyxNQUFNSyxTQUFTLENBQUNDLFNBQVNDO0lBQ3ZCLElBQUlELG1CQUFtQlAsUUFBUTtRQUM3QixPQUFPTztJQUNUO0lBRUEsSUFBSSxPQUFPQSxZQUFZLFVBQVU7UUFDL0JBLFVBQVVFLE9BQU9GO0lBQ25CO0lBRUEsSUFBSSxPQUFPQSxZQUFZLFVBQVU7UUFDL0IsT0FBTztJQUNUO0lBRUFDLFVBQVVBLFdBQVcsQ0FBQztJQUV0QixJQUFJRSxRQUFRO0lBQ1osSUFBSSxDQUFDRixRQUFRRyxHQUFHLEVBQUU7UUFDaEJELFFBQVFILFFBQVFHLEtBQUssQ0FBQ0YsUUFBUUksaUJBQWlCLEdBQUdSLEVBQUUsQ0FBQ0MsRUFBRVEsVUFBVSxDQUFDLEdBQUdULEVBQUUsQ0FBQ0MsRUFBRVMsTUFBTSxDQUFDO0lBQ25GLE9BQU87UUFDTCwyREFBMkQ7UUFDM0QscURBQXFEO1FBQ3JELDBEQUEwRDtRQUMxRCwwRkFBMEY7UUFDMUYsRUFBRTtRQUNGLG9EQUFvRDtRQUNwRCwrREFBK0Q7UUFDL0QsaUVBQWlFO1FBQ2pFLHFFQUFxRTtRQUNyRSxNQUFNQyxpQkFBaUJQLFFBQVFJLGlCQUFpQixHQUFHUixFQUFFLENBQUNDLEVBQUVXLGFBQWEsQ0FBQyxHQUFHWixFQUFFLENBQUNDLEVBQUVZLFNBQVMsQ0FBQztRQUN4RixJQUFJQztRQUNKLE1BQU8sQ0FBQ0EsT0FBT0gsZUFBZUksSUFBSSxDQUFDWixRQUFPLEtBQ3JDLEVBQUNHLFNBQVNBLE1BQU1VLEtBQUssR0FBR1YsS0FBSyxDQUFDLEVBQUUsQ0FBQ1csTUFBTSxLQUFLZCxRQUFRYyxNQUFNLEVBQzdEO1lBQ0EsSUFBSSxDQUFDWCxTQUNDUSxLQUFLRSxLQUFLLEdBQUdGLElBQUksQ0FBQyxFQUFFLENBQUNHLE1BQU0sS0FBS1gsTUFBTVUsS0FBSyxHQUFHVixLQUFLLENBQUMsRUFBRSxDQUFDVyxNQUFNLEVBQUU7Z0JBQ25FWCxRQUFRUTtZQUNWO1lBQ0FILGVBQWVPLFNBQVMsR0FBR0osS0FBS0UsS0FBSyxHQUFHRixJQUFJLENBQUMsRUFBRSxDQUFDRyxNQUFNLEdBQUdILElBQUksQ0FBQyxFQUFFLENBQUNHLE1BQU07UUFDekU7UUFDQSw0QkFBNEI7UUFDNUJOLGVBQWVPLFNBQVMsR0FBRyxDQUFDO0lBQzlCO0lBRUEsSUFBSVosVUFBVSxNQUFNO1FBQ2xCLE9BQU87SUFDVDtJQUVBLE1BQU1hLFFBQVFiLEtBQUssQ0FBQyxFQUFFO0lBQ3RCLE1BQU1jLFFBQVFkLEtBQUssQ0FBQyxFQUFFLElBQUk7SUFDMUIsTUFBTWUsUUFBUWYsS0FBSyxDQUFDLEVBQUUsSUFBSTtJQUMxQixNQUFNZ0IsYUFBYWxCLFFBQVFJLGlCQUFpQixJQUFJRixLQUFLLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFQSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRztJQUM1RSxNQUFNaUIsUUFBUW5CLFFBQVFJLGlCQUFpQixJQUFJRixLQUFLLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFQSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRztJQUV2RSxPQUFPUixNQUFNLENBQUMsRUFBRXFCLE1BQU0sQ0FBQyxFQUFFQyxNQUFNLENBQUMsRUFBRUMsTUFBTSxFQUFFQyxXQUFXLEVBQUVDLE1BQU0sQ0FBQyxFQUFFbkI7QUFDbEU7QUFDQW9CLE9BQU9DLE9BQU8sR0FBR3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9jb2VyY2UuanM/NWE1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKVxuY29uc3QgeyBzYWZlUmU6IHJlLCB0IH0gPSByZXF1aXJlKCcuLi9pbnRlcm5hbC9yZScpXG5cbmNvbnN0IGNvZXJjZSA9ICh2ZXJzaW9uLCBvcHRpb25zKSA9PiB7XG4gIGlmICh2ZXJzaW9uIGluc3RhbmNlb2YgU2VtVmVyKSB7XG4gICAgcmV0dXJuIHZlcnNpb25cbiAgfVxuXG4gIGlmICh0eXBlb2YgdmVyc2lvbiA9PT0gJ251bWJlcicpIHtcbiAgICB2ZXJzaW9uID0gU3RyaW5nKHZlcnNpb24pXG4gIH1cblxuICBpZiAodHlwZW9mIHZlcnNpb24gIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgbGV0IG1hdGNoID0gbnVsbFxuICBpZiAoIW9wdGlvbnMucnRsKSB7XG4gICAgbWF0Y2ggPSB2ZXJzaW9uLm1hdGNoKG9wdGlvbnMuaW5jbHVkZVByZXJlbGVhc2UgPyByZVt0LkNPRVJDRUZVTExdIDogcmVbdC5DT0VSQ0VdKVxuICB9IGVsc2Uge1xuICAgIC8vIEZpbmQgdGhlIHJpZ2h0LW1vc3QgY29lcmNpYmxlIHN0cmluZyB0aGF0IGRvZXMgbm90IHNoYXJlXG4gICAgLy8gYSB0ZXJtaW51cyB3aXRoIGEgbW9yZSBsZWZ0LXdhcmQgY29lcmNpYmxlIHN0cmluZy5cbiAgICAvLyBFZywgJzEuMi4zLjQnIHdhbnRzIHRvIGNvZXJjZSAnMi4zLjQnLCBub3QgJzMuNCcgb3IgJzQnXG4gICAgLy8gV2l0aCBpbmNsdWRlUHJlcmVsZWFzZSBvcHRpb24gc2V0LCAnMS4yLjMuNC1yYycgd2FudHMgdG8gY29lcmNlICcyLjMuNC1yYycsIG5vdCAnMi4zLjQnXG4gICAgLy9cbiAgICAvLyBXYWxrIHRocm91Z2ggdGhlIHN0cmluZyBjaGVja2luZyB3aXRoIGEgL2cgcmVnZXhwXG4gICAgLy8gTWFudWFsbHkgc2V0IHRoZSBpbmRleCBzbyBhcyB0byBwaWNrIHVwIG92ZXJsYXBwaW5nIG1hdGNoZXMuXG4gICAgLy8gU3RvcCB3aGVuIHdlIGdldCBhIG1hdGNoIHRoYXQgZW5kcyBhdCB0aGUgc3RyaW5nIGVuZCwgc2luY2Ugbm9cbiAgICAvLyBjb2VyY2libGUgc3RyaW5nIGNhbiBiZSBtb3JlIHJpZ2h0LXdhcmQgd2l0aG91dCB0aGUgc2FtZSB0ZXJtaW51cy5cbiAgICBjb25zdCBjb2VyY2VSdGxSZWdleCA9IG9wdGlvbnMuaW5jbHVkZVByZXJlbGVhc2UgPyByZVt0LkNPRVJDRVJUTEZVTExdIDogcmVbdC5DT0VSQ0VSVExdXG4gICAgbGV0IG5leHRcbiAgICB3aGlsZSAoKG5leHQgPSBjb2VyY2VSdGxSZWdleC5leGVjKHZlcnNpb24pKSAmJlxuICAgICAgICAoIW1hdGNoIHx8IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoICE9PSB2ZXJzaW9uLmxlbmd0aClcbiAgICApIHtcbiAgICAgIGlmICghbWF0Y2ggfHxcbiAgICAgICAgICAgIG5leHQuaW5kZXggKyBuZXh0WzBdLmxlbmd0aCAhPT0gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGgpIHtcbiAgICAgICAgbWF0Y2ggPSBuZXh0XG4gICAgICB9XG4gICAgICBjb2VyY2VSdGxSZWdleC5sYXN0SW5kZXggPSBuZXh0LmluZGV4ICsgbmV4dFsxXS5sZW5ndGggKyBuZXh0WzJdLmxlbmd0aFxuICAgIH1cbiAgICAvLyBsZWF2ZSBpdCBpbiBhIGNsZWFuIHN0YXRlXG4gICAgY29lcmNlUnRsUmVnZXgubGFzdEluZGV4ID0gLTFcbiAgfVxuXG4gIGlmIChtYXRjaCA9PT0gbnVsbCkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBjb25zdCBtYWpvciA9IG1hdGNoWzJdXG4gIGNvbnN0IG1pbm9yID0gbWF0Y2hbM10gfHwgJzAnXG4gIGNvbnN0IHBhdGNoID0gbWF0Y2hbNF0gfHwgJzAnXG4gIGNvbnN0IHByZXJlbGVhc2UgPSBvcHRpb25zLmluY2x1ZGVQcmVyZWxlYXNlICYmIG1hdGNoWzVdID8gYC0ke21hdGNoWzVdfWAgOiAnJ1xuICBjb25zdCBidWlsZCA9IG9wdGlvbnMuaW5jbHVkZVByZXJlbGVhc2UgJiYgbWF0Y2hbNl0gPyBgKyR7bWF0Y2hbNl19YCA6ICcnXG5cbiAgcmV0dXJuIHBhcnNlKGAke21ham9yfS4ke21pbm9yfS4ke3BhdGNofSR7cHJlcmVsZWFzZX0ke2J1aWxkfWAsIG9wdGlvbnMpXG59XG5tb2R1bGUuZXhwb3J0cyA9IGNvZXJjZVxuIl0sIm5hbWVzIjpbIlNlbVZlciIsInJlcXVpcmUiLCJwYXJzZSIsInNhZmVSZSIsInJlIiwidCIsImNvZXJjZSIsInZlcnNpb24iLCJvcHRpb25zIiwiU3RyaW5nIiwibWF0Y2giLCJydGwiLCJpbmNsdWRlUHJlcmVsZWFzZSIsIkNPRVJDRUZVTEwiLCJDT0VSQ0UiLCJjb2VyY2VSdGxSZWdleCIsIkNPRVJDRVJUTEZVTEwiLCJDT0VSQ0VSVEwiLCJuZXh0IiwiZXhlYyIsImluZGV4IiwibGVuZ3RoIiwibGFzdEluZGV4IiwibWFqb3IiLCJtaW5vciIsInBhdGNoIiwicHJlcmVsZWFzZSIsImJ1aWxkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/coerce.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-build.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-build.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst compareBuild = (a, b, loose)=>{\n    const versionA = new SemVer(a, loose);\n    const versionB = new SemVer(b, loose);\n    return versionA.compare(versionB) || versionA.compareBuild(versionB);\n};\nmodule.exports = compareBuild;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NvbXBhcmUtYnVpbGQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLGVBQWUsQ0FBQ0MsR0FBR0MsR0FBR0M7SUFDMUIsTUFBTUMsV0FBVyxJQUFJTixPQUFPRyxHQUFHRTtJQUMvQixNQUFNRSxXQUFXLElBQUlQLE9BQU9JLEdBQUdDO0lBQy9CLE9BQU9DLFNBQVNFLE9BQU8sQ0FBQ0QsYUFBYUQsU0FBU0osWUFBWSxDQUFDSztBQUM3RDtBQUNBRSxPQUFPQyxPQUFPLEdBQUdSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9jb21wYXJlLWJ1aWxkLmpzP2QwZDEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgY29tcGFyZUJ1aWxkID0gKGEsIGIsIGxvb3NlKSA9PiB7XG4gIGNvbnN0IHZlcnNpb25BID0gbmV3IFNlbVZlcihhLCBsb29zZSlcbiAgY29uc3QgdmVyc2lvbkIgPSBuZXcgU2VtVmVyKGIsIGxvb3NlKVxuICByZXR1cm4gdmVyc2lvbkEuY29tcGFyZSh2ZXJzaW9uQikgfHwgdmVyc2lvbkEuY29tcGFyZUJ1aWxkKHZlcnNpb25CKVxufVxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlQnVpbGRcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwiY29tcGFyZUJ1aWxkIiwiYSIsImIiLCJsb29zZSIsInZlcnNpb25BIiwidmVyc2lvbkIiLCJjb21wYXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-build.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-loose.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-loose.js ***!
  \****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst compareLoose = (a, b)=>compare(a, b, true);\nmodule.exports = compareLoose;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NvbXBhcmUtbG9vc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLGVBQWUsQ0FBQ0MsR0FBR0MsSUFBTUosUUFBUUcsR0FBR0MsR0FBRztBQUM3Q0MsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvY29tcGFyZS1sb29zZS5qcz83MjRhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmUgPSByZXF1aXJlKCcuL2NvbXBhcmUnKVxuY29uc3QgY29tcGFyZUxvb3NlID0gKGEsIGIpID0+IGNvbXBhcmUoYSwgYiwgdHJ1ZSlcbm1vZHVsZS5leHBvcnRzID0gY29tcGFyZUxvb3NlXG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJjb21wYXJlTG9vc2UiLCJhIiwiYiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-loose.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst compare = (a, b, loose)=>new SemVer(a, loose).compare(new SemVer(b, loose));\nmodule.exports = compare;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2NvbXBhcmUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLFVBQVUsQ0FBQ0MsR0FBR0MsR0FBR0MsUUFDckIsSUFBSUwsT0FBT0csR0FBR0UsT0FBT0gsT0FBTyxDQUFDLElBQUlGLE9BQU9JLEdBQUdDO0FBRTdDQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9jb21wYXJlLmpzPzdlMDMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgY29tcGFyZSA9IChhLCBiLCBsb29zZSkgPT5cbiAgbmV3IFNlbVZlcihhLCBsb29zZSkuY29tcGFyZShuZXcgU2VtVmVyKGIsIGxvb3NlKSlcblxubW9kdWxlLmV4cG9ydHMgPSBjb21wYXJlXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsImNvbXBhcmUiLCJhIiwiYiIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/diff.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/diff.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js\");\nconst diff = (version1, version2)=>{\n    const v1 = parse(version1, null, true);\n    const v2 = parse(version2, null, true);\n    const comparison = v1.compare(v2);\n    if (comparison === 0) {\n        return null;\n    }\n    const v1Higher = comparison > 0;\n    const highVersion = v1Higher ? v1 : v2;\n    const lowVersion = v1Higher ? v2 : v1;\n    const highHasPre = !!highVersion.prerelease.length;\n    const lowHasPre = !!lowVersion.prerelease.length;\n    if (lowHasPre && !highHasPre) {\n        // Going from prerelease -> no prerelease requires some special casing\n        // If the low version has only a major, then it will always be a major\n        // Some examples:\n        // 1.0.0-1 -> 1.0.0\n        // 1.0.0-1 -> 1.1.1\n        // 1.0.0-1 -> 2.0.0\n        if (!lowVersion.patch && !lowVersion.minor) {\n            return \"major\";\n        }\n        // Otherwise it can be determined by checking the high version\n        if (highVersion.patch) {\n            // anything higher than a patch bump would result in the wrong version\n            return \"patch\";\n        }\n        if (highVersion.minor) {\n            // anything higher than a minor bump would result in the wrong version\n            return \"minor\";\n        }\n        // bumping major/minor/patch all have same result\n        return \"major\";\n    }\n    // add the `pre` prefix if we are going to a prerelease version\n    const prefix = highHasPre ? \"pre\" : \"\";\n    if (v1.major !== v2.major) {\n        return prefix + \"major\";\n    }\n    if (v1.minor !== v2.minor) {\n        return prefix + \"minor\";\n    }\n    if (v1.patch !== v2.patch) {\n        return prefix + \"patch\";\n    }\n    // high and low are preleases\n    return \"prerelease\";\n};\nmodule.exports = diff;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2RpZmYuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXRCLE1BQU1DLE9BQU8sQ0FBQ0MsVUFBVUM7SUFDdEIsTUFBTUMsS0FBS0wsTUFBTUcsVUFBVSxNQUFNO0lBQ2pDLE1BQU1HLEtBQUtOLE1BQU1JLFVBQVUsTUFBTTtJQUNqQyxNQUFNRyxhQUFhRixHQUFHRyxPQUFPLENBQUNGO0lBRTlCLElBQUlDLGVBQWUsR0FBRztRQUNwQixPQUFPO0lBQ1Q7SUFFQSxNQUFNRSxXQUFXRixhQUFhO0lBQzlCLE1BQU1HLGNBQWNELFdBQVdKLEtBQUtDO0lBQ3BDLE1BQU1LLGFBQWFGLFdBQVdILEtBQUtEO0lBQ25DLE1BQU1PLGFBQWEsQ0FBQyxDQUFDRixZQUFZRyxVQUFVLENBQUNDLE1BQU07SUFDbEQsTUFBTUMsWUFBWSxDQUFDLENBQUNKLFdBQVdFLFVBQVUsQ0FBQ0MsTUFBTTtJQUVoRCxJQUFJQyxhQUFhLENBQUNILFlBQVk7UUFDNUIsc0VBQXNFO1FBRXRFLHNFQUFzRTtRQUN0RSxpQkFBaUI7UUFDakIsbUJBQW1CO1FBQ25CLG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIsSUFBSSxDQUFDRCxXQUFXSyxLQUFLLElBQUksQ0FBQ0wsV0FBV00sS0FBSyxFQUFFO1lBQzFDLE9BQU87UUFDVDtRQUVBLDhEQUE4RDtRQUU5RCxJQUFJUCxZQUFZTSxLQUFLLEVBQUU7WUFDckIsc0VBQXNFO1lBQ3RFLE9BQU87UUFDVDtRQUVBLElBQUlOLFlBQVlPLEtBQUssRUFBRTtZQUNyQixzRUFBc0U7WUFDdEUsT0FBTztRQUNUO1FBRUEsaURBQWlEO1FBQ2pELE9BQU87SUFDVDtJQUVBLCtEQUErRDtJQUMvRCxNQUFNQyxTQUFTTixhQUFhLFFBQVE7SUFFcEMsSUFBSVAsR0FBR2MsS0FBSyxLQUFLYixHQUFHYSxLQUFLLEVBQUU7UUFDekIsT0FBT0QsU0FBUztJQUNsQjtJQUVBLElBQUliLEdBQUdZLEtBQUssS0FBS1gsR0FBR1csS0FBSyxFQUFFO1FBQ3pCLE9BQU9DLFNBQVM7SUFDbEI7SUFFQSxJQUFJYixHQUFHVyxLQUFLLEtBQUtWLEdBQUdVLEtBQUssRUFBRTtRQUN6QixPQUFPRSxTQUFTO0lBQ2xCO0lBRUEsNkJBQTZCO0lBQzdCLE9BQU87QUFDVDtBQUVBRSxPQUFPQyxPQUFPLEdBQUduQiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvZGlmZi5qcz9jYjZkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhcnNlID0gcmVxdWlyZSgnLi9wYXJzZS5qcycpXG5cbmNvbnN0IGRpZmYgPSAodmVyc2lvbjEsIHZlcnNpb24yKSA9PiB7XG4gIGNvbnN0IHYxID0gcGFyc2UodmVyc2lvbjEsIG51bGwsIHRydWUpXG4gIGNvbnN0IHYyID0gcGFyc2UodmVyc2lvbjIsIG51bGwsIHRydWUpXG4gIGNvbnN0IGNvbXBhcmlzb24gPSB2MS5jb21wYXJlKHYyKVxuXG4gIGlmIChjb21wYXJpc29uID09PSAwKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxuXG4gIGNvbnN0IHYxSGlnaGVyID0gY29tcGFyaXNvbiA+IDBcbiAgY29uc3QgaGlnaFZlcnNpb24gPSB2MUhpZ2hlciA/IHYxIDogdjJcbiAgY29uc3QgbG93VmVyc2lvbiA9IHYxSGlnaGVyID8gdjIgOiB2MVxuICBjb25zdCBoaWdoSGFzUHJlID0gISFoaWdoVmVyc2lvbi5wcmVyZWxlYXNlLmxlbmd0aFxuICBjb25zdCBsb3dIYXNQcmUgPSAhIWxvd1ZlcnNpb24ucHJlcmVsZWFzZS5sZW5ndGhcblxuICBpZiAobG93SGFzUHJlICYmICFoaWdoSGFzUHJlKSB7XG4gICAgLy8gR29pbmcgZnJvbSBwcmVyZWxlYXNlIC0+IG5vIHByZXJlbGVhc2UgcmVxdWlyZXMgc29tZSBzcGVjaWFsIGNhc2luZ1xuXG4gICAgLy8gSWYgdGhlIGxvdyB2ZXJzaW9uIGhhcyBvbmx5IGEgbWFqb3IsIHRoZW4gaXQgd2lsbCBhbHdheXMgYmUgYSBtYWpvclxuICAgIC8vIFNvbWUgZXhhbXBsZXM6XG4gICAgLy8gMS4wLjAtMSAtPiAxLjAuMFxuICAgIC8vIDEuMC4wLTEgLT4gMS4xLjFcbiAgICAvLyAxLjAuMC0xIC0+IDIuMC4wXG4gICAgaWYgKCFsb3dWZXJzaW9uLnBhdGNoICYmICFsb3dWZXJzaW9uLm1pbm9yKSB7XG4gICAgICByZXR1cm4gJ21ham9yJ1xuICAgIH1cblxuICAgIC8vIE90aGVyd2lzZSBpdCBjYW4gYmUgZGV0ZXJtaW5lZCBieSBjaGVja2luZyB0aGUgaGlnaCB2ZXJzaW9uXG5cbiAgICBpZiAoaGlnaFZlcnNpb24ucGF0Y2gpIHtcbiAgICAgIC8vIGFueXRoaW5nIGhpZ2hlciB0aGFuIGEgcGF0Y2ggYnVtcCB3b3VsZCByZXN1bHQgaW4gdGhlIHdyb25nIHZlcnNpb25cbiAgICAgIHJldHVybiAncGF0Y2gnXG4gICAgfVxuXG4gICAgaWYgKGhpZ2hWZXJzaW9uLm1pbm9yKSB7XG4gICAgICAvLyBhbnl0aGluZyBoaWdoZXIgdGhhbiBhIG1pbm9yIGJ1bXAgd291bGQgcmVzdWx0IGluIHRoZSB3cm9uZyB2ZXJzaW9uXG4gICAgICByZXR1cm4gJ21pbm9yJ1xuICAgIH1cblxuICAgIC8vIGJ1bXBpbmcgbWFqb3IvbWlub3IvcGF0Y2ggYWxsIGhhdmUgc2FtZSByZXN1bHRcbiAgICByZXR1cm4gJ21ham9yJ1xuICB9XG5cbiAgLy8gYWRkIHRoZSBgcHJlYCBwcmVmaXggaWYgd2UgYXJlIGdvaW5nIHRvIGEgcHJlcmVsZWFzZSB2ZXJzaW9uXG4gIGNvbnN0IHByZWZpeCA9IGhpZ2hIYXNQcmUgPyAncHJlJyA6ICcnXG5cbiAgaWYgKHYxLm1ham9yICE9PSB2Mi5tYWpvcikge1xuICAgIHJldHVybiBwcmVmaXggKyAnbWFqb3InXG4gIH1cblxuICBpZiAodjEubWlub3IgIT09IHYyLm1pbm9yKSB7XG4gICAgcmV0dXJuIHByZWZpeCArICdtaW5vcidcbiAgfVxuXG4gIGlmICh2MS5wYXRjaCAhPT0gdjIucGF0Y2gpIHtcbiAgICByZXR1cm4gcHJlZml4ICsgJ3BhdGNoJ1xuICB9XG5cbiAgLy8gaGlnaCBhbmQgbG93IGFyZSBwcmVsZWFzZXNcbiAgcmV0dXJuICdwcmVyZWxlYXNlJ1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRpZmZcbiJdLCJuYW1lcyI6WyJwYXJzZSIsInJlcXVpcmUiLCJkaWZmIiwidmVyc2lvbjEiLCJ2ZXJzaW9uMiIsInYxIiwidjIiLCJjb21wYXJpc29uIiwiY29tcGFyZSIsInYxSGlnaGVyIiwiaGlnaFZlcnNpb24iLCJsb3dWZXJzaW9uIiwiaGlnaEhhc1ByZSIsInByZXJlbGVhc2UiLCJsZW5ndGgiLCJsb3dIYXNQcmUiLCJwYXRjaCIsIm1pbm9yIiwicHJlZml4IiwibWFqb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/diff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/eq.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/eq.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst eq = (a, b, loose)=>compare(a, b, loose) === 0;\nmodule.exports = eq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2VxLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxLQUFLLENBQUNDLEdBQUdDLEdBQUdDLFFBQVVMLFFBQVFHLEdBQUdDLEdBQUdDLFdBQVc7QUFDckRDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2VxLmpzP2MyM2YiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBlcSA9IChhLCBiLCBsb29zZSkgPT4gY29tcGFyZShhLCBiLCBsb29zZSkgPT09IDBcbm1vZHVsZS5leHBvcnRzID0gZXFcbiJdLCJuYW1lcyI6WyJjb21wYXJlIiwicmVxdWlyZSIsImVxIiwiYSIsImIiLCJsb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/eq.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gt.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gt.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst gt = (a, b, loose)=>compare(a, b, loose) > 0;\nmodule.exports = gt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2d0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxLQUFLLENBQUNDLEdBQUdDLEdBQUdDLFFBQVVMLFFBQVFHLEdBQUdDLEdBQUdDLFNBQVM7QUFDbkRDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2d0LmpzPzViM2MiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBndCA9IChhLCBiLCBsb29zZSkgPT4gY29tcGFyZShhLCBiLCBsb29zZSkgPiAwXG5tb2R1bGUuZXhwb3J0cyA9IGd0XG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJndCIsImEiLCJiIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gte.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gte.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst gte = (a, b, loose)=>compare(a, b, loose) >= 0;\nmodule.exports = gte;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2d0ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsTUFBTSxDQUFDQyxHQUFHQyxHQUFHQyxRQUFVTCxRQUFRRyxHQUFHQyxHQUFHQyxVQUFVO0FBQ3JEQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9ndGUuanM/ZmE2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9jb21wYXJlJylcbmNvbnN0IGd0ZSA9IChhLCBiLCBsb29zZSkgPT4gY29tcGFyZShhLCBiLCBsb29zZSkgPj0gMFxubW9kdWxlLmV4cG9ydHMgPSBndGVcbiJdLCJuYW1lcyI6WyJjb21wYXJlIiwicmVxdWlyZSIsImd0ZSIsImEiLCJiIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gte.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/inc.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/inc.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst inc = (version, release, options, identifier, identifierBase)=>{\n    if (typeof options === \"string\") {\n        identifierBase = identifier;\n        identifier = options;\n        options = undefined;\n    }\n    try {\n        return new SemVer(version instanceof SemVer ? version.version : version, options).inc(release, identifier, identifierBase).version;\n    } catch (er) {\n        return null;\n    }\n};\nmodule.exports = inc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2luYy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUMsTUFBTSxDQUFDQyxTQUFTQyxTQUFTQyxTQUFTQyxZQUFZQztJQUNsRCxJQUFJLE9BQVFGLFlBQWEsVUFBVTtRQUNqQ0UsaUJBQWlCRDtRQUNqQkEsYUFBYUQ7UUFDYkEsVUFBVUc7SUFDWjtJQUVBLElBQUk7UUFDRixPQUFPLElBQUlSLE9BQ1RHLG1CQUFtQkgsU0FBU0csUUFBUUEsT0FBTyxHQUFHQSxTQUM5Q0UsU0FDQUgsR0FBRyxDQUFDRSxTQUFTRSxZQUFZQyxnQkFBZ0JKLE9BQU87SUFDcEQsRUFBRSxPQUFPTSxJQUFJO1FBQ1gsT0FBTztJQUNUO0FBQ0Y7QUFDQUMsT0FBT0MsT0FBTyxHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvaW5jLmpzPzY5NDIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuXG5jb25zdCBpbmMgPSAodmVyc2lvbiwgcmVsZWFzZSwgb3B0aW9ucywgaWRlbnRpZmllciwgaWRlbnRpZmllckJhc2UpID0+IHtcbiAgaWYgKHR5cGVvZiAob3B0aW9ucykgPT09ICdzdHJpbmcnKSB7XG4gICAgaWRlbnRpZmllckJhc2UgPSBpZGVudGlmaWVyXG4gICAgaWRlbnRpZmllciA9IG9wdGlvbnNcbiAgICBvcHRpb25zID0gdW5kZWZpbmVkXG4gIH1cblxuICB0cnkge1xuICAgIHJldHVybiBuZXcgU2VtVmVyKFxuICAgICAgdmVyc2lvbiBpbnN0YW5jZW9mIFNlbVZlciA/IHZlcnNpb24udmVyc2lvbiA6IHZlcnNpb24sXG4gICAgICBvcHRpb25zXG4gICAgKS5pbmMocmVsZWFzZSwgaWRlbnRpZmllciwgaWRlbnRpZmllckJhc2UpLnZlcnNpb25cbiAgfSBjYXRjaCAoZXIpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluY1xuIl0sIm5hbWVzIjpbIlNlbVZlciIsInJlcXVpcmUiLCJpbmMiLCJ2ZXJzaW9uIiwicmVsZWFzZSIsIm9wdGlvbnMiLCJpZGVudGlmaWVyIiwiaWRlbnRpZmllckJhc2UiLCJ1bmRlZmluZWQiLCJlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/inc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lt.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lt.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst lt = (a, b, loose)=>compare(a, b, loose) < 0;\nmodule.exports = lt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2x0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxLQUFLLENBQUNDLEdBQUdDLEdBQUdDLFFBQVVMLFFBQVFHLEdBQUdDLEdBQUdDLFNBQVM7QUFDbkRDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2x0LmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZSA9IHJlcXVpcmUoJy4vY29tcGFyZScpXG5jb25zdCBsdCA9IChhLCBiLCBsb29zZSkgPT4gY29tcGFyZShhLCBiLCBsb29zZSkgPCAwXG5tb2R1bGUuZXhwb3J0cyA9IGx0XG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJsdCIsImEiLCJiIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lte.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lte.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst lte = (a, b, loose)=>compare(a, b, loose) <= 0;\nmodule.exports = lte;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL2x0ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsTUFBTSxDQUFDQyxHQUFHQyxHQUFHQyxRQUFVTCxRQUFRRyxHQUFHQyxHQUFHQyxVQUFVO0FBQ3JEQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9sdGUuanM/MDM2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9jb21wYXJlJylcbmNvbnN0IGx0ZSA9IChhLCBiLCBsb29zZSkgPT4gY29tcGFyZShhLCBiLCBsb29zZSkgPD0gMFxubW9kdWxlLmV4cG9ydHMgPSBsdGVcbiJdLCJuYW1lcyI6WyJjb21wYXJlIiwicmVxdWlyZSIsImx0ZSIsImEiLCJiIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lte.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/major.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/major.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst major = (a, loose)=>new SemVer(a, loose).major;\nmodule.exports = major;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL21ham9yLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRLENBQUNDLEdBQUdDLFFBQVUsSUFBSUosT0FBT0csR0FBR0MsT0FBT0YsS0FBSztBQUN0REcsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbWFqb3IuanM/MDQ5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBtYWpvciA9IChhLCBsb29zZSkgPT4gbmV3IFNlbVZlcihhLCBsb29zZSkubWFqb3Jcbm1vZHVsZS5leHBvcnRzID0gbWFqb3JcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwibWFqb3IiLCJhIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/major.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/minor.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/minor.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst minor = (a, loose)=>new SemVer(a, loose).minor;\nmodule.exports = minor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL21pbm9yLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRLENBQUNDLEdBQUdDLFFBQVUsSUFBSUosT0FBT0csR0FBR0MsT0FBT0YsS0FBSztBQUN0REcsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvbWlub3IuanM/MzA3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBtaW5vciA9IChhLCBsb29zZSkgPT4gbmV3IFNlbVZlcihhLCBsb29zZSkubWlub3Jcbm1vZHVsZS5leHBvcnRzID0gbWlub3JcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwibWlub3IiLCJhIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/minor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/neq.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/neq.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst neq = (a, b, loose)=>compare(a, b, loose) !== 0;\nmodule.exports = neq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL25lcS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsTUFBTSxDQUFDQyxHQUFHQyxHQUFHQyxRQUFVTCxRQUFRRyxHQUFHQyxHQUFHQyxXQUFXO0FBQ3REQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9uZXEuanM/YTc3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9jb21wYXJlJylcbmNvbnN0IG5lcSA9IChhLCBiLCBsb29zZSkgPT4gY29tcGFyZShhLCBiLCBsb29zZSkgIT09IDBcbm1vZHVsZS5leHBvcnRzID0gbmVxXG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJuZXEiLCJhIiwiYiIsImxvb3NlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/neq.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst parse = (version, options, throwErrors = false)=>{\n    if (version instanceof SemVer) {\n        return version;\n    }\n    try {\n        return new SemVer(version, options);\n    } catch (er) {\n        if (!throwErrors) {\n            return null;\n        }\n        throw er;\n    }\n};\nmodule.exports = parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3BhcnNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRLENBQUNDLFNBQVNDLFNBQVNDLGNBQWMsS0FBSztJQUNsRCxJQUFJRixtQkFBbUJILFFBQVE7UUFDN0IsT0FBT0c7SUFDVDtJQUNBLElBQUk7UUFDRixPQUFPLElBQUlILE9BQU9HLFNBQVNDO0lBQzdCLEVBQUUsT0FBT0UsSUFBSTtRQUNYLElBQUksQ0FBQ0QsYUFBYTtZQUNoQixPQUFPO1FBQ1Q7UUFDQSxNQUFNQztJQUNSO0FBQ0Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcGFyc2UuanM/NTIwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBwYXJzZSA9ICh2ZXJzaW9uLCBvcHRpb25zLCB0aHJvd0Vycm9ycyA9IGZhbHNlKSA9PiB7XG4gIGlmICh2ZXJzaW9uIGluc3RhbmNlb2YgU2VtVmVyKSB7XG4gICAgcmV0dXJuIHZlcnNpb25cbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBuZXcgU2VtVmVyKHZlcnNpb24sIG9wdGlvbnMpXG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgaWYgKCF0aHJvd0Vycm9ycykge1xuICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG4gICAgdGhyb3cgZXJcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNlXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsInBhcnNlIiwidmVyc2lvbiIsIm9wdGlvbnMiLCJ0aHJvd0Vycm9ycyIsImVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/patch.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/patch.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst patch = (a, loose)=>new SemVer(a, loose).patch;\nmodule.exports = patch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3BhdGNoLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRLENBQUNDLEdBQUdDLFFBQVUsSUFBSUosT0FBT0csR0FBR0MsT0FBT0YsS0FBSztBQUN0REcsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcGF0Y2guanM/ZDQxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBwYXRjaCA9IChhLCBsb29zZSkgPT4gbmV3IFNlbVZlcihhLCBsb29zZSkucGF0Y2hcbm1vZHVsZS5leHBvcnRzID0gcGF0Y2hcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwicGF0Y2giLCJhIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/patch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/prerelease.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/prerelease.js ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js\");\nconst prerelease = (version, options)=>{\n    const parsed = parse(version, options);\n    return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n};\nmodule.exports = prerelease;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3ByZXJlbGVhc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1DLGFBQWEsQ0FBQ0MsU0FBU0M7SUFDM0IsTUFBTUMsU0FBU0wsTUFBTUcsU0FBU0M7SUFDOUIsT0FBTyxVQUFXQyxPQUFPSCxVQUFVLENBQUNJLE1BQU0sR0FBSUQsT0FBT0gsVUFBVSxHQUFHO0FBQ3BFO0FBQ0FLLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3ByZXJlbGVhc2UuanM/ZmY5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKVxuY29uc3QgcHJlcmVsZWFzZSA9ICh2ZXJzaW9uLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IHBhcnNlZCA9IHBhcnNlKHZlcnNpb24sIG9wdGlvbnMpXG4gIHJldHVybiAocGFyc2VkICYmIHBhcnNlZC5wcmVyZWxlYXNlLmxlbmd0aCkgPyBwYXJzZWQucHJlcmVsZWFzZSA6IG51bGxcbn1cbm1vZHVsZS5leHBvcnRzID0gcHJlcmVsZWFzZVxuIl0sIm5hbWVzIjpbInBhcnNlIiwicmVxdWlyZSIsInByZXJlbGVhc2UiLCJ2ZXJzaW9uIiwib3B0aW9ucyIsInBhcnNlZCIsImxlbmd0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/prerelease.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rcompare.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rcompare.js ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compare = __webpack_require__(/*! ./compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst rcompare = (a, b, loose)=>compare(b, a, loose);\nmodule.exports = rcompare;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3Jjb21wYXJlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxVQUFVQyxtQkFBT0EsQ0FBQztBQUN4QixNQUFNQyxXQUFXLENBQUNDLEdBQUdDLEdBQUdDLFFBQVVMLFFBQVFJLEdBQUdELEdBQUdFO0FBQ2hEQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9yY29tcGFyZS5qcz85ZDg4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbXBhcmUgPSByZXF1aXJlKCcuL2NvbXBhcmUnKVxuY29uc3QgcmNvbXBhcmUgPSAoYSwgYiwgbG9vc2UpID0+IGNvbXBhcmUoYiwgYSwgbG9vc2UpXG5tb2R1bGUuZXhwb3J0cyA9IHJjb21wYXJlXG4iXSwibmFtZXMiOlsiY29tcGFyZSIsInJlcXVpcmUiLCJyY29tcGFyZSIsImEiLCJiIiwibG9vc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rcompare.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rsort.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rsort.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compareBuild = __webpack_require__(/*! ./compare-build */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-build.js\");\nconst rsort = (list, loose)=>list.sort((a, b)=>compareBuild(b, a, loose));\nmodule.exports = rsort;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3Jzb3J0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxlQUFlQyxtQkFBT0EsQ0FBQztBQUM3QixNQUFNQyxRQUFRLENBQUNDLE1BQU1DLFFBQVVELEtBQUtFLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUFNUCxhQUFhTyxHQUFHRCxHQUFHRjtBQUN0RUksT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9mdW5jdGlvbnMvcnNvcnQuanM/Y2M1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlQnVpbGQgPSByZXF1aXJlKCcuL2NvbXBhcmUtYnVpbGQnKVxuY29uc3QgcnNvcnQgPSAobGlzdCwgbG9vc2UpID0+IGxpc3Quc29ydCgoYSwgYikgPT4gY29tcGFyZUJ1aWxkKGIsIGEsIGxvb3NlKSlcbm1vZHVsZS5leHBvcnRzID0gcnNvcnRcbiJdLCJuYW1lcyI6WyJjb21wYXJlQnVpbGQiLCJyZXF1aXJlIiwicnNvcnQiLCJsaXN0IiwibG9vc2UiLCJzb3J0IiwiYSIsImIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rsort.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/satisfies.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/satisfies.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst satisfies = (version, range, options)=>{\n    try {\n        range = new Range(range, options);\n    } catch (er) {\n        return false;\n    }\n    return range.test(version);\n};\nmodule.exports = satisfies;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3NhdGlzZmllcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsUUFBUUMsbUJBQU9BLENBQUM7QUFDdEIsTUFBTUMsWUFBWSxDQUFDQyxTQUFTQyxPQUFPQztJQUNqQyxJQUFJO1FBQ0ZELFFBQVEsSUFBSUosTUFBTUksT0FBT0M7SUFDM0IsRUFBRSxPQUFPQyxJQUFJO1FBQ1gsT0FBTztJQUNUO0lBQ0EsT0FBT0YsTUFBTUcsSUFBSSxDQUFDSjtBQUNwQjtBQUNBSyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9zYXRpc2ZpZXMuanM/ZGVjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSYW5nZSA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvcmFuZ2UnKVxuY29uc3Qgc2F0aXNmaWVzID0gKHZlcnNpb24sIHJhbmdlLCBvcHRpb25zKSA9PiB7XG4gIHRyeSB7XG4gICAgcmFuZ2UgPSBuZXcgUmFuZ2UocmFuZ2UsIG9wdGlvbnMpXG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgcmV0dXJuIHJhbmdlLnRlc3QodmVyc2lvbilcbn1cbm1vZHVsZS5leHBvcnRzID0gc2F0aXNmaWVzXG4iXSwibmFtZXMiOlsiUmFuZ2UiLCJyZXF1aXJlIiwic2F0aXNmaWVzIiwidmVyc2lvbiIsInJhbmdlIiwib3B0aW9ucyIsImVyIiwidGVzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/satisfies.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/sort.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/sort.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst compareBuild = __webpack_require__(/*! ./compare-build */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-build.js\");\nconst sort = (list, loose)=>list.sort((a, b)=>compareBuild(a, b, loose));\nmodule.exports = sort;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3NvcnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGVBQWVDLG1CQUFPQSxDQUFDO0FBQzdCLE1BQU1DLE9BQU8sQ0FBQ0MsTUFBTUMsUUFBVUQsS0FBS0QsSUFBSSxDQUFDLENBQUNHLEdBQUdDLElBQU1OLGFBQWFLLEdBQUdDLEdBQUdGO0FBQ3JFRyxPQUFPQyxPQUFPLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy9zb3J0LmpzPzZiYmQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tcGFyZUJ1aWxkID0gcmVxdWlyZSgnLi9jb21wYXJlLWJ1aWxkJylcbmNvbnN0IHNvcnQgPSAobGlzdCwgbG9vc2UpID0+IGxpc3Quc29ydCgoYSwgYikgPT4gY29tcGFyZUJ1aWxkKGEsIGIsIGxvb3NlKSlcbm1vZHVsZS5leHBvcnRzID0gc29ydFxuIl0sIm5hbWVzIjpbImNvbXBhcmVCdWlsZCIsInJlcXVpcmUiLCJzb3J0IiwibGlzdCIsImxvb3NlIiwiYSIsImIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/sort.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/valid.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/valid.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst parse = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js\");\nconst valid = (version, options)=>{\n    const v = parse(version, options);\n    return v ? v.version : null;\n};\nmodule.exports = valid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvZnVuY3Rpb25zL3ZhbGlkLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUN0QixNQUFNQyxRQUFRLENBQUNDLFNBQVNDO0lBQ3RCLE1BQU1DLElBQUlMLE1BQU1HLFNBQVNDO0lBQ3pCLE9BQU9DLElBQUlBLEVBQUVGLE9BQU8sR0FBRztBQUN6QjtBQUNBRyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2Z1bmN0aW9ucy92YWxpZC5qcz8zODMzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhcnNlID0gcmVxdWlyZSgnLi9wYXJzZScpXG5jb25zdCB2YWxpZCA9ICh2ZXJzaW9uLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IHYgPSBwYXJzZSh2ZXJzaW9uLCBvcHRpb25zKVxuICByZXR1cm4gdiA/IHYudmVyc2lvbiA6IG51bGxcbn1cbm1vZHVsZS5leHBvcnRzID0gdmFsaWRcbiJdLCJuYW1lcyI6WyJwYXJzZSIsInJlcXVpcmUiLCJ2YWxpZCIsInZlcnNpb24iLCJvcHRpb25zIiwidiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/index.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// just pre-load all the stuff that index.js lazily exports\n\nconst internalRe = __webpack_require__(/*! ./internal/re */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js\");\nconst constants = __webpack_require__(/*! ./internal/constants */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/constants.js\");\nconst SemVer = __webpack_require__(/*! ./classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst identifiers = __webpack_require__(/*! ./internal/identifiers */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/identifiers.js\");\nconst parse = __webpack_require__(/*! ./functions/parse */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/parse.js\");\nconst valid = __webpack_require__(/*! ./functions/valid */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/valid.js\");\nconst clean = __webpack_require__(/*! ./functions/clean */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/clean.js\");\nconst inc = __webpack_require__(/*! ./functions/inc */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/inc.js\");\nconst diff = __webpack_require__(/*! ./functions/diff */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/diff.js\");\nconst major = __webpack_require__(/*! ./functions/major */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/major.js\");\nconst minor = __webpack_require__(/*! ./functions/minor */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/minor.js\");\nconst patch = __webpack_require__(/*! ./functions/patch */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/patch.js\");\nconst prerelease = __webpack_require__(/*! ./functions/prerelease */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/prerelease.js\");\nconst compare = __webpack_require__(/*! ./functions/compare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nconst rcompare = __webpack_require__(/*! ./functions/rcompare */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rcompare.js\");\nconst compareLoose = __webpack_require__(/*! ./functions/compare-loose */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-loose.js\");\nconst compareBuild = __webpack_require__(/*! ./functions/compare-build */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare-build.js\");\nconst sort = __webpack_require__(/*! ./functions/sort */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/sort.js\");\nconst rsort = __webpack_require__(/*! ./functions/rsort */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/rsort.js\");\nconst gt = __webpack_require__(/*! ./functions/gt */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gt.js\");\nconst lt = __webpack_require__(/*! ./functions/lt */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lt.js\");\nconst eq = __webpack_require__(/*! ./functions/eq */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/eq.js\");\nconst neq = __webpack_require__(/*! ./functions/neq */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/neq.js\");\nconst gte = __webpack_require__(/*! ./functions/gte */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gte.js\");\nconst lte = __webpack_require__(/*! ./functions/lte */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lte.js\");\nconst cmp = __webpack_require__(/*! ./functions/cmp */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/cmp.js\");\nconst coerce = __webpack_require__(/*! ./functions/coerce */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/coerce.js\");\nconst Comparator = __webpack_require__(/*! ./classes/comparator */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/comparator.js\");\nconst Range = __webpack_require__(/*! ./classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst satisfies = __webpack_require__(/*! ./functions/satisfies */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/satisfies.js\");\nconst toComparators = __webpack_require__(/*! ./ranges/to-comparators */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/to-comparators.js\");\nconst maxSatisfying = __webpack_require__(/*! ./ranges/max-satisfying */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/max-satisfying.js\");\nconst minSatisfying = __webpack_require__(/*! ./ranges/min-satisfying */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-satisfying.js\");\nconst minVersion = __webpack_require__(/*! ./ranges/min-version */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-version.js\");\nconst validRange = __webpack_require__(/*! ./ranges/valid */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/valid.js\");\nconst outside = __webpack_require__(/*! ./ranges/outside */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/outside.js\");\nconst gtr = __webpack_require__(/*! ./ranges/gtr */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/gtr.js\");\nconst ltr = __webpack_require__(/*! ./ranges/ltr */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/ltr.js\");\nconst intersects = __webpack_require__(/*! ./ranges/intersects */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/intersects.js\");\nconst simplifyRange = __webpack_require__(/*! ./ranges/simplify */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/simplify.js\");\nconst subset = __webpack_require__(/*! ./ranges/subset */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/subset.js\");\nmodule.exports = {\n    parse,\n    valid,\n    clean,\n    inc,\n    diff,\n    major,\n    minor,\n    patch,\n    prerelease,\n    compare,\n    rcompare,\n    compareLoose,\n    compareBuild,\n    sort,\n    rsort,\n    gt,\n    lt,\n    eq,\n    neq,\n    gte,\n    lte,\n    cmp,\n    coerce,\n    Comparator,\n    Range,\n    satisfies,\n    toComparators,\n    maxSatisfying,\n    minSatisfying,\n    minVersion,\n    validRange,\n    outside,\n    gtr,\n    ltr,\n    intersects,\n    simplifyRange,\n    subset,\n    SemVer,\n    re: internalRe.re,\n    src: internalRe.src,\n    tokens: internalRe.t,\n    SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n    RELEASE_TYPES: constants.RELEASE_TYPES,\n    compareIdentifiers: identifiers.compareIdentifiers,\n    rcompareIdentifiers: identifiers.rcompareIdentifiers\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsMkRBQTJEOztBQUMzRCxNQUFNQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUMzQixNQUFNQyxZQUFZRCxtQkFBT0EsQ0FBQztBQUMxQixNQUFNRSxTQUFTRixtQkFBT0EsQ0FBQztBQUN2QixNQUFNRyxjQUFjSCxtQkFBT0EsQ0FBQztBQUM1QixNQUFNSSxRQUFRSixtQkFBT0EsQ0FBQztBQUN0QixNQUFNSyxRQUFRTCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNTSxRQUFRTixtQkFBT0EsQ0FBQztBQUN0QixNQUFNTyxNQUFNUCxtQkFBT0EsQ0FBQztBQUNwQixNQUFNUSxPQUFPUixtQkFBT0EsQ0FBQztBQUNyQixNQUFNUyxRQUFRVCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNVSxRQUFRVixtQkFBT0EsQ0FBQztBQUN0QixNQUFNVyxRQUFRWCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNWSxhQUFhWixtQkFBT0EsQ0FBQztBQUMzQixNQUFNYSxVQUFVYixtQkFBT0EsQ0FBQztBQUN4QixNQUFNYyxXQUFXZCxtQkFBT0EsQ0FBQztBQUN6QixNQUFNZSxlQUFlZixtQkFBT0EsQ0FBQztBQUM3QixNQUFNZ0IsZUFBZWhCLG1CQUFPQSxDQUFDO0FBQzdCLE1BQU1pQixPQUFPakIsbUJBQU9BLENBQUM7QUFDckIsTUFBTWtCLFFBQVFsQixtQkFBT0EsQ0FBQztBQUN0QixNQUFNbUIsS0FBS25CLG1CQUFPQSxDQUFDO0FBQ25CLE1BQU1vQixLQUFLcEIsbUJBQU9BLENBQUM7QUFDbkIsTUFBTXFCLEtBQUtyQixtQkFBT0EsQ0FBQztBQUNuQixNQUFNc0IsTUFBTXRCLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU11QixNQUFNdkIsbUJBQU9BLENBQUM7QUFDcEIsTUFBTXdCLE1BQU14QixtQkFBT0EsQ0FBQztBQUNwQixNQUFNeUIsTUFBTXpCLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU0wQixTQUFTMUIsbUJBQU9BLENBQUM7QUFDdkIsTUFBTTJCLGFBQWEzQixtQkFBT0EsQ0FBQztBQUMzQixNQUFNNEIsUUFBUTVCLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU02QixZQUFZN0IsbUJBQU9BLENBQUM7QUFDMUIsTUFBTThCLGdCQUFnQjlCLG1CQUFPQSxDQUFDO0FBQzlCLE1BQU0rQixnQkFBZ0IvQixtQkFBT0EsQ0FBQztBQUM5QixNQUFNZ0MsZ0JBQWdCaEMsbUJBQU9BLENBQUM7QUFDOUIsTUFBTWlDLGFBQWFqQyxtQkFBT0EsQ0FBQztBQUMzQixNQUFNa0MsYUFBYWxDLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1tQyxVQUFVbkMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTW9DLE1BQU1wQyxtQkFBT0EsQ0FBQztBQUNwQixNQUFNcUMsTUFBTXJDLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU1zQyxhQUFhdEMsbUJBQU9BLENBQUM7QUFDM0IsTUFBTXVDLGdCQUFnQnZDLG1CQUFPQSxDQUFDO0FBQzlCLE1BQU13QyxTQUFTeEMsbUJBQU9BLENBQUM7QUFDdkJ5QyxPQUFPQyxPQUFPLEdBQUc7SUFDZnRDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0F0QztJQUNBeUMsSUFBSTVDLFdBQVc0QyxFQUFFO0lBQ2pCQyxLQUFLN0MsV0FBVzZDLEdBQUc7SUFDbkJDLFFBQVE5QyxXQUFXK0MsQ0FBQztJQUNwQkMscUJBQXFCOUMsVUFBVThDLG1CQUFtQjtJQUNsREMsZUFBZS9DLFVBQVUrQyxhQUFhO0lBQ3RDQyxvQkFBb0I5QyxZQUFZOEMsa0JBQWtCO0lBQ2xEQyxxQkFBcUIvQyxZQUFZK0MsbUJBQW1CO0FBQ3REIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2luZGV4LmpzPzkwM2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8ganVzdCBwcmUtbG9hZCBhbGwgdGhlIHN0dWZmIHRoYXQgaW5kZXguanMgbGF6aWx5IGV4cG9ydHNcbmNvbnN0IGludGVybmFsUmUgPSByZXF1aXJlKCcuL2ludGVybmFsL3JlJylcbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvY29uc3RhbnRzJylcbmNvbnN0IFNlbVZlciA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgaWRlbnRpZmllcnMgPSByZXF1aXJlKCcuL2ludGVybmFsL2lkZW50aWZpZXJzJylcbmNvbnN0IHBhcnNlID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvcGFyc2UnKVxuY29uc3QgdmFsaWQgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy92YWxpZCcpXG5jb25zdCBjbGVhbiA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2NsZWFuJylcbmNvbnN0IGluYyA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2luYycpXG5jb25zdCBkaWZmID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvZGlmZicpXG5jb25zdCBtYWpvciA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL21ham9yJylcbmNvbnN0IG1pbm9yID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvbWlub3InKVxuY29uc3QgcGF0Y2ggPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9wYXRjaCcpXG5jb25zdCBwcmVyZWxlYXNlID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvcHJlcmVsZWFzZScpXG5jb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvY29tcGFyZScpXG5jb25zdCByY29tcGFyZSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL3Jjb21wYXJlJylcbmNvbnN0IGNvbXBhcmVMb29zZSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2NvbXBhcmUtbG9vc2UnKVxuY29uc3QgY29tcGFyZUJ1aWxkID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvY29tcGFyZS1idWlsZCcpXG5jb25zdCBzb3J0ID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvc29ydCcpXG5jb25zdCByc29ydCA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL3Jzb3J0JylcbmNvbnN0IGd0ID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvZ3QnKVxuY29uc3QgbHQgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9sdCcpXG5jb25zdCBlcSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2VxJylcbmNvbnN0IG5lcSA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL25lcScpXG5jb25zdCBndGUgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9ndGUnKVxuY29uc3QgbHRlID0gcmVxdWlyZSgnLi9mdW5jdGlvbnMvbHRlJylcbmNvbnN0IGNtcCA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL2NtcCcpXG5jb25zdCBjb2VyY2UgPSByZXF1aXJlKCcuL2Z1bmN0aW9ucy9jb2VyY2UnKVxuY29uc3QgQ29tcGFyYXRvciA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9jb21wYXJhdG9yJylcbmNvbnN0IFJhbmdlID0gcmVxdWlyZSgnLi9jbGFzc2VzL3JhbmdlJylcbmNvbnN0IHNhdGlzZmllcyA9IHJlcXVpcmUoJy4vZnVuY3Rpb25zL3NhdGlzZmllcycpXG5jb25zdCB0b0NvbXBhcmF0b3JzID0gcmVxdWlyZSgnLi9yYW5nZXMvdG8tY29tcGFyYXRvcnMnKVxuY29uc3QgbWF4U2F0aXNmeWluZyA9IHJlcXVpcmUoJy4vcmFuZ2VzL21heC1zYXRpc2Z5aW5nJylcbmNvbnN0IG1pblNhdGlzZnlpbmcgPSByZXF1aXJlKCcuL3Jhbmdlcy9taW4tc2F0aXNmeWluZycpXG5jb25zdCBtaW5WZXJzaW9uID0gcmVxdWlyZSgnLi9yYW5nZXMvbWluLXZlcnNpb24nKVxuY29uc3QgdmFsaWRSYW5nZSA9IHJlcXVpcmUoJy4vcmFuZ2VzL3ZhbGlkJylcbmNvbnN0IG91dHNpZGUgPSByZXF1aXJlKCcuL3Jhbmdlcy9vdXRzaWRlJylcbmNvbnN0IGd0ciA9IHJlcXVpcmUoJy4vcmFuZ2VzL2d0cicpXG5jb25zdCBsdHIgPSByZXF1aXJlKCcuL3Jhbmdlcy9sdHInKVxuY29uc3QgaW50ZXJzZWN0cyA9IHJlcXVpcmUoJy4vcmFuZ2VzL2ludGVyc2VjdHMnKVxuY29uc3Qgc2ltcGxpZnlSYW5nZSA9IHJlcXVpcmUoJy4vcmFuZ2VzL3NpbXBsaWZ5JylcbmNvbnN0IHN1YnNldCA9IHJlcXVpcmUoJy4vcmFuZ2VzL3N1YnNldCcpXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcGFyc2UsXG4gIHZhbGlkLFxuICBjbGVhbixcbiAgaW5jLFxuICBkaWZmLFxuICBtYWpvcixcbiAgbWlub3IsXG4gIHBhdGNoLFxuICBwcmVyZWxlYXNlLFxuICBjb21wYXJlLFxuICByY29tcGFyZSxcbiAgY29tcGFyZUxvb3NlLFxuICBjb21wYXJlQnVpbGQsXG4gIHNvcnQsXG4gIHJzb3J0LFxuICBndCxcbiAgbHQsXG4gIGVxLFxuICBuZXEsXG4gIGd0ZSxcbiAgbHRlLFxuICBjbXAsXG4gIGNvZXJjZSxcbiAgQ29tcGFyYXRvcixcbiAgUmFuZ2UsXG4gIHNhdGlzZmllcyxcbiAgdG9Db21wYXJhdG9ycyxcbiAgbWF4U2F0aXNmeWluZyxcbiAgbWluU2F0aXNmeWluZyxcbiAgbWluVmVyc2lvbixcbiAgdmFsaWRSYW5nZSxcbiAgb3V0c2lkZSxcbiAgZ3RyLFxuICBsdHIsXG4gIGludGVyc2VjdHMsXG4gIHNpbXBsaWZ5UmFuZ2UsXG4gIHN1YnNldCxcbiAgU2VtVmVyLFxuICByZTogaW50ZXJuYWxSZS5yZSxcbiAgc3JjOiBpbnRlcm5hbFJlLnNyYyxcbiAgdG9rZW5zOiBpbnRlcm5hbFJlLnQsXG4gIFNFTVZFUl9TUEVDX1ZFUlNJT046IGNvbnN0YW50cy5TRU1WRVJfU1BFQ19WRVJTSU9OLFxuICBSRUxFQVNFX1RZUEVTOiBjb25zdGFudHMuUkVMRUFTRV9UWVBFUyxcbiAgY29tcGFyZUlkZW50aWZpZXJzOiBpZGVudGlmaWVycy5jb21wYXJlSWRlbnRpZmllcnMsXG4gIHJjb21wYXJlSWRlbnRpZmllcnM6IGlkZW50aWZpZXJzLnJjb21wYXJlSWRlbnRpZmllcnMsXG59XG4iXSwibmFtZXMiOlsiaW50ZXJuYWxSZSIsInJlcXVpcmUiLCJjb25zdGFudHMiLCJTZW1WZXIiLCJpZGVudGlmaWVycyIsInBhcnNlIiwidmFsaWQiLCJjbGVhbiIsImluYyIsImRpZmYiLCJtYWpvciIsIm1pbm9yIiwicGF0Y2giLCJwcmVyZWxlYXNlIiwiY29tcGFyZSIsInJjb21wYXJlIiwiY29tcGFyZUxvb3NlIiwiY29tcGFyZUJ1aWxkIiwic29ydCIsInJzb3J0IiwiZ3QiLCJsdCIsImVxIiwibmVxIiwiZ3RlIiwibHRlIiwiY21wIiwiY29lcmNlIiwiQ29tcGFyYXRvciIsIlJhbmdlIiwic2F0aXNmaWVzIiwidG9Db21wYXJhdG9ycyIsIm1heFNhdGlzZnlpbmciLCJtaW5TYXRpc2Z5aW5nIiwibWluVmVyc2lvbiIsInZhbGlkUmFuZ2UiLCJvdXRzaWRlIiwiZ3RyIiwibHRyIiwiaW50ZXJzZWN0cyIsInNpbXBsaWZ5UmFuZ2UiLCJzdWJzZXQiLCJtb2R1bGUiLCJleHBvcnRzIiwicmUiLCJzcmMiLCJ0b2tlbnMiLCJ0IiwiU0VNVkVSX1NQRUNfVkVSU0lPTiIsIlJFTEVBU0VfVFlQRVMiLCJjb21wYXJlSWRlbnRpZmllcnMiLCJyY29tcGFyZUlkZW50aWZpZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/constants.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/constants.js ***!
  \***********************************************************************************************/
/***/ ((module) => {

eval("// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\n\nconst SEMVER_SPEC_VERSION = \"2.0.0\";\nconst MAX_LENGTH = 256;\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */ 9007199254740991;\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16;\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;\nconst RELEASE_TYPES = [\n    \"major\",\n    \"premajor\",\n    \"minor\",\n    \"preminor\",\n    \"patch\",\n    \"prepatch\",\n    \"prerelease\"\n];\nmodule.exports = {\n    MAX_LENGTH,\n    MAX_SAFE_COMPONENT_LENGTH,\n    MAX_SAFE_BUILD_LENGTH,\n    MAX_SAFE_INTEGER,\n    RELEASE_TYPES,\n    SEMVER_SPEC_VERSION,\n    FLAG_INCLUDE_PRERELEASE: 1,\n    FLAG_LOOSE: 2\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHNFQUFzRTtBQUN0RSxvREFBb0Q7O0FBQ3BELE1BQU1BLHNCQUFzQjtBQUU1QixNQUFNQyxhQUFhO0FBQ25CLE1BQU1DLG1CQUFtQkMsT0FBT0QsZ0JBQWdCLElBQ2hELHdCQUF3QixHQUFHO0FBRTNCLHdDQUF3QztBQUN4QyxNQUFNRSw0QkFBNEI7QUFFbEMsZ0ZBQWdGO0FBQ2hGLGlEQUFpRDtBQUNqRCxNQUFNQyx3QkFBd0JKLGFBQWE7QUFFM0MsTUFBTUssZ0JBQWdCO0lBQ3BCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFREMsT0FBT0MsT0FBTyxHQUFHO0lBQ2ZQO0lBQ0FHO0lBQ0FDO0lBQ0FIO0lBQ0FJO0lBQ0FOO0lBQ0FTLHlCQUF5QjtJQUN6QkMsWUFBWTtBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2NvbnN0YW50cy5qcz8yYmJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5vdGU6IHRoaXMgaXMgdGhlIHNlbXZlci5vcmcgdmVyc2lvbiBvZiB0aGUgc3BlYyB0aGF0IGl0IGltcGxlbWVudHNcbi8vIE5vdCBuZWNlc3NhcmlseSB0aGUgcGFja2FnZSB2ZXJzaW9uIG9mIHRoaXMgY29kZS5cbmNvbnN0IFNFTVZFUl9TUEVDX1ZFUlNJT04gPSAnMi4wLjAnXG5cbmNvbnN0IE1BWF9MRU5HVEggPSAyNTZcbmNvbnN0IE1BWF9TQUZFX0lOVEVHRVIgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiB8fFxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gOTAwNzE5OTI1NDc0MDk5MVxuXG4vLyBNYXggc2FmZSBzZWdtZW50IGxlbmd0aCBmb3IgY29lcmNpb24uXG5jb25zdCBNQVhfU0FGRV9DT01QT05FTlRfTEVOR1RIID0gMTZcblxuLy8gTWF4IHNhZmUgbGVuZ3RoIGZvciBhIGJ1aWxkIGlkZW50aWZpZXIuIFRoZSBtYXggbGVuZ3RoIG1pbnVzIDYgY2hhcmFjdGVycyBmb3Jcbi8vIHRoZSBzaG9ydGVzdCB2ZXJzaW9uIHdpdGggYSBidWlsZCAwLjAuMCtCVUlMRC5cbmNvbnN0IE1BWF9TQUZFX0JVSUxEX0xFTkdUSCA9IE1BWF9MRU5HVEggLSA2XG5cbmNvbnN0IFJFTEVBU0VfVFlQRVMgPSBbXG4gICdtYWpvcicsXG4gICdwcmVtYWpvcicsXG4gICdtaW5vcicsXG4gICdwcmVtaW5vcicsXG4gICdwYXRjaCcsXG4gICdwcmVwYXRjaCcsXG4gICdwcmVyZWxlYXNlJyxcbl1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIE1BWF9MRU5HVEgsXG4gIE1BWF9TQUZFX0NPTVBPTkVOVF9MRU5HVEgsXG4gIE1BWF9TQUZFX0JVSUxEX0xFTkdUSCxcbiAgTUFYX1NBRkVfSU5URUdFUixcbiAgUkVMRUFTRV9UWVBFUyxcbiAgU0VNVkVSX1NQRUNfVkVSU0lPTixcbiAgRkxBR19JTkNMVURFX1BSRVJFTEVBU0U6IDBiMDAxLFxuICBGTEFHX0xPT1NFOiAwYjAxMCxcbn1cbiJdLCJuYW1lcyI6WyJTRU1WRVJfU1BFQ19WRVJTSU9OIiwiTUFYX0xFTkdUSCIsIk1BWF9TQUZFX0lOVEVHRVIiLCJOdW1iZXIiLCJNQVhfU0FGRV9DT01QT05FTlRfTEVOR1RIIiwiTUFYX1NBRkVfQlVJTERfTEVOR1RIIiwiUkVMRUFTRV9UWVBFUyIsIm1vZHVsZSIsImV4cG9ydHMiLCJGTEFHX0lOQ0xVREVfUFJFUkVMRUFTRSIsIkZMQUdfTE9PU0UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/debug.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/debug.js ***!
  \*******************************************************************************************/
/***/ ((module) => {

eval("\nconst debug = typeof process === \"object\" && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG) ? (...args)=>console.error(\"SEMVER\", ...args) : ()=>{};\nmodule.exports = debug;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvZGVidWcuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVEsT0FDTEMsWUFBWSxZQUNuQkEsUUFBUUMsR0FBRyxJQUNYRCxRQUFRQyxHQUFHLENBQUNDLFVBQVUsSUFDdEIsY0FBY0MsSUFBSSxDQUFDSCxRQUFRQyxHQUFHLENBQUNDLFVBQVUsSUFDdkMsQ0FBQyxHQUFHRSxPQUFTQyxRQUFRQyxLQUFLLENBQUMsYUFBYUYsUUFDeEMsS0FBTztBQUVYRyxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2RlYnVnLmpzP2M2NzgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVidWcgPSAoXG4gIHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJlxuICBwcm9jZXNzLmVudiAmJlxuICBwcm9jZXNzLmVudi5OT0RFX0RFQlVHICYmXG4gIC9cXGJzZW12ZXJcXGIvaS50ZXN0KHByb2Nlc3MuZW52Lk5PREVfREVCVUcpXG4pID8gKC4uLmFyZ3MpID0+IGNvbnNvbGUuZXJyb3IoJ1NFTVZFUicsIC4uLmFyZ3MpXG4gIDogKCkgPT4ge31cblxubW9kdWxlLmV4cG9ydHMgPSBkZWJ1Z1xuIl0sIm5hbWVzIjpbImRlYnVnIiwicHJvY2VzcyIsImVudiIsIk5PREVfREVCVUciLCJ0ZXN0IiwiYXJncyIsImNvbnNvbGUiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/debug.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/identifiers.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/identifiers.js ***!
  \*************************************************************************************************/
/***/ ((module) => {

eval("\nconst numeric = /^[0-9]+$/;\nconst compareIdentifiers = (a, b)=>{\n    const anum = numeric.test(a);\n    const bnum = numeric.test(b);\n    if (anum && bnum) {\n        a = +a;\n        b = +b;\n    }\n    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n};\nconst rcompareIdentifiers = (a, b)=>compareIdentifiers(b, a);\nmodule.exports = {\n    compareIdentifiers,\n    rcompareIdentifiers\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvaWRlbnRpZmllcnMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFVBQVU7QUFDaEIsTUFBTUMscUJBQXFCLENBQUNDLEdBQUdDO0lBQzdCLE1BQU1DLE9BQU9KLFFBQVFLLElBQUksQ0FBQ0g7SUFDMUIsTUFBTUksT0FBT04sUUFBUUssSUFBSSxDQUFDRjtJQUUxQixJQUFJQyxRQUFRRSxNQUFNO1FBQ2hCSixJQUFJLENBQUNBO1FBQ0xDLElBQUksQ0FBQ0E7SUFDUDtJQUVBLE9BQU9ELE1BQU1DLElBQUksSUFDYixRQUFTLENBQUNHLE9BQVEsQ0FBQyxJQUNuQixRQUFTLENBQUNGLE9BQVEsSUFDbEJGLElBQUlDLElBQUksQ0FBQyxJQUNUO0FBQ047QUFFQSxNQUFNSSxzQkFBc0IsQ0FBQ0wsR0FBR0MsSUFBTUYsbUJBQW1CRSxHQUFHRDtBQUU1RE0sT0FBT0MsT0FBTyxHQUFHO0lBQ2ZSO0lBQ0FNO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvaWRlbnRpZmllcnMuanM/YTk1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBudW1lcmljID0gL15bMC05XSskL1xuY29uc3QgY29tcGFyZUlkZW50aWZpZXJzID0gKGEsIGIpID0+IHtcbiAgY29uc3QgYW51bSA9IG51bWVyaWMudGVzdChhKVxuICBjb25zdCBibnVtID0gbnVtZXJpYy50ZXN0KGIpXG5cbiAgaWYgKGFudW0gJiYgYm51bSkge1xuICAgIGEgPSArYVxuICAgIGIgPSArYlxuICB9XG5cbiAgcmV0dXJuIGEgPT09IGIgPyAwXG4gICAgOiAoYW51bSAmJiAhYm51bSkgPyAtMVxuICAgIDogKGJudW0gJiYgIWFudW0pID8gMVxuICAgIDogYSA8IGIgPyAtMVxuICAgIDogMVxufVxuXG5jb25zdCByY29tcGFyZUlkZW50aWZpZXJzID0gKGEsIGIpID0+IGNvbXBhcmVJZGVudGlmaWVycyhiLCBhKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY29tcGFyZUlkZW50aWZpZXJzLFxuICByY29tcGFyZUlkZW50aWZpZXJzLFxufVxuIl0sIm5hbWVzIjpbIm51bWVyaWMiLCJjb21wYXJlSWRlbnRpZmllcnMiLCJhIiwiYiIsImFudW0iLCJ0ZXN0IiwiYm51bSIsInJjb21wYXJlSWRlbnRpZmllcnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/identifiers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/lrucache.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/lrucache.js ***!
  \**********************************************************************************************/
/***/ ((module) => {

eval("\nclass LRUCache {\n    constructor(){\n        this.max = 1000;\n        this.map = new Map();\n    }\n    get(key) {\n        const value = this.map.get(key);\n        if (value === undefined) {\n            return undefined;\n        } else {\n            // Remove the key from the map and add it to the end\n            this.map.delete(key);\n            this.map.set(key, value);\n            return value;\n        }\n    }\n    delete(key) {\n        return this.map.delete(key);\n    }\n    set(key, value) {\n        const deleted = this.delete(key);\n        if (!deleted && value !== undefined) {\n            // If cache is full, delete the least recently used item\n            if (this.map.size >= this.max) {\n                const firstKey = this.map.keys().next().value;\n                this.delete(firstKey);\n            }\n            this.map.set(key, value);\n        }\n        return this;\n    }\n}\nmodule.exports = LRUCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvbHJ1Y2FjaGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BO0lBQ0pDLGFBQWU7UUFDYixJQUFJLENBQUNDLEdBQUcsR0FBRztRQUNYLElBQUksQ0FBQ0MsR0FBRyxHQUFHLElBQUlDO0lBQ2pCO0lBRUFDLElBQUtDLEdBQUcsRUFBRTtRQUNSLE1BQU1DLFFBQVEsSUFBSSxDQUFDSixHQUFHLENBQUNFLEdBQUcsQ0FBQ0M7UUFDM0IsSUFBSUMsVUFBVUMsV0FBVztZQUN2QixPQUFPQTtRQUNULE9BQU87WUFDTCxvREFBb0Q7WUFDcEQsSUFBSSxDQUFDTCxHQUFHLENBQUNNLE1BQU0sQ0FBQ0g7WUFDaEIsSUFBSSxDQUFDSCxHQUFHLENBQUNPLEdBQUcsQ0FBQ0osS0FBS0M7WUFDbEIsT0FBT0E7UUFDVDtJQUNGO0lBRUFFLE9BQVFILEdBQUcsRUFBRTtRQUNYLE9BQU8sSUFBSSxDQUFDSCxHQUFHLENBQUNNLE1BQU0sQ0FBQ0g7SUFDekI7SUFFQUksSUFBS0osR0FBRyxFQUFFQyxLQUFLLEVBQUU7UUFDZixNQUFNSSxVQUFVLElBQUksQ0FBQ0YsTUFBTSxDQUFDSDtRQUU1QixJQUFJLENBQUNLLFdBQVdKLFVBQVVDLFdBQVc7WUFDbkMsd0RBQXdEO1lBQ3hELElBQUksSUFBSSxDQUFDTCxHQUFHLENBQUNTLElBQUksSUFBSSxJQUFJLENBQUNWLEdBQUcsRUFBRTtnQkFDN0IsTUFBTVcsV0FBVyxJQUFJLENBQUNWLEdBQUcsQ0FBQ1csSUFBSSxHQUFHQyxJQUFJLEdBQUdSLEtBQUs7Z0JBQzdDLElBQUksQ0FBQ0UsTUFBTSxDQUFDSTtZQUNkO1lBRUEsSUFBSSxDQUFDVixHQUFHLENBQUNPLEdBQUcsQ0FBQ0osS0FBS0M7UUFDcEI7UUFFQSxPQUFPLElBQUk7SUFDYjtBQUNGO0FBRUFTLE9BQU9DLE9BQU8sR0FBR2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL2ludGVybmFsL2xydWNhY2hlLmpzPzQ0MGEiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTFJVQ2FjaGUge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgdGhpcy5tYXggPSAxMDAwXG4gICAgdGhpcy5tYXAgPSBuZXcgTWFwKClcbiAgfVxuXG4gIGdldCAoa2V5KSB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLm1hcC5nZXQoa2V5KVxuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlbW92ZSB0aGUga2V5IGZyb20gdGhlIG1hcCBhbmQgYWRkIGl0IHRvIHRoZSBlbmRcbiAgICAgIHRoaXMubWFwLmRlbGV0ZShrZXkpXG4gICAgICB0aGlzLm1hcC5zZXQoa2V5LCB2YWx1ZSlcbiAgICAgIHJldHVybiB2YWx1ZVxuICAgIH1cbiAgfVxuXG4gIGRlbGV0ZSAoa2V5KSB7XG4gICAgcmV0dXJuIHRoaXMubWFwLmRlbGV0ZShrZXkpXG4gIH1cblxuICBzZXQgKGtleSwgdmFsdWUpIHtcbiAgICBjb25zdCBkZWxldGVkID0gdGhpcy5kZWxldGUoa2V5KVxuXG4gICAgaWYgKCFkZWxldGVkICYmIHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIElmIGNhY2hlIGlzIGZ1bGwsIGRlbGV0ZSB0aGUgbGVhc3QgcmVjZW50bHkgdXNlZCBpdGVtXG4gICAgICBpZiAodGhpcy5tYXAuc2l6ZSA+PSB0aGlzLm1heCkge1xuICAgICAgICBjb25zdCBmaXJzdEtleSA9IHRoaXMubWFwLmtleXMoKS5uZXh0KCkudmFsdWVcbiAgICAgICAgdGhpcy5kZWxldGUoZmlyc3RLZXkpXG4gICAgICB9XG5cbiAgICAgIHRoaXMubWFwLnNldChrZXksIHZhbHVlKVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBMUlVDYWNoZVxuIl0sIm5hbWVzIjpbIkxSVUNhY2hlIiwiY29uc3RydWN0b3IiLCJtYXgiLCJtYXAiLCJNYXAiLCJnZXQiLCJrZXkiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImRlbGV0ZSIsInNldCIsImRlbGV0ZWQiLCJzaXplIiwiZmlyc3RLZXkiLCJrZXlzIiwibmV4dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/lrucache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/parse-options.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/parse-options.js ***!
  \***************************************************************************************************/
/***/ ((module) => {

eval("// parse out just the options we care about\n\nconst looseOption = Object.freeze({\n    loose: true\n});\nconst emptyOpts = Object.freeze({});\nconst parseOptions = (options)=>{\n    if (!options) {\n        return emptyOpts;\n    }\n    if (typeof options !== \"object\") {\n        return looseOption;\n    }\n    return options;\n};\nmodule.exports = parseOptions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvcGFyc2Utb3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyQ0FBMkM7O0FBQzNDLE1BQU1BLGNBQWNDLE9BQU9DLE1BQU0sQ0FBQztJQUFFQyxPQUFPO0FBQUs7QUFDaEQsTUFBTUMsWUFBWUgsT0FBT0MsTUFBTSxDQUFDLENBQUU7QUFDbEMsTUFBTUcsZUFBZUMsQ0FBQUE7SUFDbkIsSUFBSSxDQUFDQSxTQUFTO1FBQ1osT0FBT0Y7SUFDVDtJQUVBLElBQUksT0FBT0UsWUFBWSxVQUFVO1FBQy9CLE9BQU9OO0lBQ1Q7SUFFQSxPQUFPTTtBQUNUO0FBQ0FDLE9BQU9DLE9BQU8sR0FBR0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvaW50ZXJuYWwvcGFyc2Utb3B0aW9ucy5qcz8zZTk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhcnNlIG91dCBqdXN0IHRoZSBvcHRpb25zIHdlIGNhcmUgYWJvdXRcbmNvbnN0IGxvb3NlT3B0aW9uID0gT2JqZWN0LmZyZWV6ZSh7IGxvb3NlOiB0cnVlIH0pXG5jb25zdCBlbXB0eU9wdHMgPSBPYmplY3QuZnJlZXplKHsgfSlcbmNvbnN0IHBhcnNlT3B0aW9ucyA9IG9wdGlvbnMgPT4ge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gZW1wdHlPcHRzXG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGxvb3NlT3B0aW9uXG4gIH1cblxuICByZXR1cm4gb3B0aW9uc1xufVxubW9kdWxlLmV4cG9ydHMgPSBwYXJzZU9wdGlvbnNcbiJdLCJuYW1lcyI6WyJsb29zZU9wdGlvbiIsIk9iamVjdCIsImZyZWV6ZSIsImxvb3NlIiwiZW1wdHlPcHRzIiwicGFyc2VPcHRpb25zIiwib3B0aW9ucyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/parse-options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst { MAX_SAFE_COMPONENT_LENGTH, MAX_SAFE_BUILD_LENGTH, MAX_LENGTH } = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/constants.js\");\nconst debug = __webpack_require__(/*! ./debug */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/debug.js\");\nexports = module.exports = {};\n// The actual regexps go on exports.re\nconst re = exports.re = [];\nconst safeRe = exports.safeRe = [];\nconst src = exports.src = [];\nconst t = exports.t = {};\nlet R = 0;\nconst LETTERDASHNUMBER = \"[a-zA-Z0-9-]\";\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n    [\n        \"\\\\s\",\n        1\n    ],\n    [\n        \"\\\\d\",\n        MAX_LENGTH\n    ],\n    [\n        LETTERDASHNUMBER,\n        MAX_SAFE_BUILD_LENGTH\n    ]\n];\nconst makeSafeRegex = (value)=>{\n    for (const [token, max] of safeRegexReplacements){\n        value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);\n    }\n    return value;\n};\nconst createToken = (name, value, isGlobal)=>{\n    const safe = makeSafeRegex(value);\n    const index = R++;\n    debug(name, index, value);\n    t[name] = index;\n    src[index] = value;\n    re[index] = new RegExp(value, isGlobal ? \"g\" : undefined);\n    safeRe[index] = new RegExp(safe, isGlobal ? \"g\" : undefined);\n};\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\ncreateToken(\"NUMERICIDENTIFIER\", \"0|[1-9]\\\\d*\");\ncreateToken(\"NUMERICIDENTIFIERLOOSE\", \"\\\\d+\");\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\ncreateToken(\"NONNUMERICIDENTIFIER\", `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);\n// ## Main Version\n// Three dot-separated numeric identifiers.\ncreateToken(\"MAINVERSION\", `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})`);\ncreateToken(\"MAINVERSIONLOOSE\", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})`);\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\ncreateToken(\"PRERELEASEIDENTIFIER\", `(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);\ncreateToken(\"PRERELEASEIDENTIFIERLOOSE\", `(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\ncreateToken(\"PRERELEASE\", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`);\ncreateToken(\"PRERELEASELOOSE\", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\ncreateToken(\"BUILDIDENTIFIER\", `${LETTERDASHNUMBER}+`);\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\ncreateToken(\"BUILD\", `(?:\\\\+(${src[t.BUILDIDENTIFIER]}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`);\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\ncreateToken(\"FULLPLAIN\", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);\ncreateToken(\"FULL\", `^${src[t.FULLPLAIN]}$`);\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken(\"LOOSEPLAIN\", `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);\ncreateToken(\"LOOSE\", `^${src[t.LOOSEPLAIN]}$`);\ncreateToken(\"GTLT\", \"((?:<|>)?=?)\");\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken(\"XRANGEIDENTIFIERLOOSE\", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);\ncreateToken(\"XRANGEIDENTIFIER\", `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`);\ncreateToken(\"XRANGEPLAIN\", `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?` + `)?)?`);\ncreateToken(\"XRANGEPLAINLOOSE\", `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?` + `)?)?`);\ncreateToken(\"XRANGE\", `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`);\ncreateToken(\"XRANGELOOSE\", `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`);\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken(\"COERCEPLAIN\", `${\"(^|[^\\\\d])\" + \"(\\\\d{1,\"}${MAX_SAFE_COMPONENT_LENGTH}})` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);\ncreateToken(\"COERCE\", `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`);\ncreateToken(\"COERCEFULL\", src[t.COERCEPLAIN] + `(?:${src[t.PRERELEASE]})?` + `(?:${src[t.BUILD]})?` + `(?:$|[^\\\\d])`);\ncreateToken(\"COERCERTL\", src[t.COERCE], true);\ncreateToken(\"COERCERTLFULL\", src[t.COERCEFULL], true);\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken(\"LONETILDE\", \"(?:~>?)\");\ncreateToken(\"TILDETRIM\", `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true);\nexports.tildeTrimReplace = \"$1~\";\ncreateToken(\"TILDE\", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);\ncreateToken(\"TILDELOOSE\", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken(\"LONECARET\", \"(?:\\\\^)\");\ncreateToken(\"CARETTRIM\", `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true);\nexports.caretTrimReplace = \"$1^\";\ncreateToken(\"CARET\", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);\ncreateToken(\"CARETLOOSE\", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken(\"COMPARATORLOOSE\", `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`);\ncreateToken(\"COMPARATOR\", `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`);\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken(\"COMPARATORTRIM\", `(\\\\s*)${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);\nexports.comparatorTrimReplace = \"$1$2$3\";\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken(\"HYPHENRANGE\", `^\\\\s*(${src[t.XRANGEPLAIN]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAIN]})` + `\\\\s*$`);\ncreateToken(\"HYPHENRANGELOOSE\", `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s*$`);\n// Star ranges basically just allow anything at all.\ncreateToken(\"STAR\", \"(<|>)?=?\\\\s*\\\\*\");\n// >=0.0.0 is like a star\ncreateToken(\"GTE0\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$\");\ncreateToken(\"GTE0PRE\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/internal/re.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/gtr.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/gtr.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Determine if version is greater than all the versions possible in the range.\n\nconst outside = __webpack_require__(/*! ./outside */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/outside.js\");\nconst gtr = (version, range, options)=>outside(version, range, \">\", options);\nmodule.exports = gtr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL2d0ci5qcyIsIm1hcHBpbmdzIjoiQUFBQSwrRUFBK0U7O0FBQy9FLE1BQU1BLFVBQVVDLG1CQUFPQSxDQUFDO0FBQ3hCLE1BQU1DLE1BQU0sQ0FBQ0MsU0FBU0MsT0FBT0MsVUFBWUwsUUFBUUcsU0FBU0MsT0FBTyxLQUFLQztBQUN0RUMsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvZ3RyLmpzPzU5NTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRGV0ZXJtaW5lIGlmIHZlcnNpb24gaXMgZ3JlYXRlciB0aGFuIGFsbCB0aGUgdmVyc2lvbnMgcG9zc2libGUgaW4gdGhlIHJhbmdlLlxuY29uc3Qgb3V0c2lkZSA9IHJlcXVpcmUoJy4vb3V0c2lkZScpXG5jb25zdCBndHIgPSAodmVyc2lvbiwgcmFuZ2UsIG9wdGlvbnMpID0+IG91dHNpZGUodmVyc2lvbiwgcmFuZ2UsICc+Jywgb3B0aW9ucylcbm1vZHVsZS5leHBvcnRzID0gZ3RyXG4iXSwibmFtZXMiOlsib3V0c2lkZSIsInJlcXVpcmUiLCJndHIiLCJ2ZXJzaW9uIiwicmFuZ2UiLCJvcHRpb25zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/gtr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/intersects.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/intersects.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst intersects = (r1, r2, options)=>{\n    r1 = new Range(r1, options);\n    r2 = new Range(r2, options);\n    return r1.intersects(r2, options);\n};\nmodule.exports = intersects;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL2ludGVyc2VjdHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFFBQVFDLG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1DLGFBQWEsQ0FBQ0MsSUFBSUMsSUFBSUM7SUFDMUJGLEtBQUssSUFBSUgsTUFBTUcsSUFBSUU7SUFDbkJELEtBQUssSUFBSUosTUFBTUksSUFBSUM7SUFDbkIsT0FBT0YsR0FBR0QsVUFBVSxDQUFDRSxJQUFJQztBQUMzQjtBQUNBQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL3Jhbmdlcy9pbnRlcnNlY3RzLmpzP2FkODEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmFuZ2UgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3JhbmdlJylcbmNvbnN0IGludGVyc2VjdHMgPSAocjEsIHIyLCBvcHRpb25zKSA9PiB7XG4gIHIxID0gbmV3IFJhbmdlKHIxLCBvcHRpb25zKVxuICByMiA9IG5ldyBSYW5nZShyMiwgb3B0aW9ucylcbiAgcmV0dXJuIHIxLmludGVyc2VjdHMocjIsIG9wdGlvbnMpXG59XG5tb2R1bGUuZXhwb3J0cyA9IGludGVyc2VjdHNcbiJdLCJuYW1lcyI6WyJSYW5nZSIsInJlcXVpcmUiLCJpbnRlcnNlY3RzIiwicjEiLCJyMiIsIm9wdGlvbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/intersects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/ltr.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/ltr.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst outside = __webpack_require__(/*! ./outside */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/outside.js\");\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options)=>outside(version, range, \"<\", options);\nmodule.exports = ltr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL2x0ci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsMkVBQTJFO0FBQzNFLE1BQU1DLE1BQU0sQ0FBQ0MsU0FBU0MsT0FBT0MsVUFBWUwsUUFBUUcsU0FBU0MsT0FBTyxLQUFLQztBQUN0RUMsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvbHRyLmpzPzEwNzQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb3V0c2lkZSA9IHJlcXVpcmUoJy4vb3V0c2lkZScpXG4vLyBEZXRlcm1pbmUgaWYgdmVyc2lvbiBpcyBsZXNzIHRoYW4gYWxsIHRoZSB2ZXJzaW9ucyBwb3NzaWJsZSBpbiB0aGUgcmFuZ2VcbmNvbnN0IGx0ciA9ICh2ZXJzaW9uLCByYW5nZSwgb3B0aW9ucykgPT4gb3V0c2lkZSh2ZXJzaW9uLCByYW5nZSwgJzwnLCBvcHRpb25zKVxubW9kdWxlLmV4cG9ydHMgPSBsdHJcbiJdLCJuYW1lcyI6WyJvdXRzaWRlIiwicmVxdWlyZSIsImx0ciIsInZlcnNpb24iLCJyYW5nZSIsIm9wdGlvbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/ltr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/max-satisfying.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/max-satisfying.js ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst maxSatisfying = (versions, range, options)=>{\n    let max = null;\n    let maxSV = null;\n    let rangeObj = null;\n    try {\n        rangeObj = new Range(range, options);\n    } catch (er) {\n        return null;\n    }\n    versions.forEach((v)=>{\n        if (rangeObj.test(v)) {\n            // satisfies(v, range, options)\n            if (!max || maxSV.compare(v) === -1) {\n                // compare(max, v, true)\n                max = v;\n                maxSV = new SemVer(max, options);\n            }\n        }\n    });\n    return max;\n};\nmodule.exports = maxSatisfying;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL21heC1zYXRpc2Z5aW5nLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUV0QixNQUFNRSxnQkFBZ0IsQ0FBQ0MsVUFBVUMsT0FBT0M7SUFDdEMsSUFBSUMsTUFBTTtJQUNWLElBQUlDLFFBQVE7SUFDWixJQUFJQyxXQUFXO0lBQ2YsSUFBSTtRQUNGQSxXQUFXLElBQUlQLE1BQU1HLE9BQU9DO0lBQzlCLEVBQUUsT0FBT0ksSUFBSTtRQUNYLE9BQU87SUFDVDtJQUNBTixTQUFTTyxPQUFPLENBQUMsQ0FBQ0M7UUFDaEIsSUFBSUgsU0FBU0ksSUFBSSxDQUFDRCxJQUFJO1lBQ3BCLCtCQUErQjtZQUMvQixJQUFJLENBQUNMLE9BQU9DLE1BQU1NLE9BQU8sQ0FBQ0YsT0FBTyxDQUFDLEdBQUc7Z0JBQ25DLHdCQUF3QjtnQkFDeEJMLE1BQU1LO2dCQUNOSixRQUFRLElBQUlSLE9BQU9PLEtBQUtEO1lBQzFCO1FBQ0Y7SUFDRjtJQUNBLE9BQU9DO0FBQ1Q7QUFDQVEsT0FBT0MsT0FBTyxHQUFHYiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvbWF4LXNhdGlzZnlpbmcuanM/ODk2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZW1WZXIgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3NlbXZlcicpXG5jb25zdCBSYW5nZSA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvcmFuZ2UnKVxuXG5jb25zdCBtYXhTYXRpc2Z5aW5nID0gKHZlcnNpb25zLCByYW5nZSwgb3B0aW9ucykgPT4ge1xuICBsZXQgbWF4ID0gbnVsbFxuICBsZXQgbWF4U1YgPSBudWxsXG4gIGxldCByYW5nZU9iaiA9IG51bGxcbiAgdHJ5IHtcbiAgICByYW5nZU9iaiA9IG5ldyBSYW5nZShyYW5nZSwgb3B0aW9ucylcbiAgfSBjYXRjaCAoZXIpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIHZlcnNpb25zLmZvckVhY2goKHYpID0+IHtcbiAgICBpZiAocmFuZ2VPYmoudGVzdCh2KSkge1xuICAgICAgLy8gc2F0aXNmaWVzKHYsIHJhbmdlLCBvcHRpb25zKVxuICAgICAgaWYgKCFtYXggfHwgbWF4U1YuY29tcGFyZSh2KSA9PT0gLTEpIHtcbiAgICAgICAgLy8gY29tcGFyZShtYXgsIHYsIHRydWUpXG4gICAgICAgIG1heCA9IHZcbiAgICAgICAgbWF4U1YgPSBuZXcgU2VtVmVyKG1heCwgb3B0aW9ucylcbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIHJldHVybiBtYXhcbn1cbm1vZHVsZS5leHBvcnRzID0gbWF4U2F0aXNmeWluZ1xuIl0sIm5hbWVzIjpbIlNlbVZlciIsInJlcXVpcmUiLCJSYW5nZSIsIm1heFNhdGlzZnlpbmciLCJ2ZXJzaW9ucyIsInJhbmdlIiwib3B0aW9ucyIsIm1heCIsIm1heFNWIiwicmFuZ2VPYmoiLCJlciIsImZvckVhY2giLCJ2IiwidGVzdCIsImNvbXBhcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/max-satisfying.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-satisfying.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-satisfying.js ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst minSatisfying = (versions, range, options)=>{\n    let min = null;\n    let minSV = null;\n    let rangeObj = null;\n    try {\n        rangeObj = new Range(range, options);\n    } catch (er) {\n        return null;\n    }\n    versions.forEach((v)=>{\n        if (rangeObj.test(v)) {\n            // satisfies(v, range, options)\n            if (!min || minSV.compare(v) === 1) {\n                // compare(min, v, true)\n                min = v;\n                minSV = new SemVer(min, options);\n            }\n        }\n    });\n    return min;\n};\nmodule.exports = minSatisfying;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL21pbi1zYXRpc2Z5aW5nLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNRSxnQkFBZ0IsQ0FBQ0MsVUFBVUMsT0FBT0M7SUFDdEMsSUFBSUMsTUFBTTtJQUNWLElBQUlDLFFBQVE7SUFDWixJQUFJQyxXQUFXO0lBQ2YsSUFBSTtRQUNGQSxXQUFXLElBQUlQLE1BQU1HLE9BQU9DO0lBQzlCLEVBQUUsT0FBT0ksSUFBSTtRQUNYLE9BQU87SUFDVDtJQUNBTixTQUFTTyxPQUFPLENBQUMsQ0FBQ0M7UUFDaEIsSUFBSUgsU0FBU0ksSUFBSSxDQUFDRCxJQUFJO1lBQ3BCLCtCQUErQjtZQUMvQixJQUFJLENBQUNMLE9BQU9DLE1BQU1NLE9BQU8sQ0FBQ0YsT0FBTyxHQUFHO2dCQUNsQyx3QkFBd0I7Z0JBQ3hCTCxNQUFNSztnQkFDTkosUUFBUSxJQUFJUixPQUFPTyxLQUFLRDtZQUMxQjtRQUNGO0lBQ0Y7SUFDQSxPQUFPQztBQUNUO0FBQ0FRLE9BQU9DLE9BQU8sR0FBR2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL21pbi1zYXRpc2Z5aW5nLmpzP2ZjMzIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VtVmVyID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9zZW12ZXInKVxuY29uc3QgUmFuZ2UgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3JhbmdlJylcbmNvbnN0IG1pblNhdGlzZnlpbmcgPSAodmVyc2lvbnMsIHJhbmdlLCBvcHRpb25zKSA9PiB7XG4gIGxldCBtaW4gPSBudWxsXG4gIGxldCBtaW5TViA9IG51bGxcbiAgbGV0IHJhbmdlT2JqID0gbnVsbFxuICB0cnkge1xuICAgIHJhbmdlT2JqID0gbmV3IFJhbmdlKHJhbmdlLCBvcHRpb25zKVxuICB9IGNhdGNoIChlcikge1xuICAgIHJldHVybiBudWxsXG4gIH1cbiAgdmVyc2lvbnMuZm9yRWFjaCgodikgPT4ge1xuICAgIGlmIChyYW5nZU9iai50ZXN0KHYpKSB7XG4gICAgICAvLyBzYXRpc2ZpZXModiwgcmFuZ2UsIG9wdGlvbnMpXG4gICAgICBpZiAoIW1pbiB8fCBtaW5TVi5jb21wYXJlKHYpID09PSAxKSB7XG4gICAgICAgIC8vIGNvbXBhcmUobWluLCB2LCB0cnVlKVxuICAgICAgICBtaW4gPSB2XG4gICAgICAgIG1pblNWID0gbmV3IFNlbVZlcihtaW4sIG9wdGlvbnMpXG4gICAgICB9XG4gICAgfVxuICB9KVxuICByZXR1cm4gbWluXG59XG5tb2R1bGUuZXhwb3J0cyA9IG1pblNhdGlzZnlpbmdcbiJdLCJuYW1lcyI6WyJTZW1WZXIiLCJyZXF1aXJlIiwiUmFuZ2UiLCJtaW5TYXRpc2Z5aW5nIiwidmVyc2lvbnMiLCJyYW5nZSIsIm9wdGlvbnMiLCJtaW4iLCJtaW5TViIsInJhbmdlT2JqIiwiZXIiLCJmb3JFYWNoIiwidiIsInRlc3QiLCJjb21wYXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-satisfying.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-version.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-version.js ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst gt = __webpack_require__(/*! ../functions/gt */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gt.js\");\nconst minVersion = (range, loose)=>{\n    range = new Range(range, loose);\n    let minver = new SemVer(\"0.0.0\");\n    if (range.test(minver)) {\n        return minver;\n    }\n    minver = new SemVer(\"0.0.0-0\");\n    if (range.test(minver)) {\n        return minver;\n    }\n    minver = null;\n    for(let i = 0; i < range.set.length; ++i){\n        const comparators = range.set[i];\n        let setMin = null;\n        comparators.forEach((comparator)=>{\n            // Clone to avoid manipulating the comparator's semver object.\n            const compver = new SemVer(comparator.semver.version);\n            switch(comparator.operator){\n                case \">\":\n                    if (compver.prerelease.length === 0) {\n                        compver.patch++;\n                    } else {\n                        compver.prerelease.push(0);\n                    }\n                    compver.raw = compver.format();\n                /* fallthrough */ case \"\":\n                case \">=\":\n                    if (!setMin || gt(compver, setMin)) {\n                        setMin = compver;\n                    }\n                    break;\n                case \"<\":\n                case \"<=\":\n                    break;\n                /* istanbul ignore next */ default:\n                    throw new Error(`Unexpected operation: ${comparator.operator}`);\n            }\n        });\n        if (setMin && (!minver || gt(minver, setMin))) {\n            minver = setMin;\n        }\n    }\n    if (minver && range.test(minver)) {\n        return minver;\n    }\n    return null;\n};\nmodule.exports = minVersion;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL21pbi12ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxTQUFTQyxtQkFBT0EsQ0FBQztBQUN2QixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNRSxLQUFLRixtQkFBT0EsQ0FBQztBQUVuQixNQUFNRyxhQUFhLENBQUNDLE9BQU9DO0lBQ3pCRCxRQUFRLElBQUlILE1BQU1HLE9BQU9DO0lBRXpCLElBQUlDLFNBQVMsSUFBSVAsT0FBTztJQUN4QixJQUFJSyxNQUFNRyxJQUFJLENBQUNELFNBQVM7UUFDdEIsT0FBT0E7SUFDVDtJQUVBQSxTQUFTLElBQUlQLE9BQU87SUFDcEIsSUFBSUssTUFBTUcsSUFBSSxDQUFDRCxTQUFTO1FBQ3RCLE9BQU9BO0lBQ1Q7SUFFQUEsU0FBUztJQUNULElBQUssSUFBSUUsSUFBSSxHQUFHQSxJQUFJSixNQUFNSyxHQUFHLENBQUNDLE1BQU0sRUFBRSxFQUFFRixFQUFHO1FBQ3pDLE1BQU1HLGNBQWNQLE1BQU1LLEdBQUcsQ0FBQ0QsRUFBRTtRQUVoQyxJQUFJSSxTQUFTO1FBQ2JELFlBQVlFLE9BQU8sQ0FBQyxDQUFDQztZQUNuQiw4REFBOEQ7WUFDOUQsTUFBTUMsVUFBVSxJQUFJaEIsT0FBT2UsV0FBV0UsTUFBTSxDQUFDQyxPQUFPO1lBQ3BELE9BQVFILFdBQVdJLFFBQVE7Z0JBQ3pCLEtBQUs7b0JBQ0gsSUFBSUgsUUFBUUksVUFBVSxDQUFDVCxNQUFNLEtBQUssR0FBRzt3QkFDbkNLLFFBQVFLLEtBQUs7b0JBQ2YsT0FBTzt3QkFDTEwsUUFBUUksVUFBVSxDQUFDRSxJQUFJLENBQUM7b0JBQzFCO29CQUNBTixRQUFRTyxHQUFHLEdBQUdQLFFBQVFRLE1BQU07Z0JBQzVCLGVBQWUsR0FDakIsS0FBSztnQkFDTCxLQUFLO29CQUNILElBQUksQ0FBQ1gsVUFBVVYsR0FBR2EsU0FBU0gsU0FBUzt3QkFDbENBLFNBQVNHO29CQUNYO29CQUNBO2dCQUNGLEtBQUs7Z0JBQ0wsS0FBSztvQkFFSDtnQkFDRix3QkFBd0IsR0FDeEI7b0JBQ0UsTUFBTSxJQUFJUyxNQUFNLENBQUMsc0JBQXNCLEVBQUVWLFdBQVdJLFFBQVEsQ0FBQyxDQUFDO1lBQ2xFO1FBQ0Y7UUFDQSxJQUFJTixVQUFXLEVBQUNOLFVBQVVKLEdBQUdJLFFBQVFNLE9BQU0sR0FBSTtZQUM3Q04sU0FBU007UUFDWDtJQUNGO0lBRUEsSUFBSU4sVUFBVUYsTUFBTUcsSUFBSSxDQUFDRCxTQUFTO1FBQ2hDLE9BQU9BO0lBQ1Q7SUFFQSxPQUFPO0FBQ1Q7QUFDQW1CLE9BQU9DLE9BQU8sR0FBR3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0BsZWRnZXJocS9ody10cmFuc3BvcnQtd2ViLWJsZS9ub2RlX21vZHVsZXMvc2VtdmVyL3Jhbmdlcy9taW4tdmVyc2lvbi5qcz9lOTRkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlbVZlciA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvc2VtdmVyJylcbmNvbnN0IFJhbmdlID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9yYW5nZScpXG5jb25zdCBndCA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9ucy9ndCcpXG5cbmNvbnN0IG1pblZlcnNpb24gPSAocmFuZ2UsIGxvb3NlKSA9PiB7XG4gIHJhbmdlID0gbmV3IFJhbmdlKHJhbmdlLCBsb29zZSlcblxuICBsZXQgbWludmVyID0gbmV3IFNlbVZlcignMC4wLjAnKVxuICBpZiAocmFuZ2UudGVzdChtaW52ZXIpKSB7XG4gICAgcmV0dXJuIG1pbnZlclxuICB9XG5cbiAgbWludmVyID0gbmV3IFNlbVZlcignMC4wLjAtMCcpXG4gIGlmIChyYW5nZS50ZXN0KG1pbnZlcikpIHtcbiAgICByZXR1cm4gbWludmVyXG4gIH1cblxuICBtaW52ZXIgPSBudWxsXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmFuZ2Uuc2V0Lmxlbmd0aDsgKytpKSB7XG4gICAgY29uc3QgY29tcGFyYXRvcnMgPSByYW5nZS5zZXRbaV1cblxuICAgIGxldCBzZXRNaW4gPSBudWxsXG4gICAgY29tcGFyYXRvcnMuZm9yRWFjaCgoY29tcGFyYXRvcikgPT4ge1xuICAgICAgLy8gQ2xvbmUgdG8gYXZvaWQgbWFuaXB1bGF0aW5nIHRoZSBjb21wYXJhdG9yJ3Mgc2VtdmVyIG9iamVjdC5cbiAgICAgIGNvbnN0IGNvbXB2ZXIgPSBuZXcgU2VtVmVyKGNvbXBhcmF0b3Iuc2VtdmVyLnZlcnNpb24pXG4gICAgICBzd2l0Y2ggKGNvbXBhcmF0b3Iub3BlcmF0b3IpIHtcbiAgICAgICAgY2FzZSAnPic6XG4gICAgICAgICAgaWYgKGNvbXB2ZXIucHJlcmVsZWFzZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbXB2ZXIucGF0Y2grK1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb21wdmVyLnByZXJlbGVhc2UucHVzaCgwKVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb21wdmVyLnJhdyA9IGNvbXB2ZXIuZm9ybWF0KClcbiAgICAgICAgICAvKiBmYWxsdGhyb3VnaCAqL1xuICAgICAgICBjYXNlICcnOlxuICAgICAgICBjYXNlICc+PSc6XG4gICAgICAgICAgaWYgKCFzZXRNaW4gfHwgZ3QoY29tcHZlciwgc2V0TWluKSkge1xuICAgICAgICAgICAgc2V0TWluID0gY29tcHZlclxuICAgICAgICAgIH1cbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlICc8JzpcbiAgICAgICAgY2FzZSAnPD0nOlxuICAgICAgICAgIC8qIElnbm9yZSBtYXhpbXVtIHZlcnNpb25zICovXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgb3BlcmF0aW9uOiAke2NvbXBhcmF0b3Iub3BlcmF0b3J9YClcbiAgICAgIH1cbiAgICB9KVxuICAgIGlmIChzZXRNaW4gJiYgKCFtaW52ZXIgfHwgZ3QobWludmVyLCBzZXRNaW4pKSkge1xuICAgICAgbWludmVyID0gc2V0TWluXG4gICAgfVxuICB9XG5cbiAgaWYgKG1pbnZlciAmJiByYW5nZS50ZXN0KG1pbnZlcikpIHtcbiAgICByZXR1cm4gbWludmVyXG4gIH1cblxuICByZXR1cm4gbnVsbFxufVxubW9kdWxlLmV4cG9ydHMgPSBtaW5WZXJzaW9uXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsIlJhbmdlIiwiZ3QiLCJtaW5WZXJzaW9uIiwicmFuZ2UiLCJsb29zZSIsIm1pbnZlciIsInRlc3QiLCJpIiwic2V0IiwibGVuZ3RoIiwiY29tcGFyYXRvcnMiLCJzZXRNaW4iLCJmb3JFYWNoIiwiY29tcGFyYXRvciIsImNvbXB2ZXIiLCJzZW12ZXIiLCJ2ZXJzaW9uIiwib3BlcmF0b3IiLCJwcmVyZWxlYXNlIiwicGF0Y2giLCJwdXNoIiwicmF3IiwiZm9ybWF0IiwiRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/min-version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/outside.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/outside.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst SemVer = __webpack_require__(/*! ../classes/semver */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/semver.js\");\nconst Comparator = __webpack_require__(/*! ../classes/comparator */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/comparator.js\");\nconst { ANY } = Comparator;\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst satisfies = __webpack_require__(/*! ../functions/satisfies */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/satisfies.js\");\nconst gt = __webpack_require__(/*! ../functions/gt */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gt.js\");\nconst lt = __webpack_require__(/*! ../functions/lt */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lt.js\");\nconst lte = __webpack_require__(/*! ../functions/lte */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/lte.js\");\nconst gte = __webpack_require__(/*! ../functions/gte */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/gte.js\");\nconst outside = (version, range, hilo, options)=>{\n    version = new SemVer(version, options);\n    range = new Range(range, options);\n    let gtfn, ltefn, ltfn, comp, ecomp;\n    switch(hilo){\n        case \">\":\n            gtfn = gt;\n            ltefn = lte;\n            ltfn = lt;\n            comp = \">\";\n            ecomp = \">=\";\n            break;\n        case \"<\":\n            gtfn = lt;\n            ltefn = gte;\n            ltfn = gt;\n            comp = \"<\";\n            ecomp = \"<=\";\n            break;\n        default:\n            throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n    }\n    // If it satisfies the range it is not outside\n    if (satisfies(version, range, options)) {\n        return false;\n    }\n    // From now on, variable terms are as if we're in \"gtr\" mode.\n    // but note that everything is flipped for the \"ltr\" function.\n    for(let i = 0; i < range.set.length; ++i){\n        const comparators = range.set[i];\n        let high = null;\n        let low = null;\n        comparators.forEach((comparator)=>{\n            if (comparator.semver === ANY) {\n                comparator = new Comparator(\">=0.0.0\");\n            }\n            high = high || comparator;\n            low = low || comparator;\n            if (gtfn(comparator.semver, high.semver, options)) {\n                high = comparator;\n            } else if (ltfn(comparator.semver, low.semver, options)) {\n                low = comparator;\n            }\n        });\n        // If the edge version comparator has a operator then our version\n        // isn't outside it\n        if (high.operator === comp || high.operator === ecomp) {\n            return false;\n        }\n        // If the lowest version comparator has an operator and our version\n        // is less than it then it isn't higher than the range\n        if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n            return false;\n        } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n            return false;\n        }\n    }\n    return true;\n};\nmodule.exports = outside;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL291dHNpZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU1DLGFBQWFELG1CQUFPQSxDQUFDO0FBQzNCLE1BQU0sRUFBRUUsR0FBRyxFQUFFLEdBQUdEO0FBQ2hCLE1BQU1FLFFBQVFILG1CQUFPQSxDQUFDO0FBQ3RCLE1BQU1JLFlBQVlKLG1CQUFPQSxDQUFDO0FBQzFCLE1BQU1LLEtBQUtMLG1CQUFPQSxDQUFDO0FBQ25CLE1BQU1NLEtBQUtOLG1CQUFPQSxDQUFDO0FBQ25CLE1BQU1PLE1BQU1QLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU1RLE1BQU1SLG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1TLFVBQVUsQ0FBQ0MsU0FBU0MsT0FBT0MsTUFBTUM7SUFDckNILFVBQVUsSUFBSVgsT0FBT1csU0FBU0c7SUFDOUJGLFFBQVEsSUFBSVIsTUFBTVEsT0FBT0U7SUFFekIsSUFBSUMsTUFBTUMsT0FBT0MsTUFBTUMsTUFBTUM7SUFDN0IsT0FBUU47UUFDTixLQUFLO1lBQ0hFLE9BQU9UO1lBQ1BVLFFBQVFSO1lBQ1JTLE9BQU9WO1lBQ1BXLE9BQU87WUFDUEMsUUFBUTtZQUNSO1FBQ0YsS0FBSztZQUNISixPQUFPUjtZQUNQUyxRQUFRUDtZQUNSUSxPQUFPWDtZQUNQWSxPQUFPO1lBQ1BDLFFBQVE7WUFDUjtRQUNGO1lBQ0UsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCO0lBRUEsOENBQThDO0lBQzlDLElBQUlmLFVBQVVNLFNBQVNDLE9BQU9FLFVBQVU7UUFDdEMsT0FBTztJQUNUO0lBRUEsNkRBQTZEO0lBQzdELDhEQUE4RDtJQUU5RCxJQUFLLElBQUlPLElBQUksR0FBR0EsSUFBSVQsTUFBTVUsR0FBRyxDQUFDQyxNQUFNLEVBQUUsRUFBRUYsRUFBRztRQUN6QyxNQUFNRyxjQUFjWixNQUFNVSxHQUFHLENBQUNELEVBQUU7UUFFaEMsSUFBSUksT0FBTztRQUNYLElBQUlDLE1BQU07UUFFVkYsWUFBWUcsT0FBTyxDQUFDLENBQUNDO1lBQ25CLElBQUlBLFdBQVdDLE1BQU0sS0FBSzFCLEtBQUs7Z0JBQzdCeUIsYUFBYSxJQUFJMUIsV0FBVztZQUM5QjtZQUNBdUIsT0FBT0EsUUFBUUc7WUFDZkYsTUFBTUEsT0FBT0U7WUFDYixJQUFJYixLQUFLYSxXQUFXQyxNQUFNLEVBQUVKLEtBQUtJLE1BQU0sRUFBRWYsVUFBVTtnQkFDakRXLE9BQU9HO1lBQ1QsT0FBTyxJQUFJWCxLQUFLVyxXQUFXQyxNQUFNLEVBQUVILElBQUlHLE1BQU0sRUFBRWYsVUFBVTtnQkFDdkRZLE1BQU1FO1lBQ1I7UUFDRjtRQUVBLGlFQUFpRTtRQUNqRSxtQkFBbUI7UUFDbkIsSUFBSUgsS0FBS0ssUUFBUSxLQUFLWixRQUFRTyxLQUFLSyxRQUFRLEtBQUtYLE9BQU87WUFDckQsT0FBTztRQUNUO1FBRUEsbUVBQW1FO1FBQ25FLHNEQUFzRDtRQUN0RCxJQUFJLENBQUMsQ0FBQ08sSUFBSUksUUFBUSxJQUFJSixJQUFJSSxRQUFRLEtBQUtaLElBQUcsS0FDdENGLE1BQU1MLFNBQVNlLElBQUlHLE1BQU0sR0FBRztZQUM5QixPQUFPO1FBQ1QsT0FBTyxJQUFJSCxJQUFJSSxRQUFRLEtBQUtYLFNBQVNGLEtBQUtOLFNBQVNlLElBQUlHLE1BQU0sR0FBRztZQUM5RCxPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVDtBQUVBRSxPQUFPQyxPQUFPLEdBQUd0QiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvb3V0c2lkZS5qcz8yZGI5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlbVZlciA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvc2VtdmVyJylcbmNvbnN0IENvbXBhcmF0b3IgPSByZXF1aXJlKCcuLi9jbGFzc2VzL2NvbXBhcmF0b3InKVxuY29uc3QgeyBBTlkgfSA9IENvbXBhcmF0b3JcbmNvbnN0IFJhbmdlID0gcmVxdWlyZSgnLi4vY2xhc3Nlcy9yYW5nZScpXG5jb25zdCBzYXRpc2ZpZXMgPSByZXF1aXJlKCcuLi9mdW5jdGlvbnMvc2F0aXNmaWVzJylcbmNvbnN0IGd0ID0gcmVxdWlyZSgnLi4vZnVuY3Rpb25zL2d0JylcbmNvbnN0IGx0ID0gcmVxdWlyZSgnLi4vZnVuY3Rpb25zL2x0JylcbmNvbnN0IGx0ZSA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9ucy9sdGUnKVxuY29uc3QgZ3RlID0gcmVxdWlyZSgnLi4vZnVuY3Rpb25zL2d0ZScpXG5cbmNvbnN0IG91dHNpZGUgPSAodmVyc2lvbiwgcmFuZ2UsIGhpbG8sIG9wdGlvbnMpID0+IHtcbiAgdmVyc2lvbiA9IG5ldyBTZW1WZXIodmVyc2lvbiwgb3B0aW9ucylcbiAgcmFuZ2UgPSBuZXcgUmFuZ2UocmFuZ2UsIG9wdGlvbnMpXG5cbiAgbGV0IGd0Zm4sIGx0ZWZuLCBsdGZuLCBjb21wLCBlY29tcFxuICBzd2l0Y2ggKGhpbG8pIHtcbiAgICBjYXNlICc+JzpcbiAgICAgIGd0Zm4gPSBndFxuICAgICAgbHRlZm4gPSBsdGVcbiAgICAgIGx0Zm4gPSBsdFxuICAgICAgY29tcCA9ICc+J1xuICAgICAgZWNvbXAgPSAnPj0nXG4gICAgICBicmVha1xuICAgIGNhc2UgJzwnOlxuICAgICAgZ3RmbiA9IGx0XG4gICAgICBsdGVmbiA9IGd0ZVxuICAgICAgbHRmbiA9IGd0XG4gICAgICBjb21wID0gJzwnXG4gICAgICBlY29tcCA9ICc8PSdcbiAgICAgIGJyZWFrXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ011c3QgcHJvdmlkZSBhIGhpbG8gdmFsIG9mIFwiPFwiIG9yIFwiPlwiJylcbiAgfVxuXG4gIC8vIElmIGl0IHNhdGlzZmllcyB0aGUgcmFuZ2UgaXQgaXMgbm90IG91dHNpZGVcbiAgaWYgKHNhdGlzZmllcyh2ZXJzaW9uLCByYW5nZSwgb3B0aW9ucykpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIC8vIEZyb20gbm93IG9uLCB2YXJpYWJsZSB0ZXJtcyBhcmUgYXMgaWYgd2UncmUgaW4gXCJndHJcIiBtb2RlLlxuICAvLyBidXQgbm90ZSB0aGF0IGV2ZXJ5dGhpbmcgaXMgZmxpcHBlZCBmb3IgdGhlIFwibHRyXCIgZnVuY3Rpb24uXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByYW5nZS5zZXQubGVuZ3RoOyArK2kpIHtcbiAgICBjb25zdCBjb21wYXJhdG9ycyA9IHJhbmdlLnNldFtpXVxuXG4gICAgbGV0IGhpZ2ggPSBudWxsXG4gICAgbGV0IGxvdyA9IG51bGxcblxuICAgIGNvbXBhcmF0b3JzLmZvckVhY2goKGNvbXBhcmF0b3IpID0+IHtcbiAgICAgIGlmIChjb21wYXJhdG9yLnNlbXZlciA9PT0gQU5ZKSB7XG4gICAgICAgIGNvbXBhcmF0b3IgPSBuZXcgQ29tcGFyYXRvcignPj0wLjAuMCcpXG4gICAgICB9XG4gICAgICBoaWdoID0gaGlnaCB8fCBjb21wYXJhdG9yXG4gICAgICBsb3cgPSBsb3cgfHwgY29tcGFyYXRvclxuICAgICAgaWYgKGd0Zm4oY29tcGFyYXRvci5zZW12ZXIsIGhpZ2guc2VtdmVyLCBvcHRpb25zKSkge1xuICAgICAgICBoaWdoID0gY29tcGFyYXRvclxuICAgICAgfSBlbHNlIGlmIChsdGZuKGNvbXBhcmF0b3Iuc2VtdmVyLCBsb3cuc2VtdmVyLCBvcHRpb25zKSkge1xuICAgICAgICBsb3cgPSBjb21wYXJhdG9yXG4gICAgICB9XG4gICAgfSlcblxuICAgIC8vIElmIHRoZSBlZGdlIHZlcnNpb24gY29tcGFyYXRvciBoYXMgYSBvcGVyYXRvciB0aGVuIG91ciB2ZXJzaW9uXG4gICAgLy8gaXNuJ3Qgb3V0c2lkZSBpdFxuICAgIGlmIChoaWdoLm9wZXJhdG9yID09PSBjb21wIHx8IGhpZ2gub3BlcmF0b3IgPT09IGVjb21wKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICAvLyBJZiB0aGUgbG93ZXN0IHZlcnNpb24gY29tcGFyYXRvciBoYXMgYW4gb3BlcmF0b3IgYW5kIG91ciB2ZXJzaW9uXG4gICAgLy8gaXMgbGVzcyB0aGFuIGl0IHRoZW4gaXQgaXNuJ3QgaGlnaGVyIHRoYW4gdGhlIHJhbmdlXG4gICAgaWYgKCghbG93Lm9wZXJhdG9yIHx8IGxvdy5vcGVyYXRvciA9PT0gY29tcCkgJiZcbiAgICAgICAgbHRlZm4odmVyc2lvbiwgbG93LnNlbXZlcikpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAobG93Lm9wZXJhdG9yID09PSBlY29tcCAmJiBsdGZuKHZlcnNpb24sIGxvdy5zZW12ZXIpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWVcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvdXRzaWRlXG4iXSwibmFtZXMiOlsiU2VtVmVyIiwicmVxdWlyZSIsIkNvbXBhcmF0b3IiLCJBTlkiLCJSYW5nZSIsInNhdGlzZmllcyIsImd0IiwibHQiLCJsdGUiLCJndGUiLCJvdXRzaWRlIiwidmVyc2lvbiIsInJhbmdlIiwiaGlsbyIsIm9wdGlvbnMiLCJndGZuIiwibHRlZm4iLCJsdGZuIiwiY29tcCIsImVjb21wIiwiVHlwZUVycm9yIiwiaSIsInNldCIsImxlbmd0aCIsImNvbXBhcmF0b3JzIiwiaGlnaCIsImxvdyIsImZvckVhY2giLCJjb21wYXJhdG9yIiwic2VtdmVyIiwib3BlcmF0b3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/outside.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/simplify.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/simplify.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\n\nconst satisfies = __webpack_require__(/*! ../functions/satisfies.js */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/satisfies.js\");\nconst compare = __webpack_require__(/*! ../functions/compare.js */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\nmodule.exports = (versions, range, options)=>{\n    const set = [];\n    let first = null;\n    let prev = null;\n    const v = versions.sort((a, b)=>compare(a, b, options));\n    for (const version of v){\n        const included = satisfies(version, range, options);\n        if (included) {\n            prev = version;\n            if (!first) {\n                first = version;\n            }\n        } else {\n            if (prev) {\n                set.push([\n                    first,\n                    prev\n                ]);\n            }\n            prev = null;\n            first = null;\n        }\n    }\n    if (first) {\n        set.push([\n            first,\n            null\n        ]);\n    }\n    const ranges = [];\n    for (const [min, max] of set){\n        if (min === max) {\n            ranges.push(min);\n        } else if (!max && min === v[0]) {\n            ranges.push(\"*\");\n        } else if (!max) {\n            ranges.push(`>=${min}`);\n        } else if (min === v[0]) {\n            ranges.push(`<=${max}`);\n        } else {\n            ranges.push(`${min} - ${max}`);\n        }\n    }\n    const simplified = ranges.join(\" || \");\n    const original = typeof range.raw === \"string\" ? range.raw : String(range);\n    return simplified.length < original.length ? simplified : range;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL3NpbXBsaWZ5LmpzIiwibWFwcGluZ3MiOiJBQUFBLG1FQUFtRTtBQUNuRSwrREFBK0Q7QUFDL0QseUVBQXlFOztBQUN6RSxNQUFNQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUMxQixNQUFNQyxVQUFVRCxtQkFBT0EsQ0FBQztBQUN4QkUsT0FBT0MsT0FBTyxHQUFHLENBQUNDLFVBQVVDLE9BQU9DO0lBQ2pDLE1BQU1DLE1BQU0sRUFBRTtJQUNkLElBQUlDLFFBQVE7SUFDWixJQUFJQyxPQUFPO0lBQ1gsTUFBTUMsSUFBSU4sU0FBU08sSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU1aLFFBQVFXLEdBQUdDLEdBQUdQO0lBQ2hELEtBQUssTUFBTVEsV0FBV0osRUFBRztRQUN2QixNQUFNSyxXQUFXaEIsVUFBVWUsU0FBU1QsT0FBT0M7UUFDM0MsSUFBSVMsVUFBVTtZQUNaTixPQUFPSztZQUNQLElBQUksQ0FBQ04sT0FBTztnQkFDVkEsUUFBUU07WUFDVjtRQUNGLE9BQU87WUFDTCxJQUFJTCxNQUFNO2dCQUNSRixJQUFJUyxJQUFJLENBQUM7b0JBQUNSO29CQUFPQztpQkFBSztZQUN4QjtZQUNBQSxPQUFPO1lBQ1BELFFBQVE7UUFDVjtJQUNGO0lBQ0EsSUFBSUEsT0FBTztRQUNURCxJQUFJUyxJQUFJLENBQUM7WUFBQ1I7WUFBTztTQUFLO0lBQ3hCO0lBRUEsTUFBTVMsU0FBUyxFQUFFO0lBQ2pCLEtBQUssTUFBTSxDQUFDQyxLQUFLQyxJQUFJLElBQUlaLElBQUs7UUFDNUIsSUFBSVcsUUFBUUMsS0FBSztZQUNmRixPQUFPRCxJQUFJLENBQUNFO1FBQ2QsT0FBTyxJQUFJLENBQUNDLE9BQU9ELFFBQVFSLENBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDL0JPLE9BQU9ELElBQUksQ0FBQztRQUNkLE9BQU8sSUFBSSxDQUFDRyxLQUFLO1lBQ2ZGLE9BQU9ELElBQUksQ0FBQyxDQUFDLEVBQUUsRUFBRUUsSUFBSSxDQUFDO1FBQ3hCLE9BQU8sSUFBSUEsUUFBUVIsQ0FBQyxDQUFDLEVBQUUsRUFBRTtZQUN2Qk8sT0FBT0QsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFRyxJQUFJLENBQUM7UUFDeEIsT0FBTztZQUNMRixPQUFPRCxJQUFJLENBQUMsQ0FBQyxFQUFFRSxJQUFJLEdBQUcsRUFBRUMsSUFBSSxDQUFDO1FBQy9CO0lBQ0Y7SUFDQSxNQUFNQyxhQUFhSCxPQUFPSSxJQUFJLENBQUM7SUFDL0IsTUFBTUMsV0FBVyxPQUFPakIsTUFBTWtCLEdBQUcsS0FBSyxXQUFXbEIsTUFBTWtCLEdBQUcsR0FBR0MsT0FBT25CO0lBQ3BFLE9BQU9lLFdBQVdLLE1BQU0sR0FBR0gsU0FBU0csTUFBTSxHQUFHTCxhQUFhZjtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvc2ltcGxpZnkuanM/NjMxOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBnaXZlbiBhIHNldCBvZiB2ZXJzaW9ucyBhbmQgYSByYW5nZSwgY3JlYXRlIGEgXCJzaW1wbGlmaWVkXCIgcmFuZ2Vcbi8vIHRoYXQgaW5jbHVkZXMgdGhlIHNhbWUgdmVyc2lvbnMgdGhhdCB0aGUgb3JpZ2luYWwgcmFuZ2UgZG9lc1xuLy8gSWYgdGhlIG9yaWdpbmFsIHJhbmdlIGlzIHNob3J0ZXIgdGhhbiB0aGUgc2ltcGxpZmllZCBvbmUsIHJldHVybiB0aGF0LlxuY29uc3Qgc2F0aXNmaWVzID0gcmVxdWlyZSgnLi4vZnVuY3Rpb25zL3NhdGlzZmllcy5qcycpXG5jb25zdCBjb21wYXJlID0gcmVxdWlyZSgnLi4vZnVuY3Rpb25zL2NvbXBhcmUuanMnKVxubW9kdWxlLmV4cG9ydHMgPSAodmVyc2lvbnMsIHJhbmdlLCBvcHRpb25zKSA9PiB7XG4gIGNvbnN0IHNldCA9IFtdXG4gIGxldCBmaXJzdCA9IG51bGxcbiAgbGV0IHByZXYgPSBudWxsXG4gIGNvbnN0IHYgPSB2ZXJzaW9ucy5zb3J0KChhLCBiKSA9PiBjb21wYXJlKGEsIGIsIG9wdGlvbnMpKVxuICBmb3IgKGNvbnN0IHZlcnNpb24gb2Ygdikge1xuICAgIGNvbnN0IGluY2x1ZGVkID0gc2F0aXNmaWVzKHZlcnNpb24sIHJhbmdlLCBvcHRpb25zKVxuICAgIGlmIChpbmNsdWRlZCkge1xuICAgICAgcHJldiA9IHZlcnNpb25cbiAgICAgIGlmICghZmlyc3QpIHtcbiAgICAgICAgZmlyc3QgPSB2ZXJzaW9uXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcmV2KSB7XG4gICAgICAgIHNldC5wdXNoKFtmaXJzdCwgcHJldl0pXG4gICAgICB9XG4gICAgICBwcmV2ID0gbnVsbFxuICAgICAgZmlyc3QgPSBudWxsXG4gICAgfVxuICB9XG4gIGlmIChmaXJzdCkge1xuICAgIHNldC5wdXNoKFtmaXJzdCwgbnVsbF0pXG4gIH1cblxuICBjb25zdCByYW5nZXMgPSBbXVxuICBmb3IgKGNvbnN0IFttaW4sIG1heF0gb2Ygc2V0KSB7XG4gICAgaWYgKG1pbiA9PT0gbWF4KSB7XG4gICAgICByYW5nZXMucHVzaChtaW4pXG4gICAgfSBlbHNlIGlmICghbWF4ICYmIG1pbiA9PT0gdlswXSkge1xuICAgICAgcmFuZ2VzLnB1c2goJyonKVxuICAgIH0gZWxzZSBpZiAoIW1heCkge1xuICAgICAgcmFuZ2VzLnB1c2goYD49JHttaW59YClcbiAgICB9IGVsc2UgaWYgKG1pbiA9PT0gdlswXSkge1xuICAgICAgcmFuZ2VzLnB1c2goYDw9JHttYXh9YClcbiAgICB9IGVsc2Uge1xuICAgICAgcmFuZ2VzLnB1c2goYCR7bWlufSAtICR7bWF4fWApXG4gICAgfVxuICB9XG4gIGNvbnN0IHNpbXBsaWZpZWQgPSByYW5nZXMuam9pbignIHx8ICcpXG4gIGNvbnN0IG9yaWdpbmFsID0gdHlwZW9mIHJhbmdlLnJhdyA9PT0gJ3N0cmluZycgPyByYW5nZS5yYXcgOiBTdHJpbmcocmFuZ2UpXG4gIHJldHVybiBzaW1wbGlmaWVkLmxlbmd0aCA8IG9yaWdpbmFsLmxlbmd0aCA/IHNpbXBsaWZpZWQgOiByYW5nZVxufVxuIl0sIm5hbWVzIjpbInNhdGlzZmllcyIsInJlcXVpcmUiLCJjb21wYXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInZlcnNpb25zIiwicmFuZ2UiLCJvcHRpb25zIiwic2V0IiwiZmlyc3QiLCJwcmV2IiwidiIsInNvcnQiLCJhIiwiYiIsInZlcnNpb24iLCJpbmNsdWRlZCIsInB1c2giLCJyYW5nZXMiLCJtaW4iLCJtYXgiLCJzaW1wbGlmaWVkIiwiam9pbiIsIm9yaWdpbmFsIiwicmF3IiwiU3RyaW5nIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/simplify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/subset.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/subset.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range.js */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst Comparator = __webpack_require__(/*! ../classes/comparator.js */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/comparator.js\");\nconst { ANY } = Comparator;\nconst satisfies = __webpack_require__(/*! ../functions/satisfies.js */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/satisfies.js\");\nconst compare = __webpack_require__(/*! ../functions/compare.js */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/functions/compare.js\");\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\nconst subset = (sub, dom, options = {})=>{\n    if (sub === dom) {\n        return true;\n    }\n    sub = new Range(sub, options);\n    dom = new Range(dom, options);\n    let sawNonNull = false;\n    OUTER: for (const simpleSub of sub.set){\n        for (const simpleDom of dom.set){\n            const isSub = simpleSubset(simpleSub, simpleDom, options);\n            sawNonNull = sawNonNull || isSub !== null;\n            if (isSub) {\n                continue OUTER;\n            }\n        }\n        // the null set is a subset of everything, but null simple ranges in\n        // a complex range should be ignored.  so if we saw a non-null range,\n        // then we know this isn't a subset, but if EVERY simple range was null,\n        // then it is a subset.\n        if (sawNonNull) {\n            return false;\n        }\n    }\n    return true;\n};\nconst minimumVersionWithPreRelease = [\n    new Comparator(\">=0.0.0-0\")\n];\nconst minimumVersion = [\n    new Comparator(\">=0.0.0\")\n];\nconst simpleSubset = (sub, dom, options)=>{\n    if (sub === dom) {\n        return true;\n    }\n    if (sub.length === 1 && sub[0].semver === ANY) {\n        if (dom.length === 1 && dom[0].semver === ANY) {\n            return true;\n        } else if (options.includePrerelease) {\n            sub = minimumVersionWithPreRelease;\n        } else {\n            sub = minimumVersion;\n        }\n    }\n    if (dom.length === 1 && dom[0].semver === ANY) {\n        if (options.includePrerelease) {\n            return true;\n        } else {\n            dom = minimumVersion;\n        }\n    }\n    const eqSet = new Set();\n    let gt, lt;\n    for (const c of sub){\n        if (c.operator === \">\" || c.operator === \">=\") {\n            gt = higherGT(gt, c, options);\n        } else if (c.operator === \"<\" || c.operator === \"<=\") {\n            lt = lowerLT(lt, c, options);\n        } else {\n            eqSet.add(c.semver);\n        }\n    }\n    if (eqSet.size > 1) {\n        return null;\n    }\n    let gtltComp;\n    if (gt && lt) {\n        gtltComp = compare(gt.semver, lt.semver, options);\n        if (gtltComp > 0) {\n            return null;\n        } else if (gtltComp === 0 && (gt.operator !== \">=\" || lt.operator !== \"<=\")) {\n            return null;\n        }\n    }\n    // will iterate one or zero times\n    for (const eq of eqSet){\n        if (gt && !satisfies(eq, String(gt), options)) {\n            return null;\n        }\n        if (lt && !satisfies(eq, String(lt), options)) {\n            return null;\n        }\n        for (const c of dom){\n            if (!satisfies(eq, String(c), options)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    let higher, lower;\n    let hasDomLT, hasDomGT;\n    // if the subset has a prerelease, we need a comparator in the superset\n    // with the same tuple and a prerelease, or it's not a subset\n    let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;\n    let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;\n    // exception: <1.2.3-0 is the same as <1.2.3\n    if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === \"<\" && needDomLTPre.prerelease[0] === 0) {\n        needDomLTPre = false;\n    }\n    for (const c of dom){\n        hasDomGT = hasDomGT || c.operator === \">\" || c.operator === \">=\";\n        hasDomLT = hasDomLT || c.operator === \"<\" || c.operator === \"<=\";\n        if (gt) {\n            if (needDomGTPre) {\n                if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {\n                    needDomGTPre = false;\n                }\n            }\n            if (c.operator === \">\" || c.operator === \">=\") {\n                higher = higherGT(gt, c, options);\n                if (higher === c && higher !== gt) {\n                    return false;\n                }\n            } else if (gt.operator === \">=\" && !satisfies(gt.semver, String(c), options)) {\n                return false;\n            }\n        }\n        if (lt) {\n            if (needDomLTPre) {\n                if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {\n                    needDomLTPre = false;\n                }\n            }\n            if (c.operator === \"<\" || c.operator === \"<=\") {\n                lower = lowerLT(lt, c, options);\n                if (lower === c && lower !== lt) {\n                    return false;\n                }\n            } else if (lt.operator === \"<=\" && !satisfies(lt.semver, String(c), options)) {\n                return false;\n            }\n        }\n        if (!c.operator && (lt || gt) && gtltComp !== 0) {\n            return false;\n        }\n    }\n    // if there was a < or >, and nothing in the dom, then must be false\n    // UNLESS it was limited by another range in the other direction.\n    // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n    if (gt && hasDomLT && !lt && gtltComp !== 0) {\n        return false;\n    }\n    if (lt && hasDomGT && !gt && gtltComp !== 0) {\n        return false;\n    }\n    // we needed a prerelease range in a specific tuple, but didn't get one\n    // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n    // because it includes prereleases in the 1.2.3 tuple\n    if (needDomGTPre || needDomLTPre) {\n        return false;\n    }\n    return true;\n};\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options)=>{\n    if (!a) {\n        return b;\n    }\n    const comp = compare(a.semver, b.semver, options);\n    return comp > 0 ? a : comp < 0 ? b : b.operator === \">\" && a.operator === \">=\" ? b : a;\n};\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options)=>{\n    if (!a) {\n        return b;\n    }\n    const comp = compare(a.semver, b.semver, options);\n    return comp < 0 ? a : comp > 0 ? b : b.operator === \"<\" && a.operator === \"<=\" ? b : a;\n};\nmodule.exports = subset;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/subset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/to-comparators.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/to-comparators.js ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options)=>new Range(range, options).set.map((comp)=>comp.map((c)=>c.value).join(\" \").trim().split(\" \"));\nmodule.exports = toComparators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL3RvLWNvbXBhcmF0b3JzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUV0QixpREFBaUQ7QUFDakQsTUFBTUMsZ0JBQWdCLENBQUNDLE9BQU9DLFVBQzVCLElBQUlKLE1BQU1HLE9BQU9DLFNBQVNDLEdBQUcsQ0FDMUJDLEdBQUcsQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS0QsR0FBRyxDQUFDRSxDQUFBQSxJQUFLQSxFQUFFQyxLQUFLLEVBQUVDLElBQUksQ0FBQyxLQUFLQyxJQUFJLEdBQUdDLEtBQUssQ0FBQztBQUUvREMsT0FBT0MsT0FBTyxHQUFHWiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9AbGVkZ2VyaHEvaHctdHJhbnNwb3J0LXdlYi1ibGUvbm9kZV9tb2R1bGVzL3NlbXZlci9yYW5nZXMvdG8tY29tcGFyYXRvcnMuanM/NWE4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSYW5nZSA9IHJlcXVpcmUoJy4uL2NsYXNzZXMvcmFuZ2UnKVxuXG4vLyBNb3N0bHkganVzdCBmb3IgdGVzdGluZyBhbmQgbGVnYWN5IEFQSSByZWFzb25zXG5jb25zdCB0b0NvbXBhcmF0b3JzID0gKHJhbmdlLCBvcHRpb25zKSA9PlxuICBuZXcgUmFuZ2UocmFuZ2UsIG9wdGlvbnMpLnNldFxuICAgIC5tYXAoY29tcCA9PiBjb21wLm1hcChjID0+IGMudmFsdWUpLmpvaW4oJyAnKS50cmltKCkuc3BsaXQoJyAnKSlcblxubW9kdWxlLmV4cG9ydHMgPSB0b0NvbXBhcmF0b3JzXG4iXSwibmFtZXMiOlsiUmFuZ2UiLCJyZXF1aXJlIiwidG9Db21wYXJhdG9ycyIsInJhbmdlIiwib3B0aW9ucyIsInNldCIsIm1hcCIsImNvbXAiLCJjIiwidmFsdWUiLCJqb2luIiwidHJpbSIsInNwbGl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/to-comparators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/valid.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/valid.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Range = __webpack_require__(/*! ../classes/range */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/classes/range.js\");\nconst validRange = (range, options)=>{\n    try {\n        // Return '*' instead of '' so that truthiness works.\n        // This will throw if it's invalid anyway\n        return new Range(range, options).range || \"*\";\n    } catch (er) {\n        return null;\n    }\n};\nmodule.exports = validRange;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL3ZhbGlkLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUN0QixNQUFNQyxhQUFhLENBQUNDLE9BQU9DO0lBQ3pCLElBQUk7UUFDRixxREFBcUQ7UUFDckQseUNBQXlDO1FBQ3pDLE9BQU8sSUFBSUosTUFBTUcsT0FBT0MsU0FBU0QsS0FBSyxJQUFJO0lBQzVDLEVBQUUsT0FBT0UsSUFBSTtRQUNYLE9BQU87SUFDVDtBQUNGO0FBQ0FDLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWItYmxlL25vZGVfbW9kdWxlcy9zZW12ZXIvcmFuZ2VzL3ZhbGlkLmpzPzBiZjUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmFuZ2UgPSByZXF1aXJlKCcuLi9jbGFzc2VzL3JhbmdlJylcbmNvbnN0IHZhbGlkUmFuZ2UgPSAocmFuZ2UsIG9wdGlvbnMpID0+IHtcbiAgdHJ5IHtcbiAgICAvLyBSZXR1cm4gJyonIGluc3RlYWQgb2YgJycgc28gdGhhdCB0cnV0aGluZXNzIHdvcmtzLlxuICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBpZiBpdCdzIGludmFsaWQgYW55d2F5XG4gICAgcmV0dXJuIG5ldyBSYW5nZShyYW5nZSwgb3B0aW9ucykucmFuZ2UgfHwgJyonXG4gIH0gY2F0Y2ggKGVyKSB7XG4gICAgcmV0dXJuIG51bGxcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSB2YWxpZFJhbmdlXG4iXSwibmFtZXMiOlsiUmFuZ2UiLCJyZXF1aXJlIiwidmFsaWRSYW5nZSIsInJhbmdlIiwib3B0aW9ucyIsImVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-web-ble/node_modules/semver/ranges/valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransportWebHID)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/hw-transport */ \"(ssr)/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js\");\n/* harmony import */ var _ledgerhq_devices_hid_framing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/devices/hid-framing */ \"(ssr)/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js\");\n/* harmony import */ var _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ledgerhq/devices */ \"(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\nconst ledgerDevices = [\n    {\n        vendorId: _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.ledgerUSBVendorId\n    }\n];\nconst isSupported = ()=>Promise.resolve(!!(window.navigator && window.navigator.hid));\nconst getHID = ()=>{\n    // $FlowFixMe\n    const { hid } = navigator;\n    if (!hid) throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportError(\"navigator.hid is not supported\", \"HIDNotSupported\");\n    return hid;\n};\nfunction requestLedgerDevices() {\n    return __awaiter(this, void 0, void 0, function*() {\n        const device = yield getHID().requestDevice({\n            filters: ledgerDevices\n        });\n        if (Array.isArray(device)) return device;\n        return [\n            device\n        ];\n    });\n}\nfunction getLedgerDevices() {\n    return __awaiter(this, void 0, void 0, function*() {\n        const devices = yield getHID().getDevices();\n        return devices.filter((d)=>d.vendorId === _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.ledgerUSBVendorId);\n    });\n}\nfunction getFirstLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function*() {\n        const existingDevices = yield getLedgerDevices();\n        if (existingDevices.length > 0) return existingDevices[0];\n        const devices = yield requestLedgerDevices();\n        return devices[0];\n    });\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */ class TransportWebHID extends _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(device){\n        super();\n        this.channel = Math.floor(Math.random() * 0xffff);\n        this.packetSize = 64;\n        this.inputs = [];\n        this.read = ()=>{\n            if (this.inputs.length) {\n                return Promise.resolve(this.inputs.shift());\n            }\n            return new Promise((success)=>{\n                this.inputCallback = success;\n            });\n        };\n        this.onInputReport = (e)=>{\n            const buffer = Buffer.from(e.data.buffer);\n            if (this.inputCallback) {\n                this.inputCallback(buffer);\n                this.inputCallback = null;\n            } else {\n                this.inputs.push(buffer);\n            }\n        };\n        this._disconnectEmitted = false;\n        this._emitDisconnect = (e)=>{\n            if (this._disconnectEmitted) return;\n            this._disconnectEmitted = true;\n            this.emit(\"disconnect\", e);\n        };\n        /**\n         * Exchange with the device using APDU protocol.\n         * @param apdu\n         * @returns a promise of apdu response\n         */ this.exchange = (apdu)=>__awaiter(this, void 0, void 0, function*() {\n                const b = yield this.exchangeAtomicImpl(()=>__awaiter(this, void 0, void 0, function*() {\n                        const { channel, packetSize } = this;\n                        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__.log)(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n                        const framing = (0,_ledgerhq_devices_hid_framing__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(channel, packetSize);\n                        // Write...\n                        const blocks = framing.makeBlocks(apdu);\n                        for(let i = 0; i < blocks.length; i++){\n                            yield this.device.sendReport(0, blocks[i]);\n                        }\n                        // Read...\n                        let result;\n                        let acc;\n                        while(!(result = framing.getReducedResult(acc))){\n                            const buffer = yield this.read();\n                            acc = framing.reduceResponse(acc, buffer);\n                        }\n                        (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__.log)(\"apdu\", \"<= \" + result.toString(\"hex\"));\n                        return result;\n                    })).catch((e)=>{\n                    if (e && e.message && e.message.includes(\"write\")) {\n                        this._emitDisconnect(e);\n                        throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.DisconnectedDeviceDuringOperation(e.message);\n                    }\n                    throw e;\n                });\n                return b;\n            });\n        this.device = device;\n        this.deviceModel = typeof device.productId === \"number\" ? (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.identifyUSBProductId)(device.productId) : undefined;\n        device.addEventListener(\"inputreport\", this.onInputReport);\n    }\n    /**\n     * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n     */ static request() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const [device] = yield requestLedgerDevices();\n            return TransportWebHID.open(device);\n        });\n    }\n    /**\n     * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n     */ static openConnected() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const devices = yield getLedgerDevices();\n            if (devices.length === 0) return null;\n            return TransportWebHID.open(devices[0]);\n        });\n    }\n    /**\n     * Create a Ledger transport with a HIDDevice\n     */ static open(device) {\n        return __awaiter(this, void 0, void 0, function*() {\n            yield device.open();\n            const transport = new TransportWebHID(device);\n            const onDisconnect = (e)=>{\n                if (device === e.device) {\n                    getHID().removeEventListener(\"disconnect\", onDisconnect);\n                    transport._emitDisconnect(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.DisconnectedDevice());\n                }\n            };\n            getHID().addEventListener(\"disconnect\", onDisconnect);\n            return transport;\n        });\n    }\n    /**\n     * Release the transport device\n     */ close() {\n        return __awaiter(this, void 0, void 0, function*() {\n            yield this.exchangeBusyPromise;\n            this.device.removeEventListener(\"inputreport\", this.onInputReport);\n            yield this.device.close();\n        });\n    }\n    setScrambleKey() {}\n}\n/**\n * Check if WebUSB transport is supported.\n */ TransportWebHID.isSupported = isSupported;\n/**\n * List the WebUSB devices that was previously authorized by the user.\n */ TransportWebHID.list = getLedgerDevices;\n/**\n * Actively listen to WebUSB devices and emit ONE device\n * that was either accepted before, if not it will trigger the native permission UI.\n *\n * Important: it must be called in the context of a UI click!\n */ TransportWebHID.listen = (observer)=>{\n    let unsubscribed = false;\n    getFirstLedgerDevice().then((device)=>{\n        if (!device) {\n            observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportOpenUserCancelled(\"Access denied to use Ledger device\"));\n        } else if (!unsubscribed) {\n            const deviceModel = typeof device.productId === \"number\" ? (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.identifyUSBProductId)(device.productId) : undefined;\n            observer.next({\n                type: \"add\",\n                descriptor: device,\n                deviceModel\n            });\n            observer.complete();\n        }\n    }, (error)=>{\n        observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportOpenUserCancelled(error.message));\n    });\n    function unsubscribe() {\n        unsubscribed = true;\n    }\n    return {\n        unsubscribe\n    };\n}; //# sourceMappingURL=TransportWebHID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransportWebUSB)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/hw-transport */ \"(ssr)/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js\");\n/* harmony import */ var _ledgerhq_devices_hid_framing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/devices/hid-framing */ \"(ssr)/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js\");\n/* harmony import */ var _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ledgerhq/devices */ \"(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ledgerhq/logs */ \"(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\");\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\");\n/* harmony import */ var _webusb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webusb */ \"(ssr)/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/webusb.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst configurationValue = 1;\nconst endpointNumber = 3;\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */ class TransportWebUSB extends _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(device, interfaceNumber){\n        super();\n        this.channel = Math.floor(Math.random() * 0xffff);\n        this.packetSize = 64;\n        this._disconnectEmitted = false;\n        this._emitDisconnect = (e)=>{\n            if (this._disconnectEmitted) return;\n            this._disconnectEmitted = true;\n            this.emit(\"disconnect\", e);\n        };\n        this.device = device;\n        this.interfaceNumber = interfaceNumber;\n        this.deviceModel = (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.identifyUSBProductId)(device.productId);\n    }\n    /**\n     * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n     */ static request() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const device = yield (0,_webusb__WEBPACK_IMPORTED_MODULE_5__.requestLedgerDevice)();\n            return TransportWebUSB.open(device);\n        });\n    }\n    /**\n     * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n     */ static openConnected() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const devices = yield (0,_webusb__WEBPACK_IMPORTED_MODULE_5__.getLedgerDevices)();\n            if (devices.length === 0) return null;\n            return TransportWebUSB.open(devices[0]);\n        });\n    }\n    /**\n     * Create a Ledger transport with a USBDevice\n     */ static open(device) {\n        return __awaiter(this, void 0, void 0, function*() {\n            yield device.open();\n            if (device.configuration === null) {\n                yield device.selectConfiguration(configurationValue);\n            }\n            yield gracefullyResetDevice(device);\n            const iface = device.configurations[0].interfaces.find(({ alternates })=>alternates.some((a)=>a.interfaceClass === 255));\n            if (!iface) {\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportInterfaceNotAvailable(\"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\");\n            }\n            const interfaceNumber = iface.interfaceNumber;\n            try {\n                yield device.claimInterface(interfaceNumber);\n            } catch (e) {\n                yield device.close();\n                throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportInterfaceNotAvailable(e.message);\n            }\n            const transport = new TransportWebUSB(device, interfaceNumber);\n            const onDisconnect = (e)=>{\n                if (device === e.device) {\n                    // $FlowFixMe\n                    navigator.usb.removeEventListener(\"disconnect\", onDisconnect);\n                    transport._emitDisconnect(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.DisconnectedDevice());\n                }\n            };\n            // $FlowFixMe\n            navigator.usb.addEventListener(\"disconnect\", onDisconnect);\n            return transport;\n        });\n    }\n    /**\n     * Release the transport device\n     */ close() {\n        return __awaiter(this, void 0, void 0, function*() {\n            yield this.exchangeBusyPromise;\n            yield this.device.releaseInterface(this.interfaceNumber);\n            yield gracefullyResetDevice(this.device);\n            yield this.device.close();\n        });\n    }\n    /**\n     * Exchange with the device using APDU protocol.\n     * @param apdu\n     * @returns a promise of apdu response\n     */ exchange(apdu) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const b = yield this.exchangeAtomicImpl(()=>__awaiter(this, void 0, void 0, function*() {\n                    const { channel, packetSize } = this;\n                    (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__.log)(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n                    const framing = (0,_ledgerhq_devices_hid_framing__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(channel, packetSize);\n                    // Write...\n                    const blocks = framing.makeBlocks(apdu);\n                    for(let i = 0; i < blocks.length; i++){\n                        yield this.device.transferOut(endpointNumber, blocks[i]);\n                    }\n                    // Read...\n                    let result;\n                    let acc;\n                    while(!(result = framing.getReducedResult(acc))){\n                        const r = yield this.device.transferIn(endpointNumber, packetSize);\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore\n                        const buffer = Buffer.from(r.data.buffer);\n                        acc = framing.reduceResponse(acc, buffer);\n                    }\n                    (0,_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_3__.log)(\"apdu\", \"<= \" + result.toString(\"hex\"));\n                    return result;\n                })).catch((e)=>{\n                if (e && e.message && e.message.includes(\"disconnected\")) {\n                    this._emitDisconnect(e);\n                    throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.DisconnectedDeviceDuringOperation(e.message);\n                }\n                throw e;\n            });\n            return b;\n        });\n    }\n    setScrambleKey() {}\n}\n/**\n * Check if WebUSB transport is supported.\n */ TransportWebUSB.isSupported = _webusb__WEBPACK_IMPORTED_MODULE_5__.isSupported;\n/**\n * List the WebUSB devices that was previously authorized by the user.\n */ TransportWebUSB.list = _webusb__WEBPACK_IMPORTED_MODULE_5__.getLedgerDevices;\n/**\n * Actively listen to WebUSB devices and emit ONE device\n * that was either accepted before, if not it will trigger the native permission UI.\n *\n * Important: it must be called in the context of a UI click!\n */ TransportWebUSB.listen = (observer)=>{\n    let unsubscribed = false;\n    (0,_webusb__WEBPACK_IMPORTED_MODULE_5__.getFirstLedgerDevice)().then((device)=>{\n        if (!unsubscribed) {\n            const deviceModel = (0,_ledgerhq_devices__WEBPACK_IMPORTED_MODULE_2__.identifyUSBProductId)(device.productId);\n            observer.next({\n                type: \"add\",\n                descriptor: device,\n                deviceModel\n            });\n            observer.complete();\n        }\n    }, (error)=>{\n        if (window.DOMException && error instanceof window.DOMException && error.code === 18) {\n            observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportWebUSBGestureRequired(error.message));\n        } else {\n            observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_4__.TransportOpenUserCancelled(error.message));\n        }\n    });\n    function unsubscribe() {\n        unsubscribed = true;\n    }\n    return {\n        unsubscribe\n    };\n};\nfunction gracefullyResetDevice(device) {\n    return __awaiter(this, void 0, void 0, function*() {\n        try {\n            yield device.reset();\n        } catch (err) {\n            console.warn(err);\n        }\n    });\n} //# sourceMappingURL=TransportWebUSB.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/webusb.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport-webusb/lib-es/webusb.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFirstLedgerDevice: () => (/* binding */ getFirstLedgerDevice),\n/* harmony export */   getLedgerDevices: () => (/* binding */ getLedgerDevices),\n/* harmony export */   isSupported: () => (/* binding */ isSupported),\n/* harmony export */   requestLedgerDevice: () => (/* binding */ requestLedgerDevice)\n/* harmony export */ });\n/* harmony import */ var _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ledgerhq/devices */ \"(ssr)/./node_modules/@ledgerhq/devices/lib-es/index.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst ledgerDevices = [\n    {\n        vendorId: _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_0__.ledgerUSBVendorId\n    }\n];\nfunction requestLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function*() {\n        const device = yield navigator.usb.requestDevice({\n            filters: ledgerDevices\n        });\n        return device;\n    });\n}\nfunction getLedgerDevices() {\n    return __awaiter(this, void 0, void 0, function*() {\n        const devices = yield navigator.usb.getDevices();\n        return devices.filter((d)=>d.vendorId === _ledgerhq_devices__WEBPACK_IMPORTED_MODULE_0__.ledgerUSBVendorId);\n    });\n}\nfunction getFirstLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function*() {\n        const existingDevices = yield getLedgerDevices();\n        if (existingDevices.length > 0) return existingDevices[0];\n        return requestLedgerDevice();\n    });\n}\nconst isSupported = ()=>Promise.resolve(!!navigator && !!navigator.usb && typeof navigator.usb.getDevices === \"function\"); //# sourceMappingURL=webusb.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWJ1c2IvbGliLWVzL3dlYnVzYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQUlBLFlBQVksU0FBSyxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFNBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDbkYsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDMUYsU0FBU0MsU0FBU1IsS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFNBQVMsQ0FBQyxRQUFRLENBQUNFO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDN0YsU0FBU0YsS0FBS0ksTUFBTTtZQUFJQSxPQUFPQyxJQUFJLEdBQUdULFFBQVFRLE9BQU9ULEtBQUssSUFBSUQsTUFBTVUsT0FBT1QsS0FBSyxFQUFFVyxJQUFJLENBQUNQLFdBQVdJO1FBQVc7UUFDN0dILEtBQUssQ0FBQ1AsWUFBWUEsVUFBVWMsS0FBSyxDQUFDakIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUNzRDtBQUN0RCxNQUFNUSxnQkFBZ0I7SUFDbEI7UUFDSUMsVUFBVUYsZ0VBQWlCQTtJQUMvQjtDQUNIO0FBQ00sU0FBU0c7SUFDWixPQUFPdEIsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuQyxNQUFNdUIsU0FBUyxNQUFNQyxVQUFVQyxHQUFHLENBQUNDLGFBQWEsQ0FBQztZQUM3Q0MsU0FBU1A7UUFDYjtRQUNBLE9BQU9HO0lBQ1g7QUFDSjtBQUNPLFNBQVNLO0lBQ1osT0FBTzVCLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTTZCLFVBQVUsTUFBTUwsVUFBVUMsR0FBRyxDQUFDSyxVQUFVO1FBQzlDLE9BQU9ELFFBQVFFLE1BQU0sQ0FBQyxDQUFDQyxJQUFNQSxFQUFFWCxRQUFRLEtBQUtGLGdFQUFpQkE7SUFDakU7QUFDSjtBQUNPLFNBQVNjO0lBQ1osT0FBT2pDLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsTUFBTWtDLGtCQUFrQixNQUFNTjtRQUM5QixJQUFJTSxnQkFBZ0JDLE1BQU0sR0FBRyxHQUN6QixPQUFPRCxlQUFlLENBQUMsRUFBRTtRQUM3QixPQUFPWjtJQUNYO0FBQ0o7QUFDTyxNQUFNYyxjQUFjLElBQU01QixRQUFRRCxPQUFPLENBQUMsQ0FBQyxDQUFDaUIsYUFDL0MsQ0FBQyxDQUFDQSxVQUFVQyxHQUFHLElBQ2YsT0FBT0QsVUFBVUMsR0FBRyxDQUFDSyxVQUFVLEtBQUssWUFBWSxDQUNwRCxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC13ZWJ1c2IvbGliLWVzL3dlYnVzYi5qcz8zMmRiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IHsgbGVkZ2VyVVNCVmVuZG9ySWQgfSBmcm9tIFwiQGxlZGdlcmhxL2RldmljZXNcIjtcbmNvbnN0IGxlZGdlckRldmljZXMgPSBbXG4gICAge1xuICAgICAgICB2ZW5kb3JJZDogbGVkZ2VyVVNCVmVuZG9ySWQsXG4gICAgfSxcbl07XG5leHBvcnQgZnVuY3Rpb24gcmVxdWVzdExlZGdlckRldmljZSgpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBkZXZpY2UgPSB5aWVsZCBuYXZpZ2F0b3IudXNiLnJlcXVlc3REZXZpY2Uoe1xuICAgICAgICAgICAgZmlsdGVyczogbGVkZ2VyRGV2aWNlcyxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkZXZpY2U7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TGVkZ2VyRGV2aWNlcygpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBkZXZpY2VzID0geWllbGQgbmF2aWdhdG9yLnVzYi5nZXREZXZpY2VzKCk7XG4gICAgICAgIHJldHVybiBkZXZpY2VzLmZpbHRlcigoZCkgPT4gZC52ZW5kb3JJZCA9PT0gbGVkZ2VyVVNCVmVuZG9ySWQpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEZpcnN0TGVkZ2VyRGV2aWNlKCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nRGV2aWNlcyA9IHlpZWxkIGdldExlZGdlckRldmljZXMoKTtcbiAgICAgICAgaWYgKGV4aXN0aW5nRGV2aWNlcy5sZW5ndGggPiAwKVxuICAgICAgICAgICAgcmV0dXJuIGV4aXN0aW5nRGV2aWNlc1swXTtcbiAgICAgICAgcmV0dXJuIHJlcXVlc3RMZWRnZXJEZXZpY2UoKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBjb25zdCBpc1N1cHBvcnRlZCA9ICgpID0+IFByb21pc2UucmVzb2x2ZSghIW5hdmlnYXRvciAmJlxuICAgICEhbmF2aWdhdG9yLnVzYiAmJlxuICAgIHR5cGVvZiBuYXZpZ2F0b3IudXNiLmdldERldmljZXMgPT09IFwiZnVuY3Rpb25cIik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJ1c2IuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsImxlZGdlclVTQlZlbmRvcklkIiwibGVkZ2VyRGV2aWNlcyIsInZlbmRvcklkIiwicmVxdWVzdExlZGdlckRldmljZSIsImRldmljZSIsIm5hdmlnYXRvciIsInVzYiIsInJlcXVlc3REZXZpY2UiLCJmaWx0ZXJzIiwiZ2V0TGVkZ2VyRGV2aWNlcyIsImRldmljZXMiLCJnZXREZXZpY2VzIiwiZmlsdGVyIiwiZCIsImdldEZpcnN0TGVkZ2VyRGV2aWNlIiwiZXhpc3RpbmdEZXZpY2VzIiwibGVuZ3RoIiwiaXNTdXBwb3J0ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/webusb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatusCodes: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes),\n/* harmony export */   TransportError: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError),\n/* harmony export */   TransportStatusError: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError),\n/* harmony export */   \"default\": () => (/* binding */ Transport),\n/* harmony export */   getAltStatusMessage: () => (/* reexport safe */ _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.getAltStatusMessage)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ledgerhq/errors */ \"(ssr)/./node_modules/@ledgerhq/errors/lib-es/index.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */ class Transport {\n    constructor(){\n        this.exchangeTimeout = 30000;\n        this.unresponsiveTimeout = 15000;\n        this.deviceModel = null;\n        this._events = new (events__WEBPACK_IMPORTED_MODULE_0___default())();\n        /**\n         * Send data to the device using the higher level API.\n         * @param {number} cla - The instruction class for the command.\n         * @param {number} ins - The instruction code for the command.\n         * @param {number} p1 - The first parameter for the instruction.\n         * @param {number} p2 - The second parameter for the instruction.\n         * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n         * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n         * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n         */ this.send = (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [\n            _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.OK\n        ])=>__awaiter(this, void 0, void 0, function*() {\n                if (data.length >= 256) {\n                    throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n                }\n                const response = yield this.exchange(Buffer.concat([\n                    Buffer.from([\n                        cla,\n                        ins,\n                        p1,\n                        p2\n                    ]),\n                    Buffer.from([\n                        data.length\n                    ]),\n                    data\n                ]));\n                const sw = response.readUInt16BE(response.length - 2);\n                if (!statusList.some((s)=>s === sw)) {\n                    throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError(sw);\n                }\n                return response;\n            });\n        this.exchangeAtomicImpl = (f)=>__awaiter(this, void 0, void 0, function*() {\n                if (this.exchangeBusyPromise) {\n                    throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n                }\n                let resolveBusy;\n                const busyPromise = new Promise((r)=>{\n                    resolveBusy = r;\n                });\n                this.exchangeBusyPromise = busyPromise;\n                let unresponsiveReached = false;\n                const timeout = setTimeout(()=>{\n                    unresponsiveReached = true;\n                    this.emit(\"unresponsive\");\n                }, this.unresponsiveTimeout);\n                try {\n                    const res = yield f();\n                    if (unresponsiveReached) {\n                        this.emit(\"responsive\");\n                    }\n                    return res;\n                } finally{\n                    clearTimeout(timeout);\n                    if (resolveBusy) resolveBusy();\n                    this.exchangeBusyPromise = null;\n                }\n            });\n        this._appAPIlock = null;\n    }\n    /**\n     * Send data to the device using a low level API.\n     * It's recommended to use the \"send\" method for a higher level API.\n     * @param {Buffer} apdu - The data to send.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */ exchange(_apdu) {\n        throw new Error(\"exchange not implemented\");\n    }\n    /**\n     * Send apdus in batch to the device using a low level API.\n     * The default implementation is to call exchange for each apdu.\n     * @param {Array<Buffer>} apdus - array of apdus to send.\n     * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n     */ exchangeBulk(apdus, observer) {\n        let unsubscribed = false;\n        const unsubscribe = ()=>{\n            unsubscribed = true;\n        };\n        const main = ()=>__awaiter(this, void 0, void 0, function*() {\n                if (unsubscribed) return;\n                for (const apdu of apdus){\n                    const r = yield this.exchange(apdu);\n                    if (unsubscribed) return;\n                    const status = r.readUInt16BE(r.length - 2);\n                    if (status !== _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.StatusCodes.OK) {\n                        throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportStatusError(status);\n                    }\n                    observer.next(r);\n                }\n            });\n        main().then(()=>!unsubscribed && observer.complete(), (e)=>!unsubscribed && observer.error(e));\n        return {\n            unsubscribe\n        };\n    }\n    /**\n     * Set the \"scramble key\" for the next data exchanges with the device.\n     * Each app can have a different scramble key and it is set internally during instantiation.\n     * @param {string} key - The scramble key to set.\n     * @deprecated This method is no longer needed for modern transports and should be migrated away from.\n     */ setScrambleKey(_key) {}\n    /**\n     * Close the connection with the device.\n     * @returns {Promise<void>} A promise that resolves when the transport is closed.\n     */ close() {\n        return Promise.resolve();\n    }\n    /**\n     * Listen for an event on the transport instance.\n     * Transport implementations may have specific events. Common events include:\n     * \"disconnect\" : triggered when the transport is disconnected.\n     * @param {string} eventName - The name of the event to listen for.\n     * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n     */ on(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n    /**\n     * Stop listening to an event on an instance of transport.\n     */ off(eventName, cb) {\n        this._events.removeListener(eventName, cb);\n    }\n    emit(event, ...args) {\n        this._events.emit(event, ...args);\n    }\n    /**\n     * Enable or not logs of the binary exchange\n     */ setDebugMode() {\n        console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n    }\n    /**\n     * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n     */ setExchangeTimeout(exchangeTimeout) {\n        this.exchangeTimeout = exchangeTimeout;\n    }\n    /**\n     * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n     */ setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n        this.unresponsiveTimeout = unresponsiveTimeout;\n    }\n    /**\n     * create() allows to open the first descriptor available or\n     * throw if there is none or if timeout is reached.\n     * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n     * @example\n    TransportFoo.create().then(transport => ...)\n     */ static create(openTimeout = 3000, listenTimeout) {\n        return new Promise((resolve, reject)=>{\n            let found = false;\n            const sub = this.listen({\n                next: (e)=>{\n                    found = true;\n                    if (sub) sub.unsubscribe();\n                    if (listenTimeoutId) clearTimeout(listenTimeoutId);\n                    this.open(e.descriptor, openTimeout).then(resolve, reject);\n                },\n                error: (e)=>{\n                    if (listenTimeoutId) clearTimeout(listenTimeoutId);\n                    reject(e);\n                },\n                complete: ()=>{\n                    if (listenTimeoutId) clearTimeout(listenTimeoutId);\n                    if (!found) {\n                        reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n                    }\n                }\n            });\n            const listenTimeoutId = listenTimeout ? setTimeout(()=>{\n                sub.unsubscribe();\n                reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n            }, listenTimeout) : null;\n        });\n    }\n    decorateAppAPIMethods(self, methods, scrambleKey) {\n        for (const methodName of methods){\n            self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n        }\n    }\n    decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n        return (...args)=>__awaiter(this, void 0, void 0, function*() {\n                const { _appAPIlock } = this;\n                if (_appAPIlock) {\n                    return Promise.reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__.TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n                }\n                try {\n                    this._appAPIlock = methodName;\n                    this.setScrambleKey(scrambleKey);\n                    return yield f.apply(ctx, args);\n                } finally{\n                    this._appAPIlock = null;\n                }\n            });\n    }\n}\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\"; //# sourceMappingURL=Transport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ledgerhq/logs/lib-es/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalTracer: () => (/* binding */ LocalTracer),\n/* harmony export */   listen: () => (/* binding */ listen),\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   trace: () => (/* binding */ trace)\n/* harmony export */ });\nlet id = 0;\nconst subscribers = [];\n/**\n * Logs something\n *\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */ const log = (type, message, data)=>{\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date()\n    };\n    if (message) obj.message = message;\n    if (data) obj.data = data;\n    dispatch(obj);\n};\n/**\n * A simple tracer function, only expanding the existing log function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param context Anything representing the context where the log occurred\n */ const trace = ({ type, message, data, context })=>{\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date()\n    };\n    if (message) obj.message = message;\n    if (data) obj.data = data;\n    if (context) obj.context = context;\n    dispatch(obj);\n};\n/**\n * A simple tracer class, that can be used to avoid repetition when using the `trace` function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param type A given type (not level) for the current local tracer (\"hw\", \"withDevice\", etc.)\n * @param context Anything representing the context where the log occurred\n */ class LocalTracer {\n    constructor(type, context){\n        this.type = type;\n        this.context = context;\n    }\n    trace(message, data) {\n        trace({\n            type: this.type,\n            message,\n            data,\n            context: this.context\n        });\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n    }\n    updateContext(contextToAdd) {\n        this.context = Object.assign(Object.assign({}, this.context), contextToAdd);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = type;\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `type`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */ withType(type) {\n        return new LocalTracer(type, this.context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with a new `context`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */ withContext(context) {\n        return new LocalTracer(this.type, context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `context`,\n     * on which an additional context is merged with the existing one.\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */ withUpdatedContext(contextToAdd) {\n        return new LocalTracer(this.type, Object.assign(Object.assign({}, this.context), contextToAdd));\n    }\n}\n/**\n * Adds a subscribers to the emitted logs.\n *\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */ const listen = (cb)=>{\n    subscribers.push(cb);\n    return ()=>{\n        const i = subscribers.indexOf(cb);\n        if (i !== -1) {\n            // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n            subscribers[i] = subscribers[subscribers.length - 1];\n            subscribers.pop();\n        }\n    };\n};\nfunction dispatch(log) {\n    for(let i = 0; i < subscribers.length; i++){\n        try {\n            subscribers[i](log);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\nif (false) {} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ledgerhq/logs/lib-es/index.js\n");

/***/ })

};
;