"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/linkify-react";
exports.ids = ["vendor-chunks/linkify-react"];
exports.modules = {

/***/ "(ssr)/./node_modules/linkify-react/dist/linkify-react.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/linkify-react/dist/linkify-react.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Linkify)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var linkifyjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! linkifyjs */ \"(ssr)/./node_modules/linkifyjs/dist/linkify.es.js\");\n\n\n/**\n * Given a string, converts to an array of valid React components\n * (which may include strings)\n * @param {string} str\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactNodeArray}\n */ function stringToElements(str, opts, meta) {\n    var tokens = (0,linkifyjs__WEBPACK_IMPORTED_MODULE_1__.tokenize)(str);\n    var elements = [];\n    for(var i = 0; i < tokens.length; i++){\n        var token = tokens[i];\n        if (token.t === \"nl\" && opts.get(\"nl2br\")) {\n            var key = \"__linkify-el-\" + meta.elementId++;\n            elements.push(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"br\", {\n                key: key\n            }));\n        } else if (!token.isLink || !opts.check(token)) {\n            // Regular text\n            elements.push(token.toString());\n        } else {\n            var rendered = opts.render(token);\n            if (!(\"key\" in rendered.props)) {\n                // Ensure generated element has unique key\n                var _key = \"__linkify-el-\" + meta.elementId++;\n                var props = linkifyjs__WEBPACK_IMPORTED_MODULE_1__.options.assign({\n                    key: _key\n                }, rendered.props);\n                rendered = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(rendered, props);\n            }\n            elements.push(rendered);\n        }\n    }\n    return elements;\n} // Recursively linkify the contents of the given React Element instance\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {React.ReactElement<P, T>} element\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactElement<P, T>}\n */ function linkifyReactElement(element, opts, meta) {\n    if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(element.props.children) === 0) {\n        // No need to clone if the element had no children\n        return element;\n    }\n    var children = [];\n    react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(element.props.children, function(child) {\n        if (typeof child === \"string\") {\n            // ensure that we always generate unique element IDs for keys\n            children.push.apply(children, stringToElements(child, opts, meta));\n        } else if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child)) {\n            if (typeof child.type === \"string\" && opts.ignoreTags.indexOf(child.type.toUpperCase()) >= 0) {\n                // Don't linkify this element\n                children.push(child);\n            } else {\n                children.push(linkifyReactElement(child, opts, meta));\n            }\n        } else {\n            // Unknown element type, just push\n            children.push(child);\n        }\n    }); // Set a default unique key, copy over remaining props\n    var key = \"__linkify-el-\" + meta.elementId++;\n    var newProps = linkifyjs__WEBPACK_IMPORTED_MODULE_1__.options.assign({\n        key: key\n    }, element.props);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(element, newProps, children);\n}\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {P & { as?: T, tagName?: T, tagName?: T, options?: import('linkifyjs').Opts, children?: React.ReactNode}} props\n * @returns {React.ReactElement<P, T>}\n */ var Linkify = function Linkify(props) {\n    // Copy over all non-linkify-specific props\n    var linkId = 0;\n    var defaultLinkRender = function defaultLinkRender(_ref) {\n        var tagName = _ref.tagName, attributes = _ref.attributes, content = _ref.content;\n        attributes.key = \"__linkify-lnk-\" + linkId++;\n        if (attributes.class) {\n            attributes.className = attributes.class;\n            delete attributes.class;\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(tagName, attributes, content);\n    };\n    var newProps = {\n        key: \"__linkify-wrapper\"\n    };\n    for(var prop in props){\n        if (prop !== \"options\" && prop !== \"as\" && prop !== \"tagName\" && prop !== \"children\") {\n            newProps[prop] = props[prop];\n        }\n    }\n    var opts = new linkifyjs__WEBPACK_IMPORTED_MODULE_1__.Options(props.options, defaultLinkRender);\n    var as = props.as || props.tagName || react__WEBPACK_IMPORTED_MODULE_0__.Fragment || \"span\";\n    var children = props.children;\n    var element = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(as, newProps, children);\n    return linkifyReactElement(element, opts, {\n        elementId: 0\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/linkify-react/dist/linkify-react.es.js\n");

/***/ })

};
;