/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect";
exports.ids = ["vendor-chunks/@walletconnect"];
exports.modules = {

/***/ "(ssr)/./node_modules/@walletconnect/core/dist/index.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@walletconnect/core/dist/index.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CORE_CONTEXT: () => (/* binding */ ne),\n/* harmony export */   CORE_DEFAULT: () => (/* binding */ Xe),\n/* harmony export */   CORE_PROTOCOL: () => (/* binding */ be),\n/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ Ze),\n/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ O),\n/* harmony export */   CORE_VERSION: () => (/* binding */ fe),\n/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ _e),\n/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ Qe),\n/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ et),\n/* harmony export */   Core: () => (/* binding */ On),\n/* harmony export */   Crypto: () => (/* binding */ Wt),\n/* harmony export */   ECHO_CONTEXT: () => (/* binding */ St),\n/* harmony export */   ECHO_URL: () => (/* binding */ Pt),\n/* harmony export */   EVENTS_CLIENT_API_URL: () => (/* binding */ At),\n/* harmony export */   EVENTS_STORAGE_CLEANUP_INTERVAL: () => (/* binding */ Ot),\n/* harmony export */   EVENTS_STORAGE_CONTEXT: () => (/* binding */ xt),\n/* harmony export */   EVENTS_STORAGE_VERSION: () => (/* binding */ Rt),\n/* harmony export */   EVENT_CLIENT_AUTHENTICATE_ERRORS: () => (/* binding */ Rs),\n/* harmony export */   EVENT_CLIENT_AUTHENTICATE_TRACES: () => (/* binding */ Ps),\n/* harmony export */   EVENT_CLIENT_CONTEXT: () => (/* binding */ Ts),\n/* harmony export */   EVENT_CLIENT_PAIRING_ERRORS: () => (/* binding */ M),\n/* harmony export */   EVENT_CLIENT_PAIRING_TRACES: () => (/* binding */ z),\n/* harmony export */   EVENT_CLIENT_SESSION_ERRORS: () => (/* binding */ Ss),\n/* harmony export */   EVENT_CLIENT_SESSION_TRACES: () => (/* binding */ Cs),\n/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ Et),\n/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ ws),\n/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ R),\n/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ vt),\n/* harmony export */   EchoClient: () => (/* binding */ gi),\n/* harmony export */   EventClient: () => (/* binding */ Di),\n/* harmony export */   Expirer: () => (/* binding */ li),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ ft),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ P),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ _t),\n/* harmony export */   JsonRpcHistory: () => (/* binding */ hi),\n/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ tt),\n/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ it),\n/* harmony export */   KeyChain: () => (/* binding */ Jt),\n/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ st),\n/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ rt),\n/* harmony export */   MessageTracker: () => (/* binding */ Xt),\n/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ mt),\n/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ vs),\n/* harmony export */   PAIRING_EVENTS: () => (/* binding */ q),\n/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ j),\n/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ bt),\n/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ Dt),\n/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ ot),\n/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ nt),\n/* harmony export */   Pairing: () => (/* binding */ ci),\n/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ ht),\n/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ ct),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ at),\n/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ Ee),\n/* harmony export */   RELAYER_EVENTS: () => (/* binding */ w),\n/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ T),\n/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ ut),\n/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ oe),\n/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ fs),\n/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ lt),\n/* harmony export */   RELAYER_TRANSPORT_CUTOFF: () => (/* binding */ _s),\n/* harmony export */   Relayer: () => (/* binding */ si),\n/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ dt),\n/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ pt),\n/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ Es),\n/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ A),\n/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ yt),\n/* harmony export */   Store: () => (/* binding */ ai),\n/* harmony export */   Subscriber: () => (/* binding */ ei),\n/* harmony export */   TRANSPORT_TYPES: () => (/* binding */ F),\n/* harmony export */   TRUSTED_VERIFY_URLS: () => (/* binding */ Ct),\n/* harmony export */   VERIFY_CONTEXT: () => (/* binding */ wt),\n/* harmony export */   VERIFY_SERVER: () => (/* binding */ Z),\n/* harmony export */   VERIFY_SERVER_V3: () => (/* binding */ Tt),\n/* harmony export */   Verify: () => (/* binding */ di),\n/* harmony export */   WALLETCONNECT_CLIENT_ID: () => (/* binding */ gt),\n/* harmony export */   WALLETCONNECT_LINK_MODE_APPS: () => (/* binding */ ve),\n/* harmony export */   \"default\": () => (/* binding */ ce)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/heartbeat */ \"(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\");\n/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ \"(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash.isequal */ \"(ssr)/./node_modules/lodash.isequal/index.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst be = \"wc\", fe = 2, ne = \"core\", O = `${be}@2:${ne}:`, Xe = {\n    name: ne,\n    logger: \"error\"\n}, Ze = {\n    database: \":memory:\"\n}, Qe = \"crypto\", _e = \"client_ed25519_seed\", et = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY, tt = \"keychain\", it = \"0.3\", st = \"messages\", rt = \"0.3\", nt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.SIX_HOURS, ot = \"publisher\", at = \"irn\", ct = \"error\", Ee = \"wss://relay.walletconnect.org\", ht = \"relayer\", w = {\n    message: \"relayer_message\",\n    message_ack: \"relayer_message_ack\",\n    connect: \"relayer_connect\",\n    disconnect: \"relayer_disconnect\",\n    error: \"relayer_error\",\n    connection_stalled: \"relayer_connection_stalled\",\n    transport_closed: \"relayer_transport_closed\",\n    publish: \"relayer_publish\"\n}, lt = \"_subscription\", T = {\n    payload: \"payload\",\n    connect: \"connect\",\n    disconnect: \"disconnect\",\n    error: \"error\"\n}, ut = .1, fs = {\n    database: \":memory:\"\n}, oe = \"2.17.0\", _s = 1e4, F = {\n    link_mode: \"link_mode\",\n    relay: \"relay\"\n}, dt = \"0.3\", gt = \"WALLETCONNECT_CLIENT_ID\", ve = \"WALLETCONNECT_LINK_MODE_APPS\", A = {\n    created: \"subscription_created\",\n    deleted: \"subscription_deleted\",\n    expired: \"subscription_expired\",\n    disabled: \"subscription_disabled\",\n    sync: \"subscription_sync\",\n    resubscribed: \"subscription_resubscribed\"\n}, Es = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS, pt = \"subscription\", yt = \"0.3\", Dt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_SECONDS * 1e3, mt = \"pairing\", bt = \"0.3\", vs = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS, j = {\n    wc_pairingDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 1e3\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 1001\n        }\n    },\n    wc_pairingPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1002\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1003\n        }\n    },\n    unregistered_method: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        }\n    }\n}, q = {\n    create: \"pairing_create\",\n    expire: \"pairing_expire\",\n    delete: \"pairing_delete\",\n    ping: \"pairing_ping\"\n}, P = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, ft = \"history\", _t = \"0.3\", Et = \"expirer\", R = {\n    created: \"expirer_created\",\n    deleted: \"expirer_deleted\",\n    expired: \"expirer_expired\",\n    sync: \"expirer_sync\"\n}, vt = \"0.3\", ws = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY, wt = \"verify-api\", Is = \"https://verify.walletconnect.com\", It = \"https://verify.walletconnect.org\", Z = It, Tt = `${Z}/v3`, Ct = [\n    Is,\n    It\n], St = \"echo\", Pt = \"https://echo.walletconnect.com\", Ts = \"event-client\", z = {\n    pairing_started: \"pairing_started\",\n    pairing_uri_validation_success: \"pairing_uri_validation_success\",\n    pairing_uri_not_expired: \"pairing_uri_not_expired\",\n    store_new_pairing: \"store_new_pairing\",\n    subscribing_pairing_topic: \"subscribing_pairing_topic\",\n    subscribe_pairing_topic_success: \"subscribe_pairing_topic_success\",\n    existing_pairing: \"existing_pairing\",\n    pairing_not_expired: \"pairing_not_expired\",\n    emit_inactive_pairing: \"emit_inactive_pairing\",\n    emit_session_proposal: \"emit_session_proposal\",\n    subscribing_to_pairing_topic: \"subscribing_to_pairing_topic\"\n}, M = {\n    no_wss_connection: \"no_wss_connection\",\n    no_internet_connection: \"no_internet_connection\",\n    malformed_pairing_uri: \"malformed_pairing_uri\",\n    active_pairing_already_exists: \"active_pairing_already_exists\",\n    subscribe_pairing_topic_failure: \"subscribe_pairing_topic_failure\",\n    pairing_expired: \"pairing_expired\",\n    proposal_expired: \"proposal_expired\",\n    proposal_listener_not_found: \"proposal_listener_not_found\"\n}, Cs = {\n    session_approve_started: \"session_approve_started\",\n    proposal_not_expired: \"proposal_not_expired\",\n    session_namespaces_validation_success: \"session_namespaces_validation_success\",\n    create_session_topic: \"create_session_topic\",\n    subscribing_session_topic: \"subscribing_session_topic\",\n    subscribe_session_topic_success: \"subscribe_session_topic_success\",\n    publishing_session_approve: \"publishing_session_approve\",\n    session_approve_publish_success: \"session_approve_publish_success\",\n    store_session: \"store_session\",\n    publishing_session_settle: \"publishing_session_settle\",\n    session_settle_publish_success: \"session_settle_publish_success\"\n}, Ss = {\n    no_internet_connection: \"no_internet_connection\",\n    no_wss_connection: \"no_wss_connection\",\n    proposal_expired: \"proposal_expired\",\n    subscribe_session_topic_failure: \"subscribe_session_topic_failure\",\n    session_approve_publish_failure: \"session_approve_publish_failure\",\n    session_settle_publish_failure: \"session_settle_publish_failure\",\n    session_approve_namespace_validation_failure: \"session_approve_namespace_validation_failure\",\n    proposal_not_found: \"proposal_not_found\"\n}, Ps = {\n    authenticated_session_approve_started: \"authenticated_session_approve_started\",\n    authenticated_session_not_expired: \"authenticated_session_not_expired\",\n    chains_caip2_compliant: \"chains_caip2_compliant\",\n    chains_evm_compliant: \"chains_evm_compliant\",\n    create_authenticated_session_topic: \"create_authenticated_session_topic\",\n    cacaos_verified: \"cacaos_verified\",\n    store_authenticated_session: \"store_authenticated_session\",\n    subscribing_authenticated_session_topic: \"subscribing_authenticated_session_topic\",\n    subscribe_authenticated_session_topic_success: \"subscribe_authenticated_session_topic_success\",\n    publishing_authenticated_session_approve: \"publishing_authenticated_session_approve\",\n    authenticated_session_approve_publish_success: \"authenticated_session_approve_publish_success\"\n}, Rs = {\n    no_internet_connection: \"no_internet_connection\",\n    no_wss_connection: \"no_wss_connection\",\n    missing_session_authenticate_request: \"missing_session_authenticate_request\",\n    session_authenticate_request_expired: \"session_authenticate_request_expired\",\n    chains_caip2_compliant_failure: \"chains_caip2_compliant_failure\",\n    chains_evm_compliant_failure: \"chains_evm_compliant_failure\",\n    invalid_cacao: \"invalid_cacao\",\n    subscribe_authenticated_session_topic_failure: \"subscribe_authenticated_session_topic_failure\",\n    authenticated_session_approve_publish_failure: \"authenticated_session_approve_publish_failure\",\n    authenticated_session_pending_request_not_found: \"authenticated_session_pending_request_not_found\"\n}, Rt = .1, xt = \"event-client\", Ot = 86400, At = \"https://pulse.walletconnect.org/batch\";\nfunction xs(o, e) {\n    if (o.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for(var t = new Uint8Array(256), s = 0; s < t.length; s++)t[s] = 255;\n    for(var i = 0; i < o.length; i++){\n        var r = o.charAt(i), n = r.charCodeAt(0);\n        if (t[n] !== 255) throw new TypeError(r + \" is ambiguous\");\n        t[n] = i;\n    }\n    var a = o.length, c = o.charAt(0), h = Math.log(a) / Math.log(256), d = Math.log(256) / Math.log(a);\n    function g(l) {\n        if (l instanceof Uint8Array || (ArrayBuffer.isView(l) ? l = new Uint8Array(l.buffer, l.byteOffset, l.byteLength) : Array.isArray(l) && (l = Uint8Array.from(l))), !(l instanceof Uint8Array)) throw new TypeError(\"Expected Uint8Array\");\n        if (l.length === 0) return \"\";\n        for(var p = 0, E = 0, D = 0, f = l.length; D !== f && l[D] === 0;)D++, p++;\n        for(var N = (f - D) * d + 1 >>> 0, C = new Uint8Array(N); D !== f;){\n            for(var L = l[D], $ = 0, x = N - 1; (L !== 0 || $ < E) && x !== -1; x--, $++)L += 256 * C[x] >>> 0, C[x] = L % a >>> 0, L = L / a >>> 0;\n            if (L !== 0) throw new Error(\"Non-zero carry\");\n            E = $, D++;\n        }\n        for(var k = N - E; k !== N && C[k] === 0;)k++;\n        for(var ie = c.repeat(p); k < N; ++k)ie += o.charAt(C[k]);\n        return ie;\n    }\n    function m(l) {\n        if (typeof l != \"string\") throw new TypeError(\"Expected String\");\n        if (l.length === 0) return new Uint8Array;\n        var p = 0;\n        if (l[p] !== \" \") {\n            for(var E = 0, D = 0; l[p] === c;)E++, p++;\n            for(var f = (l.length - p) * h + 1 >>> 0, N = new Uint8Array(f); l[p];){\n                var C = t[l.charCodeAt(p)];\n                if (C === 255) return;\n                for(var L = 0, $ = f - 1; (C !== 0 || L < D) && $ !== -1; $--, L++)C += a * N[$] >>> 0, N[$] = C % 256 >>> 0, C = C / 256 >>> 0;\n                if (C !== 0) throw new Error(\"Non-zero carry\");\n                D = L, p++;\n            }\n            if (l[p] !== \" \") {\n                for(var x = f - D; x !== f && N[x] === 0;)x++;\n                for(var k = new Uint8Array(E + (f - x)), ie = E; x !== f;)k[ie++] = N[x++];\n                return k;\n            }\n        }\n    }\n    function b(l) {\n        var p = m(l);\n        if (p) return p;\n        throw new Error(`Non-${e} character`);\n    }\n    return {\n        encode: g,\n        decodeUnsafe: m,\n        decode: b\n    };\n}\nvar Os = xs, As = Os;\nconst Nt = (o)=>{\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    throw new Error(\"Unknown type, must be binary type\");\n}, Ns = (o)=>new TextEncoder().encode(o), Ls = (o)=>new TextDecoder().decode(o);\nclass zs {\n    constructor(e, t, s){\n        this.name = e, this.prefix = t, this.baseEncode = s;\n    }\n    encode(e) {\n        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;\n        throw Error(\"Unknown type, must be binary type\");\n    }\n}\nclass ks {\n    constructor(e, t, s){\n        if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error(\"Invalid prefix character\");\n        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = s;\n    }\n    decode(e) {\n        if (typeof e == \"string\") {\n            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            return this.baseDecode(e.slice(this.prefix.length));\n        } else throw Error(\"Can only multibase decode strings\");\n    }\n    or(e) {\n        return Lt(this, e);\n    }\n}\nclass Ms {\n    constructor(e){\n        this.decoders = e;\n    }\n    or(e) {\n        return Lt(this, e);\n    }\n    decode(e) {\n        const t = e[0], s = this.decoders[t];\n        if (s) return s.decode(e);\n        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n    }\n}\nconst Lt = (o, e)=>new Ms({\n        ...o.decoders || {\n            [o.prefix]: o\n        },\n        ...e.decoders || {\n            [e.prefix]: e\n        }\n    });\nclass $s {\n    constructor(e, t, s, i){\n        this.name = e, this.prefix = t, this.baseEncode = s, this.baseDecode = i, this.encoder = new zs(e, t, s), this.decoder = new ks(e, t, i);\n    }\n    encode(e) {\n        return this.encoder.encode(e);\n    }\n    decode(e) {\n        return this.decoder.decode(e);\n    }\n}\nconst ae = ({ name: o, prefix: e, encode: t, decode: s })=>new $s(o, e, t, s), Q = ({ prefix: o, name: e, alphabet: t })=>{\n    const { encode: s, decode: i } = As(t, e);\n    return ae({\n        prefix: o,\n        name: e,\n        encode: s,\n        decode: (r)=>Nt(i(r))\n    });\n}, Fs = (o, e, t, s)=>{\n    const i = {};\n    for(let d = 0; d < e.length; ++d)i[e[d]] = d;\n    let r = o.length;\n    for(; o[r - 1] === \"=\";)--r;\n    const n = new Uint8Array(r * t / 8 | 0);\n    let a = 0, c = 0, h = 0;\n    for(let d = 0; d < r; ++d){\n        const g = i[o[d]];\n        if (g === void 0) throw new SyntaxError(`Non-${s} character`);\n        c = c << t | g, a += t, a >= 8 && (a -= 8, n[h++] = 255 & c >> a);\n    }\n    if (a >= t || 255 & c << 8 - a) throw new SyntaxError(\"Unexpected end of data\");\n    return n;\n}, Us = (o, e, t)=>{\n    const s = e[e.length - 1] === \"=\", i = (1 << t) - 1;\n    let r = \"\", n = 0, a = 0;\n    for(let c = 0; c < o.length; ++c)for(a = a << 8 | o[c], n += 8; n > t;)n -= t, r += e[i & a >> n];\n    if (n && (r += e[i & a << t - n]), s) for(; r.length * t & 7;)r += \"=\";\n    return r;\n}, _ = ({ name: o, prefix: e, bitsPerChar: t, alphabet: s })=>ae({\n        prefix: e,\n        name: o,\n        encode (i) {\n            return Us(i, s, t);\n        },\n        decode (i) {\n            return Fs(i, s, t, o);\n        }\n    }), Ks = ae({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (o)=>Ls(o),\n    decode: (o)=>Ns(o)\n});\nvar Bs = Object.freeze({\n    __proto__: null,\n    identity: Ks\n});\nconst Vs = _({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\nvar js = Object.freeze({\n    __proto__: null,\n    base2: Vs\n});\nconst qs = _({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\nvar Gs = Object.freeze({\n    __proto__: null,\n    base8: qs\n});\nconst Hs = Q({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\nvar Ys = Object.freeze({\n    __proto__: null,\n    base10: Hs\n});\nconst Js = _({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n}), Ws = _({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\nvar Xs = Object.freeze({\n    __proto__: null,\n    base16: Js,\n    base16upper: Ws\n});\nconst Zs = _({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n}), Qs = _({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n}), er = _({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n}), tr = _({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n}), ir = _({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n}), sr = _({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n}), rr = _({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n}), nr = _({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n}), or = _({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\nvar ar = Object.freeze({\n    __proto__: null,\n    base32: Zs,\n    base32upper: Qs,\n    base32pad: er,\n    base32padupper: tr,\n    base32hex: ir,\n    base32hexupper: sr,\n    base32hexpad: rr,\n    base32hexpadupper: nr,\n    base32z: or\n});\nconst cr = Q({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n}), hr = Q({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\nvar lr = Object.freeze({\n    __proto__: null,\n    base36: cr,\n    base36upper: hr\n});\nconst ur = Q({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n}), dr = Q({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\nvar gr = Object.freeze({\n    __proto__: null,\n    base58btc: ur,\n    base58flickr: dr\n});\nconst pr = _({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n}), yr = _({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n}), Dr = _({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n}), mr = _({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\nvar br = Object.freeze({\n    __proto__: null,\n    base64: pr,\n    base64pad: yr,\n    base64url: Dr,\n    base64urlpad: mr\n});\nconst zt = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\"), fr = zt.reduce((o, e, t)=>(o[t] = e, o), []), _r = zt.reduce((o, e, t)=>(o[e.codePointAt(0)] = t, o), []);\nfunction Er(o) {\n    return o.reduce((e, t)=>(e += fr[t], e), \"\");\n}\nfunction vr(o) {\n    const e = [];\n    for (const t of o){\n        const s = _r[t.codePointAt(0)];\n        if (s === void 0) throw new Error(`Non-base256emoji character: ${t}`);\n        e.push(s);\n    }\n    return new Uint8Array(e);\n}\nconst wr = ae({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode: Er,\n    decode: vr\n});\nvar Ir = Object.freeze({\n    __proto__: null,\n    base256emoji: wr\n}), Tr = Mt, kt = 128, Cr = 127, Sr = ~Cr, Pr = Math.pow(2, 31);\nfunction Mt(o, e, t) {\n    e = e || [], t = t || 0;\n    for(var s = t; o >= Pr;)e[t++] = o & 255 | kt, o /= 128;\n    for(; o & Sr;)e[t++] = o & 255 | kt, o >>>= 7;\n    return e[t] = o | 0, Mt.bytes = t - s + 1, e;\n}\nvar Rr = we, xr = 128, $t = 127;\nfunction we(o, s) {\n    var t = 0, s = s || 0, i = 0, r = s, n, a = o.length;\n    do {\n        if (r >= a) throw we.bytes = 0, new RangeError(\"Could not decode varint\");\n        n = o[r++], t += i < 28 ? (n & $t) << i : (n & $t) * Math.pow(2, i), i += 7;\n    }while (n >= xr);\n    return we.bytes = r - s, t;\n}\nvar Or = Math.pow(2, 7), Ar = Math.pow(2, 14), Nr = Math.pow(2, 21), Lr = Math.pow(2, 28), zr = Math.pow(2, 35), kr = Math.pow(2, 42), Mr = Math.pow(2, 49), $r = Math.pow(2, 56), Fr = Math.pow(2, 63), Ur = function(o) {\n    return o < Or ? 1 : o < Ar ? 2 : o < Nr ? 3 : o < Lr ? 4 : o < zr ? 5 : o < kr ? 6 : o < Mr ? 7 : o < $r ? 8 : o < Fr ? 9 : 10;\n}, Kr = {\n    encode: Tr,\n    decode: Rr,\n    encodingLength: Ur\n}, Ft = Kr;\nconst Ut = (o, e, t = 0)=>(Ft.encode(o, e, t), e), Kt = (o)=>Ft.encodingLength(o), Ie = (o, e)=>{\n    const t = e.byteLength, s = Kt(o), i = s + Kt(t), r = new Uint8Array(i + t);\n    return Ut(o, r, 0), Ut(t, r, s), r.set(e, i), new Br(o, t, e, r);\n};\nclass Br {\n    constructor(e, t, s, i){\n        this.code = e, this.size = t, this.digest = s, this.bytes = i;\n    }\n}\nconst Bt = ({ name: o, code: e, encode: t })=>new Vr(o, e, t);\nclass Vr {\n    constructor(e, t, s){\n        this.name = e, this.code = t, this.encode = s;\n    }\n    digest(e) {\n        if (e instanceof Uint8Array) {\n            const t = this.encode(e);\n            return t instanceof Uint8Array ? Ie(this.code, t) : t.then((s)=>Ie(this.code, s));\n        } else throw Error(\"Unknown type, must be binary type\");\n    }\n}\nconst Vt = (o)=>async (e)=>new Uint8Array(await crypto.subtle.digest(o, e)), jr = Bt({\n    name: \"sha2-256\",\n    code: 18,\n    encode: Vt(\"SHA-256\")\n}), qr = Bt({\n    name: \"sha2-512\",\n    code: 19,\n    encode: Vt(\"SHA-512\")\n});\nvar Gr = Object.freeze({\n    __proto__: null,\n    sha256: jr,\n    sha512: qr\n});\nconst jt = 0, Hr = \"identity\", qt = Nt, Yr = (o)=>Ie(jt, qt(o)), Jr = {\n    code: jt,\n    name: Hr,\n    encode: qt,\n    digest: Yr\n};\nvar Wr = Object.freeze({\n    __proto__: null,\n    identity: Jr\n});\nnew TextEncoder, new TextDecoder;\nconst Gt = {\n    ...Bs,\n    ...js,\n    ...Gs,\n    ...Ys,\n    ...Xs,\n    ...ar,\n    ...lr,\n    ...gr,\n    ...br,\n    ...Ir\n};\n({\n    ...Gr,\n    ...Wr\n});\nfunction Xr(o = 0) {\n    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o) : new Uint8Array(o);\n}\nfunction Ht(o, e, t, s) {\n    return {\n        name: o,\n        prefix: e,\n        encoder: {\n            name: o,\n            prefix: e,\n            encode: t\n        },\n        decoder: {\n            decode: s\n        }\n    };\n}\nconst Yt = Ht(\"utf8\", \"u\", (o)=>\"u\" + new TextDecoder(\"utf8\").decode(o), (o)=>new TextEncoder().encode(o.substring(1))), Te = Ht(\"ascii\", \"a\", (o)=>{\n    let e = \"a\";\n    for(let t = 0; t < o.length; t++)e += String.fromCharCode(o[t]);\n    return e;\n}, (o)=>{\n    o = o.substring(1);\n    const e = Xr(o.length);\n    for(let t = 0; t < o.length; t++)e[t] = o.charCodeAt(t);\n    return e;\n}), Zr = {\n    utf8: Yt,\n    \"utf-8\": Yt,\n    hex: Gt.base16,\n    latin1: Te,\n    ascii: Te,\n    binary: Te,\n    ...Gt\n};\nfunction Qr(o, e = \"utf8\") {\n    const t = Zr[e];\n    if (!t) throw new Error(`Unsupported encoding \"${e}\"`);\n    return (e === \"utf8\" || e === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o, \"utf8\") : t.decoder.decode(`${t.prefix}${o}`);\n}\nclass Jt {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.keychain = new Map, this.name = tt, this.version = it, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                const s = await this.getKeyChain();\n                typeof s < \"u\" && (this.keychain = s), this.initialized = !0;\n            }\n        }, this.has = (s)=>(this.isInitialized(), this.keychain.has(s)), this.set = async (s, i)=>{\n            this.isInitialized(), this.keychain.set(s, i), await this.persist();\n        }, this.get = (s)=>{\n            this.isInitialized();\n            const i = this.keychain.get(s);\n            if (typeof i > \"u\") {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${s}`);\n                throw new Error(r);\n            }\n            return i;\n        }, this.del = async (s)=>{\n            this.isInitialized(), this.keychain.delete(s), await this.persist();\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setKeyChain(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.mapToObj)(e));\n    }\n    async getKeyChain() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setKeyChain(this.keychain);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Wt {\n    constructor(e, t, s){\n        this.core = e, this.logger = t, this.name = Qe, this.randomSessionIdentifier = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), this.initialized = !1, this.init = async ()=>{\n            this.initialized || (await this.keychain.init(), this.initialized = !0);\n        }, this.hasKeys = (i)=>(this.isInitialized(), this.keychain.has(i)), this.getClientId = async ()=>{\n            this.isInitialized();\n            const i = await this.getClientSeed(), r = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.generateKeyPair(i);\n            return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.encodeIss(r.publicKey);\n        }, this.generateKeyPair = ()=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateKeyPair)();\n            return this.setPrivateKey(i.publicKey, i.privateKey);\n        }, this.signJWT = async (i)=>{\n            this.isInitialized();\n            const r = await this.getClientSeed(), n = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.generateKeyPair(r), a = this.randomSessionIdentifier, c = et;\n            return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.signJWT(a, i, c, n);\n        }, this.generateSharedKey = (i, r, n)=>{\n            this.isInitialized();\n            const a = this.getPrivateKey(i), c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deriveSymKey)(a, r);\n            return this.setSymKey(c, n);\n        }, this.setSymKey = async (i, r)=>{\n            this.isInitialized();\n            const n = r || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashKey)(i);\n            return await this.keychain.set(n, i), n;\n        }, this.deleteKeyPair = async (i)=>{\n            this.isInitialized(), await this.keychain.del(i);\n        }, this.deleteSymKey = async (i)=>{\n            this.isInitialized(), await this.keychain.del(i);\n        }, this.encode = async (i, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.validateEncoding)(n), c = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonStringify)(r);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeTwoEnvelope)(a)) return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.encodeTypeTwoEnvelope)(c, n?.encoding);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeOneEnvelope)(a)) {\n                const m = a.senderPublicKey, b = a.receiverPublicKey;\n                i = await this.generateSharedKey(m, b);\n            }\n            const h = this.getSymKey(i), { type: d, senderPublicKey: g } = a;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.encrypt)({\n                type: d,\n                symKey: h,\n                message: c,\n                senderPublicKey: g,\n                encoding: n?.encoding\n            });\n        }, this.decode = async (i, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.validateDecoding)(r, n);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeTwoEnvelope)(a)) {\n                const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decodeTypeTwoEnvelope)(r, n?.encoding);\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonParse)(c);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTypeOneEnvelope)(a)) {\n                const c = a.receiverPublicKey, h = a.senderPublicKey;\n                i = await this.generateSharedKey(c, h);\n            }\n            try {\n                const c = this.getSymKey(i), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decrypt)({\n                    symKey: c,\n                    encoded: r,\n                    encoding: n?.encoding\n                });\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonParse)(h);\n            } catch (c) {\n                this.logger.error(`Failed to decode message from topic: '${i}', clientId: '${await this.getClientId()}'`), this.logger.error(c);\n            }\n        }, this.getPayloadType = (i, r = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.BASE64)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deserialize)({\n                encoded: i,\n                encoding: r\n            });\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.decodeTypeByte)(n.type);\n        }, this.getPayloadSenderPublicKey = (i, r = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.BASE64)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.deserialize)({\n                encoded: i,\n                encoding: r\n            });\n            return n.senderPublicKey ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_7__.toString)(n.senderPublicKey, _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.BASE16) : void 0;\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.keychain = s || new Jt(this.core, this.logger);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async setPrivateKey(e, t) {\n        return await this.keychain.set(e, t), e;\n    }\n    getPrivateKey(e) {\n        return this.keychain.get(e);\n    }\n    async getClientSeed() {\n        let e = \"\";\n        try {\n            e = this.keychain.get(_e);\n        } catch  {\n            e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), await this.keychain.set(_e, e);\n        }\n        return Qr(e, \"base16\");\n    }\n    getSymKey(e) {\n        return this.keychain.get(e);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Xt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IMessageTracker {\n    constructor(e, t){\n        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = st, this.version = rt, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                this.logger.trace(\"Initialized\");\n                try {\n                    const s = await this.getRelayerMessages();\n                    typeof s < \"u\" && (this.messages = s), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                        type: \"method\",\n                        method: \"restore\",\n                        size: this.messages.size\n                    });\n                } catch (s) {\n                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(s);\n                } finally{\n                    this.initialized = !0;\n                }\n            }\n        }, this.set = async (s, i)=>{\n            this.isInitialized();\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(i);\n            let n = this.messages.get(s);\n            return typeof n > \"u\" && (n = {}), typeof n[r] < \"u\" || (n[r] = i, this.messages.set(s, n), await this.persist()), r;\n        }, this.get = (s)=>{\n            this.isInitialized();\n            let i = this.messages.get(s);\n            return typeof i > \"u\" && (i = {}), i;\n        }, this.has = (s, i)=>{\n            this.isInitialized();\n            const r = this.get(s), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(i);\n            return typeof r[n] < \"u\";\n        }, this.del = async (s)=>{\n            this.isInitialized(), this.messages.delete(s), await this.persist();\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e, this.name), this.core = t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setRelayerMessages(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.mapToObj)(e));\n    }\n    async getRelayerMessages() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setRelayerMessages(this.messages);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass en extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IPublisher {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ot, this.queue = new Map, this.publishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), this.failedPublishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND), this.needsTransportRestart = !1, this.publish = async (s, i, r)=>{\n            var n;\n            this.logger.debug(\"Publishing Payload\"), this.logger.trace({\n                type: \"method\",\n                method: \"publish\",\n                params: {\n                    topic: s,\n                    message: i,\n                    opts: r\n                }\n            });\n            const a = r?.ttl || nt, c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(r), h = r?.prompt || !1, d = r?.tag || 0, g = r?.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString(), m = {\n                topic: s,\n                message: i,\n                opts: {\n                    ttl: a,\n                    relay: c,\n                    prompt: h,\n                    tag: d,\n                    id: g,\n                    attestation: r?.attestation\n                }\n            }, b = `Failed to publish payload, please try again. id:${g} tag:${d}`, l = Date.now();\n            let p, E = 1;\n            try {\n                for(; p === void 0;){\n                    if (Date.now() - l > this.publishTimeout) throw new Error(b);\n                    this.logger.trace({\n                        id: g,\n                        attempts: E\n                    }, `publisher.publish - attempt ${E}`), p = await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.rpcPublish(s, i, a, c, h, d, g, r?.attestation).catch((D)=>this.logger.warn(D)), this.publishTimeout, b), E++, p || await new Promise((D)=>setTimeout(D, this.failedPublishTimeout));\n                }\n                this.relayer.events.emit(w.publish, m), this.logger.debug(\"Successfully Published Payload\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"publish\",\n                    params: {\n                        id: g,\n                        topic: s,\n                        message: i,\n                        opts: r\n                    }\n                });\n            } catch (D) {\n                if (this.logger.debug(\"Failed to Publish Payload\"), this.logger.error(D), (n = r?.internal) != null && n.throwOnFailedPublish) throw D;\n                this.queue.set(g, m);\n            }\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.registerEventListeners();\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    rpcPublish(e, t, s, i, r, n, a, c) {\n        var h, d, g, m;\n        const b = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(i.protocol).publish,\n            params: {\n                topic: e,\n                message: t,\n                ttl: s,\n                prompt: r,\n                tag: n,\n                attestation: c\n            },\n            id: a\n        };\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)((h = b.params) == null ? void 0 : h.prompt) && ((d = b.params) == null || delete d.prompt), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)((g = b.params) == null ? void 0 : g.tag) && ((m = b.params) == null || delete m.tag), this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"message\",\n            direction: \"outgoing\",\n            request: b\n        }), this.relayer.request(b);\n    }\n    removeRequestFromQueue(e) {\n        this.queue.delete(e);\n    }\n    checkQueue() {\n        this.queue.forEach(async (e)=>{\n            const { topic: t, message: s, opts: i } = e;\n            await this.publish(t, s, i);\n        });\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>{\n            if (this.needsTransportRestart) {\n                this.needsTransportRestart = !1, this.relayer.events.emit(w.connection_stalled);\n                return;\n            }\n            this.checkQueue();\n        }), this.relayer.on(w.message_ack, (e)=>{\n            this.removeRequestFromQueue(e.id.toString());\n        });\n    }\n}\nclass tn {\n    constructor(){\n        this.map = new Map, this.set = (e, t)=>{\n            const s = this.get(e);\n            this.exists(e, t) || this.map.set(e, [\n                ...s,\n                t\n            ]);\n        }, this.get = (e)=>this.map.get(e) || [], this.exists = (e, t)=>this.get(e).includes(t), this.delete = (e, t)=>{\n            if (typeof t > \"u\") {\n                this.map.delete(e);\n                return;\n            }\n            if (!this.map.has(e)) return;\n            const s = this.get(e);\n            if (!this.exists(e, t)) return;\n            const i = s.filter((r)=>r !== t);\n            if (!i.length) {\n                this.map.delete(e);\n                return;\n            }\n            this.map.set(e, i);\n        }, this.clear = ()=>{\n            this.map.clear();\n        };\n    }\n    get topics() {\n        return Array.from(this.map.keys());\n    }\n}\nvar sn = Object.defineProperty, rn = Object.defineProperties, nn = Object.getOwnPropertyDescriptors, Zt = Object.getOwnPropertySymbols, on = Object.prototype.hasOwnProperty, an = Object.prototype.propertyIsEnumerable, Qt = (o, e, t)=>e in o ? sn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, ee = (o, e)=>{\n    for(var t in e || (e = {}))on.call(e, t) && Qt(o, t, e[t]);\n    if (Zt) for (var t of Zt(e))an.call(e, t) && Qt(o, t, e[t]);\n    return o;\n}, Ce = (o, e)=>rn(o, nn(e));\nclass ei extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.ISubscriber {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new tn, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = pt, this.version = yt, this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = \"pending_sub_watch_label\", this.pollingInterval = 20, this.storagePrefix = O, this.subscribeTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), this.restartInProgress = !1, this.batchSubscribeTopicsLimit = 500, this.pendingBatchMessages = [], this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId(), await this.restore()), this.initialized = !0;\n        }, this.subscribe = async (s, i)=>{\n            this.isInitialized(), this.logger.debug(\"Subscribing Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"subscribe\",\n                params: {\n                    topic: s,\n                    opts: i\n                }\n            });\n            try {\n                const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(i), n = {\n                    topic: s,\n                    relay: r,\n                    transportType: i?.transportType\n                };\n                this.pending.set(s, n);\n                const a = await this.rpcSubscribe(s, r, i?.transportType);\n                return typeof a == \"string\" && (this.onSubscribe(a, n), this.logger.debug(\"Successfully Subscribed Topic\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"subscribe\",\n                    params: {\n                        topic: s,\n                        opts: i\n                    }\n                })), a;\n            } catch (r) {\n                throw this.logger.debug(\"Failed to Subscribe Topic\"), this.logger.error(r), r;\n            }\n        }, this.unsubscribe = async (s, i)=>{\n            await this.restartToComplete(), this.isInitialized(), typeof i?.id < \"u\" ? await this.unsubscribeById(s, i.id, i) : await this.unsubscribeByTopic(s, i);\n        }, this.isSubscribed = async (s)=>{\n            if (this.topics.includes(s)) return !0;\n            const i = `${this.pendingSubscriptionWatchLabel}_${s}`;\n            return await new Promise((r, n)=>{\n                const a = new _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.Watch;\n                a.start(i);\n                const c = setInterval(()=>{\n                    !this.pending.has(s) && this.topics.includes(s) && (clearInterval(c), a.stop(i), r(!0)), a.elapsed(i) >= Dt && (clearInterval(c), a.stop(i), n(new Error(\"Subscription resolution timeout\")));\n                }, this.pollingInterval);\n            }).catch(()=>!1);\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.start = async ()=>{\n            await this.onConnect();\n        }, this.stop = async ()=>{\n            await this.onDisconnect();\n        }, this.restart = async ()=>{\n            this.restartInProgress = !0, await this.restore(), await this.reset(), this.restartInProgress = !1;\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.clientId = \"\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.subscriptions.size;\n    }\n    get ids() {\n        return Array.from(this.subscriptions.keys());\n    }\n    get values() {\n        return Array.from(this.subscriptions.values());\n    }\n    get topics() {\n        return this.topicMap.topics;\n    }\n    hasSubscription(e, t) {\n        let s = !1;\n        try {\n            s = this.getSubscription(e).topic === t;\n        } catch  {}\n        return s;\n    }\n    onEnable() {\n        this.cached = [], this.initialized = !0;\n    }\n    onDisable() {\n        this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();\n    }\n    async unsubscribeByTopic(e, t) {\n        const s = this.topicMap.get(e);\n        await Promise.all(s.map(async (i)=>await this.unsubscribeById(e, i, t)));\n    }\n    async unsubscribeById(e, t, s) {\n        this.logger.debug(\"Unsubscribing Topic\"), this.logger.trace({\n            type: \"method\",\n            method: \"unsubscribe\",\n            params: {\n                topic: e,\n                id: t,\n                opts: s\n            }\n        });\n        try {\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolName)(s);\n            await this.rpcUnsubscribe(e, t, i);\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\", `${this.name}, ${e}`);\n            await this.onUnsubscribe(e, t, r), this.logger.debug(\"Successfully Unsubscribed Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"unsubscribe\",\n                params: {\n                    topic: e,\n                    id: t,\n                    opts: s\n                }\n            });\n        } catch (i) {\n            throw this.logger.debug(\"Failed to Unsubscribe Topic\"), this.logger.error(i), i;\n        }\n    }\n    async rpcSubscribe(e, t, s = F.relay) {\n        s === F.relay && await this.restartToComplete();\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).subscribe,\n            params: {\n                topic: e\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.hashMessage)(e + this.clientId);\n            return s === F.link_mode ? (setTimeout(()=>{\n                (this.relayer.connected || this.relayer.connecting) && this.relayer.request(i).catch((n)=>this.logger.warn(n));\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND)), r) : await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(i).catch((n)=>this.logger.warn(n)), this.subscribeTimeout) ? r : null;\n        } catch  {\n            this.logger.debug(\"Outgoing Relay Subscribe Payload stalled\"), this.relayer.events.emit(w.connection_stalled);\n        }\n        return null;\n    }\n    async rpcBatchSubscribe(e) {\n        if (!e.length) return;\n        const t = e[0].relay, s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).batchSubscribe,\n            params: {\n                topics: e.map((i)=>i.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        });\n        try {\n            return await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(s).catch((i)=>this.logger.warn(i)), this.subscribeTimeout);\n        } catch  {\n            this.relayer.events.emit(w.connection_stalled);\n        }\n    }\n    async rpcBatchFetchMessages(e) {\n        if (!e.length) return;\n        const t = e[0].relay, s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(t.protocol).batchFetchMessages,\n            params: {\n                topics: e.map((r)=>r.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        });\n        let i;\n        try {\n            i = await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.relayer.request(s).catch((r)=>this.logger.warn(r)), this.subscribeTimeout);\n        } catch  {\n            this.relayer.events.emit(w.connection_stalled);\n        }\n        return i;\n    }\n    rpcUnsubscribe(e, t, s) {\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getRelayProtocolApi)(s.protocol).unsubscribe,\n            params: {\n                topic: e,\n                id: t\n            }\n        };\n        return this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        }), this.relayer.request(i);\n    }\n    onSubscribe(e, t) {\n        this.setSubscription(e, Ce(ee({}, t), {\n            id: e\n        })), this.pending.delete(t.topic);\n    }\n    onBatchSubscribe(e) {\n        e.length && e.forEach((t)=>{\n            this.setSubscription(t.id, ee({}, t)), this.pending.delete(t.topic);\n        });\n    }\n    async onUnsubscribe(e, t, s) {\n        this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, s), await this.relayer.messages.del(e);\n    }\n    async setRelayerSubscriptions(e) {\n        await this.relayer.core.storage.setItem(this.storageKey, e);\n    }\n    async getRelayerSubscriptions() {\n        return await this.relayer.core.storage.getItem(this.storageKey);\n    }\n    setSubscription(e, t) {\n        this.logger.debug(\"Setting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"setSubscription\",\n            id: e,\n            subscription: t\n        }), this.addSubscription(e, t);\n    }\n    addSubscription(e, t) {\n        this.subscriptions.set(e, ee({}, t)), this.topicMap.set(t.topic, e), this.events.emit(A.created, t);\n    }\n    getSubscription(e) {\n        this.logger.debug(\"Getting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"getSubscription\",\n            id: e\n        });\n        const t = this.subscriptions.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(s);\n        }\n        return t;\n    }\n    deleteSubscription(e, t) {\n        this.logger.debug(\"Deleting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"deleteSubscription\",\n            id: e,\n            reason: t\n        });\n        const s = this.getSubscription(e);\n        this.subscriptions.delete(e), this.topicMap.delete(s.topic, e), this.events.emit(A.deleted, Ce(ee({}, s), {\n            reason: t\n        }));\n    }\n    async persist() {\n        await this.setRelayerSubscriptions(this.values), this.events.emit(A.sync);\n    }\n    async reset() {\n        if (this.cached.length) {\n            const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n            for(let t = 0; t < e; t++){\n                const s = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n                await this.batchFetchMessages(s), await this.batchSubscribe(s);\n            }\n        }\n        this.events.emit(A.resubscribed);\n    }\n    async restore() {\n        try {\n            const e = await this.getRelayerSubscriptions();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.subscriptions.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                subscriptions: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);\n        }\n    }\n    async batchSubscribe(e) {\n        if (!e.length) return;\n        const t = await this.rpcBatchSubscribe(e);\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidArray)(t) && this.onBatchSubscribe(t.map((s, i)=>Ce(ee({}, e[i]), {\n                id: s\n            })));\n    }\n    async batchFetchMessages(e) {\n        if (!e.length) return;\n        this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);\n        const t = await this.rpcBatchFetchMessages(e);\n        t && t.messages && (this.pendingBatchMessages = this.pendingBatchMessages.concat(t.messages));\n    }\n    async onConnect() {\n        await this.restart(), this.onEnable();\n    }\n    onDisconnect() {\n        this.onDisable();\n    }\n    async checkPending() {\n        if (!this.initialized || !this.relayer.connected) return;\n        const e = [];\n        this.pending.forEach((t)=>{\n            e.push(t);\n        }), await this.batchSubscribe(e), this.pendingBatchMessages.length && (await this.relayer.handleBatchMessageEvents(this.pendingBatchMessages), this.pendingBatchMessages = []);\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, async ()=>{\n            await this.checkPending();\n        }), this.events.on(A.created, async (e)=>{\n            const t = A.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        }), this.events.on(A.deleted, async (e)=>{\n            const t = A.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async restartToComplete() {\n        !this.relayer.connected && !this.relayer.connecting && await this.relayer.transportOpen(), this.restartInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.restartInProgress || (clearInterval(t), e());\n            }, this.pollingInterval);\n        });\n    }\n}\nvar cn = Object.defineProperty, ti = Object.getOwnPropertySymbols, hn = Object.prototype.hasOwnProperty, ln = Object.prototype.propertyIsEnumerable, ii = (o, e, t)=>e in o ? cn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, un = (o, e)=>{\n    for(var t in e || (e = {}))hn.call(e, t) && ii(o, t, e[t]);\n    if (ti) for (var t of ti(e))ln.call(e, t) && ii(o, t, e[t]);\n    return o;\n};\nclass si extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IRelayer {\n    constructor(e){\n        super(e), this.protocol = \"wc\", this.version = 2, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ht, this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = [\n            \"socket hang up\",\n            \"stalled\",\n            \"interrupted\"\n        ], this.hasExperiencedNetworkDisruption = !1, this.requestsInFlight = new Map, this.heartBeatTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS + _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND), this.request = async (t)=>{\n            var s, i;\n            this.logger.debug(\"Publishing Request Payload\");\n            const r = t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString();\n            await this.toEstablishConnection();\n            try {\n                const n = this.provider.request(t);\n                this.requestsInFlight.set(r, {\n                    promise: n,\n                    request: t\n                }), this.logger.trace({\n                    id: r,\n                    method: t.method,\n                    topic: (s = t.params) == null ? void 0 : s.topic\n                }, \"relayer.request - attempt to publish...\");\n                const a = await new Promise(async (c, h)=>{\n                    const d = ()=>{\n                        h(new Error(`relayer.request - publish interrupted, id: ${r}`));\n                    };\n                    this.provider.on(T.disconnect, d);\n                    const g = await n;\n                    this.provider.off(T.disconnect, d), c(g);\n                });\n                return this.logger.trace({\n                    id: r,\n                    method: t.method,\n                    topic: (i = t.params) == null ? void 0 : i.topic\n                }, \"relayer.request - published\"), a;\n            } catch (n) {\n                throw this.logger.debug(`Failed to Publish Request: ${r}`), n;\n            } finally{\n                this.requestsInFlight.delete(r);\n            }\n        }, this.resetPingTimeout = ()=>{\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isNode)()) try {\n                clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(()=>{\n                    var t, s, i;\n                    (i = (s = (t = this.provider) == null ? void 0 : t.connection) == null ? void 0 : s.socket) == null || i.terminate();\n                }, this.heartBeatTimeout);\n            } catch (t) {\n                this.logger.warn(t);\n            }\n        }, this.onPayloadHandler = (t)=>{\n            this.onProviderPayload(t), this.resetPingTimeout();\n        }, this.onConnectHandler = ()=>{\n            this.logger.trace(\"relayer connected\"), this.startPingTimeout(), this.events.emit(w.connect);\n        }, this.onDisconnectHandler = ()=>{\n            this.logger.trace(\"relayer disconnected\"), this.onProviderDisconnect();\n        }, this.onProviderErrorHandler = (t)=>{\n            this.logger.error(t), this.events.emit(w.error, t), this.logger.info(\"Fatal socket error received, closing transport\"), this.transportClose();\n        }, this.registerProviderListeners = ()=>{\n            this.provider.on(T.payload, this.onPayloadHandler), this.provider.on(T.connect, this.onConnectHandler), this.provider.on(T.disconnect, this.onDisconnectHandler), this.provider.on(T.error, this.onProviderErrorHandler);\n        }, this.core = e.core, this.logger = typeof e.logger < \"u\" && typeof e.logger != \"string\" ? (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e.logger, this.name) : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e.logger || ct\n        })), this.messages = new Xt(this.logger, e.core), this.subscriber = new ei(this, this.logger), this.publisher = new en(this, this.logger), this.relayUrl = e?.relayUrl || Ee, this.projectId = e.projectId, this.bundleId = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getBundleId)(), this.provider = {};\n    }\n    async init() {\n        if (this.logger.trace(\"Initialized\"), this.registerEventListeners(), await Promise.all([\n            this.messages.init(),\n            this.subscriber.init()\n        ]), this.initialized = !0, this.subscriber.cached.length > 0) try {\n            await this.transportOpen();\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get connected() {\n        var e, t, s;\n        return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 1;\n    }\n    get connecting() {\n        var e, t, s;\n        return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 0;\n    }\n    async publish(e, t, s) {\n        this.isInitialized(), await this.publisher.publish(e, t, s), await this.recordMessageEvent({\n            topic: e,\n            message: t,\n            publishedAt: Date.now(),\n            transportType: F.relay\n        });\n    }\n    async subscribe(e, t) {\n        var s;\n        this.isInitialized(), t?.transportType === \"relay\" && await this.toEstablishConnection();\n        let i = ((s = this.subscriber.topicMap.get(e)) == null ? void 0 : s[0]) || \"\", r;\n        const n = (a)=>{\n            a.topic === e && (this.subscriber.off(A.created, n), r());\n        };\n        return await Promise.all([\n            new Promise((a)=>{\n                r = a, this.subscriber.on(A.created, n);\n            }),\n            new Promise(async (a)=>{\n                i = await this.subscriber.subscribe(e, t) || i, a();\n            })\n        ]), i;\n    }\n    async unsubscribe(e, t) {\n        this.isInitialized(), await this.subscriber.unsubscribe(e, t);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async transportDisconnect() {\n        if (!this.hasExperiencedNetworkDisruption && this.connected && this.requestsInFlight.size > 0) try {\n            await Promise.all(Array.from(this.requestsInFlight.values()).map((e)=>e.promise));\n        } catch (e) {\n            this.logger.warn(e);\n        }\n        this.hasExperiencedNetworkDisruption || this.connected ? await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.provider.disconnect(), 2e3, \"provider.disconnect()\").catch(()=>this.onProviderDisconnect()) : this.onProviderDisconnect();\n    }\n    async transportClose() {\n        this.transportExplicitlyClosed = !0, await this.transportDisconnect();\n    }\n    async transportOpen(e) {\n        await this.confirmOnlineStateOrThrow(), e && e !== this.relayUrl && (this.relayUrl = e, await this.transportDisconnect()), await this.createProvider(), this.connectionAttemptInProgress = !0, this.transportExplicitlyClosed = !1;\n        try {\n            await new Promise(async (t, s)=>{\n                const i = ()=>{\n                    this.provider.off(T.disconnect, i), s(new Error(\"Connection interrupted while trying to subscribe\"));\n                };\n                this.provider.on(T.disconnect, i), await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createExpiringPromise)(this.provider.connect(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), `Socket stalled when trying to connect to ${this.relayUrl}`).catch((r)=>{\n                    s(r);\n                }).finally(()=>{\n                    clearTimeout(this.reconnectTimeout), this.reconnectTimeout = void 0;\n                }), this.subscriber.start().catch((r)=>{\n                    this.logger.error(r), this.onDisconnectHandler();\n                }), this.hasExperiencedNetworkDisruption = !1, t();\n            });\n        } catch (t) {\n            this.logger.error(t);\n            const s = t;\n            if (this.hasExperiencedNetworkDisruption = !0, !this.isConnectionStalled(s.message)) throw t;\n        } finally{\n            this.connectionAttemptInProgress = !1;\n        }\n    }\n    async restartTransport(e) {\n        this.connectionAttemptInProgress || (this.relayUrl = e || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());\n    }\n    async confirmOnlineStateOrThrow() {\n        if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isOnline)()) throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n    }\n    async handleBatchMessageEvents(e) {\n        if (e?.length === 0) {\n            this.logger.trace(\"Batch message events is empty. Ignoring...\");\n            return;\n        }\n        const t = e.sort((s, i)=>s.publishedAt - i.publishedAt);\n        this.logger.trace(`Batch of ${t.length} message events sorted`);\n        for (const s of t)try {\n            await this.onMessageEvent(s);\n        } catch (i) {\n            this.logger.warn(i);\n        }\n        this.logger.trace(`Batch of ${t.length} message events processed`);\n    }\n    async onLinkMessageEvent(e, t) {\n        const { topic: s } = e;\n        if (!t.sessionExists) {\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), r = {\n                topic: s,\n                expiry: i,\n                relay: {\n                    protocol: \"irn\"\n                },\n                active: !1\n            };\n            await this.core.pairing.pairings.set(s, r);\n        }\n        this.events.emit(w.message, e), await this.recordMessageEvent(e);\n    }\n    startPingTimeout() {\n        var e, t, s, i, r;\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isNode)()) try {\n            (t = (e = this.provider) == null ? void 0 : e.connection) != null && t.socket && ((r = (i = (s = this.provider) == null ? void 0 : s.connection) == null ? void 0 : i.socket) == null || r.once(\"ping\", ()=>{\n                this.resetPingTimeout();\n            })), this.resetPingTimeout();\n        } catch (n) {\n            this.logger.warn(n);\n        }\n    }\n    isConnectionStalled(e) {\n        return this.staleConnectionErrors.some((t)=>e.includes(t));\n    }\n    async createProvider() {\n        this.provider.connection && this.unregisterProviderListeners();\n        const e = await this.core.crypto.signJWT(this.relayUrl);\n        this.provider = new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatRelayRpcUrl)({\n            sdkVersion: oe,\n            protocol: this.protocol,\n            version: this.version,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId,\n            auth: e,\n            useOnCloseEvent: !0,\n            bundleId: this.bundleId\n        }))), this.registerProviderListeners();\n    }\n    async recordMessageEvent(e) {\n        const { topic: t, message: s } = e;\n        await this.messages.set(t, s);\n    }\n    async shouldIgnoreMessageEvent(e) {\n        const { topic: t, message: s } = e;\n        if (!s || s.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${s}`), !0;\n        if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), !0;\n        const i = this.messages.has(t, s);\n        return i && this.logger.debug(`Ignoring duplicate message: ${s}`), i;\n    }\n    async onProviderPayload(e) {\n        if (this.logger.debug(\"Incoming Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"incoming\",\n            payload: e\n        }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(e)) {\n            if (!e.method.endsWith(lt)) return;\n            const t = e.params, { topic: s, message: i, publishedAt: r, attestation: n } = t.data, a = {\n                topic: s,\n                message: i,\n                publishedAt: r,\n                transportType: F.relay,\n                attestation: n\n            };\n            this.logger.debug(\"Emitting Relayer Payload\"), this.logger.trace(un({\n                type: \"event\",\n                event: t.id\n            }, a)), this.events.emit(t.id, a), await this.acknowledgePayload(e), await this.onMessageEvent(a);\n        } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(e) && this.events.emit(w.message_ack, e);\n    }\n    async onMessageEvent(e) {\n        await this.shouldIgnoreMessageEvent(e) || (this.events.emit(w.message, e), await this.recordMessageEvent(e));\n    }\n    async acknowledgePayload(e) {\n        const t = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(e.id, !0);\n        await this.provider.connection.send(t);\n    }\n    unregisterProviderListeners() {\n        this.provider.off(T.payload, this.onPayloadHandler), this.provider.off(T.connect, this.onConnectHandler), this.provider.off(T.disconnect, this.onDisconnectHandler), this.provider.off(T.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);\n    }\n    async registerEventListeners() {\n        let e = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isOnline)();\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.subscribeToNetworkChange)(async (t)=>{\n            e !== t && (e = t, t ? await this.restartTransport().catch((s)=>this.logger.error(s)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportDisconnect(), this.transportExplicitlyClosed = !1));\n        });\n    }\n    async onProviderDisconnect() {\n        await this.subscriber.stop(), this.requestsInFlight.clear(), clearTimeout(this.pingTimeout), this.events.emit(w.disconnect), this.connectionAttemptInProgress = !1, !this.transportExplicitlyClosed && (this.reconnectTimeout || (this.reconnectTimeout = setTimeout(async ()=>{\n            await this.transportOpen().catch((e)=>this.logger.error(e));\n        }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(ut))));\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async toEstablishConnection() {\n        await this.confirmOnlineStateOrThrow(), !this.connected && (this.connectionAttemptInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.connected && (clearInterval(t), e());\n            }, this.connectionStatusPollingInterval);\n        }), await this.transportOpen());\n    }\n}\nvar dn = Object.defineProperty, ri = Object.getOwnPropertySymbols, gn = Object.prototype.hasOwnProperty, pn = Object.prototype.propertyIsEnumerable, ni = (o, e, t)=>e in o ? dn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, oi = (o, e)=>{\n    for(var t in e || (e = {}))gn.call(e, t) && ni(o, t, e[t]);\n    if (ri) for (var t of ri(e))pn.call(e, t) && ni(o, t, e[t]);\n    return o;\n};\nclass ai extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IStore {\n    constructor(e, t, s, i = O, r = void 0){\n        super(e, t, s, i), this.core = e, this.logger = t, this.name = s, this.map = new Map, this.version = dt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((n)=>{\n                this.getKey && n !== null && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isUndefined)(n) ? this.map.set(this.getKey(n), n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isProposalStruct)(n) ? this.map.set(n.id, n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isSessionStruct)(n) && this.map.set(n.topic, n);\n            }), this.cached = [], this.initialized = !0);\n        }, this.set = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) ? await this.update(n, a) : (this.logger.debug(\"Setting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                key: n,\n                value: a\n            }), this.map.set(n, a), await this.persist());\n        }, this.get = (n)=>(this.isInitialized(), this.logger.debug(\"Getting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                key: n\n            }), this.getData(n)), this.getAll = (n)=>(this.isInitialized(), n ? this.values.filter((a)=>Object.keys(n).every((c)=>lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default()(a[c], n[c]))) : this.values), this.update = async (n, a)=>{\n            this.isInitialized(), this.logger.debug(\"Updating value\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                key: n,\n                update: a\n            });\n            const c = oi(oi({}, this.getData(n)), a);\n            this.map.set(n, c), await this.persist();\n        }, this.delete = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) && (this.logger.debug(\"Deleting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                key: n,\n                reason: a\n            }), this.map.delete(n), this.addToRecentlyDeleted(n), await this.persist());\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.storagePrefix = i, this.getKey = r;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.map.size;\n    }\n    get keys() {\n        return Array.from(this.map.keys());\n    }\n    get values() {\n        return Array.from(this.map.values());\n    }\n    addToRecentlyDeleted(e) {\n        this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);\n    }\n    async setDataStore(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getDataStore() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getData(e) {\n        const t = this.map.get(e);\n        if (!t) {\n            if (this.recentlyDeleted.includes(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${this.name}: ${e}`);\n                throw this.logger.error(i), new Error(i);\n            }\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(s), new Error(s);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setDataStore(this.values);\n    }\n    async restore() {\n        try {\n            const e = await this.getDataStore();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.map.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                value: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass ci {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.name = mt, this.version = bt, this.events = new (events__WEBPACK_IMPORTED_MODULE_0___default()), this.initialized = !1, this.storagePrefix = O, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.TYPE_1\n        ], this.registeredMethods = [], this.init = async ()=>{\n            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace(\"Initialized\"));\n        }, this.register = ({ methods: s })=>{\n            this.isInitialized(), this.registeredMethods = [\n                ...new Set([\n                    ...this.registeredMethods,\n                    ...s\n                ])\n            ];\n        }, this.create = async (s)=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.generateRandomBytes32)(), r = await this.core.crypto.setSymKey(i), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), a = {\n                protocol: at\n            }, c = {\n                topic: r,\n                expiry: n,\n                relay: a,\n                active: !1,\n                methods: s?.methods\n            }, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: r,\n                symKey: i,\n                relay: a,\n                expiryTimestamp: n,\n                methods: s?.methods\n            });\n            return this.events.emit(q.create, c), this.core.expirer.set(r, n), await this.pairings.set(r, c), await this.core.relayer.subscribe(r, {\n                transportType: s?.transportType\n            }), {\n                topic: r,\n                uri: h\n            };\n        }, this.pair = async (s)=>{\n            this.isInitialized();\n            const i = this.core.eventClient.createEvent({\n                properties: {\n                    topic: s?.uri,\n                    trace: [\n                        z.pairing_started\n                    ]\n                }\n            });\n            this.isValidPair(s, i);\n            const { topic: r, symKey: n, relay: a, expiryTimestamp: c, methods: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseUri)(s.uri);\n            i.props.properties.topic = r, i.addTrace(z.pairing_uri_validation_success), i.addTrace(z.pairing_uri_not_expired);\n            let d;\n            if (this.pairings.keys.includes(r)) {\n                if (d = this.pairings.get(r), i.addTrace(z.existing_pairing), d.active) throw i.setError(M.active_pairing_already_exists), new Error(`Pairing already exists: ${r}. Please try again with a new connection URI.`);\n                i.addTrace(z.pairing_not_expired);\n            }\n            const g = c || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), m = {\n                topic: r,\n                relay: a,\n                expiry: g,\n                active: !1,\n                methods: h\n            };\n            this.core.expirer.set(r, g), await this.pairings.set(r, m), i.addTrace(z.store_new_pairing), s.activatePairing && await this.activate({\n                topic: r\n            }), this.events.emit(q.create, m), i.addTrace(z.emit_inactive_pairing), this.core.crypto.keychain.has(r) || await this.core.crypto.setSymKey(n, r), i.addTrace(z.subscribing_pairing_topic);\n            try {\n                await this.core.relayer.confirmOnlineStateOrThrow();\n            } catch  {\n                i.setError(M.no_internet_connection);\n            }\n            try {\n                await this.core.relayer.subscribe(r, {\n                    relay: a\n                });\n            } catch (b) {\n                throw i.setError(M.subscribe_pairing_topic_failure), b;\n            }\n            return i.addTrace(z.subscribe_pairing_topic_success), m;\n        }, this.activate = async ({ topic: s })=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS);\n            this.core.expirer.set(s, i), await this.pairings.update(s, {\n                active: !0,\n                expiry: i\n            });\n        }, this.ping = async (s)=>{\n            this.isInitialized(), await this.isValidPing(s);\n            const { topic: i } = s;\n            if (this.pairings.keys.includes(i)) {\n                const r = await this.sendRequest(i, \"wc_pairingPing\", {}), { done: n, resolve: a, reject: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", r), ({ error: h })=>{\n                    h ? c(h) : a();\n                }), await n();\n            }\n        }, this.updateExpiry = async ({ topic: s, expiry: i })=>{\n            this.isInitialized(), await this.pairings.update(s, {\n                expiry: i\n            });\n        }, this.updateMetadata = async ({ topic: s, metadata: i })=>{\n            this.isInitialized(), await this.pairings.update(s, {\n                peerMetadata: i\n            });\n        }, this.getPairings = ()=>(this.isInitialized(), this.pairings.values), this.disconnect = async (s)=>{\n            this.isInitialized(), await this.isValidDisconnect(s);\n            const { topic: i } = s;\n            this.pairings.keys.includes(i) && (await this.sendRequest(i, \"wc_pairingDelete\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\")), await this.deletePairing(i));\n        }, this.formatUriFromPairing = (s)=>{\n            this.isInitialized();\n            const { topic: i, relay: r, expiry: n, methods: a } = s, c = this.core.crypto.keychain.get(i);\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: i,\n                symKey: c,\n                relay: r,\n                expiryTimestamp: n,\n                methods: a\n            });\n        }, this.sendRequest = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(i, r), a = await this.core.crypto.encode(s, n), c = j[i].req;\n            return this.core.history.set(s, n), this.core.relayer.publish(s, a, c), n.id;\n        }, this.sendResult = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(s, r), a = await this.core.crypto.encode(i, n), c = await this.core.history.get(i, s), h = j[c.request.method].res;\n            await this.core.relayer.publish(i, a, h), await this.core.history.resolve(n);\n        }, this.sendError = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcError)(s, r), a = await this.core.crypto.encode(i, n), c = await this.core.history.get(i, s), h = j[c.request.method] ? j[c.request.method].res : j.unregistered_method.res;\n            await this.core.relayer.publish(i, a, h), await this.core.history.resolve(n);\n        }, this.deletePairing = async (s, i)=>{\n            await this.core.relayer.unsubscribe(s), await Promise.all([\n                this.pairings.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"USER_DISCONNECTED\")),\n                this.core.crypto.deleteSymKey(s),\n                i ? Promise.resolve() : this.core.expirer.del(s)\n            ]);\n        }, this.cleanup = async ()=>{\n            const s = this.pairings.getAll().filter((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isExpired)(i.expiry));\n            await Promise.all(s.map((i)=>this.deletePairing(i.topic)));\n        }, this.onRelayEventRequest = (s)=>{\n            const { topic: i, payload: r } = s;\n            switch(r.method){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingRequest(i, r);\n                case \"wc_pairingDelete\":\n                    return this.onPairingDeleteRequest(i, r);\n                default:\n                    return this.onUnknownRpcMethodRequest(i, r);\n            }\n        }, this.onRelayEventResponse = async (s)=>{\n            const { topic: i, payload: r } = s, n = (await this.core.history.get(i, r.id)).request.method;\n            switch(n){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingResponse(i, r);\n                default:\n                    return this.onUnknownRpcMethodResponse(n);\n            }\n        }, this.onPairingPingRequest = async (s, i)=>{\n            const { id: r } = i;\n            try {\n                this.isValidPing({\n                    topic: s\n                }), await this.sendResult(r, s, !0), this.events.emit(q.ping, {\n                    id: r,\n                    topic: s\n                });\n            } catch (n) {\n                await this.sendError(r, s, n), this.logger.error(n);\n            }\n        }, this.onPairingPingResponse = (s, i)=>{\n            const { id: r } = i;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResult)(i) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", r), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(i) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.engineEvent)(\"pairing_ping\", r), {\n                    error: i.error\n                });\n            }, 500);\n        }, this.onPairingDeleteRequest = async (s, i)=>{\n            const { id: r } = i;\n            try {\n                this.isValidDisconnect({\n                    topic: s\n                }), await this.deletePairing(s), this.events.emit(q.delete, {\n                    id: r,\n                    topic: s\n                });\n            } catch (n) {\n                await this.sendError(r, s, n), this.logger.error(n);\n            }\n        }, this.onUnknownRpcMethodRequest = async (s, i)=>{\n            const { id: r, method: n } = i;\n            try {\n                if (this.registeredMethods.includes(n)) return;\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", n);\n                await this.sendError(r, s, a), this.logger.error(a);\n            } catch (a) {\n                await this.sendError(r, s, a), this.logger.error(a);\n            }\n        }, this.onUnknownRpcMethodResponse = (s)=>{\n            this.registeredMethods.includes(s) || this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", s));\n        }, this.isValidPair = (s, i)=>{\n            var r;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(s)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pair() params: ${s}`);\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidUrl)(s.uri)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pair() uri: ${s.uri}`);\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseUri)(s?.uri);\n            if (!((r = n?.relay) != null && r.protocol)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#relay-protocol\");\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            if (!(n != null && n.symKey)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#symKey\");\n                throw i.setError(M.malformed_pairing_uri), new Error(a);\n            }\n            if (n != null && n.expiryTimestamp && (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(n?.expiryTimestamp) < Date.now()) {\n                i.setError(M.pairing_expired);\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"EXPIRED\", \"pair() URI has expired. Please try again with a new connection URI.\");\n                throw new Error(a);\n            }\n        }, this.isValidPing = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(s)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${s}`);\n                throw new Error(r);\n            }\n            const { topic: i } = s;\n            await this.isValidPairingTopic(i);\n        }, this.isValidDisconnect = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidParams)(s)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${s}`);\n                throw new Error(r);\n            }\n            const { topic: i } = s;\n            await this.isValidPairingTopic(i);\n        }, this.isValidPairingTopic = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isValidString)(s, !1)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${s}`);\n                throw new Error(i);\n            }\n            if (!this.pairings.keys.includes(s)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${s}`);\n                throw new Error(i);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isExpired)(this.pairings.get(s).expiry)) {\n                await this.deletePairing(s);\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"EXPIRED\", `pairing topic: ${s}`);\n                throw new Error(i);\n            }\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.pairings = new ai(this.core, this.logger, this.name, this.storagePrefix);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    registerRelayerEvents() {\n        this.core.relayer.on(w.message, async (e)=>{\n            const { topic: t, message: s, transportType: i } = e;\n            if (!this.pairings.keys.includes(t) || i === F.link_mode || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(s))) return;\n            const r = await this.core.crypto.decode(t, s);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(r) ? (this.core.history.set(t, r), this.onRelayEventRequest({\n                    topic: t,\n                    payload: r\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(r) && (await this.core.history.resolve(r), await this.onRelayEventResponse({\n                    topic: t,\n                    payload: r\n                }), this.core.history.delete(t, r.id));\n            } catch (n) {\n                this.logger.error(n);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.core.expirer.on(R.expired, async (e)=>{\n            const { topic: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.parseExpirerTarget)(e.target);\n            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(q.expire, {\n                topic: t\n            }));\n        });\n    }\n}\nclass hi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IJsonRpcHistory {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ft, this.version = _t, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((s)=>this.records.set(s.id, s)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.set = (s, i, r)=>{\n            if (this.isInitialized(), this.logger.debug(\"Setting JSON-RPC request history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                topic: s,\n                request: i,\n                chainId: r\n            }), this.records.has(i.id)) return;\n            const n = {\n                id: i.id,\n                topic: s,\n                request: {\n                    method: i.method,\n                    params: i.params || null\n                },\n                chainId: r,\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS)\n            };\n            this.records.set(n.id, n), this.persist(), this.events.emit(P.created, n);\n        }, this.resolve = async (s)=>{\n            if (this.isInitialized(), this.logger.debug(\"Updating JSON-RPC response history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                response: s\n            }), !this.records.has(s.id)) return;\n            const i = await this.getRecord(s.id);\n            typeof i.response > \"u\" && (i.response = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(s) ? {\n                error: s.error\n            } : {\n                result: s.result\n            }, this.records.set(i.id, i), this.persist(), this.events.emit(P.updated, i));\n        }, this.get = async (s, i)=>(this.isInitialized(), this.logger.debug(\"Getting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                topic: s,\n                id: i\n            }), await this.getRecord(i)), this.delete = (s, i)=>{\n            this.isInitialized(), this.logger.debug(\"Deleting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                id: i\n            }), this.values.forEach((r)=>{\n                if (r.topic === s) {\n                    if (typeof i < \"u\" && r.id !== i) return;\n                    this.records.delete(r.id), this.events.emit(P.deleted, r);\n                }\n            }), this.persist();\n        }, this.exists = async (s, i)=>(this.isInitialized(), this.records.has(i) ? (await this.getRecord(i)).topic === s : !1), this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get size() {\n        return this.records.size;\n    }\n    get keys() {\n        return Array.from(this.records.keys());\n    }\n    get values() {\n        return Array.from(this.records.values());\n    }\n    get pending() {\n        const e = [];\n        return this.values.forEach((t)=>{\n            if (typeof t.response < \"u\") return;\n            const s = {\n                topic: t.topic,\n                request: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),\n                chainId: t.chainId\n            };\n            return e.push(s);\n        }), e;\n    }\n    async setJsonRpcRecords(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getJsonRpcRecords() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getRecord(e) {\n        this.isInitialized();\n        const t = this.records.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(s);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setJsonRpcRecords(this.values), this.events.emit(P.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getJsonRpcRecords();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.records.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                records: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);\n        }\n    }\n    registerEventListeners() {\n        this.events.on(P.created, (e)=>{\n            const t = P.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(P.updated, (e)=>{\n            const t = P.updated;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(P.deleted, (e)=>{\n            const t = P.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>{\n            this.cleanup();\n        });\n    }\n    cleanup() {\n        try {\n            this.isInitialized();\n            let e = !1;\n            this.records.forEach((t)=>{\n                (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(t.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t.id}`), this.records.delete(t.id), this.events.emit(P.deleted, t, !1), e = !0);\n            }), e && this.persist();\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass li extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IExpirer {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = Et, this.version = vt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((s)=>this.expirations.set(s.target, s)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.has = (s)=>{\n            try {\n                const i = this.formatTarget(s);\n                return typeof this.getExpiration(i) < \"u\";\n            } catch  {\n                return !1;\n            }\n        }, this.set = (s, i)=>{\n            this.isInitialized();\n            const r = this.formatTarget(s), n = {\n                target: r,\n                expiry: i\n            };\n            this.expirations.set(r, n), this.checkExpiry(r, n), this.events.emit(R.created, {\n                target: r,\n                expiration: n\n            });\n        }, this.get = (s)=>{\n            this.isInitialized();\n            const i = this.formatTarget(s);\n            return this.getExpiration(i);\n        }, this.del = (s)=>{\n            if (this.isInitialized(), this.has(s)) {\n                const i = this.formatTarget(s), r = this.getExpiration(i);\n                this.expirations.delete(i), this.events.emit(R.deleted, {\n                    target: i,\n                    expiration: r\n                });\n            }\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.expirations.size;\n    }\n    get keys() {\n        return Array.from(this.expirations.keys());\n    }\n    get values() {\n        return Array.from(this.expirations.values());\n    }\n    formatTarget(e) {\n        if (typeof e == \"string\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatTopicTarget)(e);\n        if (typeof e == \"number\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatIdTarget)(e);\n        const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"UNKNOWN_TYPE\", `Target type: ${typeof e}`);\n        throw new Error(t);\n    }\n    async setExpirations(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getExpirations() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    async persist() {\n        await this.setExpirations(this.values), this.events.emit(R.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getExpirations();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.expirations.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                expirations: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);\n        }\n    }\n    getExpiration(e) {\n        const t = this.expirations.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.warn(s), new Error(s);\n        }\n        return t;\n    }\n    checkExpiry(e, t) {\n        const { expiry: s } = t;\n        (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(s) - Date.now() <= 0 && this.expire(e, t);\n    }\n    expire(e, t) {\n        this.expirations.delete(e), this.events.emit(R.expired, {\n            target: e,\n            expiration: t\n        });\n    }\n    checkExpirations() {\n        this.core.relayer.connected && this.expirations.forEach((e, t)=>this.checkExpiry(t, e));\n    }\n    registerEventListeners() {\n        this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>this.checkExpirations()), this.events.on(R.created, (e)=>{\n            const t = R.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(R.expired, (e)=>{\n            const t = R.expired;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(R.deleted, (e)=>{\n            const t = R.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nvar y = {};\nObject.defineProperty(y, \"__esModule\", {\n    value: !0\n}), y.getLocalStorage = y.getLocalStorageOrThrow = y.getCrypto = y.getCryptoOrThrow = y.getLocation = y.getLocationOrThrow = y.getNavigator = y.getNavigatorOrThrow = ui = y.getDocument = y.getDocumentOrThrow = y.getFromWindowOrThrow = y.getFromWindow = void 0;\nfunction U(o) {\n    let e;\n    return  false && (0), e;\n}\ny.getFromWindow = U;\nfunction G(o) {\n    const e = U(o);\n    if (!e) throw new Error(`${o} is not defined in Window`);\n    return e;\n}\ny.getFromWindowOrThrow = G;\nfunction yn() {\n    return G(\"document\");\n}\ny.getDocumentOrThrow = yn;\nfunction Dn() {\n    return U(\"document\");\n}\nvar ui = y.getDocument = Dn;\nfunction mn() {\n    return G(\"navigator\");\n}\ny.getNavigatorOrThrow = mn;\nfunction bn() {\n    return U(\"navigator\");\n}\ny.getNavigator = bn;\nfunction fn() {\n    return G(\"location\");\n}\ny.getLocationOrThrow = fn;\nfunction _n() {\n    return U(\"location\");\n}\ny.getLocation = _n;\nfunction En() {\n    return G(\"crypto\");\n}\ny.getCryptoOrThrow = En;\nfunction vn() {\n    return U(\"crypto\");\n}\ny.getCrypto = vn;\nfunction wn() {\n    return G(\"localStorage\");\n}\ny.getLocalStorageOrThrow = wn;\nfunction In() {\n    return U(\"localStorage\");\n}\ny.getLocalStorage = In;\nclass di extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IVerify {\n    constructor(e, t, s){\n        super(e, t, s), this.core = e, this.logger = t, this.store = s, this.name = wt, this.verifyUrlV3 = Tt, this.storagePrefix = O, this.version = fe, this.init = async ()=>{\n            var i;\n            this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)((i = this.publicKey) == null ? void 0 : i.expiresAt) < Date.now() && (this.logger.debug(\"verify v2 public key expired\"), await this.removePublicKey()));\n        }, this.register = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isBrowser)() || this.isDevEnv) return;\n            const r = window.location.origin, { id: n, decryptedId: a } = i, c = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${r}&id=${n}&decryptedId=${a}`;\n            try {\n                const h = ui(), d = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 5), g = await new Promise((m, b)=>{\n                    const l = ()=>{\n                        window.removeEventListener(\"message\", E), h.body.removeChild(p), b(\"attestation aborted\");\n                    };\n                    this.abortController.signal.addEventListener(\"abort\", l);\n                    const p = h.createElement(\"iframe\");\n                    p.src = c, p.style.display = \"none\", p.addEventListener(\"error\", l, {\n                        signal: this.abortController.signal\n                    });\n                    const E = (D)=>{\n                        if (D.data && typeof D.data == \"string\") try {\n                            const f = JSON.parse(D.data);\n                            if (f.type === \"verify_attestation\") {\n                                if ((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.decodeJWT)(f.attestation).payload.id !== n) return;\n                                clearInterval(d), h.body.removeChild(p), this.abortController.signal.removeEventListener(\"abort\", l), window.removeEventListener(\"message\", E), m(f.attestation === null ? \"\" : f.attestation);\n                            }\n                        } catch (f) {\n                            this.logger.warn(f);\n                        }\n                    };\n                    h.body.appendChild(p), window.addEventListener(\"message\", E, {\n                        signal: this.abortController.signal\n                    });\n                });\n                return this.logger.debug(\"jwt attestation\", g), g;\n            } catch (h) {\n                this.logger.warn(h);\n            }\n            return \"\";\n        }, this.resolve = async (i)=>{\n            if (this.isDevEnv) return \"\";\n            const { attestationId: r, hash: n, encryptedId: a } = i;\n            if (r === \"\") {\n                this.logger.debug(\"resolve: attestationId is empty, skipping\");\n                return;\n            }\n            if (r) {\n                if ((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.decodeJWT)(r).payload.id !== a) return;\n                const h = await this.isValidJwtAttestation(r);\n                if (h) {\n                    if (!h.isVerified) {\n                        this.logger.warn(\"resolve: jwt attestation: origin url not verified\");\n                        return;\n                    }\n                    return h;\n                }\n            }\n            if (!n) return;\n            const c = this.getVerifyUrl(i?.verifyUrl);\n            return this.fetchAttestation(n, c);\n        }, this.fetchAttestation = async (i, r)=>{\n            this.logger.debug(`resolving attestation: ${i} from url: ${r}`);\n            const n = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 5), a = await fetch(`${r}/attestation/${i}?v2Supported=true`, {\n                signal: this.abortController.signal\n            });\n            return clearTimeout(n), a.status === 200 ? await a.json() : void 0;\n        }, this.getVerifyUrl = (i)=>{\n            let r = i || Z;\n            return Ct.includes(r) || (this.logger.info(`verify url: ${r}, not included in trusted list, assigning default: ${Z}`), r = Z), r;\n        }, this.fetchPublicKey = async ()=>{\n            try {\n                this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);\n                const i = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_SECONDS), r = await fetch(`${this.verifyUrlV3}/public-key`, {\n                    signal: this.abortController.signal\n                });\n                return clearTimeout(i), await r.json();\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.persistPublicKey = async (i)=>{\n            this.logger.debug(\"persisting public key to local storage\", i), await this.store.setItem(this.storeKey, i), this.publicKey = i;\n        }, this.removePublicKey = async ()=>{\n            this.logger.debug(\"removing verify v2 public key from storage\"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;\n        }, this.isValidJwtAttestation = async (i)=>{\n            const r = await this.getPublicKey();\n            try {\n                if (r) return this.validateAttestation(i, r);\n            } catch (a) {\n                this.logger.error(a), this.logger.warn(\"error validating attestation\");\n            }\n            const n = await this.fetchAndPersistPublicKey();\n            try {\n                if (n) return this.validateAttestation(i, n);\n            } catch (a) {\n                this.logger.error(a), this.logger.warn(\"error validating attestation\");\n            }\n        }, this.getPublicKey = async ()=>this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey(), this.fetchAndPersistPublicKey = async ()=>{\n            if (this.fetchPromise) return await this.fetchPromise, this.publicKey;\n            this.fetchPromise = new Promise(async (r)=>{\n                const n = await this.fetchPublicKey();\n                n && (await this.persistPublicKey(n), r(n));\n            });\n            const i = await this.fetchPromise;\n            return this.fetchPromise = void 0, i;\n        }, this.validateAttestation = (i, r)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.verifyP256Jwt)(i, r.publicKey), a = {\n                hasExpired: (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(n.exp) < Date.now(),\n                payload: n\n            };\n            if (a.hasExpired) throw this.logger.warn(\"resolve: jwt attestation expired\"), new Error(\"JWT attestation expired\");\n            return {\n                origin: a.payload.origin,\n                isScam: a.payload.isScam,\n                isVerified: a.payload.isVerified\n            };\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.abortController = new AbortController, this.isDevEnv = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTestRun)(), this.init();\n    }\n    get storeKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//verify:public:key\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    startAbortTimer(e) {\n        return this.abortController = new AbortController, setTimeout(()=>this.abortController.abort(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(e));\n    }\n}\nclass gi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IEchoClient {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.context = St, this.registerDeviceToken = async (s)=>{\n            const { clientId: i, token: r, notificationType: n, enableEncrypted: a = !1 } = s, c = `${Pt}/${this.projectId}/clients`;\n            await fetch(c, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    client_id: i,\n                    type: n,\n                    token: r,\n                    always_raw: a\n                })\n            });\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context);\n    }\n}\nvar Tn = Object.defineProperty, pi = Object.getOwnPropertySymbols, Cn = Object.prototype.hasOwnProperty, Sn = Object.prototype.propertyIsEnumerable, yi = (o, e, t)=>e in o ? Tn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, te = (o, e)=>{\n    for(var t in e || (e = {}))Cn.call(e, t) && yi(o, t, e[t]);\n    if (pi) for (var t of pi(e))Sn.call(e, t) && yi(o, t, e[t]);\n    return o;\n};\nclass Di extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.IEventClient {\n    constructor(e, t, s = !0){\n        super(e, t, s), this.core = e, this.logger = t, this.context = xt, this.storagePrefix = O, this.storageVersion = Rt, this.events = new Map, this.shouldPersist = !1, this.init = async ()=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.isTestRun)()) try {\n                const i = {\n                    eventId: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.uuidv4)(),\n                    timestamp: Date.now(),\n                    domain: this.getAppDomain(),\n                    props: {\n                        event: \"INIT\",\n                        type: \"\",\n                        properties: {\n                            client_id: await this.core.crypto.getClientId(),\n                            user_agent: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.formatUA)(this.core.relayer.protocol, this.core.relayer.version, oe)\n                        }\n                    }\n                };\n                await this.sendEvent([\n                    i\n                ]);\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.createEvent = (i)=>{\n            const { event: r = \"ERROR\", type: n = \"\", properties: { topic: a, trace: c } } = i, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.uuidv4)(), d = this.core.projectId || \"\", g = Date.now(), m = te({\n                eventId: h,\n                timestamp: g,\n                props: {\n                    event: r,\n                    type: n,\n                    properties: {\n                        topic: a,\n                        trace: c\n                    }\n                },\n                bundleId: d,\n                domain: this.getAppDomain()\n            }, this.setMethods(h));\n            return this.telemetryEnabled && (this.events.set(h, m), this.shouldPersist = !0), m;\n        }, this.getEvent = (i)=>{\n            const { eventId: r, topic: n } = i;\n            if (r) return this.events.get(r);\n            const a = Array.from(this.events.values()).find((c)=>c.props.properties.topic === n);\n            if (a) return te(te({}, a), this.setMethods(a.eventId));\n        }, this.deleteEvent = (i)=>{\n            const { eventId: r } = i;\n            this.events.delete(r), this.shouldPersist = !0;\n        }, this.setEventListeners = ()=>{\n            this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, async ()=>{\n                this.shouldPersist && await this.persist(), this.events.forEach((i)=>{\n                    (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.fromMiliseconds)(Date.now()) - (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.fromMiliseconds)(i.timestamp) > Ot && (this.events.delete(i.eventId), this.shouldPersist = !0);\n                });\n            });\n        }, this.setMethods = (i)=>({\n                addTrace: (r)=>this.addTrace(i, r),\n                setError: (r)=>this.setError(i, r)\n            }), this.addTrace = (i, r)=>{\n            const n = this.events.get(i);\n            n && (n.props.properties.trace.push(r), this.events.set(i, n), this.shouldPersist = !0);\n        }, this.setError = (i, r)=>{\n            const n = this.events.get(i);\n            n && (n.props.type = r, n.timestamp = Date.now(), this.events.set(i, n), this.shouldPersist = !0);\n        }, this.persist = async ()=>{\n            await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = !1;\n        }, this.restore = async ()=>{\n            try {\n                const i = await this.core.storage.getItem(this.storageKey) || [];\n                if (!i.length) return;\n                i.forEach((r)=>{\n                    this.events.set(r.eventId, te(te({}, r), this.setMethods(r.eventId)));\n                });\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.submit = async ()=>{\n            if (!this.telemetryEnabled || this.events.size === 0) return;\n            const i = [];\n            for (const [r, n] of this.events)n.props.type && i.push(n);\n            if (i.length !== 0) try {\n                if ((await this.sendEvent(i)).ok) for (const r of i)this.events.delete(r.eventId), this.shouldPersist = !0;\n            } catch (r) {\n                this.logger.warn(r);\n            }\n        }, this.sendEvent = async (i)=>{\n            const r = this.getAppDomain() ? \"\" : \"&sp=desktop\";\n            return await fetch(`${At}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${oe}${r}`, {\n                method: \"POST\",\n                body: JSON.stringify(i)\n            });\n        }, this.getAppDomain = ()=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_12__.getAppMetadata)().url, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context), this.telemetryEnabled = s, s ? this.restore().then(async ()=>{\n            await this.submit(), this.setEventListeners();\n        }) : this.persist();\n    }\n    get storageKey() {\n        return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + \"//\" + this.context;\n    }\n}\nvar Pn = Object.defineProperty, mi = Object.getOwnPropertySymbols, Rn = Object.prototype.hasOwnProperty, xn = Object.prototype.propertyIsEnumerable, bi = (o, e, t)=>e in o ? Pn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, fi = (o, e)=>{\n    for(var t in e || (e = {}))Rn.call(e, t) && bi(o, t, e[t]);\n    if (mi) for (var t of mi(e))xn.call(e, t) && bi(o, t, e[t]);\n    return o;\n};\nclass ce extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_13__.ICore {\n    constructor(e){\n        var t;\n        super(e), this.protocol = be, this.version = fe, this.name = ne, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.initialized = !1, this.on = (n, a)=>this.events.on(n, a), this.once = (n, a)=>this.events.once(n, a), this.off = (n, a)=>this.events.off(n, a), this.removeListener = (n, a)=>this.events.removeListener(n, a), this.dispatchEnvelope = ({ topic: n, message: a, sessionExists: c })=>{\n            if (!n || !a) return;\n            const h = {\n                topic: n,\n                message: a,\n                publishedAt: Date.now(),\n                transportType: F.link_mode\n            };\n            this.relayer.onLinkMessageEvent(h, {\n                sessionExists: c\n            });\n        }, this.projectId = e?.projectId, this.relayUrl = e?.relayUrl || Ee, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : \"\";\n        const s = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: typeof e?.logger == \"string\" && e.logger ? e.logger : Xe.logger\n        }), { logger: i, chunkLoggerController: r } = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generatePlatformLogger)({\n            opts: s,\n            maxSizeInBytes: e?.maxLogBlobSizeInBytes,\n            loggerOverride: e?.logger\n        });\n        this.logChunkController = r, (t = this.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async ()=>{\n            var n, a;\n            (n = this.logChunkController) != null && n.downloadLogsBlobInBrowser && ((a = this.logChunkController) == null || a.downloadLogsBlobInBrowser({\n                clientId: await this.crypto.getClientId()\n            }));\n        }), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(i, this.name), this.heartbeat = new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HeartBeat, this.crypto = new Wt(this, this.logger, e?.keychain), this.history = new hi(this, this.logger), this.expirer = new li(this, this.logger), this.storage = e != null && e.storage ? e.storage : new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__[\"default\"](fi(fi({}, Ze), e?.storageOptions)), this.relayer = new si({\n            core: this,\n            logger: this.logger,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId\n        }), this.pairing = new ci(this, this.logger), this.verify = new di(this, this.logger, this.storage), this.echoClient = new gi(this.projectId || \"\", this.logger), this.linkModeSupportedApps = [], this.eventClient = new Di(this, this.logger, e?.telemetryEnabled);\n    }\n    static async init(e) {\n        const t = new ce(e);\n        await t.initialize();\n        const s = await t.crypto.getClientId();\n        return await t.storage.setItem(gt, s), t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async start() {\n        this.initialized || await this.initialize();\n    }\n    async getLogsBlob() {\n        var e;\n        return (e = this.logChunkController) == null ? void 0 : e.logsToBlob({\n            clientId: await this.crypto.getClientId()\n        });\n    }\n    async addLinkModeSupportedApp(e) {\n        this.linkModeSupportedApps.includes(e) || (this.linkModeSupportedApps.push(e), await this.storage.setItem(ve, this.linkModeSupportedApps));\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.eventClient.init(), this.linkModeSupportedApps = await this.storage.getItem(ve) || [], this.initialized = !0, this.logger.info(\"Core Initialization Success\");\n        } catch (e) {\n            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;\n        }\n    }\n}\nconst On = ce;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/crypto.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nfunction getBrowerCrypto() {\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n    const browserCrypto = getBrowerCrypto();\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction isBrowserCryptoAvailable() {\n    return !!getBrowerCrypto() && !!getSubtleCrypto();\n}\nexports.isBrowserCryptoAvailable = isBrowserCryptoAvailable; //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUJBQXVCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDNUYsU0FBU0k7SUFDTCxPQUFPLENBQUNDLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPQyxNQUFNLEtBQU1ELENBQUFBLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPRSxRQUFRLEtBQUssQ0FBQztBQUNwSjtBQUNBUCx1QkFBdUIsR0FBR0k7QUFDMUIsU0FBU0Q7SUFDTCxNQUFNSyxnQkFBZ0JKO0lBQ3RCLE9BQU9JLGNBQWNDLE1BQU0sSUFBSUQsY0FBY0UsWUFBWTtBQUM3RDtBQUNBVix1QkFBdUIsR0FBR0c7QUFDMUIsU0FBU0Q7SUFDTCxPQUFPLENBQUMsQ0FBQ0UscUJBQXFCLENBQUMsQ0FBQ0Q7QUFDcEM7QUFDQUgsZ0NBQWdDLEdBQUdFLDBCQUNuQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvY3J5cHRvLmpzPzZkZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSA9IGV4cG9ydHMuZ2V0U3VidGxlQ3J5cHRvID0gZXhwb3J0cy5nZXRCcm93ZXJDcnlwdG8gPSB2b2lkIDA7XG5mdW5jdGlvbiBnZXRCcm93ZXJDcnlwdG8oKSB7XG4gICAgcmV0dXJuIChnbG9iYWwgPT09IG51bGwgfHwgZ2xvYmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWwuY3J5cHRvKSB8fCAoZ2xvYmFsID09PSBudWxsIHx8IGdsb2JhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsLm1zQ3J5cHRvKSB8fCB7fTtcbn1cbmV4cG9ydHMuZ2V0QnJvd2VyQ3J5cHRvID0gZ2V0QnJvd2VyQ3J5cHRvO1xuZnVuY3Rpb24gZ2V0U3VidGxlQ3J5cHRvKCkge1xuICAgIGNvbnN0IGJyb3dzZXJDcnlwdG8gPSBnZXRCcm93ZXJDcnlwdG8oKTtcbiAgICByZXR1cm4gYnJvd3NlckNyeXB0by5zdWJ0bGUgfHwgYnJvd3NlckNyeXB0by53ZWJraXRTdWJ0bGU7XG59XG5leHBvcnRzLmdldFN1YnRsZUNyeXB0byA9IGdldFN1YnRsZUNyeXB0bztcbmZ1bmN0aW9uIGlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSgpIHtcbiAgICByZXR1cm4gISFnZXRCcm93ZXJDcnlwdG8oKSAmJiAhIWdldFN1YnRsZUNyeXB0bygpO1xufVxuZXhwb3J0cy5pc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUgPSBpc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG8uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlIiwiZ2V0U3VidGxlQ3J5cHRvIiwiZ2V0QnJvd2VyQ3J5cHRvIiwiZ2xvYmFsIiwiY3J5cHRvIiwibXNDcnlwdG8iLCJicm93c2VyQ3J5cHRvIiwic3VidGxlIiwid2Via2l0U3VidGxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/env.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowser = exports.isNode = exports.isReactNative = void 0;\nfunction isReactNative() {\n    return typeof document === \"undefined\" && typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n}\nexports.isReactNative = isReactNative;\nfunction isNode() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    return !isReactNative() && !isNode();\n}\nexports.isBrowser = isBrowser; //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvZW52LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBR0EsY0FBYyxHQUFHQSxxQkFBcUIsR0FBRyxLQUFLO0FBQ2xFLFNBQVNJO0lBQ0wsT0FBUSxPQUFPQyxhQUFhLGVBQ3hCLE9BQU9DLGNBQWMsZUFDckJBLFVBQVVDLE9BQU8sS0FBSztBQUM5QjtBQUNBUCxxQkFBcUIsR0FBR0k7QUFDeEIsU0FBU0Q7SUFDTCxPQUFRLE9BQU9LLFlBQVksZUFDdkIsT0FBT0EsUUFBUUMsUUFBUSxLQUFLLGVBQzVCLE9BQU9ELFFBQVFDLFFBQVEsQ0FBQ0MsSUFBSSxLQUFLO0FBQ3pDO0FBQ0FWLGNBQWMsR0FBR0c7QUFDakIsU0FBU0Q7SUFDTCxPQUFPLENBQUNFLG1CQUFtQixDQUFDRDtBQUNoQztBQUNBSCxpQkFBaUIsR0FBR0UsV0FDcEIsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2Vudi5qcz80MzhkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0Jyb3dzZXIgPSBleHBvcnRzLmlzTm9kZSA9IGV4cG9ydHMuaXNSZWFjdE5hdGl2ZSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzUmVhY3ROYXRpdmUoKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gXCJSZWFjdE5hdGl2ZVwiKTtcbn1cbmV4cG9ydHMuaXNSZWFjdE5hdGl2ZSA9IGlzUmVhY3ROYXRpdmU7XG5mdW5jdGlvbiBpc05vZGUoKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlICE9PSBcInVuZGVmaW5lZFwiKTtcbn1cbmV4cG9ydHMuaXNOb2RlID0gaXNOb2RlO1xuZnVuY3Rpb24gaXNCcm93c2VyKCkge1xuICAgIHJldHVybiAhaXNSZWFjdE5hdGl2ZSgpICYmICFpc05vZGUoKTtcbn1cbmV4cG9ydHMuaXNCcm93c2VyID0gaXNCcm93c2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzQnJvd3NlciIsImlzTm9kZSIsImlzUmVhY3ROYXRpdmUiLCJkb2N1bWVudCIsIm5hdmlnYXRvciIsInByb2R1Y3QiLCJwcm9jZXNzIiwidmVyc2lvbnMiLCJub2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./crypto */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsb0ZBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsOEVBQU8sR0FBR0gsVUFDdkMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2luZGV4LmpzPzVjMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3J5cHRvXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VudlwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js":
/*!***************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/events.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7QUFDYixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9ldmVudHMvZGlzdC9lc20vZXZlbnRzLmpzPzEwNTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIElFdmVudHMge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJJRXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* reexport safe */ _events__WEBPACK_IMPORTED_MODULE_0__.IEvents)\n/* harmony export */ });\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCLENBQ3pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9ldmVudHMvZGlzdC9lc20vaW5kZXguanM/ZDMwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9ldmVudHNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/heartbeat/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEARTBEAT_EVENTS: () => (/* binding */ r),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ s),\n/* harmony export */   HeartBeat: () => (/* binding */ i),\n/* harmony export */   IHeartBeat: () => (/* binding */ n)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__.IEvents {\n    constructor(e){\n        super();\n    }\n}\nconst s = _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_SECONDS, r = {\n    pulse: \"heartbeat_pulse\"\n};\nclass i extends n {\n    constructor(e){\n        super(e), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.interval = s, this.interval = e?.interval || s;\n    }\n    static async init(e) {\n        const t = new i(e);\n        return await t.init(), t;\n    }\n    async init() {\n        await this.initialize();\n    }\n    stop() {\n        clearInterval(this.intervalRef);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async initialize() {\n        this.intervalRef = setInterval(()=>this.pulse(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(this.interval));\n    }\n    pulse() {\n        this.events.emit(r.pulse);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQXNFO0FBQWdEO0FBQUEsTUFBTVEsVUFBVUQsMERBQUNBO0lBQUNFLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUs7SUFBRTtBQUFDO0FBQUMsTUFBTUMsSUFBRVIsNkRBQUNBLEVBQUNTLElBQUU7SUFBQ0MsT0FBTTtBQUFpQjtBQUFFLE1BQU1DLFVBQVVOO0lBQUVDLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNLLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLFFBQVEsR0FBQ0wsR0FBRSxJQUFJLENBQUNLLFFBQVEsR0FBQ04sR0FBR00sWUFBVUw7SUFBQztJQUFDLGFBQWFNLEtBQUtQLENBQUMsRUFBQztRQUFDLE1BQU1RLElBQUUsSUFBSUosRUFBRUo7UUFBRyxPQUFPLE1BQU1RLEVBQUVELElBQUksSUFBR0M7SUFBQztJQUFDLE1BQU1ELE9BQU07UUFBQyxNQUFNLElBQUksQ0FBQ0UsVUFBVTtJQUFFO0lBQUNDLE9BQU07UUFBQ0MsY0FBYyxJQUFJLENBQUNDLFdBQVc7SUFBQztJQUFDQyxHQUFHYixDQUFDLEVBQUNRLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ0gsTUFBTSxDQUFDUSxFQUFFLENBQUNiLEdBQUVRO0lBQUU7SUFBQ00sS0FBS2QsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1MsSUFBSSxDQUFDZCxHQUFFUTtJQUFFO0lBQUNPLElBQUlmLENBQUMsRUFBQ1EsQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDSCxNQUFNLENBQUNVLEdBQUcsQ0FBQ2YsR0FBRVE7SUFBRTtJQUFDUSxlQUFlaEIsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1csY0FBYyxDQUFDaEIsR0FBRVE7SUFBRTtJQUFDLE1BQU1DLGFBQVk7UUFBQyxJQUFJLENBQUNHLFdBQVcsR0FBQ0ssWUFBWSxJQUFJLElBQUksQ0FBQ2QsS0FBSyxJQUFHUixrRUFBQ0EsQ0FBQyxJQUFJLENBQUNXLFFBQVE7SUFBRTtJQUFDSCxRQUFPO1FBQUMsSUFBSSxDQUFDRSxNQUFNLENBQUNhLElBQUksQ0FBQ2hCLEVBQUVDLEtBQUs7SUFBQztBQUFDO0FBQXNGLENBQ3h6QixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvaW5kZXguZXMuanM/ZDMwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7RXZlbnRFbWl0dGVyIGFzIGF9ZnJvbVwiZXZlbnRzXCI7aW1wb3J0e0ZJVkVfU0VDT05EUyBhcyBvLHRvTWlsaXNlY29uZHMgYXMgbH1mcm9tXCJAd2FsbGV0Y29ubmVjdC90aW1lXCI7aW1wb3J0e0lFdmVudHMgYXMgdn1mcm9tXCJAd2FsbGV0Y29ubmVjdC9ldmVudHNcIjtjbGFzcyBuIGV4dGVuZHMgdntjb25zdHJ1Y3RvcihlKXtzdXBlcigpfX1jb25zdCBzPW8scj17cHVsc2U6XCJoZWFydGJlYXRfcHVsc2VcIn07Y2xhc3MgaSBleHRlbmRzIG57Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksdGhpcy5ldmVudHM9bmV3IGEsdGhpcy5pbnRlcnZhbD1zLHRoaXMuaW50ZXJ2YWw9ZT8uaW50ZXJ2YWx8fHN9c3RhdGljIGFzeW5jIGluaXQoZSl7Y29uc3QgdD1uZXcgaShlKTtyZXR1cm4gYXdhaXQgdC5pbml0KCksdH1hc3luYyBpbml0KCl7YXdhaXQgdGhpcy5pbml0aWFsaXplKCl9c3RvcCgpe2NsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbFJlZil9b24oZSx0KXt0aGlzLmV2ZW50cy5vbihlLHQpfW9uY2UoZSx0KXt0aGlzLmV2ZW50cy5vbmNlKGUsdCl9b2ZmKGUsdCl7dGhpcy5ldmVudHMub2ZmKGUsdCl9cmVtb3ZlTGlzdGVuZXIoZSx0KXt0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcihlLHQpfWFzeW5jIGluaXRpYWxpemUoKXt0aGlzLmludGVydmFsUmVmPXNldEludGVydmFsKCgpPT50aGlzLnB1bHNlKCksbCh0aGlzLmludGVydmFsKSl9cHVsc2UoKXt0aGlzLmV2ZW50cy5lbWl0KHIucHVsc2UpfX1leHBvcnR7ciBhcyBIRUFSVEJFQVRfRVZFTlRTLHMgYXMgSEVBUlRCRUFUX0lOVEVSVkFMLGkgYXMgSGVhcnRCZWF0LG4gYXMgSUhlYXJ0QmVhdH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJhIiwiRklWRV9TRUNPTkRTIiwibyIsInRvTWlsaXNlY29uZHMiLCJsIiwiSUV2ZW50cyIsInYiLCJuIiwiY29uc3RydWN0b3IiLCJlIiwicyIsInIiLCJwdWxzZSIsImkiLCJldmVudHMiLCJpbnRlcnZhbCIsImluaXQiLCJ0IiwiaW5pdGlhbGl6ZSIsInN0b3AiLCJjbGVhckludGVydmFsIiwiaW50ZXJ2YWxSZWYiLCJvbiIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInNldEludGVydmFsIiwiZW1pdCIsIkhFQVJUQkVBVF9FVkVOVFMiLCJIRUFSVEJFQVRfSU5URVJWQUwiLCJIZWFydEJlYXQiLCJJSGVhcnRCZWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* binding */ o),\n/* harmony export */   \"default\": () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\nclass o extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider {\n    constructor(t){\n        super(t), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.hasRegisteredEventListeners = !1, this.connection = this.setConnection(t), this.connection.connected && this.registerEventListeners();\n    }\n    async connect(t = this.connection) {\n        await this.open(t);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    async request(t, e) {\n        return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(t.method, t.params || [], t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.getBigIntRpcId)().toString()), e);\n    }\n    async requestStrict(t, e) {\n        return new Promise(async (i, s)=>{\n            if (!this.connection.connected) try {\n                await this.open();\n            } catch (n) {\n                s(n);\n            }\n            this.events.on(`${t.id}`, (n)=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(n) ? s(n.error) : i(n.result);\n            });\n            try {\n                await this.connection.send(t, e);\n            } catch (n) {\n                s(n);\n            }\n        });\n    }\n    setConnection(t = this.connection) {\n        return t;\n    }\n    onPayload(t) {\n        this.events.emit(\"payload\", t), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(t) ? this.events.emit(`${t.id}`, t) : this.events.emit(\"message\", {\n            type: t.method,\n            data: t.params\n        });\n    }\n    onClose(t) {\n        t && t.code === 3e3 && this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${t.code} ${t.reason ? `(${t.reason})` : \"\"}`)), this.events.emit(\"disconnect\");\n    }\n    async open(t = this.connection) {\n        this.connection === t && this.connection.connected || (this.connection.connected && this.close(), typeof t == \"string\" && (await this.connection.open(t), t = this.connection), this.connection = this.setConnection(t), await this.connection.open(), this.registerEventListeners(), this.events.emit(\"connect\"));\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        this.hasRegisteredEventListeners || (this.connection.on(\"payload\", (t)=>this.onPayload(t)), this.connection.on(\"close\", (t)=>this.onClose(t)), this.connection.on(\"error\", (t)=>this.events.emit(\"error\", t)), this.connection.on(\"register_error\", (t)=>this.onClose()), this.hasRegisteredEventListeners = !0);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlci9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNDO0FBQXlKO0FBQUEsTUFBTVksVUFBVVQsMEVBQUNBO0lBQUNVLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNDLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLDJCQUEyQixHQUFDLENBQUMsR0FBRSxJQUFJLENBQUNDLFVBQVUsR0FBQyxJQUFJLENBQUNDLGFBQWEsQ0FBQ0osSUFBRyxJQUFJLENBQUNHLFVBQVUsQ0FBQ0UsU0FBUyxJQUFFLElBQUksQ0FBQ0Msc0JBQXNCO0lBQUU7SUFBQyxNQUFNQyxRQUFRUCxJQUFFLElBQUksQ0FBQ0csVUFBVSxFQUFDO1FBQUMsTUFBTSxJQUFJLENBQUNLLElBQUksQ0FBQ1I7SUFBRTtJQUFDLE1BQU1TLGFBQVk7UUFBQyxNQUFNLElBQUksQ0FBQ0MsS0FBSztJQUFFO0lBQUNDLEdBQUdYLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNVLEVBQUUsQ0FBQ1gsR0FBRVk7SUFBRTtJQUFDQyxLQUFLYixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ1gsTUFBTSxDQUFDWSxJQUFJLENBQUNiLEdBQUVZO0lBQUU7SUFBQ0UsSUFBSWQsQ0FBQyxFQUFDWSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNYLE1BQU0sQ0FBQ2EsR0FBRyxDQUFDZCxHQUFFWTtJQUFFO0lBQUNHLGVBQWVmLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNjLGNBQWMsQ0FBQ2YsR0FBRVk7SUFBRTtJQUFDLE1BQU1JLFFBQVFoQixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLE9BQU8sSUFBSSxDQUFDSyxhQUFhLENBQUMxQixrRkFBQ0Es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T0FBTyxDQUFDakMsS0FBSSxJQUFJLENBQUNHLFVBQVUsQ0FBQ1EsRUFBRSxDQUFDLFNBQVFYLENBQUFBLElBQUcsSUFBSSxDQUFDQyxNQUFNLENBQUM2QixJQUFJLENBQUMsU0FBUTlCLEtBQUksSUFBSSxDQUFDRyxVQUFVLENBQUNRLEVBQUUsQ0FBQyxrQkFBaUJYLENBQUFBLElBQUcsSUFBSSxDQUFDaUMsT0FBTyxLQUFJLElBQUksQ0FBQy9CLDJCQUEyQixHQUFDLENBQUM7SUFBRTtBQUFDO0FBQTJDLENBQ3IrRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlci9kaXN0L2luZGV4LmVzLmpzPzdlZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e0V2ZW50RW1pdHRlciBhcyBjfWZyb21cImV2ZW50c1wiO2ltcG9ydHtJSnNvblJwY1Byb3ZpZGVyIGFzIHIsZm9ybWF0SnNvblJwY1JlcXVlc3QgYXMgaCxnZXRCaWdJbnRScGNJZCBhcyBhLGlzSnNvblJwY0Vycm9yIGFzIGQsaXNKc29uUnBjUmVzcG9uc2UgYXMgdn1mcm9tXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzXCI7Y2xhc3MgbyBleHRlbmRzIHJ7Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5ldmVudHM9bmV3IGMsdGhpcy5oYXNSZWdpc3RlcmVkRXZlbnRMaXN0ZW5lcnM9ITEsdGhpcy5jb25uZWN0aW9uPXRoaXMuc2V0Q29ubmVjdGlvbih0KSx0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkJiZ0aGlzLnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKX1hc3luYyBjb25uZWN0KHQ9dGhpcy5jb25uZWN0aW9uKXthd2FpdCB0aGlzLm9wZW4odCl9YXN5bmMgZGlzY29ubmVjdCgpe2F3YWl0IHRoaXMuY2xvc2UoKX1vbih0LGUpe3RoaXMuZXZlbnRzLm9uKHQsZSl9b25jZSh0LGUpe3RoaXMuZXZlbnRzLm9uY2UodCxlKX1vZmYodCxlKXt0aGlzLmV2ZW50cy5vZmYodCxlKX1yZW1vdmVMaXN0ZW5lcih0LGUpe3RoaXMuZXZlbnRzLnJlbW92ZUxpc3RlbmVyKHQsZSl9YXN5bmMgcmVxdWVzdCh0LGUpe3JldHVybiB0aGlzLnJlcXVlc3RTdHJpY3QoaCh0Lm1ldGhvZCx0LnBhcmFtc3x8W10sdC5pZHx8YSgpLnRvU3RyaW5nKCkpLGUpfWFzeW5jIHJlcXVlc3RTdHJpY3QodCxlKXtyZXR1cm4gbmV3IFByb21pc2UoYXN5bmMoaSxzKT0+e2lmKCF0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkKXRyeXthd2FpdCB0aGlzLm9wZW4oKX1jYXRjaChuKXtzKG4pfXRoaXMuZXZlbnRzLm9uKGAke3QuaWR9YCxuPT57ZChuKT9zKG4uZXJyb3IpOmkobi5yZXN1bHQpfSk7dHJ5e2F3YWl0IHRoaXMuY29ubmVjdGlvbi5zZW5kKHQsZSl9Y2F0Y2gobil7cyhuKX19KX1zZXRDb25uZWN0aW9uKHQ9dGhpcy5jb25uZWN0aW9uKXtyZXR1cm4gdH1vblBheWxvYWQodCl7dGhpcy5ldmVudHMuZW1pdChcInBheWxvYWRcIix0KSx2KHQpP3RoaXMuZXZlbnRzLmVtaXQoYCR7dC5pZH1gLHQpOnRoaXMuZXZlbnRzLmVtaXQoXCJtZXNzYWdlXCIse3R5cGU6dC5tZXRob2QsZGF0YTp0LnBhcmFtc30pfW9uQ2xvc2UodCl7dCYmdC5jb2RlPT09M2UzJiZ0aGlzLmV2ZW50cy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoYFdlYlNvY2tldCBjb25uZWN0aW9uIGNsb3NlZCBhYm5vcm1hbGx5IHdpdGggY29kZTogJHt0LmNvZGV9ICR7dC5yZWFzb24/YCgke3QucmVhc29ufSlgOlwiXCJ9YCkpLHRoaXMuZXZlbnRzLmVtaXQoXCJkaXNjb25uZWN0XCIpfWFzeW5jIG9wZW4odD10aGlzLmNvbm5lY3Rpb24pe3RoaXMuY29ubmVjdGlvbj09PXQmJnRoaXMuY29ubmVjdGlvbi5jb25uZWN0ZWR8fCh0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkJiZ0aGlzLmNsb3NlKCksdHlwZW9mIHQ9PVwic3RyaW5nXCImJihhd2FpdCB0aGlzLmNvbm5lY3Rpb24ub3Blbih0KSx0PXRoaXMuY29ubmVjdGlvbiksdGhpcy5jb25uZWN0aW9uPXRoaXMuc2V0Q29ubmVjdGlvbih0KSxhd2FpdCB0aGlzLmNvbm5lY3Rpb24ub3BlbigpLHRoaXMucmVnaXN0ZXJFdmVudExpc3RlbmVycygpLHRoaXMuZXZlbnRzLmVtaXQoXCJjb25uZWN0XCIpKX1hc3luYyBjbG9zZSgpe2F3YWl0IHRoaXMuY29ubmVjdGlvbi5jbG9zZSgpfXJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKXt0aGlzLmhhc1JlZ2lzdGVyZWRFdmVudExpc3RlbmVyc3x8KHRoaXMuY29ubmVjdGlvbi5vbihcInBheWxvYWRcIix0PT50aGlzLm9uUGF5bG9hZCh0KSksdGhpcy5jb25uZWN0aW9uLm9uKFwiY2xvc2VcIix0PT50aGlzLm9uQ2xvc2UodCkpLHRoaXMuY29ubmVjdGlvbi5vbihcImVycm9yXCIsdD0+dGhpcy5ldmVudHMuZW1pdChcImVycm9yXCIsdCkpLHRoaXMuY29ubmVjdGlvbi5vbihcInJlZ2lzdGVyX2Vycm9yXCIsdD0+dGhpcy5vbkNsb3NlKCkpLHRoaXMuaGFzUmVnaXN0ZXJlZEV2ZW50TGlzdGVuZXJzPSEwKX19ZXhwb3J0e28gYXMgSnNvblJwY1Byb3ZpZGVyLG8gYXMgZGVmYXVsdH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJjIiwiSUpzb25ScGNQcm92aWRlciIsInIiLCJmb3JtYXRKc29uUnBjUmVxdWVzdCIsImgiLCJnZXRCaWdJbnRScGNJZCIsImEiLCJpc0pzb25ScGNFcnJvciIsImQiLCJpc0pzb25ScGNSZXNwb25zZSIsInYiLCJvIiwiY29uc3RydWN0b3IiLCJ0IiwiZXZlbnRzIiwiaGFzUmVnaXN0ZXJlZEV2ZW50TGlzdGVuZXJzIiwiY29ubmVjdGlvbiIsInNldENvbm5lY3Rpb24iLCJjb25uZWN0ZWQiLCJyZWdpc3RlckV2ZW50TGlzdGVuZXJzIiwiY29ubmVjdCIsIm9wZW4iLCJkaXNjb25uZWN0IiwiY2xvc2UiLCJvbiIsImUiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZXF1ZXN0IiwicmVxdWVzdFN0cmljdCIsIm1ldGhvZCIsInBhcmFtcyIsImlkIiwidG9TdHJpbmciLCJQcm9taXNlIiwiaSIsInMiLCJuIiwiZXJyb3IiLCJyZXN1bHQiLCJzZW5kIiwib25QYXlsb2FkIiwiZW1pdCIsInR5cGUiLCJkYXRhIiwib25DbG9zZSIsImNvZGUiLCJFcnJvciIsInJlYXNvbiIsIkpzb25ScGNQcm92aWRlciIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* binding */ n),\n/* harmony export */   IEvents: () => (/* binding */ e),\n/* harmony export */   IJsonRpcConnection: () => (/* binding */ o),\n/* harmony export */   IJsonRpcProvider: () => (/* binding */ r)\n/* harmony export */ });\nclass e {\n}\nclass o extends e {\n    constructor(c){\n        super();\n    }\n}\nclass n extends e {\n    constructor(){\n        super();\n    }\n}\nclass r extends n {\n    constructor(c){\n        super();\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQTtBQUFFO0FBQUMsTUFBTUMsVUFBVUQ7SUFBRUUsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNQyxVQUFVSjtJQUFFRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNRyxVQUFVRDtJQUFFRixZQUFZQyxDQUFDLENBQUM7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUE4RixDQUNuTyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2luZGV4LmVzLmpzP2IxMjkiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgZXt9Y2xhc3MgbyBleHRlbmRzIGV7Y29uc3RydWN0b3IoYyl7c3VwZXIoKX19Y2xhc3MgbiBleHRlbmRzIGV7Y29uc3RydWN0b3IoKXtzdXBlcigpfX1jbGFzcyByIGV4dGVuZHMgbntjb25zdHJ1Y3RvcihjKXtzdXBlcigpfX1leHBvcnR7biBhcyBJQmFzZUpzb25ScGNQcm92aWRlcixlIGFzIElFdmVudHMsbyBhcyBJSnNvblJwY0Nvbm5lY3Rpb24sciBhcyBJSnNvblJwY1Byb3ZpZGVyfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbImUiLCJvIiwiY29uc3RydWN0b3IiLCJjIiwibiIsInIiLCJJQmFzZUpzb25ScGNQcm92aWRlciIsIklFdmVudHMiLCJJSnNvblJwY0Nvbm5lY3Rpb24iLCJJSnNvblJwY1Byb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* binding */ DEFAULT_ERROR),\n/* harmony export */   INTERNAL_ERROR: () => (/* binding */ INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* binding */ INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* binding */ INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* binding */ METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* binding */ PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* binding */ RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* binding */ SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* binding */ SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* binding */ STANDARD_ERROR_MAP)\n/* harmony export */ });\nconst PARSE_ERROR = \"PARSE_ERROR\";\nconst INVALID_REQUEST = \"INVALID_REQUEST\";\nconst METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nconst INVALID_PARAMS = \"INVALID_PARAMS\";\nconst INTERNAL_ERROR = \"INTERNAL_ERROR\";\nconst SERVER_ERROR = \"SERVER_ERROR\";\nconst RESERVED_ERROR_CODES = [\n    -32700,\n    -32600,\n    -32601,\n    -32602,\n    -32603\n];\nconst SERVER_ERROR_CODE_RANGE = [\n    -32000,\n    -32099\n];\nconst STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: {\n        code: -32700,\n        message: \"Parse error\"\n    },\n    [INVALID_REQUEST]: {\n        code: -32600,\n        message: \"Invalid Request\"\n    },\n    [METHOD_NOT_FOUND]: {\n        code: -32601,\n        message: \"Method not found\"\n    },\n    [INVALID_PARAMS]: {\n        code: -32602,\n        message: \"Invalid params\"\n    },\n    [INTERNAL_ERROR]: {\n        code: -32603,\n        message: \"Internal error\"\n    },\n    [SERVER_ERROR]: {\n        code: -32000,\n        message: \"Server error\"\n    }\n};\nconst DEFAULT_ERROR = SERVER_ERROR; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLGNBQWMsY0FBYztBQUNsQyxNQUFNQyxrQkFBa0Isa0JBQWtCO0FBQzFDLE1BQU1DLG1CQUFtQixtQkFBbUI7QUFDNUMsTUFBTUMsaUJBQWlCLGlCQUFpQjtBQUN4QyxNQUFNQyxpQkFBaUIsaUJBQWlCO0FBQ3hDLE1BQU1DLGVBQWUsZUFBZTtBQUNwQyxNQUFNQyx1QkFBdUI7SUFBQyxDQUFDO0lBQU8sQ0FBQztJQUFPLENBQUM7SUFBTyxDQUFDO0lBQU8sQ0FBQztDQUFNLENBQUM7QUFDdEUsTUFBTUMsMEJBQTBCO0lBQUMsQ0FBQztJQUFPLENBQUM7Q0FBTSxDQUFDO0FBQ2pELE1BQU1DLHFCQUFxQjtJQUM5QixDQUFDUixZQUFZLEVBQUU7UUFBRVMsTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBYztJQUN0RCxDQUFDVCxnQkFBZ0IsRUFBRTtRQUFFUSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFrQjtJQUM5RCxDQUFDUixpQkFBaUIsRUFBRTtRQUFFTyxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFtQjtJQUNoRSxDQUFDUCxlQUFlLEVBQUU7UUFBRU0sTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBaUI7SUFDNUQsQ0FBQ04sZUFBZSxFQUFFO1FBQUVLLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWlCO0lBQzVELENBQUNMLGFBQWEsRUFBRTtRQUFFSSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFlO0FBQzVELEVBQUU7QUFDSyxNQUFNQyxnQkFBZ0JOLGFBQWEsQ0FDMUMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vY29uc3RhbnRzLmpzPzljMDUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBBUlNFX0VSUk9SID0gXCJQQVJTRV9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUkVRVUVTVCA9IFwiSU5WQUxJRF9SRVFVRVNUXCI7XG5leHBvcnQgY29uc3QgTUVUSE9EX05PVF9GT1VORCA9IFwiTUVUSE9EX05PVF9GT1VORFwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUEFSQU1TID0gXCJJTlZBTElEX1BBUkFNU1wiO1xuZXhwb3J0IGNvbnN0IElOVEVSTkFMX0VSUk9SID0gXCJJTlRFUk5BTF9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IFNFUlZFUl9FUlJPUiA9IFwiU0VSVkVSX0VSUk9SXCI7XG5leHBvcnQgY29uc3QgUkVTRVJWRURfRVJST1JfQ09ERVMgPSBbLTMyNzAwLCAtMzI2MDAsIC0zMjYwMSwgLTMyNjAyLCAtMzI2MDNdO1xuZXhwb3J0IGNvbnN0IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFID0gWy0zMjAwMCwgLTMyMDk5XTtcbmV4cG9ydCBjb25zdCBTVEFOREFSRF9FUlJPUl9NQVAgPSB7XG4gICAgW1BBUlNFX0VSUk9SXTogeyBjb2RlOiAtMzI3MDAsIG1lc3NhZ2U6IFwiUGFyc2UgZXJyb3JcIiB9LFxuICAgIFtJTlZBTElEX1JFUVVFU1RdOiB7IGNvZGU6IC0zMjYwMCwgbWVzc2FnZTogXCJJbnZhbGlkIFJlcXVlc3RcIiB9LFxuICAgIFtNRVRIT0RfTk9UX0ZPVU5EXTogeyBjb2RlOiAtMzI2MDEsIG1lc3NhZ2U6IFwiTWV0aG9kIG5vdCBmb3VuZFwiIH0sXG4gICAgW0lOVkFMSURfUEFSQU1TXTogeyBjb2RlOiAtMzI2MDIsIG1lc3NhZ2U6IFwiSW52YWxpZCBwYXJhbXNcIiB9LFxuICAgIFtJTlRFUk5BTF9FUlJPUl06IHsgY29kZTogLTMyNjAzLCBtZXNzYWdlOiBcIkludGVybmFsIGVycm9yXCIgfSxcbiAgICBbU0VSVkVSX0VSUk9SXTogeyBjb2RlOiAtMzIwMDAsIG1lc3NhZ2U6IFwiU2VydmVyIGVycm9yXCIgfSxcbn07XG5leHBvcnQgY29uc3QgREVGQVVMVF9FUlJPUiA9IFNFUlZFUl9FUlJPUjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiUEFSU0VfRVJST1IiLCJJTlZBTElEX1JFUVVFU1QiLCJNRVRIT0RfTk9UX0ZPVU5EIiwiSU5WQUxJRF9QQVJBTVMiLCJJTlRFUk5BTF9FUlJPUiIsIlNFUlZFUl9FUlJPUiIsIlJFU0VSVkVEX0VSUk9SX0NPREVTIiwiU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UiLCJTVEFOREFSRF9FUlJPUl9NQVAiLCJjb2RlIiwibWVzc2FnZSIsIkRFRkFVTFRfRVJST1IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeJs: () => (/* binding */ isNodeJs)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/environment */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"isNodeJs\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\nconst isNodeJs = _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__.isNode;\n //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQzdDLE1BQU1DLFdBQVdELDhEQUFNQSxDQUFDO0FBQ1ksQ0FDM0MsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZW52LmpzPzY4NGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOb2RlIH0gZnJvbSBcIkB3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50XCI7XG5leHBvcnQgY29uc3QgaXNOb2RlSnMgPSBpc05vZGU7XG5leHBvcnQgKiBmcm9tIFwiQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnRcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXAiXSwibmFtZXMiOlsiaXNOb2RlIiwiaXNOb2RlSnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getError: () => (/* binding */ getError),\n/* harmony export */   getErrorByCode: () => (/* binding */ getErrorByCode),\n/* harmony export */   isReservedErrorCode: () => (/* binding */ isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* binding */ isServerErrorCode),\n/* harmony export */   isValidErrorCode: () => (/* binding */ isValidErrorCode),\n/* harmony export */   parseConnectionError: () => (/* binding */ parseConnectionError),\n/* harmony export */   validateJsonRpcError: () => (/* binding */ validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\nfunction isServerErrorCode(code) {\n    return code <= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[0] && code >= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[1];\n}\nfunction isReservedErrorCode(code) {\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES.includes(code);\n}\nfunction isValidErrorCode(code) {\n    return typeof code === \"number\";\n}\nfunction getError(type) {\n    if (!Object.keys(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).includes(type)) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).find((e)=>e.code === code);\n    if (!match) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction validateJsonRpcError(response) {\n    if (typeof response.error.code === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing code for JSON-RPC error\"\n        };\n    }\n    if (typeof response.error.message === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing message for JSON-RPC error\"\n        };\n    }\n    if (!isValidErrorCode(response.error.code)) {\n        return {\n            valid: false,\n            error: `Invalid error code type for JSON-RPC: ${response.error.code}`\n        };\n    }\n    if (isReservedErrorCode(response.error.code)) {\n        const error = getErrorByCode(response.error.code);\n        if (error.message !== _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR].message && response.error.message === error.message) {\n            return {\n                valid: false,\n                error: `Invalid error code message for JSON-RPC: ${response.error.code}`\n            };\n        }\n    }\n    return {\n        valid: true\n    };\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e;\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnSDtBQUN6RyxTQUFTSSxrQkFBa0JDLElBQUk7SUFDbEMsT0FBT0EsUUFBUUwsK0RBQXVCLENBQUMsRUFBRSxJQUFJSyxRQUFRTCwrREFBdUIsQ0FBQyxFQUFFO0FBQ25GO0FBQ08sU0FBU00sb0JBQW9CRCxJQUFJO0lBQ3BDLE9BQU9KLDREQUFvQkEsQ0FBQ00sUUFBUSxDQUFDRjtBQUN6QztBQUNPLFNBQVNHLGlCQUFpQkgsSUFBSTtJQUNqQyxPQUFPLE9BQU9BLFNBQVM7QUFDM0I7QUFDTyxTQUFTSSxTQUFTQyxJQUFJO0lBQ3pCLElBQUksQ0FBQ0MsT0FBT0MsSUFBSSxDQUFDViwwREFBa0JBLEVBQUVLLFFBQVEsQ0FBQ0csT0FBTztRQUNqRCxPQUFPUiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPRCwwREFBa0IsQ0FBQ1EsS0FBSztBQUNuQztBQUNPLFNBQVNHLGVBQWVSLElBQUk7SUFDL0IsTUFBTVMsUUFBUUgsT0FBT0ksTUFBTSxDQUFDYiwwREFBa0JBLEVBQUVjLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRVosSUFBSSxLQUFLQTtJQUNyRSxJQUFJLENBQUNTLE9BQU87UUFDUixPQUFPWiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPVztBQUNYO0FBQ08sU0FBU0kscUJBQXFCQyxRQUFRO0lBQ3pDLElBQUksT0FBT0EsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEtBQUssYUFBYTtRQUM1QyxPQUFPO1lBQUVnQixPQUFPO1lBQU9ELE9BQU87UUFBa0M7SUFDcEU7SUFDQSxJQUFJLE9BQU9ELFNBQVNDLEtBQUssQ0FBQ0UsT0FBTyxLQUFLLGFBQWE7UUFDL0MsT0FBTztZQUFFRCxPQUFPO1lBQU9ELE9BQU87UUFBcUM7SUFDdkU7SUFDQSxJQUFJLENBQUNaLGlCQUFpQlcsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDeEMsT0FBTztZQUNIZ0IsT0FBTztZQUNQRCxPQUFPLENBQUMsc0NBQXNDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7UUFDekU7SUFDSjtJQUNBLElBQUlDLG9CQUFvQmEsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDMUMsTUFBTWUsUUFBUVAsZUFBZU0sU0FBU0MsS0FBSyxDQUFDZixJQUFJO1FBQ2hELElBQUllLE1BQU1FLE9BQU8sS0FBS3BCLDBEQUFrQixDQUFDQyxxREFBYUEsQ0FBQyxDQUFDbUIsT0FBTyxJQUMzREgsU0FBU0MsS0FBSyxDQUFDRSxPQUFPLEtBQUtGLE1BQU1FLE9BQU8sRUFBRTtZQUMxQyxPQUFPO2dCQUNIRCxPQUFPO2dCQUNQRCxPQUFPLENBQUMseUNBQXlDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7WUFDNUU7UUFDSjtJQUNKO0lBQ0EsT0FBTztRQUFFZ0IsT0FBTztJQUFLO0FBQ3pCO0FBQ08sU0FBU0UscUJBQXFCTixDQUFDLEVBQUVPLEdBQUcsRUFBRWQsSUFBSTtJQUM3QyxPQUFPTyxFQUFFSyxPQUFPLENBQUNmLFFBQVEsQ0FBQyw0QkFBNEJVLEVBQUVLLE9BQU8sQ0FBQ2YsUUFBUSxDQUFDLDBCQUNuRSxJQUFJa0IsTUFBTSxDQUFDLFlBQVksRUFBRWYsS0FBSyxZQUFZLEVBQUVjLElBQUksQ0FBQyxJQUNqRFA7QUFDVixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2Vycm9yLmpzPzU5NTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UsIFJFU0VSVkVEX0VSUk9SX0NPREVTLCBTVEFOREFSRF9FUlJPUl9NQVAsIERFRkFVTFRfRVJST1IsIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNTZXJ2ZXJFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiBjb2RlIDw9IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFWzBdICYmIGNvZGUgPj0gU0VSVkVSX0VSUk9SX0NPREVfUkFOR0VbMV07XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZXNlcnZlZEVycm9yQ29kZShjb2RlKSB7XG4gICAgcmV0dXJuIFJFU0VSVkVEX0VSUk9SX0NPREVTLmluY2x1ZGVzKGNvZGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiB0eXBlb2YgY29kZSA9PT0gXCJudW1iZXJcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFcnJvcih0eXBlKSB7XG4gICAgaWYgKCFPYmplY3Qua2V5cyhTVEFOREFSRF9FUlJPUl9NQVApLmluY2x1ZGVzKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbREVGQVVMVF9FUlJPUl07XG4gICAgfVxuICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbdHlwZV07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RXJyb3JCeUNvZGUoY29kZSkge1xuICAgIGNvbnN0IG1hdGNoID0gT2JqZWN0LnZhbHVlcyhTVEFOREFSRF9FUlJPUl9NQVApLmZpbmQoZSA9PiBlLmNvZGUgPT09IGNvZGUpO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIFNUQU5EQVJEX0VSUk9SX01BUFtERUZBVUxUX0VSUk9SXTtcbiAgICB9XG4gICAgcmV0dXJuIG1hdGNoO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlSnNvblJwY0Vycm9yKHJlc3BvbnNlKSB7XG4gICAgaWYgKHR5cGVvZiByZXNwb25zZS5lcnJvci5jb2RlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiB7IHZhbGlkOiBmYWxzZSwgZXJyb3I6IFwiTWlzc2luZyBjb2RlIGZvciBKU09OLVJQQyBlcnJvclwiIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVzcG9uc2UuZXJyb3IubWVzc2FnZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIGVycm9yOiBcIk1pc3NpbmcgbWVzc2FnZSBmb3IgSlNPTi1SUEMgZXJyb3JcIiB9O1xuICAgIH1cbiAgICBpZiAoIWlzVmFsaWRFcnJvckNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBgSW52YWxpZCBlcnJvciBjb2RlIHR5cGUgZm9yIEpTT04tUlBDOiAke3Jlc3BvbnNlLmVycm9yLmNvZGV9YCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzUmVzZXJ2ZWRFcnJvckNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSkpIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBnZXRFcnJvckJ5Q29kZShyZXNwb25zZS5lcnJvci5jb2RlKTtcbiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgIT09IFNUQU5EQVJEX0VSUk9SX01BUFtERUZBVUxUX0VSUk9SXS5tZXNzYWdlICYmXG4gICAgICAgICAgICByZXNwb25zZS5lcnJvci5tZXNzYWdlID09PSBlcnJvci5tZXNzYWdlKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogYEludmFsaWQgZXJyb3IgY29kZSBtZXNzYWdlIGZvciBKU09OLVJQQzogJHtyZXNwb25zZS5lcnJvci5jb2RlfWAsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IHZhbGlkOiB0cnVlIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb25uZWN0aW9uRXJyb3IoZSwgdXJsLCB0eXBlKSB7XG4gICAgcmV0dXJuIGUubWVzc2FnZS5pbmNsdWRlcyhcImdldGFkZHJpbmZvIEVOT1RGT1VORFwiKSB8fCBlLm1lc3NhZ2UuaW5jbHVkZXMoXCJjb25uZWN0IEVDT05OUkVGVVNFRFwiKVxuICAgICAgICA/IG5ldyBFcnJvcihgVW5hdmFpbGFibGUgJHt0eXBlfSBSUEMgdXJsIGF0ICR7dXJsfWApXG4gICAgICAgIDogZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJTRVJWRVJfRVJST1JfQ09ERV9SQU5HRSIsIlJFU0VSVkVEX0VSUk9SX0NPREVTIiwiU1RBTkRBUkRfRVJST1JfTUFQIiwiREVGQVVMVF9FUlJPUiIsImlzU2VydmVyRXJyb3JDb2RlIiwiY29kZSIsImlzUmVzZXJ2ZWRFcnJvckNvZGUiLCJpbmNsdWRlcyIsImlzVmFsaWRFcnJvckNvZGUiLCJnZXRFcnJvciIsInR5cGUiLCJPYmplY3QiLCJrZXlzIiwiZ2V0RXJyb3JCeUNvZGUiLCJtYXRjaCIsInZhbHVlcyIsImZpbmQiLCJlIiwidmFsaWRhdGVKc29uUnBjRXJyb3IiLCJyZXNwb25zZSIsImVycm9yIiwidmFsaWQiLCJtZXNzYWdlIiwicGFyc2VDb25uZWN0aW9uRXJyb3IiLCJ1cmwiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatErrorMessage: () => (/* binding */ formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* binding */ formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* binding */ formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* binding */ formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* binding */ getBigIntRpcId),\n/* harmony export */   payloadId: () => (/* binding */ payloadId)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\n\nfunction payloadId(entropy = 3) {\n    const date = Date.now() * Math.pow(10, entropy);\n    const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n    return date + extra;\n}\nfunction getBigIntRpcId(entropy = 6) {\n    return BigInt(payloadId(entropy));\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data)\n    };\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.SERVER_ERROR)), {\n            message: error\n        });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if ((0,_error__WEBPACK_IMPORTED_MODULE_0__.isReservedErrorCode)(error.code)) {\n        error = (0,_error__WEBPACK_IMPORTED_MODULE_0__.getErrorByCode)(error.code);\n    }\n    return error;\n} //# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9mb3JtYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0U7QUFDYjtBQUNwRCxTQUFTSyxVQUFVQyxVQUFVLENBQUM7SUFDakMsTUFBTUMsT0FBT0MsS0FBS0MsR0FBRyxLQUFLQyxLQUFLQyxHQUFHLENBQUMsSUFBSUw7SUFDdkMsTUFBTU0sUUFBUUYsS0FBS0csS0FBSyxDQUFDSCxLQUFLSSxNQUFNLEtBQUtKLEtBQUtDLEdBQUcsQ0FBQyxJQUFJTDtJQUN0RCxPQUFPQyxPQUFPSztBQUNsQjtBQUNPLFNBQVNHLGVBQWVULFVBQVUsQ0FBQztJQUN0QyxPQUFPVSxPQUFPWCxVQUFVQztBQUM1QjtBQUNPLFNBQVNXLHFCQUFxQkMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLEVBQUU7SUFDbkQsT0FBTztRQUNIQSxJQUFJQSxNQUFNZjtRQUNWZ0IsU0FBUztRQUNUSDtRQUNBQztJQUNKO0FBQ0o7QUFDTyxTQUFTRyxvQkFBb0JGLEVBQUUsRUFBRUcsTUFBTTtJQUMxQyxPQUFPO1FBQ0hIO1FBQ0FDLFNBQVM7UUFDVEU7SUFDSjtBQUNKO0FBQ08sU0FBU0MsbUJBQW1CSixFQUFFLEVBQUVLLEtBQUssRUFBRUMsSUFBSTtJQUM5QyxPQUFPO1FBQ0hOO1FBQ0FDLFNBQVM7UUFDVEksT0FBT0UsbUJBQW1CRixPQUFPQztJQUNyQztBQUNKO0FBQ08sU0FBU0MsbUJBQW1CRixLQUFLLEVBQUVDLElBQUk7SUFDMUMsSUFBSSxPQUFPRCxVQUFVLGFBQWE7UUFDOUIsT0FBT3pCLGdEQUFRQSxDQUFDRyxzREFBY0E7SUFDbEM7SUFDQSxJQUFJLE9BQU9zQixVQUFVLFVBQVU7UUFDM0JBLFFBQVFHLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBRzdCLGdEQUFRQSxDQUFDSSxvREFBWUEsSUFBSTtZQUFFMEIsU0FBU0w7UUFBTTtJQUN0RjtJQUNBLElBQUksT0FBT0MsU0FBUyxhQUFhO1FBQzdCRCxNQUFNQyxJQUFJLEdBQUdBO0lBQ2pCO0lBQ0EsSUFBSXhCLDJEQUFtQkEsQ0FBQ3VCLE1BQU1NLElBQUksR0FBRztRQUNqQ04sUUFBUXhCLHNEQUFjQSxDQUFDd0IsTUFBTU0sSUFBSTtJQUNyQztJQUNBLE9BQU9OO0FBQ1gsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9mb3JtYXQuanM/MjUwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFcnJvciwgZ2V0RXJyb3JCeUNvZGUsIGlzUmVzZXJ2ZWRFcnJvckNvZGUgfSBmcm9tIFwiLi9lcnJvclwiO1xuaW1wb3J0IHsgSU5URVJOQUxfRVJST1IsIFNFUlZFUl9FUlJPUiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBheWxvYWRJZChlbnRyb3B5ID0gMykge1xuICAgIGNvbnN0IGRhdGUgPSBEYXRlLm5vdygpICogTWF0aC5wb3coMTAsIGVudHJvcHkpO1xuICAgIGNvbnN0IGV4dHJhID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5wb3coMTAsIGVudHJvcHkpKTtcbiAgICByZXR1cm4gZGF0ZSArIGV4dHJhO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJpZ0ludFJwY0lkKGVudHJvcHkgPSA2KSB7XG4gICAgcmV0dXJuIEJpZ0ludChwYXlsb2FkSWQoZW50cm9weSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEpzb25ScGNSZXF1ZXN0KG1ldGhvZCwgcGFyYW1zLCBpZCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBpZCB8fCBwYXlsb2FkSWQoKSxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgbWV0aG9kLFxuICAgICAgICBwYXJhbXMsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRKc29uUnBjUmVzdWx0KGlkLCByZXN1bHQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZCxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgcmVzdWx0LFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0SnNvblJwY0Vycm9yKGlkLCBlcnJvciwgZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICBqc29ucnBjOiBcIjIuMFwiLFxuICAgICAgICBlcnJvcjogZm9ybWF0RXJyb3JNZXNzYWdlKGVycm9yLCBkYXRhKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEVycm9yTWVzc2FnZShlcnJvciwgZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZXJyb3IgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKElOVEVSTkFMX0VSUk9SKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBlcnJvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBlcnJvciA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZ2V0RXJyb3IoU0VSVkVSX0VSUk9SKSksIHsgbWVzc2FnZTogZXJyb3IgfSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBlcnJvci5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgaWYgKGlzUmVzZXJ2ZWRFcnJvckNvZGUoZXJyb3IuY29kZSkpIHtcbiAgICAgICAgZXJyb3IgPSBnZXRFcnJvckJ5Q29kZShlcnJvci5jb2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0LmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRFcnJvciIsImdldEVycm9yQnlDb2RlIiwiaXNSZXNlcnZlZEVycm9yQ29kZSIsIklOVEVSTkFMX0VSUk9SIiwiU0VSVkVSX0VSUk9SIiwicGF5bG9hZElkIiwiZW50cm9weSIsImRhdGUiLCJEYXRlIiwibm93IiwiTWF0aCIsInBvdyIsImV4dHJhIiwiZmxvb3IiLCJyYW5kb20iLCJnZXRCaWdJbnRScGNJZCIsIkJpZ0ludCIsImZvcm1hdEpzb25ScGNSZXF1ZXN0IiwibWV0aG9kIiwicGFyYW1zIiwiaWQiLCJqc29ucnBjIiwiZm9ybWF0SnNvblJwY1Jlc3VsdCIsInJlc3VsdCIsImZvcm1hdEpzb25ScGNFcnJvciIsImVycm9yIiwiZGF0YSIsImZvcm1hdEVycm9yTWVzc2FnZSIsIk9iamVjdCIsImFzc2lnbiIsIm1lc3NhZ2UiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR),\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcProvider),\n/* harmony export */   INTERNAL_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP),\n/* harmony export */   formatErrorMessage: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId),\n/* harmony export */   getError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getError),\n/* harmony export */   getErrorByCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getErrorByCode),\n/* harmony export */   isHttpUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isHttpUrl),\n/* harmony export */   isJsonRpcError: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcValidationInvalid),\n/* harmony export */   isLocalhostUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isLocalhostUrl),\n/* harmony export */   isReservedErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isServerErrorCode),\n/* harmony export */   isValidDefaultRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidDefaultRoute),\n/* harmony export */   isValidErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isValidErrorCode),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidWildcardRoute),\n/* harmony export */   isWsUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isWsUrl),\n/* harmony export */   parseConnectionError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.parseConnectionError),\n/* harmony export */   payloadId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.payloadId),\n/* harmony export */   validateJsonRpcError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _env__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"DEFAULT_ERROR\",\"INTERNAL_ERROR\",\"INVALID_PARAMS\",\"INVALID_REQUEST\",\"METHOD_NOT_FOUND\",\"PARSE_ERROR\",\"RESERVED_ERROR_CODES\",\"SERVER_ERROR\",\"SERVER_ERROR_CODE_RANGE\",\"STANDARD_ERROR_MAP\",\"getError\",\"getErrorByCode\",\"isReservedErrorCode\",\"isServerErrorCode\",\"isValidErrorCode\",\"parseConnectionError\",\"validateJsonRpcError\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _env__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\");\n/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validators */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRCO0FBQ0o7QUFDRjtBQUNHO0FBQ0M7QUFDRjtBQUNGO0FBQ08sQ0FDN0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vaW5kZXguanM/NjgwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Vycm9yXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lbnZcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zvcm1hdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vcm91dGluZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3VybFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdmFsaWRhdG9yc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidDefaultRoute: () => (/* binding */ isValidDefaultRoute),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* binding */ isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* binding */ isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* binding */ isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* binding */ isValidWildcardRoute)\n/* harmony export */ });\nfunction isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nfunction isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nfunction isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter((x)=>x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nfunction isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nfunction isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n} //# sourceMappingURL=routing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9yb3V0aW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sU0FBU0EsYUFBYUMsS0FBSztJQUM5QixJQUFJQSxNQUFNQyxRQUFRLENBQUMsTUFBTTtRQUNyQixPQUFPQyxxQkFBcUJGO0lBQ2hDO0lBQ0EsSUFBSSxNQUFNRyxJQUFJLENBQUNILFFBQVE7UUFDbkIsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU0ksb0JBQW9CSixLQUFLO0lBQ3JDLE9BQU9BLFVBQVU7QUFDckI7QUFDTyxTQUFTRSxxQkFBcUJGLEtBQUs7SUFDdEMsSUFBSUksb0JBQW9CSixRQUFRO1FBQzVCLE9BQU87SUFDWDtJQUNBLElBQUksQ0FBQ0EsTUFBTUMsUUFBUSxDQUFDLE1BQU07UUFDdEIsT0FBTztJQUNYO0lBQ0EsSUFBSUQsTUFBTUssS0FBSyxDQUFDLEtBQUtDLE1BQU0sS0FBSyxHQUFHO1FBQy9CLE9BQU87SUFDWDtJQUNBLElBQUlOLE1BQU1LLEtBQUssQ0FBQyxLQUFLRSxNQUFNLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUksT0FBTyxJQUFJSCxNQUFNLEtBQUssR0FBRztRQUM1RCxPQUFPO0lBQ1g7SUFDQSxPQUFPO0FBQ1g7QUFDTyxTQUFTSSw0QkFBNEJWLEtBQUs7SUFDN0MsT0FBTyxDQUFDSSxvQkFBb0JKLFVBQVVFLHFCQUFxQkYsVUFBVSxDQUFDQSxNQUFNSyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQ0ksSUFBSTtBQUNsRztBQUNPLFNBQVNFLDZCQUE2QlgsS0FBSztJQUM5QyxPQUFPLENBQUNJLG9CQUFvQkosVUFBVUUscUJBQXFCRixVQUFVLENBQUNBLE1BQU1LLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDSSxJQUFJO0FBQ2xHLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vcm91dGluZy5qcz85NjBkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUm91dGUocm91dGUpIHtcbiAgICBpZiAocm91dGUuaW5jbHVkZXMoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSk7XG4gICAgfVxuICAgIGlmICgvXFxXL2cudGVzdChyb3V0ZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlID09PSBcIipcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSkge1xuICAgIGlmIChpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKCFyb3V0ZS5pbmNsdWRlcyhcIipcIikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAocm91dGUuc3BsaXQoXCIqXCIpLmxlbmd0aCAhPT0gMikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChyb3V0ZS5zcGxpdChcIipcIikuZmlsdGVyKHggPT4geC50cmltKCkgPT09IFwiXCIpLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRMZWFkaW5nV2lsZGNhcmRSb3V0ZShyb3V0ZSkge1xuICAgIHJldHVybiAhaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkgJiYgaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpICYmICFyb3V0ZS5zcGxpdChcIipcIilbMF0udHJpbSgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRUcmFpbGluZ1dpbGRjYXJkUm91dGUocm91dGUpIHtcbiAgICByZXR1cm4gIWlzVmFsaWREZWZhdWx0Um91dGUocm91dGUpICYmIGlzVmFsaWRXaWxkY2FyZFJvdXRlKHJvdXRlKSAmJiAhcm91dGUuc3BsaXQoXCIqXCIpWzFdLnRyaW0oKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRpbmcuanMubWFwIl0sIm5hbWVzIjpbImlzVmFsaWRSb3V0ZSIsInJvdXRlIiwiaW5jbHVkZXMiLCJpc1ZhbGlkV2lsZGNhcmRSb3V0ZSIsInRlc3QiLCJpc1ZhbGlkRGVmYXVsdFJvdXRlIiwic3BsaXQiLCJsZW5ndGgiLCJmaWx0ZXIiLCJ4IiwidHJpbSIsImlzVmFsaWRMZWFkaW5nV2lsZGNhcmRSb3V0ZSIsImlzVmFsaWRUcmFpbGluZ1dpbGRjYXJkUm91dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/jsonrpc-types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\");\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QyxDQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS90eXBlcy5qcz8yNjI0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXR5cGVzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpUrl: () => (/* binding */ isHttpUrl),\n/* harmony export */   isLocalhostUrl: () => (/* binding */ isLocalhostUrl),\n/* harmony export */   isWsUrl: () => (/* binding */ isWsUrl)\n/* harmony export */ });\nconst HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length) return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\") return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nfunction isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n} //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsYUFBYTtBQUNuQixNQUFNQyxXQUFXO0FBQ2pCLFNBQVNDLGVBQWVDLEdBQUc7SUFDdkIsTUFBTUMsVUFBVUQsSUFBSUUsS0FBSyxDQUFDLElBQUlDLE9BQU8sU0FBUztJQUM5QyxJQUFJLENBQUNGLFdBQVcsQ0FBQ0EsUUFBUUcsTUFBTSxFQUMzQjtJQUNKLE9BQU9ILE9BQU8sQ0FBQyxFQUFFO0FBQ3JCO0FBQ0EsU0FBU0ksbUJBQW1CTCxHQUFHLEVBQUVNLEtBQUs7SUFDbEMsTUFBTUMsV0FBV1IsZUFBZUM7SUFDaEMsSUFBSSxPQUFPTyxhQUFhLGFBQ3BCLE9BQU87SUFDWCxPQUFPLElBQUlKLE9BQU9HLE9BQU9FLElBQUksQ0FBQ0Q7QUFDbEM7QUFDTyxTQUFTRSxVQUFVVCxHQUFHO0lBQ3pCLE9BQU9LLG1CQUFtQkwsS0FBS0g7QUFDbkM7QUFDTyxTQUFTYSxRQUFRVixHQUFHO0lBQ3ZCLE9BQU9LLG1CQUFtQkwsS0FBS0Y7QUFDbkM7QUFDTyxTQUFTYSxlQUFlWCxHQUFHO0lBQzlCLE9BQU8sSUFBSUcsT0FBTyw4QkFBOEJLLElBQUksQ0FBQ1I7QUFDekQsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS91cmwuanM/ODMyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIVFRQX1JFR0VYID0gXCJeaHR0cHM/OlwiO1xuY29uc3QgV1NfUkVHRVggPSBcIl53c3M/OlwiO1xuZnVuY3Rpb24gZ2V0VXJsUHJvdG9jb2wodXJsKSB7XG4gICAgY29uc3QgbWF0Y2hlcyA9IHVybC5tYXRjaChuZXcgUmVnRXhwKC9eXFx3KzovLCBcImdpXCIpKTtcbiAgICBpZiAoIW1hdGNoZXMgfHwgIW1hdGNoZXMubGVuZ3RoKVxuICAgICAgICByZXR1cm47XG4gICAgcmV0dXJuIG1hdGNoZXNbMF07XG59XG5mdW5jdGlvbiBtYXRjaFJlZ2V4UHJvdG9jb2wodXJsLCByZWdleCkge1xuICAgIGNvbnN0IHByb3RvY29sID0gZ2V0VXJsUHJvdG9jb2wodXJsKTtcbiAgICBpZiAodHlwZW9mIHByb3RvY29sID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAocmVnZXgpLnRlc3QocHJvdG9jb2wpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSHR0cFVybCh1cmwpIHtcbiAgICByZXR1cm4gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgSFRUUF9SRUdFWCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNXc1VybCh1cmwpIHtcbiAgICByZXR1cm4gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgV1NfUkVHRVgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9jYWxob3N0VXJsKHVybCkge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKFwid3NzPzovL2xvY2FsaG9zdCg6ZHsyLDV9KT9cIikudGVzdCh1cmwpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJIVFRQX1JFR0VYIiwiV1NfUkVHRVgiLCJnZXRVcmxQcm90b2NvbCIsInVybCIsIm1hdGNoZXMiLCJtYXRjaCIsIlJlZ0V4cCIsImxlbmd0aCIsIm1hdGNoUmVnZXhQcm90b2NvbCIsInJlZ2V4IiwicHJvdG9jb2wiLCJ0ZXN0IiwiaXNIdHRwVXJsIiwiaXNXc1VybCIsImlzTG9jYWxob3N0VXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* binding */ isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* binding */ isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* binding */ isJsonRpcValidationInvalid)\n/* harmony export */ });\nfunction isJsonRpcPayload(payload) {\n    return typeof payload === \"object\" && \"id\" in payload && \"jsonrpc\" in payload && payload.jsonrpc === \"2.0\";\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nfunction isJsonRpcValidationInvalid(validation) {\n    return \"error\" in validation && validation.valid === false;\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLFNBQVNBLGlCQUFpQkMsT0FBTztJQUNwQyxPQUFRLE9BQU9BLFlBQVksWUFDdkIsUUFBUUEsV0FDUixhQUFhQSxXQUNiQSxRQUFRQyxPQUFPLEtBQUs7QUFDNUI7QUFDTyxTQUFTQyxpQkFBaUJGLE9BQU87SUFDcEMsT0FBT0QsaUJBQWlCQyxZQUFZLFlBQVlBO0FBQ3BEO0FBQ08sU0FBU0csa0JBQWtCSCxPQUFPO0lBQ3JDLE9BQU9ELGlCQUFpQkMsWUFBYUksQ0FBQUEsZ0JBQWdCSixZQUFZSyxlQUFlTCxRQUFPO0FBQzNGO0FBQ08sU0FBU0ksZ0JBQWdCSixPQUFPO0lBQ25DLE9BQU8sWUFBWUE7QUFDdkI7QUFDTyxTQUFTSyxlQUFlTCxPQUFPO0lBQ2xDLE9BQU8sV0FBV0E7QUFDdEI7QUFDTyxTQUFTTSwyQkFBMkJDLFVBQVU7SUFDakQsT0FBTyxXQUFXQSxjQUFjQSxXQUFXQyxLQUFLLEtBQUs7QUFDekQsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS92YWxpZGF0b3JzLmpzPzQ3NGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1BheWxvYWQocGF5bG9hZCkge1xuICAgIHJldHVybiAodHlwZW9mIHBheWxvYWQgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgXCJpZFwiIGluIHBheWxvYWQgJiZcbiAgICAgICAgXCJqc29ucnBjXCIgaW4gcGF5bG9hZCAmJlxuICAgICAgICBwYXlsb2FkLmpzb25ycGMgPT09IFwiMi4wXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1JlcXVlc3QocGF5bG9hZCkge1xuICAgIHJldHVybiBpc0pzb25ScGNQYXlsb2FkKHBheWxvYWQpICYmIFwibWV0aG9kXCIgaW4gcGF5bG9hZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNSZXNwb25zZShwYXlsb2FkKSB7XG4gICAgcmV0dXJuIGlzSnNvblJwY1BheWxvYWQocGF5bG9hZCkgJiYgKGlzSnNvblJwY1Jlc3VsdChwYXlsb2FkKSB8fCBpc0pzb25ScGNFcnJvcihwYXlsb2FkKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjUmVzdWx0KHBheWxvYWQpIHtcbiAgICByZXR1cm4gXCJyZXN1bHRcIiBpbiBwYXlsb2FkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY0Vycm9yKHBheWxvYWQpIHtcbiAgICByZXR1cm4gXCJlcnJvclwiIGluIHBheWxvYWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjVmFsaWRhdGlvbkludmFsaWQodmFsaWRhdGlvbikge1xuICAgIHJldHVybiBcImVycm9yXCIgaW4gdmFsaWRhdGlvbiAmJiB2YWxpZGF0aW9uLnZhbGlkID09PSBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRvcnMuanMubWFwIl0sIm5hbWVzIjpbImlzSnNvblJwY1BheWxvYWQiLCJwYXlsb2FkIiwianNvbnJwYyIsImlzSnNvblJwY1JlcXVlc3QiLCJpc0pzb25ScGNSZXNwb25zZSIsImlzSnNvblJwY1Jlc3VsdCIsImlzSnNvblJwY0Vycm9yIiwiaXNKc29uUnBjVmFsaWRhdGlvbkludmFsaWQiLCJ2YWxpZGF0aW9uIiwidmFsaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WsConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\nconst w = ()=>typeof WebSocket < \"u\" ? WebSocket : typeof global < \"u\" && typeof global.WebSocket < \"u\" ? global.WebSocket :  false ? 0 : typeof self < \"u\" && typeof self.WebSocket < \"u\" ? self.WebSocket : __webpack_require__(/*! ws */ \"(ssr)/./node_modules/ws/index.js\"), b = ()=>typeof WebSocket < \"u\" || typeof global < \"u\" && typeof global.WebSocket < \"u\" ||  false && 0 || typeof self < \"u\" && typeof self.WebSocket < \"u\", a = (c)=>c.split(\"?\")[0], h = 10, S = w();\nclass f {\n    constructor(e){\n        if (this.url = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        this.url = e;\n    }\n    get connected() {\n        return typeof this.socket < \"u\";\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async open(e = this.url) {\n        await this.register(e);\n    }\n    async close() {\n        return new Promise((e, t)=>{\n            if (typeof this.socket > \"u\") {\n                t(new Error(\"Connection already closed\"));\n                return;\n            }\n            this.socket.onclose = (n)=>{\n                this.onClose(n), e();\n            }, this.socket.close();\n        });\n    }\n    async send(e) {\n        typeof this.socket > \"u\" && (this.socket = await this.register());\n        try {\n            this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(e));\n        } catch (t) {\n            this.onError(e.id, t);\n        }\n    }\n    register(e = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        if (this.registering) {\n            const t = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= t || this.events.listenerCount(\"open\") >= t) && this.events.setMaxListeners(t + 1), new Promise((n, o)=>{\n                this.events.once(\"register_error\", (s)=>{\n                    this.resetMaxListeners(), o(s);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.socket > \"u\") return o(new Error(\"WebSocket connection is missing or invalid\"));\n                    n(this.socket);\n                });\n            });\n        }\n        return this.url = e, this.registering = !0, new Promise((t, n)=>{\n            const o = new URLSearchParams(e).get(\"origin\"), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)() ? {\n                headers: {\n                    origin: o\n                }\n            } : {\n                rejectUnauthorized: !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(e)\n            }, i = new S(e, [], s);\n            b() ? i.onerror = (r)=>{\n                const l = r;\n                n(this.emitError(l.error));\n            } : i.on(\"error\", (r)=>{\n                n(this.emitError(r));\n            }), i.onopen = ()=>{\n                this.onOpen(i), t(i);\n            };\n        });\n    }\n    onOpen(e) {\n        e.onmessage = (t)=>this.onPayload(t), e.onclose = (t)=>this.onClose(t), this.socket = e, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose(e) {\n        this.socket = void 0, this.registering = !1, this.events.emit(\"close\", e);\n    }\n    onPayload(e) {\n        if (typeof e.data > \"u\") return;\n        const t = typeof e.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", t);\n    }\n    onError(e, t) {\n        const n = this.parseError(t), o = n.message || n.toString(), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(e, o);\n        this.events.emit(\"payload\", s);\n    }\n    parseError(e, t = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e, a(t), \"WS\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > h && this.events.setMaxListeners(h);\n    }\n    emitError(e) {\n        const t = this.parseError(new Error(e?.message || `WebSocket connection failed for host: ${a(this.url)}`));\n        return this.events.emit(\"register_error\", t), t;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy13cy1jb25uZWN0aW9uL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNDO0FBQWdGO0FBQWdKO0FBQUEsTUFBTWdCLElBQUUsSUFBSSxPQUFPQyxZQUFVLE1BQUlBLFlBQVUsT0FBT0MsU0FBTyxPQUFLLE9BQU9BLE9BQU9ELFNBQVMsR0FBQyxNQUFJQyxPQUFPRCxTQUFTLEdBQUMsTUFBOEMsR0FBQ0UsQ0FBZ0IsR0FBQyxPQUFPQyxPQUFLLE9BQUssT0FBT0EsS0FBS0gsU0FBUyxHQUFDLE1BQUlHLEtBQUtILFNBQVMsR0FBQ0ksbUJBQU9BLENBQUMsNENBQUksR0FBRUMsSUFBRSxJQUFJLE9BQU9MLFlBQVUsT0FBSyxPQUFPQyxTQUFPLE9BQUssT0FBT0EsT0FBT0QsU0FBUyxHQUFDLE9BQUssTUFBaUIsSUFBRSxDQUEyQixJQUFFLE9BQU9HLE9BQUssT0FBSyxPQUFPQSxLQUFLSCxTQUFTLEdBQUMsS0FBSU0sSUFBRUMsQ0FBQUEsSUFBR0EsRUFBRUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUNDLElBQUUsSUFBR0MsSUFBRVg7QUFBSSxNQUFNWTtJQUFFQyxZQUFZQyxDQUFDLENBQUM7UUFBQyxJQUFHLElBQUksQ0FBQ0MsR0FBRyxHQUFDRCxHQUFFLElBQUksQ0FBQ0UsTUFBTSxHQUFDLElBQUkvQixnREFBQ0EsRUFBQyxJQUFJLENBQUNnQyxXQUFXLEdBQUMsQ0FBQyxHQUFFLENBQUMxQixxRUFBQ0EsQ0FBQ3VCLElBQUcsTUFBTSxJQUFJSSxNQUFNLENBQUMsMERBQTBELEVBQUVKLEVBQUUsQ0FBQztRQUFFLElBQUksQ0FBQ0MsR0FBRyxHQUFDRDtJQUFDO0lBQUMsSUFBSUssWUFBVztRQUFDLE9BQU8sT0FBTyxJQUFJLENBQUNDLE1BQU0sR0FBQztJQUFHO0lBQUMsSUFBSUMsYUFBWTtRQUFDLE9BQU8sSUFBSSxDQUFDSixXQUFXO0lB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LFFBQVFyQixDQUFDLEVBQUNTLENBQUMsRUFBQztRQUFDLE1BQU1TLElBQUUsSUFBSSxDQUFDNEIsVUFBVSxDQUFDckMsSUFBR2lCLElBQUVSLEVBQUU2QixPQUFPLElBQUU3QixFQUFFOEIsUUFBUSxJQUFHckIsSUFBRTVDLGdGQUFDQSxDQUFDaUIsR0FBRTBCO1FBQUcsSUFBSSxDQUFDeEIsTUFBTSxDQUFDMEMsSUFBSSxDQUFDLFdBQVVqQjtJQUFFO0lBQUNtQixXQUFXOUMsQ0FBQyxFQUFDUyxJQUFFLElBQUksQ0FBQ1IsR0FBRyxFQUFDO1FBQUMsT0FBT2hCLGtGQUFDQSxDQUFDZSxHQUFFUCxFQUFFZ0IsSUFBRztJQUFLO0lBQUNtQixvQkFBbUI7UUFBQyxJQUFJLENBQUMxQixNQUFNLENBQUNxQixlQUFlLEtBQUczQixLQUFHLElBQUksQ0FBQ00sTUFBTSxDQUFDdUIsZUFBZSxDQUFDN0I7SUFBRTtJQUFDMEMsVUFBVXRDLENBQUMsRUFBQztRQUFDLE1BQU1TLElBQUUsSUFBSSxDQUFDcUMsVUFBVSxDQUFDLElBQUkxQyxNQUFNSixHQUFHK0MsV0FBUyxDQUFDLHNDQUFzQyxFQUFFdEQsRUFBRSxJQUFJLENBQUNRLEdBQUcsRUFBRSxDQUFDO1FBQUcsT0FBTyxJQUFJLENBQUNDLE1BQU0sQ0FBQzBDLElBQUksQ0FBQyxrQkFBaUJuQyxJQUFHQTtJQUFDO0FBQUM7QUFBd0MsQ0FDdmhHLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vZGlzdC9pbmRleC5lcy5qcz9iNjNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtFdmVudEVtaXR0ZXIgYXMgdX1mcm9tXCJldmVudHNcIjtpbXBvcnR7c2FmZUpzb25TdHJpbmdpZnkgYXMgcCxzYWZlSnNvblBhcnNlIGFzIGd9ZnJvbVwiQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uXCI7aW1wb3J0e2lzV3NVcmwgYXMgZCxpc1JlYWN0TmF0aXZlIGFzIHksaXNMb2NhbGhvc3RVcmwgYXMgbSxmb3JtYXRKc29uUnBjRXJyb3IgYXMgayxwYXJzZUNvbm5lY3Rpb25FcnJvciBhcyB2fWZyb21cIkB3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHNcIjtjb25zdCB3PSgpPT50eXBlb2YgV2ViU29ja2V0PFwidVwiP1dlYlNvY2tldDp0eXBlb2YgZ2xvYmFsPFwidVwiJiZ0eXBlb2YgZ2xvYmFsLldlYlNvY2tldDxcInVcIj9nbG9iYWwuV2ViU29ja2V0OnR5cGVvZiB3aW5kb3c8XCJ1XCImJnR5cGVvZiB3aW5kb3cuV2ViU29ja2V0PFwidVwiP3dpbmRvdy5XZWJTb2NrZXQ6dHlwZW9mIHNlbGY8XCJ1XCImJnR5cGVvZiBzZWxmLldlYlNvY2tldDxcInVcIj9zZWxmLldlYlNvY2tldDpyZXF1aXJlKFwid3NcIiksYj0oKT0+dHlwZW9mIFdlYlNvY2tldDxcInVcInx8dHlwZW9mIGdsb2JhbDxcInVcIiYmdHlwZW9mIGdsb2JhbC5XZWJTb2NrZXQ8XCJ1XCJ8fHR5cGVvZiB3aW5kb3c8XCJ1XCImJnR5cGVvZiB3aW5kb3cuV2ViU29ja2V0PFwidVwifHx0eXBlb2Ygc2VsZjxcInVcIiYmdHlwZW9mIHNlbGYuV2ViU29ja2V0PFwidVwiLGE9Yz0+Yy5zcGxpdChcIj9cIilbMF0saD0xMCxTPXcoKTtjbGFzcyBme2NvbnN0cnVjdG9yKGUpe2lmKHRoaXMudXJsPWUsdGhpcy5ldmVudHM9bmV3IHUsdGhpcy5yZWdpc3RlcmluZz0hMSwhZChlKSl0aHJvdyBuZXcgRXJyb3IoYFByb3ZpZGVkIFVSTCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIFdlYlNvY2tldCBjb25uZWN0aW9uOiAke2V9YCk7dGhpcy51cmw9ZX1nZXQgY29ubmVjdGVkKCl7cmV0dXJuIHR5cGVvZiB0aGlzLnNvY2tldDxcInVcIn1nZXQgY29ubmVjdGluZygpe3JldHVybiB0aGlzLnJlZ2lzdGVyaW5nfW9uKGUsdCl7dGhpcy5ldmVudHMub24oZSx0KX1vbmNlKGUsdCl7dGhpcy5ldmVudHMub25jZShlLHQpfW9mZihlLHQpe3RoaXMuZXZlbnRzLm9mZihlLHQpfXJlbW92ZUxpc3RlbmVyKGUsdCl7dGhpcy5ldmVudHMucmVtb3ZlTGlzdGVuZXIoZSx0KX1hc3luYyBvcGVuKGU9dGhpcy51cmwpe2F3YWl0IHRoaXMucmVnaXN0ZXIoZSl9YXN5bmMgY2xvc2UoKXtyZXR1cm4gbmV3IFByb21pc2UoKGUsdCk9PntpZih0eXBlb2YgdGhpcy5zb2NrZXQ+XCJ1XCIpe3QobmV3IEVycm9yKFwiQ29ubmVjdGlvbiBhbHJlYWR5IGNsb3NlZFwiKSk7cmV0dXJufXRoaXMuc29ja2V0Lm9uY2xvc2U9bj0+e3RoaXMub25DbG9zZShuKSxlKCl9LHRoaXMuc29ja2V0LmNsb3NlKCl9KX1hc3luYyBzZW5kKGUpe3R5cGVvZiB0aGlzLnNvY2tldD5cInVcIiYmKHRoaXMuc29ja2V0PWF3YWl0IHRoaXMucmVnaXN0ZXIoKSk7dHJ5e3RoaXMuc29ja2V0LnNlbmQocChlKSl9Y2F0Y2godCl7dGhpcy5vbkVycm9yKGUuaWQsdCl9fXJlZ2lzdGVyKGU9dGhpcy51cmwpe2lmKCFkKGUpKXRocm93IG5ldyBFcnJvcihgUHJvdmlkZWQgVVJMIGlzIG5vdCBjb21wYXRpYmxlIHdpdGggV2ViU29ja2V0IGNvbm5lY3Rpb246ICR7ZX1gKTtpZih0aGlzLnJlZ2lzdGVyaW5nKXtjb25zdCB0PXRoaXMuZXZlbnRzLmdldE1heExpc3RlbmVycygpO3JldHVybih0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KFwicmVnaXN0ZXJfZXJyb3JcIik+PXR8fHRoaXMuZXZlbnRzLmxpc3RlbmVyQ291bnQoXCJvcGVuXCIpPj10KSYmdGhpcy5ldmVudHMuc2V0TWF4TGlzdGVuZXJzKHQrMSksbmV3IFByb21pc2UoKG4sbyk9Pnt0aGlzLmV2ZW50cy5vbmNlKFwicmVnaXN0ZXJfZXJyb3JcIixzPT57dGhpcy5yZXNldE1heExpc3RlbmVycygpLG8ocyl9KSx0aGlzLmV2ZW50cy5vbmNlKFwib3BlblwiLCgpPT57aWYodGhpcy5yZXNldE1heExpc3RlbmVycygpLHR5cGVvZiB0aGlzLnNvY2tldD5cInVcIilyZXR1cm4gbyhuZXcgRXJyb3IoXCJXZWJTb2NrZXQgY29ubmVjdGlvbiBpcyBtaXNzaW5nIG9yIGludmFsaWRcIikpO24odGhpcy5zb2NrZXQpfSl9KX1yZXR1cm4gdGhpcy51cmw9ZSx0aGlzLnJlZ2lzdGVyaW5nPSEwLG5ldyBQcm9taXNlKCh0LG4pPT57Y29uc3Qgbz1uZXcgVVJMU2VhcmNoUGFyYW1zKGUpLmdldChcIm9yaWdpblwiKSxzPXkoKT97aGVhZGVyczp7b3JpZ2luOm99fTp7cmVqZWN0VW5hdXRob3JpemVkOiFtKGUpfSxpPW5ldyBTKGUsW10scyk7YigpP2kub25lcnJvcj1yPT57Y29uc3QgbD1yO24odGhpcy5lbWl0RXJyb3IobC5lcnJvcikpfTppLm9uKFwiZXJyb3JcIixyPT57bih0aGlzLmVtaXRFcnJvcihyKSl9KSxpLm9ub3Blbj0oKT0+e3RoaXMub25PcGVuKGkpLHQoaSl9fSl9b25PcGVuKGUpe2Uub25tZXNzYWdlPXQ9PnRoaXMub25QYXlsb2FkKHQpLGUub25jbG9zZT10PT50aGlzLm9uQ2xvc2UodCksdGhpcy5zb2NrZXQ9ZSx0aGlzLnJlZ2lzdGVyaW5nPSExLHRoaXMuZXZlbnRzLmVtaXQoXCJvcGVuXCIpfW9uQ2xvc2UoZSl7dGhpcy5zb2NrZXQ9dm9pZCAwLHRoaXMucmVnaXN0ZXJpbmc9ITEsdGhpcy5ldmVudHMuZW1pdChcImNsb3NlXCIsZSl9b25QYXlsb2FkKGUpe2lmKHR5cGVvZiBlLmRhdGE+XCJ1XCIpcmV0dXJuO2NvbnN0IHQ9dHlwZW9mIGUuZGF0YT09XCJzdHJpbmdcIj9nKGUuZGF0YSk6ZS5kYXRhO3RoaXMuZXZlbnRzLmVtaXQoXCJwYXlsb2FkXCIsdCl9b25FcnJvcihlLHQpe2NvbnN0IG49dGhpcy5wYXJzZUVycm9yKHQpLG89bi5tZXNzYWdlfHxuLnRvU3RyaW5nKCkscz1rKGUsbyk7dGhpcy5ldmVudHMuZW1pdChcInBheWxvYWRcIixzKX1wYXJzZUVycm9yKGUsdD10aGlzLnVybCl7cmV0dXJuIHYoZSxhKHQpLFwiV1NcIil9cmVzZXRNYXhMaXN0ZW5lcnMoKXt0aGlzLmV2ZW50cy5nZXRNYXhMaXN0ZW5lcnMoKT5oJiZ0aGlzLmV2ZW50cy5zZXRNYXhMaXN0ZW5lcnMoaCl9ZW1pdEVycm9yKGUpe2NvbnN0IHQ9dGhpcy5wYXJzZUVycm9yKG5ldyBFcnJvcihlPy5tZXNzYWdlfHxgV2ViU29ja2V0IGNvbm5lY3Rpb24gZmFpbGVkIGZvciBob3N0OiAke2EodGhpcy51cmwpfWApKTtyZXR1cm4gdGhpcy5ldmVudHMuZW1pdChcInJlZ2lzdGVyX2Vycm9yXCIsdCksdH19ZXhwb3J0e2YgYXMgV3NDb25uZWN0aW9uLGYgYXMgZGVmYXVsdH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJ1Iiwic2FmZUpzb25TdHJpbmdpZnkiLCJwIiwic2FmZUpzb25QYXJzZSIsImciLCJpc1dzVXJsIiwiZCIsImlzUmVhY3ROYXRpdmUiLCJ5IiwiaXNMb2NhbGhvc3RVcmwiLCJtIiwiZm9ybWF0SnNvblJwY0Vycm9yIiwiayIsInBhcnNlQ29ubmVjdGlvbkVycm9yIiwidiIsInciLCJXZWJTb2NrZXQiLCJnbG9iYWwiLCJ3aW5kb3ciLCJzZWxmIiwicmVxdWlyZSIsImIiLCJhIiwiYyIsInNwbGl0IiwiaCIsIlMiLCJmIiwiY29uc3RydWN0b3IiLCJlIiwidXJsIiwiZXZlbnRzIiwicmVnaXN0ZXJpbmciLCJFcnJvciIsImNvbm5lY3RlZCIsInNvY2tldCIsImNvbm5lY3RpbmciLCJvbiIsInQiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJvcGVuIiwicmVnaXN0ZXIiLCJjbG9zZSIsIlByb21pc2UiLCJvbmNsb3NlIiwibiIsIm9uQ2xvc2UiLCJzZW5kIiwib25FcnJvciIsImlkIiwiZ2V0TWF4TGlzdGVuZXJzIiwibGlzdGVuZXJDb3VudCIsInNldE1heExpc3RlbmVycyIsIm8iLCJzIiwicmVzZXRNYXhMaXN0ZW5lcnMiLCJVUkxTZWFyY2hQYXJhbXMiLCJnZXQiLCJoZWFkZXJzIiwib3JpZ2luIiwicmVqZWN0VW5hdXRob3JpemVkIiwiaSIsIm9uZXJyb3IiLCJyIiwibCIsImVtaXRFcnJvciIsImVycm9yIiwib25vcGVuIiwib25PcGVuIiwib25tZXNzYWdlIiwib25QYXlsb2FkIiwiZW1pdCIsImRhdGEiLCJwYXJzZUVycm9yIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiV3NDb25uZWN0aW9uIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyValueStorage: () => (/* binding */ h),\n/* harmony export */   \"default\": () => (/* binding */ h)\n/* harmony export */ });\n/* harmony import */ var unstorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unstorage */ \"(ssr)/./node_modules/unstorage/dist/index.mjs\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! idb-keyval */ \"(ssr)/./node_modules/idb-keyval/dist/index.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nfunction C(i) {\n    return i;\n}\nconst x = \"idb-keyval\";\nvar z = (i = {})=>{\n    const t = i.base && i.base.length > 0 ? `${i.base}:` : \"\", e = (s)=>t + s;\n    let n;\n    return i.dbName && i.storeName && (n = (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.createStore)(i.dbName, i.storeName)), {\n        name: x,\n        options: i,\n        async hasItem (s) {\n            return !(typeof await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) > \"u\");\n        },\n        async getItem (s) {\n            return await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) ?? null;\n        },\n        setItem (s, a) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.set)(e(s), a, n);\n        },\n        removeItem (s) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.del)(e(s), n);\n        },\n        getKeys () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.keys)(n);\n        },\n        clear () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.clear)(n);\n        }\n    };\n};\nconst D = \"WALLET_CONNECT_V2_INDEXED_DB\", E = \"keyvaluestorage\";\nclass _ {\n    constructor(){\n        this.indexedDb = (0,unstorage__WEBPACK_IMPORTED_MODULE_2__.createStorage)({\n            driver: z({\n                dbName: D,\n                storeName: E\n            })\n        });\n    }\n    async getKeys() {\n        return this.indexedDb.getKeys();\n    }\n    async getEntries() {\n        return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t)=>[\n                t.key,\n                t.value\n            ]);\n    }\n    async getItem(t) {\n        const e = await this.indexedDb.getItem(t);\n        if (e !== null) return e;\n    }\n    async setItem(t, e) {\n        await this.indexedDb.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        await this.indexedDb.removeItem(t);\n    }\n}\nvar l = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, c = {\n    exports: {}\n};\n(function() {\n    let i;\n    function t() {}\n    i = t, i.prototype.getItem = function(e) {\n        return this.hasOwnProperty(e) ? String(this[e]) : null;\n    }, i.prototype.setItem = function(e, n) {\n        this[e] = String(n);\n    }, i.prototype.removeItem = function(e) {\n        delete this[e];\n    }, i.prototype.clear = function() {\n        const e = this;\n        Object.keys(e).forEach(function(n) {\n            e[n] = void 0, delete e[n];\n        });\n    }, i.prototype.key = function(e) {\n        return e = e || 0, Object.keys(this)[e];\n    }, i.prototype.__defineGetter__(\"length\", function() {\n        return Object.keys(this).length;\n    }), typeof l < \"u\" && l.localStorage ? c.exports = l.localStorage :  false ? 0 : c.exports = new t;\n})();\nfunction k(i) {\n    var t;\n    return [\n        i[0],\n        (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)((t = i[1]) != null ? t : \"\")\n    ];\n}\nclass K {\n    constructor(){\n        this.localStorage = c.exports;\n    }\n    async getKeys() {\n        return Object.keys(this.localStorage);\n    }\n    async getEntries() {\n        return Object.entries(this.localStorage).map(k);\n    }\n    async getItem(t) {\n        const e = this.localStorage.getItem(t);\n        if (e !== null) return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(e);\n    }\n    async setItem(t, e) {\n        this.localStorage.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        this.localStorage.removeItem(t);\n    }\n}\nconst N = \"wc_storage_version\", y = 1, O = async (i, t, e)=>{\n    const n = N, s = await t.getItem(n);\n    if (s && s >= y) {\n        e(t);\n        return;\n    }\n    const a = await i.getKeys();\n    if (!a.length) {\n        e(t);\n        return;\n    }\n    const m = [];\n    for(; a.length;){\n        const r = a.shift();\n        if (!r) continue;\n        const o = r.toLowerCase();\n        if (o.includes(\"wc@\") || o.includes(\"walletconnect\") || o.includes(\"wc_\") || o.includes(\"wallet_connect\")) {\n            const f = await i.getItem(r);\n            await t.setItem(r, f), m.push(r);\n        }\n    }\n    await t.setItem(n, y), e(t), j(i, m);\n}, j = async (i, t)=>{\n    t.length && t.forEach(async (e)=>{\n        await i.removeItem(e);\n    });\n};\nclass h {\n    constructor(){\n        this.initialized = !1, this.setInitialized = (e)=>{\n            this.storage = e, this.initialized = !0;\n        };\n        const t = new K;\n        this.storage = t;\n        try {\n            const e = new _;\n            O(t, e, this.setInitialized);\n        } catch  {\n            this.initialized = !0;\n        }\n    }\n    async getKeys() {\n        return await this.initialize(), this.storage.getKeys();\n    }\n    async getEntries() {\n        return await this.initialize(), this.storage.getEntries();\n    }\n    async getItem(t) {\n        return await this.initialize(), this.storage.getItem(t);\n    }\n    async setItem(t, e) {\n        return await this.initialize(), this.storage.setItem(t, e);\n    }\n    async removeItem(t) {\n        return await this.initialize(), this.storage.removeItem(t);\n    }\n    async initialize() {\n        this.initialized || await new Promise((t)=>{\n            const e = setInterval(()=>{\n                this.initialized && (clearInterval(e), t());\n            }, 20);\n        });\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/@walletconnect/logger/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_LOG_SIZE_IN_BYTES_DEFAULT: () => (/* binding */ l),\n/* harmony export */   PINO_CUSTOM_CONTEXT_KEY: () => (/* binding */ n),\n/* harmony export */   PINO_LOGGER_DEFAULTS: () => (/* binding */ c),\n/* harmony export */   formatChildLoggerContext: () => (/* binding */ w),\n/* harmony export */   generateChildLogger: () => (/* binding */ E),\n/* harmony export */   generateClientLogger: () => (/* binding */ C),\n/* harmony export */   generatePlatformLogger: () => (/* binding */ A),\n/* harmony export */   generateServerLogger: () => (/* binding */ I),\n/* harmony export */   getBrowserLoggerContext: () => (/* binding */ v),\n/* harmony export */   getDefaultLoggerOptions: () => (/* binding */ k),\n/* harmony export */   getLoggerContext: () => (/* binding */ y),\n/* harmony export */   pino: () => (/* reexport default from dynamic */ pino__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   setBrowserLoggerContext: () => (/* binding */ b)\n/* harmony export */ });\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ \"(ssr)/./node_modules/pino/pino.js\");\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nconst c = {\n    level: \"info\"\n}, n = \"custom_context\", l = 1e3 * 1024;\nclass O {\n    constructor(e){\n        this.nodeValue = e, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;\n    }\n    get value() {\n        return this.nodeValue;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n}\nclass d {\n    constructor(e){\n        this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;\n    }\n    append(e) {\n        const t = new O(e);\n        if (t.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${t.size}`);\n        for(; this.size + t.size > this.maxSizeInBytes;)this.shift();\n        this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;\n    }\n    shift() {\n        if (!this.head) return;\n        const e = this.head;\n        this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;\n    }\n    toArray() {\n        const e = [];\n        let t = this.head;\n        for(; t !== null;)e.push(t.value), t = t.next;\n        return e;\n    }\n    get length() {\n        return this.lengthInNodes;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n    toOrderedArray() {\n        return Array.from(this);\n    }\n    [Symbol.iterator]() {\n        let e = this.head;\n        return {\n            next: ()=>{\n                if (!e) return {\n                    done: !0,\n                    value: null\n                };\n                const t = e.value;\n                return e = e.next, {\n                    done: !1,\n                    value: t\n                };\n            }\n        };\n    }\n}\nclass L {\n    constructor(e, t = l){\n        this.level = e ?? \"error\", this.levelValue = pino__WEBPACK_IMPORTED_MODULE_0__.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    forwardToConsole(e, t) {\n        t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.error ? console.error(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.warn ? console.warn(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.debug ? console.debug(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.trace ? console.trace(e) : console.log(e);\n    }\n    appendToLogs(e) {\n        this.logs.append((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            timestamp: new Date().toISOString(),\n            log: e\n        }));\n        const t = typeof e == \"string\" ? JSON.parse(e).level : e.level;\n        t >= this.levelValue && this.forwardToConsole(e, t);\n    }\n    getLogs() {\n        return this.logs;\n    }\n    clearLogs() {\n        this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    getLogArray() {\n        return Array.from(this.logs);\n    }\n    logsToBlob(e) {\n        const t = this.getLogArray();\n        return t.push((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            extraMetadata: e\n        })), new Blob(t, {\n            type: \"application/json\"\n        });\n    }\n}\nclass m {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n    downloadLogsBlobInBrowser(e) {\n        const t = URL.createObjectURL(this.logsToBlob(e)), o = document.createElement(\"a\");\n        o.href = t, o.download = `walletconnect-logs-${new Date().toISOString()}.txt`, document.body.appendChild(o), o.click(), document.body.removeChild(o), URL.revokeObjectURL(t);\n    }\n}\nclass B {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n}\nvar x = Object.defineProperty, S = Object.defineProperties, _ = Object.getOwnPropertyDescriptors, p = Object.getOwnPropertySymbols, T = Object.prototype.hasOwnProperty, z = Object.prototype.propertyIsEnumerable, f = (r, e, t)=>e in r ? x(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, i = (r, e)=>{\n    for(var t in e || (e = {}))T.call(e, t) && f(r, t, e[t]);\n    if (p) for (var t of p(e))z.call(e, t) && f(r, t, e[t]);\n    return r;\n}, g = (r, e)=>S(r, _(e));\nfunction k(r) {\n    return g(i({}, r), {\n        level: r?.level || c.level\n    });\n}\nfunction v(r, e = n) {\n    return r[e] || \"\";\n}\nfunction b(r, e, t = n) {\n    return r[t] = e, r;\n}\nfunction y(r, e = n) {\n    let t = \"\";\n    return typeof r.bindings > \"u\" ? t = v(r, e) : t = r.bindings().context || \"\", t;\n}\nfunction w(r, e, t = n) {\n    const o = y(r, t);\n    return o.trim() ? `${o}/${e}` : e;\n}\nfunction E(r, e, t = n) {\n    const o = w(r, e, t), a = r.child({\n        context: o\n    });\n    return b(a, o, t);\n}\nfunction C(r) {\n    var e, t;\n    const o = new m((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\",\n            browser: g(i({}, (t = r.opts) == null ? void 0 : t.browser), {\n                write: (a)=>o.write(a)\n            })\n        })),\n        chunkLoggerController: o\n    };\n}\nfunction I(r) {\n    var e;\n    const t = new B((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\"\n        }), t),\n        chunkLoggerController: t\n    };\n}\nfunction A(r) {\n    return typeof r.loggerOverride < \"u\" && typeof r.loggerOverride != \"string\" ? {\n        logger: r.loggerOverride,\n        chunkLoggerController: null\n    } :  false ? 0 : I(r);\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbG9nZ2VyL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFpQztBQUErQjtBQUE2RDtBQUFBLE1BQU1PLElBQUU7SUFBQ0MsT0FBTTtBQUFNLEdBQUVDLElBQUUsa0JBQWlCQyxJQUFFLE1BQUk7QUFBSyxNQUFNQztJQUFFQyxZQUFZQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLFNBQVMsR0FBQ0QsR0FBRSxJQUFJLENBQUNFLFdBQVcsR0FBQyxJQUFJQyxjQUFjQyxNQUFNLENBQUMsSUFBSSxDQUFDSCxTQUFTLEVBQUVJLE1BQU0sRUFBQyxJQUFJLENBQUNDLElBQUksR0FBQztJQUFJO0lBQUMsSUFBSUMsUUFBTztRQUFDLE9BQU8sSUFBSSxDQUFDTixTQUFTO0lBQUE7SUFBQyxJQUFJTyxPQUFNO1FBQUMsT0FBTyxJQUFJLENBQUNOLFdBQVc7SUFBQTtBQUFDO0FBQUMsTUFBTU87SUFBRVYsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDVSxJQUFJLEdBQUMsTUFBSyxJQUFJLENBQUNDLElBQUksR0FBQyxNQUFLLElBQUksQ0FBQ0MsYUFBYSxHQUFDLEdBQUUsSUFBSSxDQUFDQyxjQUFjLEdBQUNiLEdBQUUsSUFBSSxDQUFDRSxXQUFXLEdBQUM7SUFBQztJQUFDWSxPQUFPZCxDQUFDLEVBQUM7UUFBQyxNQUFNZSxJQUFFLElBQUlqQixFQUFFRTtRQUFHLElBQUdlLEVBQUVQLElBQUksR0FBQyxJQUFJLENBQUNLLGNBQWMsRUFBQyxNQUFNLElBQUlHLE1BQU0sQ0FBQyxnREFBZ0QsRUFBRWhCLEVBQUUsV0FBVyxFQUFFZSxFQUFFUCxJQUFJLENBQUMsQ0FBQztRQUFFLE1BQUssSUFBSSxDQUFDQSxJQUFJLEdBQUNPLEVBQUVQLElBQUksR0FBQyxJQUFJLENBQUNLLGNBQWMsRUFBRSxJQUFJLENBQUNJLEtBQUs7UUFBRyxJQUFJLENBQUNQLElB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RSxjQUFjO0lBQUUsT0FBTTtRQUFDMEYsUUFBT3BILDJDQUFDQSxDQUFDc0csRUFBRUYsRUFBRSxDQUFDLEdBQUVKLEVBQUVtQixJQUFJLEdBQUU7WUFBQzNHLE9BQU07UUFBTyxJQUFHb0I7UUFBRzBGLHVCQUFzQjFGO0lBQUM7QUFBQztBQUFDLFNBQVM0RixFQUFFeEIsQ0FBQztJQUFFLE9BQU8sT0FBT0EsRUFBRXlCLGNBQWMsR0FBQyxPQUFLLE9BQU96QixFQUFFeUIsY0FBYyxJQUFFLFdBQVM7UUFBQ0wsUUFBT3BCLEVBQUV5QixjQUFjO1FBQUNILHVCQUFzQjtJQUFJLElBQUUsTUFBaUIsR0FBQ0osQ0FBSWxCLEdBQUN1QixFQUFFdkI7QUFBRTtBQUFpVyxDQUNqaUosb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2luZGV4LmVzLmpzPzJhOGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGgse2xldmVscyBhcyBzfWZyb21cInBpbm9cIjtpbXBvcnR7ZGVmYXVsdCBhcyBVfWZyb21cInBpbm9cIjtpbXBvcnR7c2FmZUpzb25TdHJpbmdpZnkgYXMgdX1mcm9tXCJAd2FsbGV0Y29ubmVjdC9zYWZlLWpzb25cIjtjb25zdCBjPXtsZXZlbDpcImluZm9cIn0sbj1cImN1c3RvbV9jb250ZXh0XCIsbD0xZTMqMTAyNDtjbGFzcyBPe2NvbnN0cnVjdG9yKGUpe3RoaXMubm9kZVZhbHVlPWUsdGhpcy5zaXplSW5CeXRlcz1uZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodGhpcy5ub2RlVmFsdWUpLmxlbmd0aCx0aGlzLm5leHQ9bnVsbH1nZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5ub2RlVmFsdWV9Z2V0IHNpemUoKXtyZXR1cm4gdGhpcy5zaXplSW5CeXRlc319Y2xhc3MgZHtjb25zdHJ1Y3RvcihlKXt0aGlzLmhlYWQ9bnVsbCx0aGlzLnRhaWw9bnVsbCx0aGlzLmxlbmd0aEluTm9kZXM9MCx0aGlzLm1heFNpemVJbkJ5dGVzPWUsdGhpcy5zaXplSW5CeXRlcz0wfWFwcGVuZChlKXtjb25zdCB0PW5ldyBPKGUpO2lmKHQuc2l6ZT50aGlzLm1heFNpemVJbkJ5dGVzKXRocm93IG5ldyBFcnJvcihgW0xpbmtlZExpc3RdIFZhbHVlIHRvbyBiaWcgdG8gaW5zZXJ0IGludG8gbGlzdDogJHtlfSB3aXRoIHNpemUgJHt0LnNpemV9YCk7Zm9yKDt0aGlzLnNpemUrdC5zaXplPnRoaXMubWF4U2l6ZUluQnl0ZXM7KXRoaXMuc2hpZnQoKTt0aGlzLmhlYWQ/KHRoaXMudGFpbCYmKHRoaXMudGFpbC5uZXh0PXQpLHRoaXMudGFpbD10KToodGhpcy5oZWFkPXQsdGhpcy50YWlsPXQpLHRoaXMubGVuZ3RoSW5Ob2RlcysrLHRoaXMuc2l6ZUluQnl0ZXMrPXQuc2l6ZX1zaGlmdCgpe2lmKCF0aGlzLmhlYWQpcmV0dXJuO2NvbnN0IGU9dGhpcy5oZWFkO3RoaXMuaGVhZD10aGlzLmhlYWQubmV4dCx0aGlzLmhlYWR8fCh0aGlzLnRhaWw9bnVsbCksdGhpcy5sZW5ndGhJbk5vZGVzLS0sdGhpcy5zaXplSW5CeXRlcy09ZS5zaXplfXRvQXJyYXkoKXtjb25zdCBlPVtdO2xldCB0PXRoaXMuaGVhZDtmb3IoO3QhPT1udWxsOyllLnB1c2godC52YWx1ZSksdD10Lm5leHQ7cmV0dXJuIGV9Z2V0IGxlbmd0aCgpe3JldHVybiB0aGlzLmxlbmd0aEluTm9kZXN9Z2V0IHNpemUoKXtyZXR1cm4gdGhpcy5zaXplSW5CeXRlc310b09yZGVyZWRBcnJheSgpe3JldHVybiBBcnJheS5mcm9tKHRoaXMpfVtTeW1ib2wuaXRlcmF0b3JdKCl7bGV0IGU9dGhpcy5oZWFkO3JldHVybntuZXh0OigpPT57aWYoIWUpcmV0dXJue2RvbmU6ITAsdmFsdWU6bnVsbH07Y29uc3QgdD1lLnZhbHVlO3JldHVybiBlPWUubmV4dCx7ZG9uZTohMSx2YWx1ZTp0fX19fX1jbGFzcyBMe2NvbnN0cnVjdG9yKGUsdD1sKXt0aGlzLmxldmVsPWU/P1wiZXJyb3JcIix0aGlzLmxldmVsVmFsdWU9cy52YWx1ZXNbdGhpcy5sZXZlbF0sdGhpcy5NQVhfTE9HX1NJWkVfSU5fQllURVM9dCx0aGlzLmxvZ3M9bmV3IGQodGhpcy5NQVhfTE9HX1NJWkVfSU5fQllURVMpfWZvcndhcmRUb0NvbnNvbGUoZSx0KXt0PT09cy52YWx1ZXMuZXJyb3I/Y29uc29sZS5lcnJvcihlKTp0PT09cy52YWx1ZXMud2Fybj9jb25zb2xlLndhcm4oZSk6dD09PXMudmFsdWVzLmRlYnVnP2NvbnNvbGUuZGVidWcoZSk6dD09PXMudmFsdWVzLnRyYWNlP2NvbnNvbGUudHJhY2UoZSk6Y29uc29sZS5sb2coZSl9YXBwZW5kVG9Mb2dzKGUpe3RoaXMubG9ncy5hcHBlbmQodSh7dGltZXN0YW1wOm5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxsb2c6ZX0pKTtjb25zdCB0PXR5cGVvZiBlPT1cInN0cmluZ1wiP0pTT04ucGFyc2UoZSkubGV2ZWw6ZS5sZXZlbDt0Pj10aGlzLmxldmVsVmFsdWUmJnRoaXMuZm9yd2FyZFRvQ29uc29sZShlLHQpfWdldExvZ3MoKXtyZXR1cm4gdGhpcy5sb2dzfWNsZWFyTG9ncygpe3RoaXMubG9ncz1uZXcgZCh0aGlzLk1BWF9MT0dfU0laRV9JTl9CWVRFUyl9Z2V0TG9nQXJyYXkoKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmxvZ3MpfWxvZ3NUb0Jsb2IoZSl7Y29uc3QgdD10aGlzLmdldExvZ0FycmF5KCk7cmV0dXJuIHQucHVzaCh1KHtleHRyYU1ldGFkYXRhOmV9KSksbmV3IEJsb2IodCx7dHlwZTpcImFwcGxpY2F0aW9uL2pzb25cIn0pfX1jbGFzcyBte2NvbnN0cnVjdG9yKGUsdD1sKXt0aGlzLmJhc2VDaHVua0xvZ2dlcj1uZXcgTChlLHQpfXdyaXRlKGUpe3RoaXMuYmFzZUNodW5rTG9nZ2VyLmFwcGVuZFRvTG9ncyhlKX1nZXRMb2dzKCl7cmV0dXJuIHRoaXMuYmFzZUNodW5rTG9nZ2VyLmdldExvZ3MoKX1jbGVhckxvZ3MoKXt0aGlzLmJhc2VDaHVua0xvZ2dlci5jbGVhckxvZ3MoKX1nZXRMb2dBcnJheSgpe3JldHVybiB0aGlzLmJhc2VDaHVua0xvZ2dlci5nZXRMb2dBcnJheSgpfWxvZ3NUb0Jsb2IoZSl7cmV0dXJuIHRoaXMuYmFzZUNodW5rTG9nZ2VyLmxvZ3NUb0Jsb2IoZSl9ZG93bmxvYWRMb2dzQmxvYkluQnJvd3NlcihlKXtjb25zdCB0PVVSTC5jcmVhdGVPYmplY3RVUkwodGhpcy5sb2dzVG9CbG9iKGUpKSxvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO28uaHJlZj10LG8uZG93bmxvYWQ9YHdhbGxldGNvbm5lY3QtbG9ncy0ke25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX0udHh0YCxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG8pLG8uY2xpY2soKSxkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKG8pLFVSTC5yZXZva2VPYmplY3RVUkwodCl9fWNsYXNzIEJ7Y29uc3RydWN0b3IoZSx0PWwpe3RoaXMuYmFzZUNodW5rTG9nZ2VyPW5ldyBMKGUsdCl9d3JpdGUoZSl7dGhpcy5iYXNlQ2h1bmtMb2dnZXIuYXBwZW5kVG9Mb2dzKGUpfWdldExvZ3MoKXtyZXR1cm4gdGhpcy5iYXNlQ2h1bmtMb2dnZXIuZ2V0TG9ncygpfWNsZWFyTG9ncygpe3RoaXMuYmFzZUNodW5rTG9nZ2VyLmNsZWFyTG9ncygpfWdldExvZ0FycmF5KCl7cmV0dXJuIHRoaXMuYmFzZUNodW5rTG9nZ2VyLmdldExvZ0FycmF5KCl9bG9nc1RvQmxvYihlKXtyZXR1cm4gdGhpcy5iYXNlQ2h1bmtMb2dnZXIubG9nc1RvQmxvYihlKX19dmFyIHg9T2JqZWN0LmRlZmluZVByb3BlcnR5LFM9T2JqZWN0LmRlZmluZVByb3BlcnRpZXMsXz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyxwPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsVD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHo9T2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxmPShyLGUsdCk9PmUgaW4gcj94KHIsZSx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6dH0pOnJbZV09dCxpPShyLGUpPT57Zm9yKHZhciB0IGluIGV8fChlPXt9KSlULmNhbGwoZSx0KSYmZihyLHQsZVt0XSk7aWYocClmb3IodmFyIHQgb2YgcChlKSl6LmNhbGwoZSx0KSYmZihyLHQsZVt0XSk7cmV0dXJuIHJ9LGc9KHIsZSk9PlMocixfKGUpKTtmdW5jdGlvbiBrKHIpe3JldHVybiBnKGkoe30scikse2xldmVsOnI/LmxldmVsfHxjLmxldmVsfSl9ZnVuY3Rpb24gdihyLGU9bil7cmV0dXJuIHJbZV18fFwiXCJ9ZnVuY3Rpb24gYihyLGUsdD1uKXtyZXR1cm4gclt0XT1lLHJ9ZnVuY3Rpb24geShyLGU9bil7bGV0IHQ9XCJcIjtyZXR1cm4gdHlwZW9mIHIuYmluZGluZ3M+XCJ1XCI/dD12KHIsZSk6dD1yLmJpbmRpbmdzKCkuY29udGV4dHx8XCJcIix0fWZ1bmN0aW9uIHcocixlLHQ9bil7Y29uc3Qgbz15KHIsdCk7cmV0dXJuIG8udHJpbSgpP2Ake299LyR7ZX1gOmV9ZnVuY3Rpb24gRShyLGUsdD1uKXtjb25zdCBvPXcocixlLHQpLGE9ci5jaGlsZCh7Y29udGV4dDpvfSk7cmV0dXJuIGIoYSxvLHQpfWZ1bmN0aW9uIEMocil7dmFyIGUsdDtjb25zdCBvPW5ldyBtKChlPXIub3B0cyk9PW51bGw/dm9pZCAwOmUubGV2ZWwsci5tYXhTaXplSW5CeXRlcyk7cmV0dXJue2xvZ2dlcjpoKGcoaSh7fSxyLm9wdHMpLHtsZXZlbDpcInRyYWNlXCIsYnJvd3NlcjpnKGkoe30sKHQ9ci5vcHRzKT09bnVsbD92b2lkIDA6dC5icm93c2VyKSx7d3JpdGU6YT0+by53cml0ZShhKX0pfSkpLGNodW5rTG9nZ2VyQ29udHJvbGxlcjpvfX1mdW5jdGlvbiBJKHIpe3ZhciBlO2NvbnN0IHQ9bmV3IEIoKGU9ci5vcHRzKT09bnVsbD92b2lkIDA6ZS5sZXZlbCxyLm1heFNpemVJbkJ5dGVzKTtyZXR1cm57bG9nZ2VyOmgoZyhpKHt9LHIub3B0cykse2xldmVsOlwidHJhY2VcIn0pLHQpLGNodW5rTG9nZ2VyQ29udHJvbGxlcjp0fX1mdW5jdGlvbiBBKHIpe3JldHVybiB0eXBlb2Ygci5sb2dnZXJPdmVycmlkZTxcInVcIiYmdHlwZW9mIHIubG9nZ2VyT3ZlcnJpZGUhPVwic3RyaW5nXCI/e2xvZ2dlcjpyLmxvZ2dlck92ZXJyaWRlLGNodW5rTG9nZ2VyQ29udHJvbGxlcjpudWxsfTp0eXBlb2Ygd2luZG93PFwidVwiP0Mocik6SShyKX1leHBvcnR7bCBhcyBNQVhfTE9HX1NJWkVfSU5fQllURVNfREVGQVVMVCxuIGFzIFBJTk9fQ1VTVE9NX0NPTlRFWFRfS0VZLGMgYXMgUElOT19MT0dHRVJfREVGQVVMVFMsdyBhcyBmb3JtYXRDaGlsZExvZ2dlckNvbnRleHQsRSBhcyBnZW5lcmF0ZUNoaWxkTG9nZ2VyLEMgYXMgZ2VuZXJhdGVDbGllbnRMb2dnZXIsQSBhcyBnZW5lcmF0ZVBsYXRmb3JtTG9nZ2VyLEkgYXMgZ2VuZXJhdGVTZXJ2ZXJMb2dnZXIsdiBhcyBnZXRCcm93c2VyTG9nZ2VyQ29udGV4dCxrIGFzIGdldERlZmF1bHRMb2dnZXJPcHRpb25zLHkgYXMgZ2V0TG9nZ2VyQ29udGV4dCxVIGFzIHBpbm8sYiBhcyBzZXRCcm93c2VyTG9nZ2VyQ29udGV4dH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJoIiwibGV2ZWxzIiwicyIsImRlZmF1bHQiLCJVIiwic2FmZUpzb25TdHJpbmdpZnkiLCJ1IiwiYyIsImxldmVsIiwibiIsImwiLCJPIiwiY29uc3RydWN0b3IiLCJlIiwibm9kZVZhbHVlIiwic2l6ZUluQnl0ZXMiLCJUZXh0RW5jb2RlciIsImVuY29kZSIsImxlbmd0aCIsIm5leHQiLCJ2YWx1ZSIsInNpemUiLCJkIiwiaGVhZCIsInRhaWwiLCJsZW5ndGhJbk5vZGVzIiwibWF4U2l6ZUluQnl0ZXMiLCJhcHBlbmQiLCJ0IiwiRXJyb3IiLCJzaGlmdCIsInRvQXJyYXkiLCJwdXNoIiwidG9PcmRlcmVkQXJyYXkiLCJBcnJheSIsImZyb20iLCJTeW1ib2wiLCJpdGVyYXRvciIsImRvbmUiLCJMIiwibGV2ZWxWYWx1ZSIsInZhbHVlcyIsIk1BWF9MT0dfU0laRV9JTl9CWVRFUyIsImxvZ3MiLCJmb3J3YXJkVG9Db25zb2xlIiwiZXJyb3IiLCJjb25zb2xlIiwid2FybiIsImRlYnVnIiwidHJhY2UiLCJsb2ciLCJhcHBlbmRUb0xvZ3MiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJKU09OIiwicGFyc2UiLCJnZXRMb2dzIiwiY2xlYXJMb2dzIiwiZ2V0TG9nQXJyYXkiLCJsb2dzVG9CbG9iIiwiZXh0cmFNZXRhZGF0YSIsIkJsb2IiLCJ0eXBlIiwibSIsImJhc2VDaHVua0xvZ2dlciIsIndyaXRlIiwiZG93bmxvYWRMb2dzQmxvYkluQnJvd3NlciIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsIm8iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJocmVmIiwiZG93bmxvYWQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjbGljayIsInJlbW92ZUNoaWxkIiwicmV2b2tlT2JqZWN0VVJMIiwiQiIsIngiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIlMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiXyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJwIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiVCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwieiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiZiIsInIiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJpIiwiY2FsbCIsImciLCJrIiwidiIsImIiLCJ5IiwiYmluZGluZ3MiLCJjb250ZXh0IiwidyIsInRyaW0iLCJFIiwiYSIsImNoaWxkIiwiQyIsIm9wdHMiLCJsb2dnZXIiLCJicm93c2VyIiwiY2h1bmtMb2dnZXJDb250cm9sbGVyIiwiSSIsIkEiLCJsb2dnZXJPdmVycmlkZSIsIk1BWF9MT0dfU0laRV9JTl9CWVRFU19ERUZBVUxUIiwiUElOT19DVVNUT01fQ09OVEVYVF9LRVkiLCJQSU5PX0xPR0dFUl9ERUZBVUxUUyIsImZvcm1hdENoaWxkTG9nZ2VyQ29udGV4dCIsImdlbmVyYXRlQ2hpbGRMb2dnZXIiLCJnZW5lcmF0ZUNsaWVudExvZ2dlciIsImdlbmVyYXRlUGxhdGZvcm1Mb2dnZXIiLCJnZW5lcmF0ZVNlcnZlckxvZ2dlciIsImdldEJyb3dzZXJMb2dnZXJDb250ZXh0IiwiZ2V0RGVmYXVsdExvZ2dlck9wdGlvbnMiLCJnZXRMb2dnZXJDb250ZXh0IiwicGlubyIsInNldEJyb3dzZXJMb2dnZXJDb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-api/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* binding */ C),\n/* harmony export */   isPublishMethod: () => (/* binding */ c),\n/* harmony export */   isPublishParams: () => (/* binding */ h),\n/* harmony export */   isPublishRequest: () => (/* binding */ P),\n/* harmony export */   isSubscribeMethod: () => (/* binding */ b),\n/* harmony export */   isSubscribeParams: () => (/* binding */ a),\n/* harmony export */   isSubscribeRequest: () => (/* binding */ R),\n/* harmony export */   isSubscriptionMethod: () => (/* binding */ m),\n/* harmony export */   isSubscriptionParams: () => (/* binding */ d),\n/* harmony export */   isSubscriptionRequest: () => (/* binding */ S),\n/* harmony export */   isUnsubscribeMethod: () => (/* binding */ o),\n/* harmony export */   isUnsubscribeParams: () => (/* binding */ p),\n/* harmony export */   isUnsubscribeRequest: () => (/* binding */ _),\n/* harmony export */   parsePublishRequest: () => (/* binding */ q),\n/* harmony export */   parseSubscribeRequest: () => (/* binding */ g),\n/* harmony export */   parseSubscriptionRequest: () => (/* binding */ k),\n/* harmony export */   parseUnsubscribeRequest: () => (/* binding */ E)\n/* harmony export */ });\nfunction e(s, r, i = \"string\") {\n    if (!s[r] || typeof s[r] !== i) throw new Error(`Missing or invalid \"${r}\" param`);\n}\nfunction l(s, r) {\n    let i = !0;\n    return r.forEach((t)=>{\n        t in s || (i = !1);\n    }), i;\n}\nfunction f(s, r) {\n    return Array.isArray(s) ? s.length === r : Object.keys(s).length === r;\n}\nfunction w(s, r) {\n    return Array.isArray(s) ? s.length >= r : Object.keys(s).length >= r;\n}\nfunction u(s, r, i) {\n    return (i.length ? w(s, r.length) : f(s, r.length)) ? l(s, r) : !1;\n}\nfunction n(s, r, i = \"_\") {\n    const t = s.split(i);\n    return t[t.length - 1].trim().toLowerCase() === r.trim().toLowerCase();\n}\nfunction R(s) {\n    return b(s.method) && a(s.params);\n}\nfunction b(s) {\n    return n(s, \"subscribe\");\n}\nfunction a(s) {\n    return u(s, [\n        \"topic\"\n    ], []);\n}\nfunction P(s) {\n    return c(s.method) && h(s.params);\n}\nfunction c(s) {\n    return n(s, \"publish\");\n}\nfunction h(s) {\n    return u(s, [\n        \"message\",\n        \"topic\",\n        \"ttl\"\n    ], [\n        \"prompt\",\n        \"tag\"\n    ]);\n}\nfunction _(s) {\n    return o(s.method) && p(s.params);\n}\nfunction o(s) {\n    return n(s, \"unsubscribe\");\n}\nfunction p(s) {\n    return u(s, [\n        \"id\",\n        \"topic\"\n    ], []);\n}\nfunction S(s) {\n    return m(s.method) && d(s.params);\n}\nfunction m(s) {\n    return n(s, \"subscription\");\n}\nfunction d(s) {\n    return u(s, [\n        \"id\",\n        \"data\"\n    ], []);\n}\nfunction g(s) {\n    if (!b(s.method)) throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n    if (!a(s.params)) throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n    const r = s.params;\n    return e(r, \"topic\"), r;\n}\nfunction q(s) {\n    if (!c(s.method)) throw new Error(\"JSON-RPC Request has invalid publish method\");\n    if (!h(s.params)) throw new Error(\"JSON-RPC Request has invalid publish params\");\n    const r = s.params;\n    return e(r, \"topic\"), e(r, \"message\"), e(r, \"ttl\", \"number\"), r;\n}\nfunction E(s) {\n    if (!o(s.method)) throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n    if (!p(s.params)) throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n    const r = s.params;\n    return e(r, \"id\"), r;\n}\nfunction k(s) {\n    if (!m(s.method)) throw new Error(\"JSON-RPC Request has invalid subscription method\");\n    if (!d(s.params)) throw new Error(\"JSON-RPC Request has invalid subscription params\");\n    const r = s.params;\n    return e(r, \"id\"), e(r, \"data\"), r;\n}\nconst C = {\n    waku: {\n        publish: \"waku_publish\",\n        batchPublish: \"waku_batchPublish\",\n        subscribe: \"waku_subscribe\",\n        batchSubscribe: \"waku_batchSubscribe\",\n        subscription: \"waku_subscription\",\n        unsubscribe: \"waku_unsubscribe\",\n        batchUnsubscribe: \"waku_batchUnsubscribe\",\n        batchFetchMessages: \"waku_batchFetchMessages\"\n    },\n    irn: {\n        publish: \"irn_publish\",\n        batchPublish: \"irn_batchPublish\",\n        subscribe: \"irn_subscribe\",\n        batchSubscribe: \"irn_batchSubscribe\",\n        subscription: \"irn_subscription\",\n        unsubscribe: \"irn_unsubscribe\",\n        batchUnsubscribe: \"irn_batchUnsubscribe\",\n        batchFetchMessages: \"irn_batchFetchMessages\"\n    },\n    iridium: {\n        publish: \"iridium_publish\",\n        batchPublish: \"iridium_batchPublish\",\n        subscribe: \"iridium_subscribe\",\n        batchSubscribe: \"iridium_batchSubscribe\",\n        subscription: \"iridium_subscription\",\n        unsubscribe: \"iridium_unsubscribe\",\n        batchUnsubscribe: \"iridium_batchUnsubscribe\",\n        batchFetchMessages: \"iridium_batchFetchMessages\"\n    }\n};\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   signJWT: () => (/* binding */ signJWT),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/ed25519 */ \"(ssr)/./node_modules/@stablelib/ed25519/lib/ed25519.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n\n\nfunction generateKeyPair(seed = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(_constants__WEBPACK_IMPORTED_MODULE_3__.KEY_PAIR_SEED_LENGTH)) {\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.generateKeyPairFromSeed(seed);\n}\nasync function signJWT(sub, aud, ttl, keyPair, iat = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.fromMiliseconds)(Date.now())) {\n    const header = {\n        alg: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG,\n        typ: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP\n    };\n    const iss = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeIss)(keyPair.publicKey);\n    const exp = iat + ttl;\n    const payload = {\n        iss,\n        sub,\n        aud,\n        iat,\n        exp\n    };\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeData)({\n        header,\n        payload\n    });\n    const signature = _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.sign(keyPair.secretKey, data);\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeJWT)({\n        header,\n        payload,\n        signature\n    });\n}\nasync function verifyJWT(jwt) {\n    const { header, payload, data, signature } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(jwt);\n    if (header.alg !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG || header.typ !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP) {\n        throw new Error(\"JWT must use EdDSA algorithm\");\n    }\n    const publicKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeIss)(payload.iss);\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.verify(publicKey, data, signature);\n} //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0U7QUFDTTtBQUNnQztBQUNKO0FBQzNFLFNBQVNXLGdCQUFnQkMsT0FBT1gsOERBQVdBLENBQUNJLDREQUFvQkEsQ0FBQztJQUNwRSxPQUFPTCx1RUFBK0IsQ0FBQ1k7QUFDM0M7QUFDTyxlQUFlRSxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLE1BQU1qQixvRUFBZUEsQ0FBQ2tCLEtBQUtDLEdBQUcsR0FBRztJQUNuRixNQUFNQyxTQUFTO1FBQUVDLEtBQUtwQix1REFBZUE7UUFBRXFCLEtBQUtwQix1REFBZUE7SUFBQztJQUM1RCxNQUFNcUIsTUFBTWhCLGlEQUFTQSxDQUFDUyxRQUFRUSxTQUFTO0lBQ3ZDLE1BQU1DLE1BQU1SLE1BQU1GO0lBQ2xCLE1BQU1XLFVBQVU7UUFBRUg7UUFBS1Y7UUFBS0M7UUFBS0c7UUFBS1E7SUFBSTtJQUMxQyxNQUFNRSxPQUFPckIsa0RBQVVBLENBQUM7UUFBRWM7UUFBUU07SUFBUTtJQUMxQyxNQUFNRSxZQUFZOUIsb0RBQVksQ0FBQ2tCLFFBQVFjLFNBQVMsRUFBRUg7SUFDbEQsT0FBT25CLGlEQUFTQSxDQUFDO1FBQUVZO1FBQVFNO1FBQVNFO0lBQVU7QUFDbEQ7QUFDTyxlQUFlRyxVQUFVQyxHQUFHO0lBQy9CLE1BQU0sRUFBRVosTUFBTSxFQUFFTSxPQUFPLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFLEdBQUd2QixpREFBU0EsQ0FBQzJCO0lBQ3ZELElBQUlaLE9BQU9DLEdBQUcsS0FBS3BCLHVEQUFlQSxJQUFJbUIsT0FBT0UsR0FBRyxLQUFLcEIsdURBQWVBLEVBQUU7UUFDbEUsTUFBTSxJQUFJK0IsTUFBTTtJQUNwQjtJQUNBLE1BQU1ULFlBQVlwQixpREFBU0EsQ0FBQ3NCLFFBQVFILEdBQUc7SUFDdkMsT0FBT3pCLHNEQUFjLENBQUMwQixXQUFXRyxNQUFNQztBQUMzQyxFQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL2Rpc3QvZXNtL2FwaS5qcz8yYzQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGVkMjU1MTkgZnJvbSBcIkBzdGFibGVsaWIvZWQyNTUxOVwiO1xuaW1wb3J0IHsgcmFuZG9tQnl0ZXMgfSBmcm9tIFwiQHN0YWJsZWxpYi9yYW5kb21cIjtcbmltcG9ydCB7IGZyb21NaWxpc2Vjb25kcyB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC90aW1lXCI7XG5pbXBvcnQgeyBKV1RfSVJJRElVTV9BTEcsIEpXVF9JUklESVVNX1RZUCwgS0VZX1BBSVJfU0VFRF9MRU5HVEgsIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBkZWNvZGVJc3MsIGRlY29kZUpXVCwgZW5jb2RlRGF0YSwgZW5jb2RlSXNzLCBlbmNvZGVKV1QsIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUtleVBhaXIoc2VlZCA9IHJhbmRvbUJ5dGVzKEtFWV9QQUlSX1NFRURfTEVOR1RIKSkge1xuICAgIHJldHVybiBlZDI1NTE5LmdlbmVyYXRlS2V5UGFpckZyb21TZWVkKHNlZWQpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25KV1Qoc3ViLCBhdWQsIHR0bCwga2V5UGFpciwgaWF0ID0gZnJvbU1pbGlzZWNvbmRzKERhdGUubm93KCkpKSB7XG4gICAgY29uc3QgaGVhZGVyID0geyBhbGc6IEpXVF9JUklESVVNX0FMRywgdHlwOiBKV1RfSVJJRElVTV9UWVAgfTtcbiAgICBjb25zdCBpc3MgPSBlbmNvZGVJc3Moa2V5UGFpci5wdWJsaWNLZXkpO1xuICAgIGNvbnN0IGV4cCA9IGlhdCArIHR0bDtcbiAgICBjb25zdCBwYXlsb2FkID0geyBpc3MsIHN1YiwgYXVkLCBpYXQsIGV4cCB9O1xuICAgIGNvbnN0IGRhdGEgPSBlbmNvZGVEYXRhKHsgaGVhZGVyLCBwYXlsb2FkIH0pO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IGVkMjU1MTkuc2lnbihrZXlQYWlyLnNlY3JldEtleSwgZGF0YSk7XG4gICAgcmV0dXJuIGVuY29kZUpXVCh7IGhlYWRlciwgcGF5bG9hZCwgc2lnbmF0dXJlIH0pO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUpXVChqd3QpIHtcbiAgICBjb25zdCB7IGhlYWRlciwgcGF5bG9hZCwgZGF0YSwgc2lnbmF0dXJlIH0gPSBkZWNvZGVKV1Qoand0KTtcbiAgICBpZiAoaGVhZGVyLmFsZyAhPT0gSldUX0lSSURJVU1fQUxHIHx8IGhlYWRlci50eXAgIT09IEpXVF9JUklESVVNX1RZUCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKV1QgbXVzdCB1c2UgRWREU0EgYWxnb3JpdGhtXCIpO1xuICAgIH1cbiAgICBjb25zdCBwdWJsaWNLZXkgPSBkZWNvZGVJc3MocGF5bG9hZC5pc3MpO1xuICAgIHJldHVybiBlZDI1NTE5LnZlcmlmeShwdWJsaWNLZXksIGRhdGEsIHNpZ25hdHVyZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwIl0sIm5hbWVzIjpbImVkMjU1MTkiLCJyYW5kb21CeXRlcyIsImZyb21NaWxpc2Vjb25kcyIsIkpXVF9JUklESVVNX0FMRyIsIkpXVF9JUklESVVNX1RZUCIsIktFWV9QQUlSX1NFRURfTEVOR1RIIiwiZGVjb2RlSXNzIiwiZGVjb2RlSldUIiwiZW5jb2RlRGF0YSIsImVuY29kZUlzcyIsImVuY29kZUpXVCIsImdlbmVyYXRlS2V5UGFpciIsInNlZWQiLCJnZW5lcmF0ZUtleVBhaXJGcm9tU2VlZCIsInNpZ25KV1QiLCJzdWIiLCJhdWQiLCJ0dGwiLCJrZXlQYWlyIiwiaWF0IiwiRGF0ZSIsIm5vdyIsImhlYWRlciIsImFsZyIsInR5cCIsImlzcyIsInB1YmxpY0tleSIsImV4cCIsInBheWxvYWQiLCJkYXRhIiwic2lnbmF0dXJlIiwic2lnbiIsInNlY3JldEtleSIsInZlcmlmeUpXVCIsImp3dCIsIkVycm9yIiwidmVyaWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* binding */ DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* binding */ DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* binding */ DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* binding */ DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* binding */ JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* binding */ JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* binding */ JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* binding */ JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* binding */ JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* binding */ KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* binding */ MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* binding */ MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* binding */ MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* binding */ MULTICODEC_ED25519_LENGTH)\n/* harmony export */ });\nconst JWT_IRIDIUM_ALG = \"EdDSA\";\nconst JWT_IRIDIUM_TYP = \"JWT\";\nconst JWT_DELIMITER = \".\";\nconst JWT_ENCODING = \"base64url\";\nconst JSON_ENCODING = \"utf8\";\nconst DATA_ENCODING = \"utf8\";\nconst DID_DELIMITER = \":\";\nconst DID_PREFIX = \"did\";\nconst DID_METHOD = \"key\";\nconst MULTICODEC_ED25519_ENCODING = \"base58btc\";\nconst MULTICODEC_ED25519_BASE = \"z\";\nconst MULTICODEC_ED25519_HEADER = \"K36\";\nconst MULTICODEC_ED25519_LENGTH = 32;\nconst KEY_PAIR_SEED_LENGTH = 32; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxrQkFBa0IsUUFBUTtBQUNoQyxNQUFNQyxrQkFBa0IsTUFBTTtBQUM5QixNQUFNQyxnQkFBZ0IsSUFBSTtBQUMxQixNQUFNQyxlQUFlLFlBQVk7QUFDakMsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLElBQUk7QUFDMUIsTUFBTUMsYUFBYSxNQUFNO0FBQ3pCLE1BQU1DLGFBQWEsTUFBTTtBQUN6QixNQUFNQyw4QkFBOEIsWUFBWTtBQUNoRCxNQUFNQywwQkFBMEIsSUFBSTtBQUNwQyxNQUFNQyw0QkFBNEIsTUFBTTtBQUN4QyxNQUFNQyw0QkFBNEIsR0FBRztBQUNyQyxNQUFNQyx1QkFBdUIsR0FBRyxDQUN2QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9jb25zdGFudHMuanM/NWQ4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgSldUX0lSSURJVU1fQUxHID0gXCJFZERTQVwiO1xuZXhwb3J0IGNvbnN0IEpXVF9JUklESVVNX1RZUCA9IFwiSldUXCI7XG5leHBvcnQgY29uc3QgSldUX0RFTElNSVRFUiA9IFwiLlwiO1xuZXhwb3J0IGNvbnN0IEpXVF9FTkNPRElORyA9IFwiYmFzZTY0dXJsXCI7XG5leHBvcnQgY29uc3QgSlNPTl9FTkNPRElORyA9IFwidXRmOFwiO1xuZXhwb3J0IGNvbnN0IERBVEFfRU5DT0RJTkcgPSBcInV0ZjhcIjtcbmV4cG9ydCBjb25zdCBESURfREVMSU1JVEVSID0gXCI6XCI7XG5leHBvcnQgY29uc3QgRElEX1BSRUZJWCA9IFwiZGlkXCI7XG5leHBvcnQgY29uc3QgRElEX01FVEhPRCA9IFwia2V5XCI7XG5leHBvcnQgY29uc3QgTVVMVElDT0RFQ19FRDI1NTE5X0VOQ09ESU5HID0gXCJiYXNlNThidGNcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfQkFTRSA9IFwielwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIgPSBcIkszNlwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9MRU5HVEggPSAzMjtcbmV4cG9ydCBjb25zdCBLRVlfUEFJUl9TRUVEX0xFTkdUSCA9IDMyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJKV1RfSVJJRElVTV9BTEciLCJKV1RfSVJJRElVTV9UWVAiLCJKV1RfREVMSU1JVEVSIiwiSldUX0VOQ09ESU5HIiwiSlNPTl9FTkNPRElORyIsIkRBVEFfRU5DT0RJTkciLCJESURfREVMSU1JVEVSIiwiRElEX1BSRUZJWCIsIkRJRF9NRVRIT0QiLCJNVUxUSUNPREVDX0VEMjU1MTlfRU5DT0RJTkciLCJNVUxUSUNPREVDX0VEMjU1MTlfQkFTRSIsIk1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIiLCJNVUxUSUNPREVDX0VEMjU1MTlfTEVOR1RIIiwiS0VZX1BBSVJfU0VFRF9MRU5HVEgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_LENGTH),\n/* harmony export */   decodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeData),\n/* harmony export */   decodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeIss),\n/* harmony export */   decodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJSON),\n/* harmony export */   decodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJWT),\n/* harmony export */   decodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeSig),\n/* harmony export */   encodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeData),\n/* harmony export */   encodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeIss),\n/* harmony export */   encodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJSON),\n/* harmony export */   encodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJWT),\n/* harmony export */   encodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeSig),\n/* harmony export */   generateKeyPair: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair),\n/* harmony export */   signJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.signJWT),\n/* harmony export */   verifyJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"generateKeyPair\",\"signJWT\",\"verifyJWT\",\"DATA_ENCODING\",\"DID_DELIMITER\",\"DID_METHOD\",\"DID_PREFIX\",\"JSON_ENCODING\",\"JWT_DELIMITER\",\"JWT_ENCODING\",\"JWT_IRIDIUM_ALG\",\"JWT_IRIDIUM_TYP\",\"KEY_PAIR_SEED_LENGTH\",\"MULTICODEC_ED25519_BASE\",\"MULTICODEC_ED25519_ENCODING\",\"MULTICODEC_ED25519_HEADER\",\"MULTICODEC_ED25519_LENGTH\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQjtBQUNNO0FBQ0o7QUFDQSxDQUN4QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9pbmRleC5qcz81NGUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2FwaVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/types.js ***!
  \******************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS90eXBlcy5qcz82NzNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUMiLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS90eXBlcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeData: () => (/* binding */ decodeData),\n/* harmony export */   decodeIss: () => (/* binding */ decodeIss),\n/* harmony export */   decodeJSON: () => (/* binding */ decodeJSON),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   decodeSig: () => (/* binding */ decodeSig),\n/* harmony export */   encodeData: () => (/* binding */ encodeData),\n/* harmony export */   encodeIss: () => (/* binding */ encodeIss),\n/* harmony export */   encodeJSON: () => (/* binding */ encodeJSON),\n/* harmony export */   encodeJWT: () => (/* binding */ encodeJWT),\n/* harmony export */   encodeSig: () => (/* binding */ encodeSig)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n\n\n\n\n\nfunction decodeJSON(str) {\n    return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonParse)((0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(str, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonStringify)(val), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    const header = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(_constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER, _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const multicodec = _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__.concat)([\n        header,\n        publicKey\n    ]), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    return [\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX,\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD,\n        multicodec\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n    if (prefix !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX || method !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    const base = multicodec.slice(0, 1);\n    if (base !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE) {\n        throw new Error(`Issuer must be a key in mulicodec format`);\n    }\n    const bytes = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(multicodec.slice(1), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const type = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes.slice(0, 2), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    if (type !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER) {\n        throw new Error(`Issuer must be a public key with type \"Ed25519\"`);\n    }\n    const publicKey = bytes.slice(2);\n    if (publicKey.length !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\nfunction encodeSig(bytes) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(encoded, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeData(params) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)([\n        encodeJSON(params.header),\n        encodeJSON(params.payload)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    const params = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(data, _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING).split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    return {\n        header,\n        payload\n    };\n}\nfunction encodeJWT(params) {\n    return [\n        encodeJSON(params.header),\n        encodeJSON(params.payload),\n        encodeSig(params.signature)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    const params = jwt.split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    const signature = decodeSig(params[2]);\n    const data = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(params.slice(0, 2).join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n    return {\n        header,\n        payload,\n        signature,\n        data\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),\n/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)\n/* harmony export */ });\nconst JSONStringify = (data)=>JSON.stringify(data, (_, value)=>typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = (json)=>{\n    const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, '$1\"$2n\"$3');\n    return JSON.parse(serializedData, (_, value)=>{\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    } catch (_a) {\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsZ0JBQWdCQyxDQUFBQSxPQUFRQyxLQUFLQyxTQUFTLENBQUNGLE1BQU0sQ0FBQ0csR0FBR0MsUUFBVSxPQUFPQSxVQUFVLFdBQVdBLE1BQU1DLFFBQVEsS0FBSyxNQUFNRDtBQUN0SCxNQUFNRSxZQUFZQyxDQUFBQTtJQUNkLE1BQU1DLDBCQUEwQjtJQUNoQyxNQUFNQyxpQkFBaUJGLEtBQUtHLE9BQU8sQ0FBQ0YseUJBQXlCO0lBQzdELE9BQU9QLEtBQUtVLEtBQUssQ0FBQ0YsZ0JBQWdCLENBQUNOLEdBQUdDO1FBQ2xDLE1BQU1RLHVCQUF1QixPQUFPUixVQUFVLFlBQVlBLE1BQU1TLEtBQUssQ0FBQztRQUN0RSxJQUFJRCxzQkFDQSxPQUFPRSxPQUFPVixNQUFNVyxTQUFTLENBQUMsR0FBR1gsTUFBTVksTUFBTSxHQUFHO1FBQ3BELE9BQU9aO0lBQ1g7QUFDSjtBQUNPLFNBQVNhLGNBQWNiLEtBQUs7SUFDL0IsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJYyxNQUFNLENBQUMscUNBQXFDLEVBQUUsT0FBT2QsTUFBTSxDQUFDO0lBQzFFO0lBQ0EsSUFBSTtRQUNBLE9BQU9FLFVBQVVGO0lBQ3JCLEVBQ0EsT0FBT2UsSUFBSTtRQUNQLE9BQU9mO0lBQ1g7QUFDSjtBQUNPLFNBQVNnQixrQkFBa0JoQixLQUFLO0lBQ25DLE9BQU8sT0FBT0EsVUFBVSxXQUFXQSxRQUFRTCxjQUFjSyxVQUFVO0FBQ3ZFLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3NhZmUtanNvbi9kaXN0L2VzbS9pbmRleC5qcz9lMmQ5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpTT05TdHJpbmdpZnkgPSBkYXRhID0+IEpTT04uc3RyaW5naWZ5KGRhdGEsIChfLCB2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSBcImJpZ2ludFwiID8gdmFsdWUudG9TdHJpbmcoKSArIFwiblwiIDogdmFsdWUpO1xuY29uc3QgSlNPTlBhcnNlID0ganNvbiA9PiB7XG4gICAgY29uc3QgbnVtYmVyc0JpZ2dlclRoYW5NYXhJbnQgPSAvKFtcXFs6XSk/KFxcZHsxNyx9fCg/Ols5XSg/OlsxLTldMDcxOTkyNTQ3NDA5OTF8MFsxLTldNzE5OTI1NDc0MDk5MXwwMFs4LTldMTk5MjU0NzQwOTkxfDAwN1syLTldOTkyNTQ3NDA5OTF8MDA3MTk5WzMtOV01NDc0MDk5MXwwMDcxOTkyWzYtOV00NzQwOTkxfDAwNzE5OTI1WzUtOV03NDA5OTF8MDA3MTk5MjU0WzgtOV00MDk5MXwwMDcxOTkyNTQ3WzUtOV0wOTkxfDAwNzE5OTI1NDc0WzEtOV05OTF8MDA3MTk5MjU0NzQwOTlbMi05XSkpKShbLFxcfVxcXV0pL2c7XG4gICAgY29uc3Qgc2VyaWFsaXplZERhdGEgPSBqc29uLnJlcGxhY2UobnVtYmVyc0JpZ2dlclRoYW5NYXhJbnQsIFwiJDFcXFwiJDJuXFxcIiQzXCIpO1xuICAgIHJldHVybiBKU09OLnBhcnNlKHNlcmlhbGl6ZWREYXRhLCAoXywgdmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgaXNDdXN0b21Gb3JtYXRCaWdJbnQgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUubWF0Y2goL15cXGQrbiQvKTtcbiAgICAgICAgaWYgKGlzQ3VzdG9tRm9ybWF0QmlnSW50KVxuICAgICAgICAgICAgcmV0dXJuIEJpZ0ludCh2YWx1ZS5zdWJzdHJpbmcoMCwgdmFsdWUubGVuZ3RoIC0gMSkpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVKc29uUGFyc2UodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHNhZmUganNvbiBwYXJzZSB2YWx1ZSBvZiB0eXBlICR7dHlwZW9mIHZhbHVlfWApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTlBhcnNlKHZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2FmZUpzb25TdHJpbmdpZnkodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUgOiBKU09OU3RyaW5naWZ5KHZhbHVlKSB8fCBcIlwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkpTT05TdHJpbmdpZnkiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsIl8iLCJ2YWx1ZSIsInRvU3RyaW5nIiwiSlNPTlBhcnNlIiwianNvbiIsIm51bWJlcnNCaWdnZXJUaGFuTWF4SW50Iiwic2VyaWFsaXplZERhdGEiLCJyZXBsYWNlIiwicGFyc2UiLCJpc0N1c3RvbUZvcm1hdEJpZ0ludCIsIm1hdGNoIiwiQmlnSW50Iiwic3Vic3RyaW5nIiwibGVuZ3RoIiwic2FmZUpzb25QYXJzZSIsIkVycm9yIiwiX2EiLCJzYWZlSnNvblN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_CONTEXT: () => (/* binding */ lt),\n/* harmony export */   AUTH_KEYS_CONTEXT: () => (/* binding */ pt),\n/* harmony export */   AUTH_PAIRING_TOPIC_CONTEXT: () => (/* binding */ ht),\n/* harmony export */   AUTH_PROTOCOL: () => (/* binding */ ct),\n/* harmony export */   AUTH_PUBLIC_KEY_NAME: () => (/* binding */ ae),\n/* harmony export */   AUTH_REQUEST_CONTEXT: () => (/* binding */ dt),\n/* harmony export */   AUTH_STORAGE_PREFIX: () => (/* binding */ oe),\n/* harmony export */   AUTH_VERSION: () => (/* binding */ gs),\n/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ nt),\n/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ x),\n/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ v),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ hs),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ ps),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ ds),\n/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ at),\n/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ st),\n/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ us),\n/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ it),\n/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ ot),\n/* harmony export */   SESSION_CONTEXT: () => (/* binding */ rt),\n/* harmony export */   SESSION_EXPIRY: () => (/* binding */ z),\n/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ me),\n/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ Le),\n/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ we),\n/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ cs),\n/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ be),\n/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ ls),\n/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ ye),\n/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ Ce),\n/* harmony export */   SessionStore: () => (/* binding */ Ns),\n/* harmony export */   SignClient: () => (/* binding */ Ps),\n/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ xe),\n/* harmony export */   \"default\": () => (/* binding */ _e)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/core */ \"(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst be = \"wc\", Ce = 2, Le = \"client\", ye = `${be}@${Ce}:${Le}:`, we = {\n    name: Le,\n    logger: \"error\",\n    controller: !1,\n    relayUrl: \"wss://relay.walletconnect.org\"\n}, cs = {\n    session_proposal: \"session_proposal\",\n    session_update: \"session_update\",\n    session_extend: \"session_extend\",\n    session_ping: \"session_ping\",\n    session_delete: \"session_delete\",\n    session_expire: \"session_expire\",\n    session_request: \"session_request\",\n    session_request_sent: \"session_request_sent\",\n    session_event: \"session_event\",\n    proposal_expire: \"proposal_expire\",\n    session_authenticate: \"session_authenticate\",\n    session_request_expire: \"session_request_expire\"\n}, ls = {\n    database: \":memory:\"\n}, xe = \"WALLETCONNECT_DEEPLINK_CHOICE\", ps = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, hs = \"history\", ds = \"0.3\", st = \"proposal\", us = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_DAYS, it = \"Proposal expired\", rt = \"session\", z = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS, nt = \"engine\", v = {\n    wc_sessionPropose: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1100\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1101\n        },\n        reject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1120\n        },\n        autoReject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1121\n        }\n    },\n    wc_sessionSettle: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1102\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1103\n        }\n    },\n    wc_sessionUpdate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1104\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1105\n        }\n    },\n    wc_sessionExtend: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1106\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1107\n        }\n    },\n    wc_sessionRequest: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1108\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1109\n        }\n    },\n    wc_sessionEvent: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1110\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1111\n        }\n    },\n    wc_sessionDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1112\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1113\n        }\n    },\n    wc_sessionPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1114\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1115\n        }\n    },\n    wc_sessionAuthenticate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_HOUR,\n            prompt: !0,\n            tag: 1116\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_HOUR,\n            prompt: !1,\n            tag: 1117\n        },\n        reject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1118\n        },\n        autoReject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1119\n        }\n    }\n}, me = {\n    min: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n    max: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS\n}, x = {\n    idle: \"IDLE\",\n    active: \"ACTIVE\"\n}, ot = \"request\", at = [\n    \"wc_sessionPropose\",\n    \"wc_sessionRequest\",\n    \"wc_authRequest\",\n    \"wc_sessionAuthenticate\"\n], ct = \"wc\", gs = 1.5, lt = \"auth\", pt = \"authKeys\", ht = \"pairingTopics\", dt = \"requests\", oe = `${ct}@${1.5}:${lt}:`, ae = `${oe}:PUB_KEY`;\nvar ys = Object.defineProperty, ws = Object.defineProperties, ms = Object.getOwnPropertyDescriptors, ut = Object.getOwnPropertySymbols, _s = Object.prototype.hasOwnProperty, Es = Object.prototype.propertyIsEnumerable, gt = (q, o, e)=>o in q ? ys(q, o, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : q[o] = e, I = (q, o)=>{\n    for(var e in o || (o = {}))_s.call(o, e) && gt(q, e, o[e]);\n    if (ut) for (var e of ut(o))Es.call(o, e) && gt(q, e, o[e]);\n    return q;\n}, D = (q, o)=>ws(q, ms(o));\nclass Rs extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEngine {\n    constructor(o){\n        super(o), this.name = nt, this.events = new (events__WEBPACK_IMPORTED_MODULE_1___default()), this.initialized = !1, this.requestQueue = {\n            state: x.idle,\n            queue: []\n        }, this.sessionRequestQueue = {\n            state: x.idle,\n            queue: []\n        }, this.requestQueueDelay = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_SECOND, this.expectedPairingMethodMap = new Map, this.recentlyDeletedMap = new Map, this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async ()=>{\n            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({\n                methods: Object.keys(v)\n            }), this.initialized = !0, setTimeout(()=>{\n                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay)));\n        }, this.connect = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            const t = D(I({}, e), {\n                requiredNamespaces: e.requiredNamespaces || {},\n                optionalNamespaces: e.optionalNamespaces || {}\n            });\n            await this.isValidConnect(t);\n            const { pairingTopic: s, requiredNamespaces: i, optionalNamespaces: r, sessionProperties: n, relays: a } = t;\n            let c = s, h, p = !1;\n            try {\n                c && (p = this.client.core.pairing.pairings.get(c).active);\n            } catch (E) {\n                throw this.client.logger.error(`connect() -> pairing.get(${c}) failed`), E;\n            }\n            if (!c || !p) {\n                const { topic: E, uri: S } = await this.client.core.pairing.create();\n                c = E, h = S;\n            }\n            if (!c) {\n                const { message: E } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `connect() pairing topic: ${c}`);\n                throw new Error(E);\n            }\n            const d = await this.client.core.crypto.generateKeyPair(), l = v.wc_sessionPropose.req.ttl || _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES, w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(l), m = I({\n                requiredNamespaces: i,\n                optionalNamespaces: r,\n                relays: a ?? [\n                    {\n                        protocol: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_DEFAULT_PROTOCOL\n                    }\n                ],\n                proposer: {\n                    publicKey: d,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: w,\n                pairingTopic: c\n            }, n && {\n                sessionProperties: n\n            }), { reject: y, resolve: _, done: R } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(l, it);\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), async ({ error: E, session: S })=>{\n                if (E) y(E);\n                else if (S) {\n                    S.self.publicKey = d;\n                    const M = D(I({}, S), {\n                        pairingTopic: m.pairingTopic,\n                        requiredNamespaces: m.requiredNamespaces,\n                        optionalNamespaces: m.optionalNamespaces,\n                        transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n                    });\n                    await this.client.session.set(S.topic, M), await this.setExpiry(S.topic, S.expiry), c && await this.client.core.pairing.updateMetadata({\n                        topic: c,\n                        metadata: S.peer.metadata\n                    }), this.cleanupDuplicatePairings(M), _(M);\n                }\n            });\n            const V = await this.sendRequest({\n                topic: c,\n                method: \"wc_sessionPropose\",\n                params: m,\n                throwOnFailedPublish: !0\n            });\n            return await this.setProposal(V, I({\n                id: V\n            }, m)), {\n                uri: h,\n                approval: R\n            };\n        }, this.pair = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                return await this.client.core.pairing.pair(e);\n            } catch (t) {\n                throw this.client.logger.error(\"pair() failed\"), t;\n            }\n        }, this.approve = async (e)=>{\n            var t, s, i;\n            const r = this.client.core.eventClient.createEvent({\n                properties: {\n                    topic: (t = e?.id) == null ? void 0 : t.toString(),\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started\n                    ]\n                }\n            });\n            try {\n                this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            } catch (N) {\n                throw r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.no_internet_connection), N;\n            }\n            try {\n                await this.isValidProposalId(e?.id);\n            } catch (N) {\n                throw this.client.logger.error(`approve() -> proposal.get(${e?.id}) failed`), r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.proposal_not_found), N;\n            }\n            try {\n                await this.isValidApprove(e);\n            } catch (N) {\n                throw this.client.logger.error(\"approve() -> isValidApprove() failed\"), r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_approve_namespace_validation_failure), N;\n            }\n            const { id: n, relayProtocol: a, namespaces: c, sessionProperties: h, sessionConfig: p } = e, d = this.client.proposal.get(n);\n            this.client.core.eventClient.deleteEvent({\n                eventId: r.eventId\n            });\n            const { pairingTopic: l, proposer: w, requiredNamespaces: m, optionalNamespaces: y } = d;\n            let _ = (s = this.client.core.eventClient) == null ? void 0 : s.getEvent({\n                topic: l\n            });\n            _ || (_ = (i = this.client.core.eventClient) == null ? void 0 : i.createEvent({\n                type: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,\n                properties: {\n                    topic: l,\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_namespaces_validation_success\n                    ]\n                }\n            }));\n            const R = await this.client.core.crypto.generateKeyPair(), V = w.publicKey, E = await this.client.core.crypto.generateSharedKey(R, V), S = I(I({\n                relay: {\n                    protocol: a ?? \"irn\"\n                },\n                namespaces: c,\n                controller: {\n                    publicKey: R,\n                    metadata: this.client.metadata\n                },\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)\n            }, h && {\n                sessionProperties: h\n            }), p && {\n                sessionConfig: p\n            }), M = _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.subscribing_session_topic);\n            try {\n                await this.client.core.relayer.subscribe(E, {\n                    transportType: M\n                });\n            } catch (N) {\n                throw _.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.subscribe_session_topic_failure), N;\n            }\n            _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.subscribe_session_topic_success);\n            const W = D(I({}, S), {\n                topic: E,\n                requiredNamespaces: m,\n                optionalNamespaces: y,\n                pairingTopic: l,\n                acknowledged: !1,\n                self: S.controller,\n                peer: {\n                    publicKey: w.publicKey,\n                    metadata: w.metadata\n                },\n                controller: R,\n                transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n            });\n            await this.client.session.set(E, W), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.store_session);\n            try {\n                _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.publishing_session_settle), await this.sendRequest({\n                    topic: E,\n                    method: \"wc_sessionSettle\",\n                    params: S,\n                    throwOnFailedPublish: !0\n                }).catch((N)=>{\n                    throw _?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_settle_publish_failure), N;\n                }), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_settle_publish_success), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.publishing_session_approve), await this.sendResult({\n                    id: n,\n                    topic: l,\n                    result: {\n                        relay: {\n                            protocol: a ?? \"irn\"\n                        },\n                        responderPublicKey: R\n                    },\n                    throwOnFailedPublish: !0\n                }).catch((N)=>{\n                    throw _?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_approve_publish_failure), N;\n                }), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_publish_success);\n            } catch (N) {\n                throw this.client.logger.error(N), this.client.session.delete(E, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.relayer.unsubscribe(E), N;\n            }\n            return this.client.core.eventClient.deleteEvent({\n                eventId: _.eventId\n            }), await this.client.core.pairing.updateMetadata({\n                topic: l,\n                metadata: w.metadata\n            }), await this.client.proposal.delete(n, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.pairing.activate({\n                topic: l\n            }), await this.setExpiry(E, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)), {\n                topic: E,\n                acknowledged: ()=>Promise.resolve(this.client.session.get(E))\n            };\n        }, this.reject = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidReject(e);\n            } catch (r) {\n                throw this.client.logger.error(\"reject() -> isValidReject() failed\"), r;\n            }\n            const { id: t, reason: s } = e;\n            let i;\n            try {\n                i = this.client.proposal.get(t).pairingTopic;\n            } catch (r) {\n                throw this.client.logger.error(`reject() -> proposal.get(${t}) failed`), r;\n            }\n            i && (await this.sendError({\n                id: t,\n                topic: i,\n                error: s,\n                rpcOpts: v.wc_sessionPropose.reject\n            }), await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")));\n        }, this.update = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidUpdate(e);\n            } catch (p) {\n                throw this.client.logger.error(\"update() -> isValidUpdate() failed\"), p;\n            }\n            const { topic: t, namespaces: s } = e, { done: i, resolve: r, reject: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(), a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), h = this.client.session.get(t).namespaces;\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", a), ({ error: p })=>{\n                p ? n(p) : r();\n            }), await this.client.session.update(t, {\n                namespaces: s\n            }), await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionUpdate\",\n                params: {\n                    namespaces: s\n                },\n                throwOnFailedPublish: !0,\n                clientRpcId: a,\n                relayRpcId: c\n            }).catch((p)=>{\n                this.client.logger.error(p), this.client.session.update(t, {\n                    namespaces: h\n                }), n(p);\n            }), {\n                acknowledged: i\n            };\n        }, this.extend = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidExtend(e);\n            } catch (a) {\n                throw this.client.logger.error(\"extend() -> isValidExtend() failed\"), a;\n            }\n            const { topic: t } = e, s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), { done: i, resolve: r, reject: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), ({ error: a })=>{\n                a ? n(a) : r();\n            }), await this.setExpiry(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)), this.sendRequest({\n                topic: t,\n                method: \"wc_sessionExtend\",\n                params: {},\n                clientRpcId: s,\n                throwOnFailedPublish: !0\n            }).catch((a)=>{\n                n(a);\n            }), {\n                acknowledged: i\n            };\n        }, this.request = async (e)=>{\n            this.isInitialized();\n            try {\n                await this.isValidRequest(e);\n            } catch (w) {\n                throw this.client.logger.error(\"request() -> isValidRequest() failed\"), w;\n            }\n            const { chainId: t, request: s, topic: i, expiry: r = v.wc_sessionRequest.req.ttl } = e, n = this.client.session.get(i);\n            n?.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: h, resolve: p, reject: d } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(r, \"Request expired. Please try again.\");\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", a), ({ error: w, result: m })=>{\n                w ? d(w) : p(m);\n            });\n            const l = this.getAppLinkIfEnabled(n.peer.metadata, n.transportType);\n            return l ? (await this.sendRequest({\n                clientRpcId: a,\n                relayRpcId: c,\n                topic: i,\n                method: \"wc_sessionRequest\",\n                params: {\n                    request: D(I({}, s), {\n                        expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(r)\n                    }),\n                    chainId: t\n                },\n                expiry: r,\n                throwOnFailedPublish: !0,\n                appLink: l\n            }).catch((w)=>d(w)), this.client.events.emit(\"session_request_sent\", {\n                topic: i,\n                request: s,\n                chainId: t,\n                id: a\n            }), await h()) : await Promise.all([\n                new Promise(async (w)=>{\n                    await this.sendRequest({\n                        clientRpcId: a,\n                        relayRpcId: c,\n                        topic: i,\n                        method: \"wc_sessionRequest\",\n                        params: {\n                            request: D(I({}, s), {\n                                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(r)\n                            }),\n                            chainId: t\n                        },\n                        expiry: r,\n                        throwOnFailedPublish: !0\n                    }).catch((m)=>d(m)), this.client.events.emit(\"session_request_sent\", {\n                        topic: i,\n                        request: s,\n                        chainId: t,\n                        id: a\n                    }), w();\n                }),\n                new Promise(async (w)=>{\n                    var m;\n                    if (!((m = n.sessionConfig) != null && m.disableDeepLink)) {\n                        const y = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDeepLink)(this.client.core.storage, xe);\n                        await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.handleDeeplinkRedirect)({\n                            id: a,\n                            topic: i,\n                            wcDeepLink: y\n                        });\n                    }\n                    w();\n                }),\n                h()\n            ]).then((w)=>w[2]);\n        }, this.respond = async (e)=>{\n            this.isInitialized(), await this.isValidRespond(e);\n            const { topic: t, response: s } = e, { id: i } = s, r = this.client.session.get(t);\n            r.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const n = this.getAppLinkIfEnabled(r.peer.metadata, r.transportType);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? await this.sendResult({\n                id: i,\n                topic: t,\n                result: s.result,\n                throwOnFailedPublish: !0,\n                appLink: n\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && await this.sendError({\n                id: i,\n                topic: t,\n                error: s.error,\n                appLink: n\n            }), this.cleanupAfterResponse(e);\n        }, this.ping = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidPing(e);\n            } catch (s) {\n                throw this.client.logger.error(\"ping() -> isValidPing() failed\"), s;\n            }\n            const { topic: t } = e;\n            if (this.client.session.keys.includes(t)) {\n                const s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), i = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: r, resolve: n, reject: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), ({ error: c })=>{\n                    c ? a(c) : n();\n                }), await Promise.all([\n                    this.sendRequest({\n                        topic: t,\n                        method: \"wc_sessionPing\",\n                        params: {},\n                        throwOnFailedPublish: !0,\n                        clientRpcId: s,\n                        relayRpcId: i\n                    }),\n                    r()\n                ]);\n            } else this.client.core.pairing.pairings.keys.includes(t) && await this.client.core.pairing.ping({\n                topic: t\n            });\n        }, this.emit = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(e);\n            const { topic: t, event: s, chainId: i } = e, r = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString();\n            await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionEvent\",\n                params: {\n                    event: s,\n                    chainId: i\n                },\n                throwOnFailedPublish: !0,\n                relayRpcId: r\n            });\n        }, this.disconnect = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(e);\n            const { topic: t } = e;\n            if (this.client.session.keys.includes(t)) await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionDelete\",\n                params: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"),\n                throwOnFailedPublish: !0\n            }), await this.deleteSession({\n                topic: t,\n                emitEvent: !1\n            });\n            else if (this.client.core.pairing.pairings.keys.includes(t)) await this.client.core.pairing.disconnect({\n                topic: t\n            });\n            else {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISMATCHED_TOPIC\", `Session or pairing topic not found: ${t}`);\n                throw new Error(s);\n            }\n        }, this.find = (e)=>(this.isInitialized(), this.client.session.getAll().filter((t)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isSessionCompatible)(t, e))), this.getPendingSessionRequests = ()=>this.client.pendingRequest.getAll(), this.authenticate = async (e, t)=>{\n            var s;\n            this.isInitialized(), this.isValidAuthenticate(e);\n            const i = t && this.client.core.linkModeSupportedApps.includes(t) && ((s = this.client.metadata.redirect) == null ? void 0 : s.linkMode), r = i ? _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode : _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            r === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const { chains: n, statement: a = \"\", uri: c, domain: h, nonce: p, type: d, exp: l, nbf: w, methods: m = [], expiry: y } = e, _ = [\n                ...e.resources || []\n            ], { topic: R, uri: V } = await this.client.core.pairing.create({\n                methods: [\n                    \"wc_sessionAuthenticate\"\n                ],\n                transportType: r\n            });\n            this.client.logger.info({\n                message: \"Generated new pairing\",\n                pairing: {\n                    topic: R,\n                    uri: V\n                }\n            });\n            const E = await this.client.core.crypto.generateKeyPair(), S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(E);\n            if (await Promise.all([\n                this.client.auth.authKeys.set(ae, {\n                    responseTopic: S,\n                    publicKey: E\n                }),\n                this.client.auth.pairingTopics.set(S, {\n                    topic: S,\n                    pairingTopic: R\n                })\n            ]), await this.client.core.relayer.subscribe(S, {\n                transportType: r\n            }), this.client.logger.info(`sending request to new pairing topic: ${R}`), m.length > 0) {\n                const { namespace: O } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(n[0]);\n                let T = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createEncodedRecap)(O, \"request\", m);\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(_) && (T = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeEncodedRecaps)(T, _.pop())), _.push(T);\n            }\n            const M = y && y > v.wc_sessionAuthenticate.req.ttl ? y : v.wc_sessionAuthenticate.req.ttl, W = {\n                authPayload: {\n                    type: d ?? \"caip122\",\n                    chains: n,\n                    statement: a,\n                    aud: c,\n                    domain: h,\n                    version: \"1\",\n                    nonce: p,\n                    iat: new Date().toISOString(),\n                    exp: l,\n                    nbf: w,\n                    resources: _\n                },\n                requester: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(M)\n            }, N = {\n                eip155: {\n                    chains: n,\n                    methods: [\n                        ...new Set([\n                            \"personal_sign\",\n                            ...m\n                        ])\n                    ],\n                    events: [\n                        \"chainChanged\",\n                        \"accountsChanged\"\n                    ]\n                }\n            }, De = {\n                requiredNamespaces: {},\n                optionalNamespaces: N,\n                relays: [\n                    {\n                        protocol: \"irn\"\n                    }\n                ],\n                pairingTopic: R,\n                proposer: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl)\n            }, { done: wt, resolve: Ve, reject: Ee } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(M, \"Request expired\"), ce = async ({ error: O, session: T })=>{\n                if (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re), O) Ee(O);\n                else if (T) {\n                    T.self.publicKey = E, await this.client.session.set(T.topic, T), await this.setExpiry(T.topic, T.expiry), R && await this.client.core.pairing.updateMetadata({\n                        topic: R,\n                        metadata: T.peer.metadata\n                    });\n                    const le = this.client.session.get(T.topic);\n                    await this.deleteProposal(Z), Ve({\n                        session: le\n                    });\n                }\n            }, Re = async (O)=>{\n                var T, le, Me;\n                if (await this.deletePendingAuthRequest(G, {\n                    message: \"fulfilled\",\n                    code: 0\n                }), O.error) {\n                    const te = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", \"wc_sessionAuthenticate\");\n                    return O.error.code === te.code ? void 0 : (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), Ee(O.error.message));\n                }\n                await this.deleteProposal(Z), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce);\n                const { cacaos: ke, responder: j } = O.result, Ie = [], $e = [];\n                for (const te of ke){\n                    await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                        cacao: te,\n                        projectId: this.client.core.projectId\n                    }) || (this.client.logger.error(te, \"Signature verification failed\"), Ee((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\")));\n                    const { p: fe } = te, ve = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(fe.resources), Ke = [\n                        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(fe.iss)\n                    ], mt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(fe.iss);\n                    if (ve) {\n                        const qe = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(ve), _t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(ve);\n                        Ie.push(...qe), Ke.push(..._t);\n                    }\n                    for (const qe of Ke)$e.push(`${qe}:${mt}`);\n                }\n                const ee = await this.client.core.crypto.generateSharedKey(E, j.publicKey);\n                let pe;\n                Ie.length > 0 && (pe = {\n                    topic: ee,\n                    acknowledged: !0,\n                    self: {\n                        publicKey: E,\n                        metadata: this.client.metadata\n                    },\n                    peer: j,\n                    controller: j.publicKey,\n                    expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z),\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    relay: {\n                        protocol: \"irn\"\n                    },\n                    pairingTopic: R,\n                    namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                        ...new Set(Ie)\n                    ], [\n                        ...new Set($e)\n                    ]),\n                    transportType: r\n                }, await this.client.core.relayer.subscribe(ee, {\n                    transportType: r\n                }), await this.client.session.set(ee, pe), R && await this.client.core.pairing.updateMetadata({\n                    topic: R,\n                    metadata: j.metadata\n                }), pe = this.client.session.get(ee)), (T = this.client.metadata.redirect) != null && T.linkMode && (le = j.metadata.redirect) != null && le.linkMode && (Me = j.metadata.redirect) != null && Me.universal && t && (this.client.core.addLinkModeSupportedApp(j.metadata.redirect.universal), this.client.session.update(ee, {\n                    transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode\n                })), Ve({\n                    auths: ke,\n                    session: pe\n                });\n            }, G = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), Z = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)();\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re);\n            let Se;\n            try {\n                if (i) {\n                    const O = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionAuthenticate\", W, G);\n                    this.client.core.history.set(R, O);\n                    const T = await this.client.core.crypto.encode(\"\", O, {\n                        type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_2,\n                        encoding: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL\n                    });\n                    Se = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(t, R, T);\n                } else await Promise.all([\n                    this.sendRequest({\n                        topic: R,\n                        method: \"wc_sessionAuthenticate\",\n                        params: W,\n                        expiry: e.expiry,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: G\n                    }),\n                    this.sendRequest({\n                        topic: R,\n                        method: \"wc_sessionPropose\",\n                        params: De,\n                        expiry: v.wc_sessionPropose.req.ttl,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: Z\n                    })\n                ]);\n            } catch (O) {\n                throw this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re), O;\n            }\n            return await this.setProposal(Z, I({\n                id: Z\n            }, De)), await this.setAuthRequest(G, {\n                request: D(I({}, W), {\n                    verifyContext: {}\n                }),\n                pairingTopic: R,\n                transportType: r\n            }), {\n                uri: Se ?? V,\n                response: wt\n            };\n        }, this.approveSessionAuthenticate = async (e)=>{\n            const { id: t, auths: s } = e, i = this.client.core.eventClient.createEvent({\n                properties: {\n                    topic: t.toString(),\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.authenticated_session_approve_started\n                    ]\n                }\n            });\n            try {\n                this.isInitialized();\n            } catch (y) {\n                throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.no_internet_connection), y;\n            }\n            const r = this.getPendingAuthRequest(t);\n            if (!r) throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${t}`);\n            const n = r.transportType || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            n === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const a = r.requester.publicKey, c = await this.client.core.crypto.generateKeyPair(), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(a), p = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: a,\n                senderPublicKey: c\n            }, d = [], l = [];\n            for (const y of s){\n                if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                    cacao: y,\n                    projectId: this.client.core.projectId\n                })) {\n                    i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.invalid_cacao);\n                    const S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\");\n                    throw await this.sendError({\n                        id: t,\n                        topic: h,\n                        error: S,\n                        encodeOpts: p\n                    }), new Error(S.message);\n                }\n                i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.cacaos_verified);\n                const { p: _ } = y, R = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(_.resources), V = [\n                    (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(_.iss)\n                ], E = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(_.iss);\n                if (R) {\n                    const S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(R), M = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(R);\n                    d.push(...S), V.push(...M);\n                }\n                for (const S of V)l.push(`${S}:${E}`);\n            }\n            const w = await this.client.core.crypto.generateSharedKey(c, a);\n            i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.create_authenticated_session_topic);\n            let m;\n            if (d?.length > 0) {\n                m = {\n                    topic: w,\n                    acknowledged: !0,\n                    self: {\n                        publicKey: c,\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: a,\n                        metadata: r.requester.metadata\n                    },\n                    controller: a,\n                    expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z),\n                    authentication: s,\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    relay: {\n                        protocol: \"irn\"\n                    },\n                    pairingTopic: r.pairingTopic,\n                    namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                        ...new Set(d)\n                    ], [\n                        ...new Set(l)\n                    ]),\n                    transportType: n\n                }, i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribing_authenticated_session_topic);\n                try {\n                    await this.client.core.relayer.subscribe(w, {\n                        transportType: n\n                    });\n                } catch (y) {\n                    throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.subscribe_authenticated_session_topic_failure), y;\n                }\n                i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribe_authenticated_session_topic_success), await this.client.session.set(w, m), i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.store_authenticated_session), await this.client.core.pairing.updateMetadata({\n                    topic: r.pairingTopic,\n                    metadata: r.requester.metadata\n                });\n            }\n            i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.publishing_authenticated_session_approve);\n            try {\n                await this.sendResult({\n                    topic: h,\n                    id: t,\n                    result: {\n                        cacaos: s,\n                        responder: {\n                            publicKey: c,\n                            metadata: this.client.metadata\n                        }\n                    },\n                    encodeOpts: p,\n                    throwOnFailedPublish: !0,\n                    appLink: this.getAppLinkIfEnabled(r.requester.metadata, n)\n                });\n            } catch (y) {\n                throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_approve_publish_failure), y;\n            }\n            return await this.client.auth.requests.delete(t, {\n                message: \"fulfilled\",\n                code: 0\n            }), await this.client.core.pairing.activate({\n                topic: r.pairingTopic\n            }), this.client.core.eventClient.deleteEvent({\n                eventId: i.eventId\n            }), {\n                session: m\n            };\n        }, this.rejectSessionAuthenticate = async (e)=>{\n            this.isInitialized();\n            const { id: t, reason: s } = e, i = this.getPendingAuthRequest(t);\n            if (!i) throw new Error(`Could not find pending auth request with id ${t}`);\n            i.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const r = i.requester.publicKey, n = await this.client.core.crypto.generateKeyPair(), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(r), c = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: r,\n                senderPublicKey: n\n            };\n            await this.sendError({\n                id: t,\n                topic: a,\n                error: s,\n                encodeOpts: c,\n                rpcOpts: v.wc_sessionAuthenticate.reject,\n                appLink: this.getAppLinkIfEnabled(i.requester.metadata, i.transportType)\n            }), await this.client.auth.requests.delete(t, {\n                message: \"rejected\",\n                code: 0\n            }), await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n        }, this.formatAuthMessage = (e)=>{\n            this.isInitialized();\n            const { request: t, iss: s } = e;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.formatMessage)(t, s);\n        }, this.processRelayMessageCache = ()=>{\n            setTimeout(async ()=>{\n                if (this.relayMessageCache.length !== 0) for(; this.relayMessageCache.length > 0;)try {\n                    const e = this.relayMessageCache.shift();\n                    e && await this.onRelayMessage(e);\n                } catch (e) {\n                    this.client.logger.error(e);\n                }\n            }, 50);\n        }, this.cleanupDuplicatePairings = async (e)=>{\n            if (e.pairingTopic) try {\n                const t = this.client.core.pairing.pairings.get(e.pairingTopic), s = this.client.core.pairing.pairings.getAll().filter((i)=>{\n                    var r, n;\n                    return ((r = i.peerMetadata) == null ? void 0 : r.url) && ((n = i.peerMetadata) == null ? void 0 : n.url) === e.peer.metadata.url && i.topic && i.topic !== t.topic;\n                });\n                if (s.length === 0) return;\n                this.client.logger.info(`Cleaning up ${s.length} duplicate pairing(s)`), await Promise.all(s.map((i)=>this.client.core.pairing.disconnect({\n                        topic: i.topic\n                    }))), this.client.logger.info(\"Duplicate pairings clean up finished\");\n            } catch (t) {\n                this.client.logger.error(t);\n            }\n        }, this.deleteSession = async (e)=>{\n            var t;\n            const { topic: s, expirerHasDeleted: i = !1, emitEvent: r = !0, id: n = 0 } = e, { self: a } = this.client.session.get(s);\n            await this.client.core.relayer.unsubscribe(s), await this.client.session.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.addToRecentlyDeleted(s, \"session\"), this.client.core.crypto.keychain.has(a.publicKey) && await this.client.core.crypto.deleteKeyPair(a.publicKey), this.client.core.crypto.keychain.has(s) && await this.client.core.crypto.deleteSymKey(s), i || this.client.core.expirer.del(s), this.client.core.storage.removeItem(xe).catch((c)=>this.client.logger.warn(c)), this.getPendingSessionRequests().forEach((c)=>{\n                c.topic === s && this.deletePendingSessionRequest(c.id, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n            }), s === ((t = this.sessionRequestQueue.queue[0]) == null ? void 0 : t.topic) && (this.sessionRequestQueue.state = x.idle), r && this.client.events.emit(\"session_delete\", {\n                id: n,\n                topic: s\n            });\n        }, this.deleteProposal = async (e, t)=>{\n            if (t) try {\n                const s = this.client.proposal.get(e), i = this.client.core.eventClient.getEvent({\n                    topic: s.pairingTopic\n                });\n                i?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.proposal_expired);\n            } catch  {}\n            await Promise.all([\n                this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")),\n                t ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.addToRecentlyDeleted(e, \"proposal\");\n        }, this.deletePendingSessionRequest = async (e, t, s = !1)=>{\n            await Promise.all([\n                this.client.pendingRequest.delete(e, t),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.addToRecentlyDeleted(e, \"request\"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i)=>i.id !== e), s && (this.sessionRequestQueue.state = x.idle, this.client.events.emit(\"session_request_expire\", {\n                id: e\n            }));\n        }, this.deletePendingAuthRequest = async (e, t, s = !1)=>{\n            await Promise.all([\n                this.client.auth.requests.delete(e, t),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]);\n        }, this.setExpiry = async (e, t)=>{\n            this.client.session.keys.includes(e) && (this.client.core.expirer.set(e, t), await this.client.session.update(e, {\n                expiry: t\n            }));\n        }, this.setProposal = async (e, t)=>{\n            this.client.core.expirer.set(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl)), await this.client.proposal.set(e, t);\n        }, this.setAuthRequest = async (e, t)=>{\n            const { request: s, pairingTopic: i, transportType: r = _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay } = t;\n            this.client.core.expirer.set(e, s.expiryTimestamp), await this.client.auth.requests.set(e, {\n                authPayload: s.authPayload,\n                requester: s.requester,\n                expiryTimestamp: s.expiryTimestamp,\n                id: e,\n                pairingTopic: i,\n                verifyContext: s.verifyContext,\n                transportType: r\n            });\n        }, this.setPendingSessionRequest = async (e)=>{\n            const { id: t, topic: s, params: i, verifyContext: r } = e, n = i.request.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionRequest.req.ttl);\n            this.client.core.expirer.set(t, n), await this.client.pendingRequest.set(t, {\n                id: t,\n                topic: s,\n                params: i,\n                verifyContext: r\n            });\n        }, this.sendRequest = async (e)=>{\n            const { topic: t, method: s, params: i, expiry: r, relayRpcId: n, clientRpcId: a, throwOnFailedPublish: c, appLink: h } = e, p = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(s, i, a);\n            let d;\n            const l = !!h;\n            try {\n                const y = l ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                d = await this.client.core.crypto.encode(t, p, {\n                    encoding: y\n                });\n            } catch (y) {\n                throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${t} failed`), y;\n            }\n            let w;\n            if (at.includes(s)) {\n                const y = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(p)), _ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(d);\n                w = await this.client.core.verify.register({\n                    id: _,\n                    decryptedId: y\n                });\n            }\n            const m = v[s].req;\n            if (m.attestation = w, r && (m.ttl = r), n && (m.id = n), this.client.core.history.set(t, p), l) {\n                const y = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(h, t, d);\n                await global.Linking.openURL(y, this.client.name);\n            } else {\n                const y = v[s].req;\n                r && (y.ttl = r), n && (y.id = n), c ? (y.internal = D(I({}, y.internal), {\n                    throwOnFailedPublish: !0\n                }), await this.client.core.relayer.publish(t, d, y)) : this.client.core.relayer.publish(t, d, y).catch((_)=>this.client.logger.error(_));\n            }\n            return p.id;\n        }, this.sendResult = async (e)=>{\n            const { id: t, topic: s, result: i, throwOnFailedPublish: r, encodeOpts: n, appLink: a } = e, c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(t, i);\n            let h;\n            const p = a && typeof (global == null ? void 0 : global.Linking) < \"u\";\n            try {\n                const l = p ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                h = await this.client.core.crypto.encode(s, c, D(I({}, n || {}), {\n                    encoding: l\n                }));\n            } catch (l) {\n                throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s} failed`), l;\n            }\n            let d;\n            try {\n                d = await this.client.core.history.get(s, t);\n            } catch (l) {\n                throw this.client.logger.error(`sendResult() -> history.get(${s}, ${t}) failed`), l;\n            }\n            if (p) {\n                const l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(a, s, h);\n                await global.Linking.openURL(l, this.client.name);\n            } else {\n                const l = v[d.request.method].res;\n                r ? (l.internal = D(I({}, l.internal), {\n                    throwOnFailedPublish: !0\n                }), await this.client.core.relayer.publish(s, h, l)) : this.client.core.relayer.publish(s, h, l).catch((w)=>this.client.logger.error(w));\n            }\n            await this.client.core.history.resolve(c);\n        }, this.sendError = async (e)=>{\n            const { id: t, topic: s, error: i, encodeOpts: r, rpcOpts: n, appLink: a } = e, c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(t, i);\n            let h;\n            const p = a && typeof (global == null ? void 0 : global.Linking) < \"u\";\n            try {\n                const l = p ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                h = await this.client.core.crypto.encode(s, c, D(I({}, r || {}), {\n                    encoding: l\n                }));\n            } catch (l) {\n                throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s} failed`), l;\n            }\n            let d;\n            try {\n                d = await this.client.core.history.get(s, t);\n            } catch (l) {\n                throw this.client.logger.error(`sendError() -> history.get(${s}, ${t}) failed`), l;\n            }\n            if (p) {\n                const l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(a, s, h);\n                await global.Linking.openURL(l, this.client.name);\n            } else {\n                const l = n || v[d.request.method].res;\n                this.client.core.relayer.publish(s, h, l);\n            }\n            await this.client.core.history.resolve(c);\n        }, this.cleanup = async ()=>{\n            const e = [], t = [];\n            this.client.session.getAll().forEach((s)=>{\n                let i = !1;\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiry) && (i = !0), this.client.core.crypto.keychain.has(s.topic) || (i = !0), i && e.push(s.topic);\n            }), this.client.proposal.getAll().forEach((s)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiryTimestamp) && t.push(s.id);\n            }), await Promise.all([\n                ...e.map((s)=>this.deleteSession({\n                        topic: s\n                    })),\n                ...t.map((s)=>this.deleteProposal(s))\n            ]);\n        }, this.onRelayEventRequest = async (e)=>{\n            this.requestQueue.queue.push(e), await this.processRequestsQueue();\n        }, this.processRequestsQueue = async ()=>{\n            if (this.requestQueue.state === x.active) {\n                this.client.logger.info(\"Request queue already active, skipping...\");\n                return;\n            }\n            for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){\n                this.requestQueue.state = x.active;\n                const e = this.requestQueue.queue.shift();\n                if (e) try {\n                    await this.processRequest(e);\n                } catch (t) {\n                    this.client.logger.warn(t);\n                }\n            }\n            this.requestQueue.state = x.idle;\n        }, this.processRequest = async (e)=>{\n            const { topic: t, payload: s, attestation: i, transportType: r, encryptedId: n } = e, a = s.method;\n            if (!this.shouldIgnorePairingRequest({\n                topic: t,\n                requestMethod: a\n            })) switch(a){\n                case \"wc_sessionPropose\":\n                    return await this.onSessionProposeRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n\n                    });\n                case \"wc_sessionSettle\":\n                    return await this.onSessionSettleRequest(t, s);\n                case \"wc_sessionUpdate\":\n                    return await this.onSessionUpdateRequest(t, s);\n                case \"wc_sessionExtend\":\n                    return await this.onSessionExtendRequest(t, s);\n                case \"wc_sessionPing\":\n                    return await this.onSessionPingRequest(t, s);\n                case \"wc_sessionDelete\":\n                    return await this.onSessionDeleteRequest(t, s);\n                case \"wc_sessionRequest\":\n                    return await this.onSessionRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n,\n                        transportType: r\n                    });\n                case \"wc_sessionEvent\":\n                    return await this.onSessionEventRequest(t, s);\n                case \"wc_sessionAuthenticate\":\n                    return await this.onSessionAuthenticateRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n,\n                        transportType: r\n                    });\n                default:\n                    return this.client.logger.info(`Unsupported request method ${a}`);\n            }\n        }, this.onRelayEventResponse = async (e)=>{\n            const { topic: t, payload: s, transportType: i } = e, r = (await this.client.core.history.get(t, s.id)).request.method;\n            switch(r){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeResponse(t, s, i);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleResponse(t, s);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateResponse(t, s);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendResponse(t, s);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingResponse(t, s);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequestResponse(t, s);\n                case \"wc_sessionAuthenticate\":\n                    return this.onSessionAuthenticateResponse(t, s);\n                default:\n                    return this.client.logger.info(`Unsupported response method ${r}`);\n            }\n        }, this.onRelayEventUnknownPayload = (e)=>{\n            const { topic: t } = e, { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Decoded payload on topic ${t} is not identifiable as a JSON-RPC request or a response.`);\n            throw new Error(s);\n        }, this.shouldIgnorePairingRequest = (e)=>{\n            const { topic: t, requestMethod: s } = e, i = this.expectedPairingMethodMap.get(t);\n            return !i || i.includes(s) ? !1 : !!(i.includes(\"wc_sessionAuthenticate\") && this.client.events.listenerCount(\"session_authenticate\") > 0);\n        }, this.onSessionProposeRequest = async (e)=>{\n            const { topic: t, payload: s, attestation: i, encryptedId: r } = e, { params: n, id: a } = s;\n            try {\n                const c = this.client.core.eventClient.getEvent({\n                    topic: t\n                });\n                this.isValidConnect(I({}, s.params));\n                const h = n.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl), p = I({\n                    id: a,\n                    pairingTopic: t,\n                    expiryTimestamp: h\n                }, n);\n                await this.setProposal(a, p);\n                const d = await this.getVerifyContext({\n                    attestationId: i,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(s)),\n                    encryptedId: r,\n                    metadata: p.proposer.metadata\n                });\n                this.client.events.listenerCount(\"session_proposal\") === 0 && (console.warn(\"No listener for session_proposal event\"), c?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_PAIRING_ERRORS.proposal_listener_not_found)), c?.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_PAIRING_TRACES.emit_session_proposal), this.client.events.emit(\"session_proposal\", {\n                    id: a,\n                    params: p,\n                    verifyContext: d\n                });\n            } catch (c) {\n                await this.sendError({\n                    id: a,\n                    topic: t,\n                    error: c,\n                    rpcOpts: v.wc_sessionPropose.autoReject\n                }), this.client.logger.error(c);\n            }\n        }, this.onSessionProposeResponse = async (e, t, s)=>{\n            const { id: i } = t;\n            if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t)) {\n                const { result: r } = t;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    result: r\n                });\n                const n = this.client.proposal.get(i);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    proposal: n\n                });\n                const a = n.proposer.publicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    selfPublicKey: a\n                });\n                const c = r.responderPublicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    peerPublicKey: c\n                });\n                const h = await this.client.core.crypto.generateSharedKey(a, c);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    sessionTopic: h\n                });\n                const p = await this.client.core.relayer.subscribe(h, {\n                    transportType: s\n                });\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    subscriptionId: p\n                }), await this.client.core.pairing.activate({\n                    topic: e\n                });\n            } else if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t)) {\n                await this.client.proposal.delete(i, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n                const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(r) === 0) throw new Error(`emitting ${r} without any listeners, 954`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    error: t.error\n                });\n            }\n        }, this.onSessionSettleRequest = async (e, t)=>{\n            const { id: s, params: i } = t;\n            try {\n                this.isValidSessionSettleRequest(i);\n                const { relay: r, controller: n, expiry: a, namespaces: c, sessionProperties: h, sessionConfig: p } = t.params, d = D(I(I({\n                    topic: e,\n                    relay: r,\n                    expiry: a,\n                    namespaces: c,\n                    acknowledged: !0,\n                    pairingTopic: \"\",\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    controller: n.publicKey,\n                    self: {\n                        publicKey: \"\",\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: n.publicKey,\n                        metadata: n.metadata\n                    }\n                }, h && {\n                    sessionProperties: h\n                }), p && {\n                    sessionConfig: p\n                }), {\n                    transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n                }), l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(l) === 0) throw new Error(`emitting ${l} without any listeners 997`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    session: d\n                }), await this.sendResult({\n                    id: t.id,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionSettleResponse = async (e, t)=>{\n            const { id: s } = t;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? (await this.client.session.update(e, {\n                acknowledged: !0\n            }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {})) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && (await this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {\n                error: t.error\n            }));\n        }, this.onSessionUpdateRequest = async (e, t)=>{\n            const { params: s, id: i } = t;\n            try {\n                const r = `${e}_session_update`, n = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (n && this.isRequestOutOfSync(n, i)) {\n                    this.client.logger.info(`Discarding out of sync request - ${i}`), this.sendError({\n                        id: i,\n                        topic: e,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"INVALID_UPDATE_REQUEST\")\n                    });\n                    return;\n                }\n                this.isValidUpdate(I({\n                    topic: e\n                }, s));\n                try {\n                    _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, i), await this.client.session.update(e, {\n                        namespaces: s.namespaces\n                    }), await this.sendResult({\n                        id: i,\n                        topic: e,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    });\n                } catch (a) {\n                    throw _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.delete(r), a;\n                }\n                this.client.events.emit(\"session_update\", {\n                    id: i,\n                    topic: e,\n                    params: s\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: i,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.isRequestOutOfSync = (e, t)=>parseInt(t.toString().slice(0, -3)) <= parseInt(e.toString().slice(0, -3)), this.onSessionUpdateResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {\n                error: t.error\n            });\n        }, this.onSessionExtendRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidExtend({\n                    topic: e\n                }), await this.setExpiry(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(z)), await this.sendResult({\n                    id: s,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_extend\", {\n                    id: s,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionExtendResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {\n                error: t.error\n            });\n        }, this.onSessionPingRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidPing({\n                    topic: e\n                }), await this.sendResult({\n                    id: s,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_ping\", {\n                    id: s,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionPingResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {\n                    error: t.error\n                });\n            }, 500);\n        }, this.onSessionDeleteRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidDisconnect({\n                    topic: e,\n                    reason: t.params\n                }), Promise.all([\n                    new Promise((i)=>{\n                        this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.publish, async ()=>{\n                            i(await this.deleteSession({\n                                topic: e,\n                                id: s\n                            }));\n                        });\n                    }),\n                    this.sendResult({\n                        id: s,\n                        topic: e,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    }),\n                    this.cleanupPendingSentRequestsForTopic({\n                        topic: e,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n                    })\n                ]).catch((i)=>this.client.logger.error(i));\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        }, this.onSessionRequest = async (e)=>{\n            var t, s, i;\n            const { topic: r, payload: n, attestation: a, encryptedId: c, transportType: h } = e, { id: p, params: d } = n;\n            try {\n                await this.isValidRequest(I({\n                    topic: r\n                }, d));\n                const l = this.client.session.get(r), w = await this.getVerifyContext({\n                    attestationId: a,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionRequest\", d, p))),\n                    encryptedId: c,\n                    metadata: l.peer.metadata,\n                    transportType: h\n                }), m = {\n                    id: p,\n                    topic: r,\n                    params: d,\n                    verifyContext: w\n                };\n                await this.setPendingSessionRequest(m), h === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode && (t = l.peer.metadata.redirect) != null && t.universal && this.client.core.addLinkModeSupportedApp((s = l.peer.metadata.redirect) == null ? void 0 : s.universal), (i = this.client.signConfig) != null && i.disableRequestQueue ? this.emitSessionRequest(m) : (this.addSessionRequestToSessionRequestQueue(m), this.processSessionRequestQueue());\n            } catch (l) {\n                await this.sendError({\n                    id: p,\n                    topic: r,\n                    error: l\n                }), this.client.logger.error(l);\n            }\n        }, this.onSessionRequestResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: t.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: t.error\n            });\n        }, this.onSessionEventRequest = async (e, t)=>{\n            const { id: s, params: i } = t;\n            try {\n                const r = `${e}_session_event_${i.event.name}`, n = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (n && this.isRequestOutOfSync(n, s)) {\n                    this.client.logger.info(`Discarding out of sync request - ${s}`);\n                    return;\n                }\n                this.isValidEmit(I({\n                    topic: e\n                }, i)), this.client.events.emit(\"session_event\", {\n                    id: s,\n                    topic: e,\n                    params: i\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, s);\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionAuthenticateResponse = (e, t)=>{\n            const { id: s } = t;\n            this.client.logger.trace({\n                type: \"method\",\n                method: \"onSessionAuthenticateResponse\",\n                topic: e,\n                payload: t\n            }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: t.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: t.error\n            });\n        }, this.onSessionAuthenticateRequest = async (e)=>{\n            var t;\n            const { topic: s, payload: i, attestation: r, encryptedId: n, transportType: a } = e;\n            try {\n                const { requester: c, authPayload: h, expiryTimestamp: p } = i.params, d = await this.getVerifyContext({\n                    attestationId: r,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(i)),\n                    encryptedId: n,\n                    metadata: c.metadata,\n                    transportType: a\n                }), l = {\n                    requester: c,\n                    pairingTopic: s,\n                    id: i.id,\n                    authPayload: h,\n                    verifyContext: d,\n                    expiryTimestamp: p\n                };\n                await this.setAuthRequest(i.id, {\n                    request: l,\n                    pairingTopic: s,\n                    transportType: a\n                }), a === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode && (t = c.metadata.redirect) != null && t.universal && this.client.core.addLinkModeSupportedApp(c.metadata.redirect.universal), this.client.events.emit(\"session_authenticate\", {\n                    topic: s,\n                    params: i.params,\n                    id: i.id,\n                    verifyContext: d\n                });\n            } catch (c) {\n                this.client.logger.error(c);\n                const h = i.params.requester.publicKey, p = await this.client.core.crypto.generateKeyPair(), d = this.getAppLinkIfEnabled(i.params.requester.metadata, a), l = {\n                    type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                    receiverPublicKey: h,\n                    senderPublicKey: p\n                };\n                await this.sendError({\n                    id: i.id,\n                    topic: s,\n                    error: c,\n                    encodeOpts: l,\n                    rpcOpts: v.wc_sessionAuthenticate.autoReject,\n                    appLink: d\n                });\n            }\n        }, this.addSessionRequestToSessionRequestQueue = (e)=>{\n            this.sessionRequestQueue.queue.push(e);\n        }, this.cleanupAfterResponse = (e)=>{\n            this.deletePendingSessionRequest(e.response.id, {\n                message: \"fulfilled\",\n                code: 0\n            }), setTimeout(()=>{\n                this.sessionRequestQueue.state = x.idle, this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay));\n        }, this.cleanupPendingSentRequestsForTopic = ({ topic: e, error: t })=>{\n            const s = this.client.core.history.pending;\n            s.length > 0 && s.filter((i)=>i.topic === e && i.request.method === \"wc_sessionRequest\").forEach((i)=>{\n                const r = i.request.id, n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", r);\n                if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", i.request.id), {\n                    error: t\n                });\n            });\n        }, this.processSessionRequestQueue = ()=>{\n            if (this.sessionRequestQueue.state === x.active) {\n                this.client.logger.info(\"session request queue is already active.\");\n                return;\n            }\n            const e = this.sessionRequestQueue.queue[0];\n            if (!e) {\n                this.client.logger.info(\"session request queue is empty.\");\n                return;\n            }\n            try {\n                this.sessionRequestQueue.state = x.active, this.emitSessionRequest(e);\n            } catch (t) {\n                this.client.logger.error(t);\n            }\n        }, this.emitSessionRequest = (e)=>{\n            this.client.events.emit(\"session_request\", e);\n        }, this.onPairingCreated = (e)=>{\n            if (e.methods && this.expectedPairingMethodMap.set(e.topic, e.methods), e.active) return;\n            const t = this.client.proposal.getAll().find((s)=>s.pairingTopic === e.topic);\n            t && this.onSessionProposeRequest({\n                topic: e.topic,\n                payload: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionPropose\", {\n                    requiredNamespaces: t.requiredNamespaces,\n                    optionalNamespaces: t.optionalNamespaces,\n                    relays: t.relays,\n                    proposer: t.proposer,\n                    sessionProperties: t.sessionProperties\n                }, t.id)\n            });\n        }, this.isValidConnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() params: ${JSON.stringify(e)}`);\n                throw new Error(a);\n            }\n            const { pairingTopic: t, requiredNamespaces: s, optionalNamespaces: i, sessionProperties: r, relays: n } = e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(t) || await this.isValidPairingTopic(t), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelays)(n, !0)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() relays: ${n}`);\n                throw new Error(a);\n            }\n            !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(s) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(s) !== 0 && this.validateNamespaces(s, \"requiredNamespaces\"), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(i) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(i) !== 0 && this.validateNamespaces(i, \"optionalNamespaces\"), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.validateNamespaces = (e, t)=>{\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequiredNamespaces)(e, \"connect()\", t);\n            if (s) throw new Error(s.message);\n        }, this.isValidApprove = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() params: ${e}`).message);\n            const { id: t, namespaces: s, relayProtocol: i, sessionProperties: r } = e;\n            this.checkRecentlyDeleted(t), await this.isValidProposalId(t);\n            const n = this.client.proposal.get(t), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"approve()\");\n            if (a) throw new Error(a.message);\n            const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(n.requiredNamespaces, s, \"approve()\");\n            if (c) throw new Error(c.message);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !0)) {\n                const { message: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() relayProtocol: ${i}`);\n                throw new Error(h);\n            }\n            (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.isValidReject = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() params: ${e}`);\n                throw new Error(i);\n            }\n            const { id: t, reason: s } = e;\n            if (this.checkRecentlyDeleted(t), await this.isValidProposalId(t), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidErrorReason)(s)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() reason: ${JSON.stringify(s)}`);\n                throw new Error(i);\n            }\n        }, this.isValidSessionSettleRequest = (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `onSessionSettleRequest() params: ${e}`);\n                throw new Error(c);\n            }\n            const { relay: t, controller: s, namespaces: i, expiry: r } = e;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelay)(t)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", \"onSessionSettleRequest() relay protocol should be a string\");\n                throw new Error(c);\n            }\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidController)(s, \"onSessionSettleRequest()\");\n            if (n) throw new Error(n.message);\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(i, \"onSessionSettleRequest()\");\n            if (a) throw new Error(a.message);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(r)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", \"onSessionSettleRequest()\");\n                throw new Error(c);\n            }\n        }, this.isValidUpdate = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `update() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: t, namespaces: s } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n            const i = this.client.session.get(t), r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"update()\");\n            if (r) throw new Error(r.message);\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(i.requiredNamespaces, s, \"update()\");\n            if (n) throw new Error(n.message);\n        }, this.isValidExtend = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `extend() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n        }, this.isValidRequest = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: t, request: s, chainId: i, expiry: r } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n            const { namespaces: n } = this.client.session.get(t);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(n, i)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() chainId: ${i}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequest)(s)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() ${JSON.stringify(s)}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesRequest)(n, i, s.method)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() method: ${s.method}`);\n                throw new Error(a);\n            }\n            if (r && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequestExpiry)(r, me)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() expiry: ${r}. Expiry must be a number (in seconds) between ${me.min} and ${me.max}`);\n                throw new Error(a);\n            }\n        }, this.isValidRespond = async (e)=>{\n            var t;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() params: ${e}`);\n                throw new Error(r);\n            }\n            const { topic: s, response: i } = e;\n            try {\n                await this.isValidSessionTopic(s);\n            } catch (r) {\n                throw (t = e?.response) != null && t.id && this.cleanupAfterResponse(e), r;\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidResponse)(i)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() response: ${JSON.stringify(i)}`);\n                throw new Error(r);\n            }\n        }, this.isValidPing = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            await this.isValidSessionOrPairingTopic(t);\n        }, this.isValidEmit = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() params: ${e}`);\n                throw new Error(n);\n            }\n            const { topic: t, event: s, chainId: i } = e;\n            await this.isValidSessionTopic(t);\n            const { namespaces: r } = this.client.session.get(t);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(r, i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() chainId: ${i}`);\n                throw new Error(n);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidEvent)(s)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(n);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesEvent)(r, i, s.name)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(n);\n            }\n        }, this.isValidDisconnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            await this.isValidSessionOrPairingTopic(t);\n        }, this.isValidAuthenticate = (e)=>{\n            const { chains: t, uri: s, domain: i, nonce: r } = e;\n            if (!Array.isArray(t) || t.length === 0) throw new Error(\"chains is required and must be a non-empty array\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) throw new Error(\"uri is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !1)) throw new Error(\"domain is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) throw new Error(\"nonce is required parameter\");\n            if ([\n                ...new Set(t.map((a)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(a).namespace))\n            ].length > 1) throw new Error(\"Multi-namespace requests are not supported. Please request single namespace only.\");\n            const { namespace: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(t[0]);\n            if (n !== \"eip155\") throw new Error(\"Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.\");\n        }, this.getVerifyContext = async (e)=>{\n            const { attestationId: t, hash: s, encryptedId: i, metadata: r, transportType: n } = e, a = {\n                verified: {\n                    verifyUrl: r.verifyUrl || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.VERIFY_SERVER,\n                    validation: \"UNKNOWN\",\n                    origin: r.url || \"\"\n                }\n            };\n            try {\n                if (n === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode) {\n                    const h = this.getAppLinkIfEnabled(r, n);\n                    return a.verified.validation = h && new URL(h).origin === new URL(r.url).origin ? \"VALID\" : \"INVALID\", a;\n                }\n                const c = await this.client.core.verify.resolve({\n                    attestationId: t,\n                    hash: s,\n                    encryptedId: i,\n                    verifyUrl: r.verifyUrl\n                });\n                c && (a.verified.origin = c.origin, a.verified.isScam = c.isScam, a.verified.validation = c.origin === new URL(r.url).origin ? \"VALID\" : \"INVALID\");\n            } catch (c) {\n                this.client.logger.warn(c);\n            }\n            return this.client.logger.debug(`Verify context: ${JSON.stringify(a)}`), a;\n        }, this.validateSessionProps = (e, t)=>{\n            Object.values(e).forEach((s)=>{\n                if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) {\n                    const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `${t} must be in Record<string, string> format. Received: ${JSON.stringify(s)}`);\n                    throw new Error(i);\n                }\n            });\n        }, this.getPendingAuthRequest = (e)=>{\n            const t = this.client.auth.requests.get(e);\n            return typeof t == \"object\" ? t : void 0;\n        }, this.addToRecentlyDeleted = (e, t)=>{\n            if (this.recentlyDeletedMap.set(e, t), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {\n                let s = 0;\n                const i = this.recentlyDeletedLimit / 2;\n                for (const r of this.recentlyDeletedMap.keys()){\n                    if (s++ >= i) break;\n                    this.recentlyDeletedMap.delete(r);\n                }\n            }\n        }, this.checkRecentlyDeleted = (e)=>{\n            const t = this.recentlyDeletedMap.get(e);\n            if (t) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${t}: ${e}`);\n                throw new Error(s);\n            }\n        }, this.isLinkModeEnabled = (e, t)=>{\n            var s, i, r, n, a, c, h, p, d;\n            return !e || t !== _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode ? !1 : ((i = (s = this.client.metadata) == null ? void 0 : s.redirect) == null ? void 0 : i.linkMode) === !0 && ((n = (r = this.client.metadata) == null ? void 0 : r.redirect) == null ? void 0 : n.universal) !== void 0 && ((c = (a = this.client.metadata) == null ? void 0 : a.redirect) == null ? void 0 : c.universal) !== \"\" && ((h = e?.redirect) == null ? void 0 : h.universal) !== void 0 && ((p = e?.redirect) == null ? void 0 : p.universal) !== \"\" && ((d = e?.redirect) == null ? void 0 : d.linkMode) === !0 && this.client.core.linkModeSupportedApps.includes(e.redirect.universal) && typeof (global == null ? void 0 : global.Linking) < \"u\";\n        }, this.getAppLinkIfEnabled = (e, t)=>{\n            var s;\n            return this.isLinkModeEnabled(e, t) ? (s = e?.redirect) == null ? void 0 : s.universal : void 0;\n        }, this.handleLinkModeMessage = ({ url: e })=>{\n            if (!e || !e.includes(\"wc_ev\") || !e.includes(\"topic\")) return;\n            const t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSearchParamFromURL)(e, \"topic\") || \"\", s = decodeURIComponent((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSearchParamFromURL)(e, \"wc_ev\") || \"\"), i = this.client.session.keys.includes(t);\n            i && this.client.session.update(t, {\n                transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode\n            }), this.client.core.dispatchEnvelope({\n                topic: t,\n                message: s,\n                sessionExists: i\n            });\n        }, this.registerLinkModeListeners = async ()=>{\n            var e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isTestRun)() || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isReactNative)() && (e = this.client.metadata.redirect) != null && e.linkMode) {\n                const t = global == null ? void 0 : global.Linking;\n                if (typeof t < \"u\") {\n                    t.addEventListener(\"url\", this.handleLinkModeMessage, this.client.name);\n                    const s = await t.getInitialURL();\n                    s && setTimeout(()=>{\n                        this.handleLinkModeMessage({\n                            url: s\n                        });\n                    }, 50);\n                }\n            }\n        };\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(o);\n        }\n    }\n    async confirmOnlineStateOrThrow() {\n        await this.client.core.relayer.confirmOnlineStateOrThrow();\n    }\n    registerRelayerEvents() {\n        this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.message, (o)=>{\n            !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(o) : this.onRelayMessage(o);\n        });\n    }\n    async onRelayMessage(o) {\n        const { topic: e, message: t, attestation: s, transportType: i } = o, { publicKey: r } = this.client.auth.authKeys.keys.includes(ae) ? this.client.auth.authKeys.get(ae) : {\n            responseTopic: void 0,\n            publicKey: void 0\n        }, n = await this.client.core.crypto.decode(e, t, {\n            receiverPublicKey: r,\n            encoding: i === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64\n        });\n        try {\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcRequest)(n) ? (this.client.core.history.set(e, n), this.onRelayEventRequest({\n                topic: e,\n                payload: n,\n                attestation: s,\n                transportType: i,\n                encryptedId: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(t)\n            })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResponse)(n) ? (await this.client.core.history.resolve(n), await this.onRelayEventResponse({\n                topic: e,\n                payload: n,\n                transportType: i\n            }), this.client.core.history.delete(e, n.id)) : this.onRelayEventUnknownPayload({\n                topic: e,\n                payload: n,\n                transportType: i\n            });\n        } catch (a) {\n            this.client.logger.error(a);\n        }\n    }\n    registerExpirerEvents() {\n        this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EXPIRER_EVENTS.expired, async (o)=>{\n            const { topic: e, id: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirerTarget)(o.target);\n            if (t && this.client.pendingRequest.keys.includes(t)) return await this.deletePendingSessionRequest(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            if (t && this.client.auth.requests.keys.includes(t)) return await this.deletePendingAuthRequest(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            e ? this.client.session.keys.includes(e) && (await this.deleteSession({\n                topic: e,\n                expirerHasDeleted: !0\n            }), this.client.events.emit(\"session_expire\", {\n                topic: e\n            })) : t && (await this.deleteProposal(t, !0), this.client.events.emit(\"proposal_expire\", {\n                id: t\n            }));\n        });\n    }\n    registerPairingEvents() {\n        this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.create, (o)=>this.onPairingCreated(o)), this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.delete, (o)=>{\n            this.addToRecentlyDeleted(o.topic, \"pairing\");\n        });\n    }\n    isValidPairingTopic(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.pairing.pairings.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.core.pairing.pairings.get(o).expiry)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `pairing topic: ${o}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionTopic(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n        if (this.checkRecentlyDeleted(o), !this.client.session.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session topic doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.session.get(o).expiry)) {\n            await this.deleteSession({\n                topic: o\n            });\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `session topic: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.crypto.keychain.has(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic does not exist in keychain: ${o}`);\n            throw await this.deleteSession({\n                topic: o\n            }), new Error(e);\n        }\n    }\n    async isValidSessionOrPairingTopic(o) {\n        if (this.checkRecentlyDeleted(o), this.client.session.keys.includes(o)) await this.isValidSessionTopic(o);\n        else if (this.client.core.pairing.pairings.keys.includes(o)) this.isValidPairingTopic(o);\n        else if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session or pairing topic doesn't exist: ${o}`);\n            throw new Error(e);\n        } else {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session or pairing topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n    }\n    async isValidProposalId(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidId)(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `proposal id should be a number: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.proposal.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.proposal.get(o).expiryTimestamp)) {\n            await this.deleteProposal(o);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `proposal id: ${o}`);\n            throw new Error(e);\n        }\n    }\n}\nclass Ss extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, st, ye), this.core = o, this.logger = e;\n    }\n}\nclass yt extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, rt, ye), this.core = o, this.logger = e;\n    }\n}\nclass Is extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, ot, ye, (t)=>t.id), this.core = o, this.logger = e;\n    }\n}\nclass fs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, pt, oe, ()=>ae), this.core = o, this.logger = e;\n    }\n}\nclass vs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, ht, oe), this.core = o, this.logger = e;\n    }\n}\nclass qs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, dt, oe, (t)=>t.id), this.core = o, this.logger = e;\n    }\n}\nclass Ts {\n    constructor(o, e){\n        this.core = o, this.logger = e, this.authKeys = new fs(this.core, this.logger), this.pairingTopics = new vs(this.core, this.logger), this.requests = new qs(this.core, this.logger);\n    }\n    async init() {\n        await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();\n    }\n}\nclass _e extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISignClient {\n    constructor(o){\n        super(o), this.protocol = be, this.version = Ce, this.name = we.name, this.events = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter, this.on = (t, s)=>this.events.on(t, s), this.once = (t, s)=>this.events.once(t, s), this.off = (t, s)=>this.events.off(t, s), this.removeListener = (t, s)=>this.events.removeListener(t, s), this.removeAllListeners = (t)=>this.events.removeAllListeners(t), this.connect = async (t)=>{\n            try {\n                return await this.engine.connect(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.pair = async (t)=>{\n            try {\n                return await this.engine.pair(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approve = async (t)=>{\n            try {\n                return await this.engine.approve(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.reject = async (t)=>{\n            try {\n                return await this.engine.reject(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.update = async (t)=>{\n            try {\n                return await this.engine.update(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.extend = async (t)=>{\n            try {\n                return await this.engine.extend(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.request = async (t)=>{\n            try {\n                return await this.engine.request(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.respond = async (t)=>{\n            try {\n                return await this.engine.respond(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.ping = async (t)=>{\n            try {\n                return await this.engine.ping(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.emit = async (t)=>{\n            try {\n                return await this.engine.emit(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.disconnect = async (t)=>{\n            try {\n                return await this.engine.disconnect(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.find = (t)=>{\n            try {\n                return this.engine.find(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.getPendingSessionRequests = ()=>{\n            try {\n                return this.engine.getPendingSessionRequests();\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.authenticate = async (t, s)=>{\n            try {\n                return await this.engine.authenticate(t, s);\n            } catch (i) {\n                throw this.logger.error(i.message), i;\n            }\n        }, this.formatAuthMessage = (t)=>{\n            try {\n                return this.engine.formatAuthMessage(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approveSessionAuthenticate = async (t)=>{\n            try {\n                return await this.engine.approveSessionAuthenticate(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.rejectSessionAuthenticate = async (t)=>{\n            try {\n                return await this.engine.rejectSessionAuthenticate(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.name = o?.name || we.name, this.metadata = o?.metadata || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getAppMetadata)(), this.signConfig = o?.signConfig;\n        const e = typeof o?.logger < \"u\" && typeof o?.logger != \"string\" ? o.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: o?.logger || we.logger\n        }));\n        this.core = o?.core || new _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Core(o), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.generateChildLogger)(e, this.name), this.session = new yt(this.core, this.logger), this.proposal = new Ss(this.core, this.logger), this.pendingRequest = new Is(this.core, this.logger), this.engine = new Rs(this), this.auth = new Ts(this.core, this.logger);\n    }\n    static async init(o) {\n        const e = new _e(o);\n        return await e.initialize(), e;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getLoggerContext)(this.logger);\n    }\n    get pairing() {\n        return this.core.pairing.pairings;\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info(\"SignClient Initialization Success\"), this.engine.processRelayMessageCache();\n        } catch (o) {\n            throw this.logger.info(\"SignClient Initialization Failure\"), this.logger.error(o.message), o;\n        }\n    }\n}\nconst Ns = yt, Ps = _e;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./misc */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0g7QUFDeENFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0gsVUFDeEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL2luZGV4LmpzPzJlZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWlzY1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90aW1lXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/misc.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;\nexports.ONE_HUNDRED = 100;\nexports.ONE_THOUSAND = 1000; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvbWlzYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUdBLG1CQUFtQixHQUFHLEtBQUs7QUFDbERBLG1CQUFtQixHQUFHO0FBQ3RCQSxvQkFBb0IsR0FBRyxNQUN2QixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvbWlzYy5qcz9iNDM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PTkVfVEhPVVNBTkQgPSBleHBvcnRzLk9ORV9IVU5EUkVEID0gdm9pZCAwO1xuZXhwb3J0cy5PTkVfSFVORFJFRCA9IDEwMDtcbmV4cG9ydHMuT05FX1RIT1VTQU5EID0gMTAwMDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT05FX1RIT1VTQU5EIiwiT05FX0hVTkRSRUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/time.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;\nexports.ONE_SECOND = 1;\nexports.FIVE_SECONDS = 5;\nexports.TEN_SECONDS = 10;\nexports.THIRTY_SECONDS = 30;\nexports.SIXTY_SECONDS = 60;\nexports.ONE_MINUTE = exports.SIXTY_SECONDS;\nexports.FIVE_MINUTES = exports.ONE_MINUTE * 5;\nexports.TEN_MINUTES = exports.ONE_MINUTE * 10;\nexports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;\nexports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;\nexports.ONE_HOUR = exports.SIXTY_MINUTES;\nexports.THREE_HOURS = exports.ONE_HOUR * 3;\nexports.SIX_HOURS = exports.ONE_HOUR * 6;\nexports.TWELVE_HOURS = exports.ONE_HOUR * 12;\nexports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;\nexports.ONE_DAY = exports.TWENTY_FOUR_HOURS;\nexports.THREE_DAYS = exports.ONE_DAY * 3;\nexports.FIVE_DAYS = exports.ONE_DAY * 5;\nexports.SEVEN_DAYS = exports.ONE_DAY * 7;\nexports.THIRTY_DAYS = exports.ONE_DAY * 30;\nexports.ONE_WEEK = exports.SEVEN_DAYS;\nexports.TWO_WEEKS = exports.ONE_WEEK * 2;\nexports.THREE_WEEKS = exports.ONE_WEEK * 3;\nexports.FOUR_WEEKS = exports.ONE_WEEK * 4;\nexports.ONE_YEAR = exports.ONE_DAY * 365; //# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvdGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0JBQWdCLEdBQUdBLGtCQUFrQixHQUFHQSxtQkFBbUIsR0FBR0EsaUJBQWlCLEdBQUdBLGdCQUFnQixHQUFHQSxtQkFBbUIsR0FBR0Esa0JBQWtCLEdBQUdBLGlCQUFpQixHQUFHQSxrQkFBa0IsR0FBR0EsZUFBZSxHQUFHQSx5QkFBeUIsR0FBR0Esb0JBQW9CLEdBQUdBLGlCQUFpQixHQUFHQSxtQkFBbUIsR0FBR0EsZ0JBQWdCLEdBQUdBLHFCQUFxQixHQUFHQSxzQkFBc0IsR0FBR0EsbUJBQW1CLEdBQUdBLG9CQUFvQixHQUFHQSxrQkFBa0IsR0FBR0EscUJBQXFCLEdBQUdBLHNCQUFzQixHQUFHQSxtQkFBbUIsR0FBR0Esb0JBQW9CLEdBQUdBLGtCQUFrQixHQUFHLEtBQUs7QUFDdGlCQSxrQkFBa0IsR0FBRztBQUNyQkEsb0JBQW9CLEdBQUc7QUFDdkJBLG1CQUFtQixHQUFHO0FBQ3RCQSxzQkFBc0IsR0FBRztBQUN6QkEscUJBQXFCLEdBQUc7QUFDeEJBLGtCQUFrQixHQUFHQSxRQUFRc0IsYUFBYTtBQUMxQ3RCLG9CQUFvQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzVDckIsbUJBQW1CLEdBQUdBLFFBQVFxQixVQUFVLEdBQUc7QUFDM0NyQixzQkFBc0IsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM5Q3JCLHFCQUFxQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzdDckIsZ0JBQWdCLEdBQUdBLFFBQVFpQixhQUFhO0FBQ3hDakIsbUJBQW1CLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDekNoQixpQkFBaUIsR0FBR0EsUUFBUWdCLFFBQVEsR0FBRztBQUN2Q2hCLG9CQUFvQixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQzFDaEIseUJBQXlCLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDL0NoQixlQUFlLEdBQUdBLFFBQVFZLGlCQUFpQjtBQUMzQ1osa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsaUJBQWlCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN0Q1gsa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsbUJBQW1CLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN4Q1gsZ0JBQWdCLEdBQUdBLFFBQVFRLFVBQVU7QUFDckNSLGlCQUFpQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDdkNOLG1CQUFtQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDekNOLGtCQUFrQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDeENOLGdCQUFnQixHQUFHQSxRQUFRVyxPQUFPLEdBQUcsS0FDckMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL3RpbWUuanM/ZGRkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT05FX1lFQVIgPSBleHBvcnRzLkZPVVJfV0VFS1MgPSBleHBvcnRzLlRIUkVFX1dFRUtTID0gZXhwb3J0cy5UV09fV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLID0gZXhwb3J0cy5USElSVFlfREFZUyA9IGV4cG9ydHMuU0VWRU5fREFZUyA9IGV4cG9ydHMuRklWRV9EQVlTID0gZXhwb3J0cy5USFJFRV9EQVlTID0gZXhwb3J0cy5PTkVfREFZID0gZXhwb3J0cy5UV0VOVFlfRk9VUl9IT1VSUyA9IGV4cG9ydHMuVFdFTFZFX0hPVVJTID0gZXhwb3J0cy5TSVhfSE9VUlMgPSBleHBvcnRzLlRIUkVFX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiA9IGV4cG9ydHMuU0lYVFlfTUlOVVRFUyA9IGV4cG9ydHMuVEhJUlRZX01JTlVURVMgPSBleHBvcnRzLlRFTl9NSU5VVEVTID0gZXhwb3J0cy5GSVZFX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgPSBleHBvcnRzLlNJWFRZX1NFQ09ORFMgPSBleHBvcnRzLlRISVJUWV9TRUNPTkRTID0gZXhwb3J0cy5URU5fU0VDT05EUyA9IGV4cG9ydHMuRklWRV9TRUNPTkRTID0gZXhwb3J0cy5PTkVfU0VDT05EID0gdm9pZCAwO1xuZXhwb3J0cy5PTkVfU0VDT05EID0gMTtcbmV4cG9ydHMuRklWRV9TRUNPTkRTID0gNTtcbmV4cG9ydHMuVEVOX1NFQ09ORFMgPSAxMDtcbmV4cG9ydHMuVEhJUlRZX1NFQ09ORFMgPSAzMDtcbmV4cG9ydHMuU0lYVFlfU0VDT05EUyA9IDYwO1xuZXhwb3J0cy5PTkVfTUlOVVRFID0gZXhwb3J0cy5TSVhUWV9TRUNPTkRTO1xuZXhwb3J0cy5GSVZFX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiA1O1xuZXhwb3J0cy5URU5fTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDEwO1xuZXhwb3J0cy5USElSVFlfTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDMwO1xuZXhwb3J0cy5TSVhUWV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFICogNjA7XG5leHBvcnRzLk9ORV9IT1VSID0gZXhwb3J0cy5TSVhUWV9NSU5VVEVTO1xuZXhwb3J0cy5USFJFRV9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAzO1xuZXhwb3J0cy5TSVhfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogNjtcbmV4cG9ydHMuVFdFTFZFX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiAqIDEyO1xuZXhwb3J0cy5UV0VOVFlfRk9VUl9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAyNDtcbmV4cG9ydHMuT05FX0RBWSA9IGV4cG9ydHMuVFdFTlRZX0ZPVVJfSE9VUlM7XG5leHBvcnRzLlRIUkVFX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiAzO1xuZXhwb3J0cy5GSVZFX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiA1O1xuZXhwb3J0cy5TRVZFTl9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogNztcbmV4cG9ydHMuVEhJUlRZX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiAzMDtcbmV4cG9ydHMuT05FX1dFRUsgPSBleHBvcnRzLlNFVkVOX0RBWVM7XG5leHBvcnRzLlRXT19XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiAyO1xuZXhwb3J0cy5USFJFRV9XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiAzO1xuZXhwb3J0cy5GT1VSX1dFRUtTID0gZXhwb3J0cy5PTkVfV0VFSyAqIDQ7XG5leHBvcnRzLk9ORV9ZRUFSID0gZXhwb3J0cy5PTkVfREFZICogMzY1O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGltZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJPTkVfWUVBUiIsIkZPVVJfV0VFS1MiLCJUSFJFRV9XRUVLUyIsIlRXT19XRUVLUyIsIk9ORV9XRUVLIiwiVEhJUlRZX0RBWVMiLCJTRVZFTl9EQVlTIiwiRklWRV9EQVlTIiwiVEhSRUVfREFZUyIsIk9ORV9EQVkiLCJUV0VOVFlfRk9VUl9IT1VSUyIsIlRXRUxWRV9IT1VSUyIsIlNJWF9IT1VSUyIsIlRIUkVFX0hPVVJTIiwiT05FX0hPVVIiLCJTSVhUWV9NSU5VVEVTIiwiVEhJUlRZX01JTlVURVMiLCJURU5fTUlOVVRFUyIsIkZJVkVfTUlOVVRFUyIsIk9ORV9NSU5VVEUiLCJTSVhUWV9TRUNPTkRTIiwiVEhJUlRZX1NFQ09ORFMiLCJURU5fU0VDT05EUyIsIkZJVkVfU0VDT05EUyIsIk9ORV9TRUNPTkQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywyRUFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx5RkFBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9pbmRleC5qcz8yOWI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhdGNoXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSCxVQUN6QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcz8zNjI1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhdGNoXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/watch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IWatch = void 0;\nclass IWatch {\n}\nexports.IWatch = IWatch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBYyxHQUFHLEtBQUs7QUFDdEIsTUFBTUU7QUFDTjtBQUNBRixjQUFjLEdBQUdFLFFBQ2pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3R5cGVzL3dhdGNoLmpzPzRiY2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLklXYXRjaCA9IHZvaWQgMDtcbmNsYXNzIElXYXRjaCB7XG59XG5leHBvcnRzLklXYXRjaCA9IElXYXRjaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIklXYXRjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/convert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromMiliseconds = exports.toMiliseconds = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\");\nfunction toMiliseconds(seconds) {\n    return seconds * constants_1.ONE_THOUSAND;\n}\nexports.toMiliseconds = toMiliseconds;\nfunction fromMiliseconds(miliseconds) {\n    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);\n}\nexports.fromMiliseconds = fromMiliseconds; //# sourceMappingURL=convert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9jb252ZXJ0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUN2RCxNQUFNSSxjQUFjQyxtQkFBT0EsQ0FBQywwRkFBYztBQUMxQyxTQUFTRixjQUFjRyxPQUFPO0lBQzFCLE9BQU9BLFVBQVVGLFlBQVlHLFlBQVk7QUFDN0M7QUFDQVAscUJBQXFCLEdBQUdHO0FBQ3hCLFNBQVNELGdCQUFnQk0sV0FBVztJQUNoQyxPQUFPQyxLQUFLQyxLQUFLLENBQUNGLGNBQWNKLFlBQVlHLFlBQVk7QUFDNUQ7QUFDQVAsdUJBQXVCLEdBQUdFLGlCQUMxQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9jb252ZXJ0LmpzPzk5MWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21NaWxpc2Vjb25kcyA9IGV4cG9ydHMudG9NaWxpc2Vjb25kcyA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50c1wiKTtcbmZ1bmN0aW9uIHRvTWlsaXNlY29uZHMoc2Vjb25kcykge1xuICAgIHJldHVybiBzZWNvbmRzICogY29uc3RhbnRzXzEuT05FX1RIT1VTQU5EO1xufVxuZXhwb3J0cy50b01pbGlzZWNvbmRzID0gdG9NaWxpc2Vjb25kcztcbmZ1bmN0aW9uIGZyb21NaWxpc2Vjb25kcyhtaWxpc2Vjb25kcykge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG1pbGlzZWNvbmRzIC8gY29uc3RhbnRzXzEuT05FX1RIT1VTQU5EKTtcbn1cbmV4cG9ydHMuZnJvbU1pbGlzZWNvbmRzID0gZnJvbU1pbGlzZWNvbmRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udmVydC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJmcm9tTWlsaXNlY29uZHMiLCJ0b01pbGlzZWNvbmRzIiwiY29uc3RhbnRzXzEiLCJyZXF1aXJlIiwic2Vjb25kcyIsIk9ORV9USE9VU0FORCIsIm1pbGlzZWNvbmRzIiwiTWF0aCIsImZsb29yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/delay.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.delay = void 0;\nfunction delay(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve(true);\n        }, timeout);\n    });\n}\nexports.delay = delay; //# sourceMappingURL=delay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9kZWxheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsU0FBU0UsTUFBTUMsT0FBTztJQUNsQixPQUFPLElBQUlDLFFBQVFDLENBQUFBO1FBQ2ZDLFdBQVc7WUFDUEQsUUFBUTtRQUNaLEdBQUdGO0lBQ1A7QUFDSjtBQUNBSCxhQUFhLEdBQUdFLE9BQ2hCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL211bHRpdmVyc3gtZGFwcC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3V0aWxzL2RlbGF5LmpzPzliOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlbGF5ID0gdm9pZCAwO1xuZnVuY3Rpb24gZGVsYXkodGltZW91dCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICB9LCB0aW1lb3V0KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZGVsYXkgPSBkZWxheTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGF5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlbGF5IiwidGltZW91dCIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./delay */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./convert */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxxRkFBVyxHQUFHSCxVQUMzQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9pbmRleC5qcz9iN2NjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlbGF5XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnZlcnRcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/watch.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Watch = void 0;\nclass Watch {\n    constructor(){\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, {\n            started: Date.now()\n        });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, {\n            started: timestamp.started,\n            elapsed\n        });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports[\"default\"] = Watch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsTUFBTUU7SUFDRkMsYUFBYztRQUNWLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlDO0lBQzFCO0lBQ0FDLE1BQU1DLEtBQUssRUFBRTtRQUNULElBQUksSUFBSSxDQUFDSCxVQUFVLENBQUNJLEdBQUcsQ0FBQ0QsUUFBUTtZQUM1QixNQUFNLElBQUlFLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsSUFBSSxDQUFDSCxVQUFVLENBQUNNLEdBQUcsQ0FBQ0gsT0FBTztZQUFFSSxTQUFTQyxLQUFLQyxHQUFHO1FBQUc7SUFDckQ7SUFDQUMsS0FBS1AsS0FBSyxFQUFFO1FBQ1IsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsSUFBSSxPQUFPUSxVQUFVRSxPQUFPLEtBQUssYUFBYTtZQUMxQyxNQUFNLElBQUlSLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsTUFBTVUsVUFBVUwsS0FBS0MsR0FBRyxLQUFLRSxVQUFVSixPQUFPO1FBQzlDLElBQUksQ0FBQ1AsVUFBVSxDQUFDTSxHQUFHLENBQUNILE9BQU87WUFBRUksU0FBU0ksVUFBVUosT0FBTztZQUFFTTtRQUFRO0lBQ3JFO0lBQ0FELElBQUlULEtBQUssRUFBRTtRQUNQLE1BQU1RLFlBQVksSUFBSSxDQUFDWCxVQUFVLENBQUNZLEdBQUcsQ0FBQ1Q7UUFDdEMsSUFBSSxPQUFPUSxjQUFjLGFBQWE7WUFDbEMsTUFBTSxJQUFJTixNQUFNLENBQUMsOEJBQThCLEVBQUVGLE1BQU0sQ0FBQztRQUM1RDtRQUNBLE9BQU9RO0lBQ1g7SUFDQUUsUUFBUVYsS0FBSyxFQUFFO1FBQ1gsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsTUFBTVUsVUFBVUYsVUFBVUUsT0FBTyxJQUFJTCxLQUFLQyxHQUFHLEtBQUtFLFVBQVVKLE9BQU87UUFDbkUsT0FBT007SUFDWDtBQUNKO0FBQ0FqQixhQUFhLEdBQUdFO0FBQ2hCRixrQkFBZSxHQUFHRSxPQUNsQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aXZlcnN4LWRhcHAvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy93YXRjaC5qcz8yZGM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XYXRjaCA9IHZvaWQgMDtcbmNsYXNzIFdhdGNoIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy50aW1lc3RhbXBzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBzdGFydChsYWJlbCkge1xuICAgICAgICBpZiAodGhpcy50aW1lc3RhbXBzLmhhcyhsYWJlbCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV2F0Y2ggYWxyZWFkeSBzdGFydGVkIGZvciBsYWJlbDogJHtsYWJlbH1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRpbWVzdGFtcHMuc2V0KGxhYmVsLCB7IHN0YXJ0ZWQ6IERhdGUubm93KCkgfSk7XG4gICAgfVxuICAgIHN0b3AobGFiZWwpIHtcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGhpcy5nZXQobGFiZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHRpbWVzdGFtcC5lbGFwc2VkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFdhdGNoIGFscmVhZHkgc3RvcHBlZCBmb3IgbGFiZWw6ICR7bGFiZWx9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZWxhcHNlZCA9IERhdGUubm93KCkgLSB0aW1lc3RhbXAuc3RhcnRlZDtcbiAgICAgICAgdGhpcy50aW1lc3RhbXBzLnNldChsYWJlbCwgeyBzdGFydGVkOiB0aW1lc3RhbXAuc3RhcnRlZCwgZWxhcHNlZCB9KTtcbiAgICB9XG4gICAgZ2V0KGxhYmVsKSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRoaXMudGltZXN0YW1wcy5nZXQobGFiZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHRpbWVzdGFtcCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyB0aW1lc3RhbXAgZm91bmQgZm9yIGxhYmVsOiAke2xhYmVsfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aW1lc3RhbXA7XG4gICAgfVxuICAgIGVsYXBzZWQobGFiZWwpIHtcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGhpcy5nZXQobGFiZWwpO1xuICAgICAgICBjb25zdCBlbGFwc2VkID0gdGltZXN0YW1wLmVsYXBzZWQgfHwgRGF0ZS5ub3coKSAtIHRpbWVzdGFtcC5zdGFydGVkO1xuICAgICAgICByZXR1cm4gZWxhcHNlZDtcbiAgICB9XG59XG5leHBvcnRzLldhdGNoID0gV2F0Y2g7XG5leHBvcnRzLmRlZmF1bHQgPSBXYXRjaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIldhdGNoIiwiY29uc3RydWN0b3IiLCJ0aW1lc3RhbXBzIiwiTWFwIiwic3RhcnQiLCJsYWJlbCIsImhhcyIsIkVycm9yIiwic2V0Iiwic3RhcnRlZCIsIkRhdGUiLCJub3ciLCJzdG9wIiwidGltZXN0YW1wIiwiZ2V0IiwiZWxhcHNlZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/types/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/types/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ICore: () => (/* binding */ n),\n/* harmony export */   ICrypto: () => (/* binding */ l),\n/* harmony export */   IEchoClient: () => (/* binding */ v),\n/* harmony export */   IEngine: () => (/* binding */ M),\n/* harmony export */   IEngineEvents: () => (/* binding */ w),\n/* harmony export */   IEventClient: () => (/* binding */ C),\n/* harmony export */   IExpirer: () => (/* binding */ x),\n/* harmony export */   IJsonRpcHistory: () => (/* binding */ h),\n/* harmony export */   IKeyChain: () => (/* binding */ E),\n/* harmony export */   IMessageTracker: () => (/* binding */ a),\n/* harmony export */   IPairing: () => (/* binding */ m),\n/* harmony export */   IPublisher: () => (/* binding */ g),\n/* harmony export */   IRelayer: () => (/* binding */ u),\n/* harmony export */   ISignClient: () => (/* binding */ S),\n/* harmony export */   ISignClientEvents: () => (/* binding */ b),\n/* harmony export */   IStore: () => (/* binding */ p),\n/* harmony export */   ISubscriber: () => (/* binding */ d),\n/* harmony export */   ISubscriberTopicMap: () => (/* binding */ I),\n/* harmony export */   IVerify: () => (/* binding */ y)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass l {\n    constructor(s, t, e){\n        this.core = s, this.logger = t;\n    }\n}\nclass h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t, this.records = new Map;\n    }\n}\nclass a {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass g extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass u extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super();\n    }\n}\nclass p {\n    constructor(s, t, e, f){\n        this.core = s, this.logger = t, this.name = e;\n    }\n}\nclass I {\n    constructor(){\n        this.map = new Map;\n    }\n}\nclass d extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass E {\n    constructor(s, t){\n        this.core = s, this.logger = t;\n    }\n}\nclass x extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t;\n    }\n}\nclass m {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass y {\n    constructor(s, t, e){\n        this.core = s, this.logger = t, this.store = e;\n    }\n}\nclass v {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass C {\n    constructor(s, t, e){\n        this.core = s, this.logger = t, this.telemetryEnabled = e;\n    }\n}\nclass b extends (events__WEBPACK_IMPORTED_MODULE_1___default()) {\n    constructor(){\n        super();\n    }\n}\nclass S {\n    constructor(s){\n        this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass w extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(){\n        super();\n    }\n}\nclass M {\n    constructor(s){\n        this.client = s;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdHlwZXMvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQXlDO0FBQUEsTUFBTUssVUFBVUosMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssSUFBRyxJQUFJLENBQUNDLElBQUksR0FBQ0QsR0FBRSxJQUFJLENBQUNFLFFBQVEsR0FBQyxNQUFLLElBQUksQ0FBQ0MsT0FBTyxHQUFDO0lBQUM7QUFBQztBQUFDLE1BQU1DO0lBQUVMLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTUksVUFBVWYsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ0ssT0FBTyxHQUFDLElBQUlDO0lBQUc7QUFBQztBQUFDLE1BQU1DO0lBQUViLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1RLFVBQVVuQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDUyxPQUFPLEdBQUNkLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1VLFVBQVVyQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNZ0I7SUFBRWpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLEVBQUNXLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ1YsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ2EsSUFBSSxHQUFDWjtJQUFDO0FBQUM7QUFBQyxNQUFNYTtJQUFFcEIsYUFBYTtRQUFDLElBQUksQ0FBQ3FCLEdBQUcsR0FBQyxJQUFJVDtJQUFHO0FBQUM7QUFBQyxNQUFNVSxVQUFVM0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ1MsT0FBTyxHQUFDZCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNaUI7SUFBRXZCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1rQixVQUFVN0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNbUI7SUFBRXpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1vQjtJQUFFMUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLEVBQUNDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ0MsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ3FCLEtBQUssR0FBQ3BCO0lBQUM7QUFBQztBQUFDLE1BQU1xQjtJQUFFNUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUN1QixTQUFTLEdBQUM1QixHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNd0I7SUFBRTlCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0gsR0FBRSxJQUFJLENBQUN5QixnQkFBZ0IsR0FBQ3hCO0lBQUM7QUFBQztBQUFDLE1BQU15QixVQUFVcEMsK0NBQUNBO0lBQUNJLGFBQWE7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUFDLE1BQU1pQztJQUFFakMsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDQyxJQUFJLEdBQUNELEdBQUUsSUFBSSxDQUFDRSxRQUFRLEdBQUMsTUFBSyxJQUFJLENBQUNDLE9BQU8sR0FBQztJQUFDO0FBQUM7QUFBQyxNQUFNOEIsVUFBVXBDLGdEQUFDQTtJQUFDRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNbUM7SUFBRW5DLFlBQVlDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ21DLE1BQU0sR0FBQ25DO0lBQUM7QUFBQztBQUFrVSxDQUNyaEQsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3R5cGVzL2Rpc3QvaW5kZXguZXMuanM/NjBhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7SUV2ZW50cyBhcyBvfWZyb21cIkB3YWxsZXRjb25uZWN0L2V2ZW50c1wiO2ltcG9ydCBjLHtFdmVudEVtaXR0ZXIgYXMgaX1mcm9tXCJldmVudHNcIjtjbGFzcyBuIGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzKXtzdXBlcigpLHRoaXMub3B0cz1zLHRoaXMucHJvdG9jb2w9XCJ3Y1wiLHRoaXMudmVyc2lvbj0yfX1jbGFzcyBse2NvbnN0cnVjdG9yKHMsdCxlKXt0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBoIGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dCx0aGlzLnJlY29yZHM9bmV3IE1hcH19Y2xhc3MgYXtjb25zdHJ1Y3RvcihzLHQpe3RoaXMubG9nZ2VyPXMsdGhpcy5jb3JlPXR9fWNsYXNzIGcgZXh0ZW5kcyBve2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLnJlbGF5ZXI9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyB1IGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzKXtzdXBlcigpfX1jbGFzcyBwe2NvbnN0cnVjdG9yKHMsdCxlLGYpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXQsdGhpcy5uYW1lPWV9fWNsYXNzIEl7Y29uc3RydWN0b3IoKXt0aGlzLm1hcD1uZXcgTWFwfX1jbGFzcyBkIGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5yZWxheWVyPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgRXtjb25zdHJ1Y3RvcihzLHQpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIHggZXh0ZW5kcyBve2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBte2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5sb2dnZXI9cyx0aGlzLmNvcmU9dH19Y2xhc3MgeXtjb25zdHJ1Y3RvcihzLHQsZSl7dGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dCx0aGlzLnN0b3JlPWV9fWNsYXNzIHZ7Y29uc3RydWN0b3Iocyx0KXt0aGlzLnByb2plY3RJZD1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIEN7Y29uc3RydWN0b3Iocyx0LGUpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXQsdGhpcy50ZWxlbWV0cnlFbmFibGVkPWV9fWNsYXNzIGIgZXh0ZW5kcyBje2NvbnN0cnVjdG9yKCl7c3VwZXIoKX19Y2xhc3MgU3tjb25zdHJ1Y3RvcihzKXt0aGlzLm9wdHM9cyx0aGlzLnByb3RvY29sPVwid2NcIix0aGlzLnZlcnNpb249Mn19Y2xhc3MgdyBleHRlbmRzIGl7Y29uc3RydWN0b3IoKXtzdXBlcigpfX1jbGFzcyBNe2NvbnN0cnVjdG9yKHMpe3RoaXMuY2xpZW50PXN9fWV4cG9ydHtuIGFzIElDb3JlLGwgYXMgSUNyeXB0byx2IGFzIElFY2hvQ2xpZW50LE0gYXMgSUVuZ2luZSx3IGFzIElFbmdpbmVFdmVudHMsQyBhcyBJRXZlbnRDbGllbnQseCBhcyBJRXhwaXJlcixoIGFzIElKc29uUnBjSGlzdG9yeSxFIGFzIElLZXlDaGFpbixhIGFzIElNZXNzYWdlVHJhY2tlcixtIGFzIElQYWlyaW5nLGcgYXMgSVB1Ymxpc2hlcix1IGFzIElSZWxheWVyLFMgYXMgSVNpZ25DbGllbnQsYiBhcyBJU2lnbkNsaWVudEV2ZW50cyxwIGFzIElTdG9yZSxkIGFzIElTdWJzY3JpYmVyLEkgYXMgSVN1YnNjcmliZXJUb3BpY01hcCx5IGFzIElWZXJpZnl9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiSUV2ZW50cyIsIm8iLCJjIiwiRXZlbnRFbWl0dGVyIiwiaSIsIm4iLCJjb25zdHJ1Y3RvciIsInMiLCJvcHRzIiwicHJvdG9jb2wiLCJ2ZXJzaW9uIiwibCIsInQiLCJlIiwiY29yZSIsImxvZ2dlciIsImgiLCJyZWNvcmRzIiwiTWFwIiwiYSIsImciLCJyZWxheWVyIiwidSIsInAiLCJmIiwibmFtZSIsIkkiLCJtYXAiLCJkIiwiRSIsIngiLCJtIiwieSIsInN0b3JlIiwidiIsInByb2plY3RJZCIsIkMiLCJ0ZWxlbWV0cnlFbmFibGVkIiwiYiIsIlMiLCJ3IiwiTSIsImNsaWVudCIsIklDb3JlIiwiSUNyeXB0byIsIklFY2hvQ2xpZW50IiwiSUVuZ2luZSIsIklFbmdpbmVFdmVudHMiLCJJRXZlbnRDbGllbnQiLCJJRXhwaXJlciIsIklKc29uUnBjSGlzdG9yeSIsIklLZXlDaGFpbiIsIklNZXNzYWdlVHJhY2tlciIsIklQYWlyaW5nIiwiSVB1Ymxpc2hlciIsIklSZWxheWVyIiwiSVNpZ25DbGllbnQiLCJJU2lnbkNsaWVudEV2ZW50cyIsIklTdG9yZSIsIklTdWJzY3JpYmVyIiwiSVN1YnNjcmliZXJUb3BpY01hcCIsIklWZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ Zi),\n/* harmony export */   BASE16: () => (/* binding */ Lt),\n/* harmony export */   BASE64: () => (/* binding */ tn),\n/* harmony export */   BASE64URL: () => (/* binding */ Iu),\n/* harmony export */   COLON: () => (/* binding */ rs),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ Ai),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ Pr),\n/* harmony export */   ENV_MAP: () => (/* binding */ qt),\n/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ So),\n/* harmony export */   MemoryStore: () => (/* binding */ Rh),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ is),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ Nn),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ uo),\n/* harmony export */   SDK_ERRORS: () => (/* binding */ Eo),\n/* harmony export */   SDK_TYPE: () => (/* binding */ Bn),\n/* harmony export */   SLASH: () => (/* binding */ _n),\n/* harmony export */   TYPE_0: () => (/* binding */ en),\n/* harmony export */   TYPE_1: () => (/* binding */ pr),\n/* harmony export */   TYPE_2: () => (/* binding */ Sr),\n/* harmony export */   UTF8: () => (/* binding */ dr),\n/* harmony export */   addResourceToRecap: () => (/* binding */ io),\n/* harmony export */   appendToQueryString: () => (/* binding */ Cn),\n/* harmony export */   assertType: () => (/* binding */ us),\n/* harmony export */   assignAbilityToActions: () => (/* binding */ Wi),\n/* harmony export */   base64Decode: () => (/* binding */ eo),\n/* harmony export */   base64Encode: () => (/* binding */ to),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ ah),\n/* harmony export */   buildAuthObject: () => (/* binding */ Au),\n/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ uh),\n/* harmony export */   buildRecapStatement: () => (/* binding */ fo),\n/* harmony export */   calcExpiry: () => (/* binding */ ws),\n/* harmony export */   capitalize: () => (/* binding */ vs),\n/* harmony export */   capitalizeWord: () => (/* binding */ Fn),\n/* harmony export */   createDelayedPromise: () => (/* binding */ gs),\n/* harmony export */   createEncodedRecap: () => (/* binding */ xu),\n/* harmony export */   createExpiringPromise: () => (/* binding */ ms),\n/* harmony export */   createRecap: () => (/* binding */ ro),\n/* harmony export */   decodeRecap: () => (/* binding */ Oe),\n/* harmony export */   decodeTypeByte: () => (/* binding */ Ze),\n/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ Fu),\n/* harmony export */   decrypt: () => (/* binding */ Du),\n/* harmony export */   deriveSymKey: () => (/* binding */ Cu),\n/* harmony export */   deserialize: () => (/* binding */ Wr),\n/* harmony export */   encodeRecap: () => (/* binding */ Yr),\n/* harmony export */   encodeTypeByte: () => (/* binding */ nn),\n/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ Tu),\n/* harmony export */   encrypt: () => (/* binding */ Pu),\n/* harmony export */   engineEvent: () => (/* binding */ Ms),\n/* harmony export */   enumify: () => (/* binding */ ps),\n/* harmony export */   formatAccountId: () => (/* binding */ yn),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ Yo),\n/* harmony export */   formatChainId: () => (/* binding */ bn),\n/* harmony export */   formatDeeplinkUrl: () => (/* binding */ Un),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ yi),\n/* harmony export */   formatIdTarget: () => (/* binding */ bs),\n/* harmony export */   formatMessage: () => (/* binding */ Wf),\n/* harmony export */   formatMessageContext: () => (/* binding */ hs),\n/* harmony export */   formatRelayParams: () => (/* binding */ go),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ ss),\n/* harmony export */   formatStatementFromRecap: () => (/* binding */ $i),\n/* harmony export */   formatTopicTarget: () => (/* binding */ As),\n/* harmony export */   formatUA: () => (/* binding */ Pn),\n/* harmony export */   formatUri: () => (/* binding */ $u),\n/* harmony export */   fromBase64: () => (/* binding */ xi),\n/* harmony export */   generateKeyPair: () => (/* binding */ _u),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ Bu),\n/* harmony export */   getAccountsChains: () => (/* binding */ tr),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ Wo),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ wn),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ Vo),\n/* harmony export */   getAppMetadata: () => (/* binding */ fs),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ Fo),\n/* harmony export */   getBundleId: () => (/* binding */ ns),\n/* harmony export */   getChainFromAccount: () => (/* binding */ xn),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ Mn),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ Or),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ Xo),\n/* harmony export */   getChainsFromRecap: () => (/* binding */ Su),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ $o),\n/* harmony export */   getCommonValuesInArrays: () => (/* binding */ wi),\n/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ ao),\n/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ Xf),\n/* harmony export */   getDeepLink: () => (/* binding */ Ss),\n/* harmony export */   getDidAddress: () => (/* binding */ Vi),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ Gr),\n/* harmony export */   getDidChainId: () => (/* binding */ Yi),\n/* harmony export */   getEnvironment: () => (/* binding */ We),\n/* harmony export */   getHttpUrl: () => (/* binding */ as),\n/* harmony export */   getInternalError: () => (/* binding */ xe),\n/* harmony export */   getJavascriptID: () => (/* binding */ On),\n/* harmony export */   getJavascriptOS: () => (/* binding */ Rn),\n/* harmony export */   getLastItems: () => (/* binding */ Dn),\n/* harmony export */   getLinkModeURL: () => (/* binding */ Zu),\n/* harmony export */   getMethodsFromRecap: () => (/* binding */ Eu),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ gu),\n/* harmony export */   getNamespacesChains: () => (/* binding */ bo),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ wo),\n/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Mo),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ yo),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ ko),\n/* harmony export */   getReCapActions: () => (/* binding */ Zf),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ Uo),\n/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ wu),\n/* harmony export */   getRecapFromResources: () => (/* binding */ Vr),\n/* harmony export */   getRecapResource: () => (/* binding */ $f),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ os),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ ju),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ zu),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ sh),\n/* harmony export */   getSdkError: () => (/* binding */ er),\n/* harmony export */   getSearchParamFromURL: () => (/* binding */ Is),\n/* harmony export */   getUniqueValues: () => (/* binding */ mi),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ Es),\n/* harmony export */   hasOverlap: () => (/* binding */ _e),\n/* harmony export */   hashKey: () => (/* binding */ Ru),\n/* harmony export */   hashMessage: () => (/* binding */ Ou),\n/* harmony export */   isBrowser: () => (/* binding */ gr),\n/* harmony export */   isCaipNamespace: () => (/* binding */ on),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ To),\n/* harmony export */   isExpired: () => (/* binding */ xs),\n/* harmony export */   isNode: () => (/* binding */ bi),\n/* harmony export */   isOnline: () => (/* binding */ Bh),\n/* harmony export */   isProposalStruct: () => (/* binding */ lh),\n/* harmony export */   isReactNative: () => (/* binding */ rr),\n/* harmony export */   isRecap: () => (/* binding */ Xi),\n/* harmony export */   isSessionCompatible: () => (/* binding */ hh),\n/* harmony export */   isSessionStruct: () => (/* binding */ dh),\n/* harmony export */   isTelegram: () => (/* binding */ kn),\n/* harmony export */   isTestRun: () => (/* binding */ _s),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ ku),\n/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ qu),\n/* harmony export */   isUndefined: () => (/* binding */ Pe),\n/* harmony export */   isValidAccountId: () => (/* binding */ Io),\n/* harmony export */   isValidAccounts: () => (/* binding */ Bo),\n/* harmony export */   isValidActions: () => (/* binding */ Ro),\n/* harmony export */   isValidArray: () => (/* binding */ Nr),\n/* harmony export */   isValidChainId: () => (/* binding */ _r),\n/* harmony export */   isValidChains: () => (/* binding */ No),\n/* harmony export */   isValidController: () => (/* binding */ ph),\n/* harmony export */   isValidEip1271Signature: () => (/* binding */ Jf),\n/* harmony export */   isValidEip191Signature: () => (/* binding */ Qf),\n/* harmony export */   isValidErrorReason: () => (/* binding */ bh),\n/* harmony export */   isValidEvent: () => (/* binding */ xh),\n/* harmony export */   isValidId: () => (/* binding */ mh),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ Co),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ un),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ _o),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ an),\n/* harmony export */   isValidNamespaces: () => (/* binding */ Oo),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ Mh),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Sh),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Eh),\n/* harmony export */   isValidNumber: () => (/* binding */ $r),\n/* harmony export */   isValidObject: () => (/* binding */ Xr),\n/* harmony export */   isValidParams: () => (/* binding */ Ah),\n/* harmony export */   isValidRecap: () => (/* binding */ ge),\n/* harmony export */   isValidRelay: () => (/* binding */ Po),\n/* harmony export */   isValidRelays: () => (/* binding */ gh),\n/* harmony export */   isValidRequest: () => (/* binding */ yh),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ _h),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ vh),\n/* harmony export */   isValidResponse: () => (/* binding */ wh),\n/* harmony export */   isValidString: () => (/* binding */ Yt),\n/* harmony export */   isValidUrl: () => (/* binding */ ch),\n/* harmony export */   mapEntries: () => (/* binding */ ds),\n/* harmony export */   mapToObj: () => (/* binding */ cs),\n/* harmony export */   mergeArrays: () => (/* binding */ me),\n/* harmony export */   mergeEncodedRecaps: () => (/* binding */ Mu),\n/* harmony export */   mergeRecaps: () => (/* binding */ no),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ sn),\n/* harmony export */   objToMap: () => (/* binding */ ls),\n/* harmony export */   parseAccountId: () => (/* binding */ gi),\n/* harmony export */   parseChainId: () => (/* binding */ An),\n/* harmony export */   parseContextNames: () => (/* binding */ Tn),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ ys),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ xo),\n/* harmony export */   parseRelayParams: () => (/* binding */ po),\n/* harmony export */   parseTopic: () => (/* binding */ vo),\n/* harmony export */   parseUri: () => (/* binding */ Xu),\n/* harmony export */   populateAuthPayload: () => (/* binding */ bu),\n/* harmony export */   recapHasResource: () => (/* binding */ yu),\n/* harmony export */   serialize: () => (/* binding */ fn),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ qo),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ Ch),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ Ko),\n/* harmony export */   toBase64: () => (/* binding */ qn),\n/* harmony export */   uuidv4: () => (/* binding */ Ns),\n/* harmony export */   validateDecoding: () => (/* binding */ Uu),\n/* harmony export */   validateEncoding: () => (/* binding */ so),\n/* harmony export */   validateSignedCacao: () => (/* binding */ mu),\n/* harmony export */   verifyP256Jwt: () => (/* binding */ Lu),\n/* harmony export */   verifySignature: () => (/* binding */ jf)\n/* harmony export */ });\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! detect-browser */ \"(ssr)/./node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! query-string */ \"(ssr)/./node_modules/query-string/index.js\");\n/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\n/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stablelib/hkdf */ \"(ssr)/./node_modules/@stablelib/hkdf/lib/hkdf.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stablelib/sha256 */ \"(ssr)/./node_modules/@stablelib/sha256/lib/sha256.js\");\n/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stablelib/x25519 */ \"(ssr)/./node_modules/@stablelib/x25519/lib/x25519.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(elliptic__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Rr = \":\";\nfunction An(e) {\n    const [t, r] = e.split(Rr);\n    return {\n        namespace: t,\n        reference: r\n    };\n}\nfunction bn(e) {\n    const { namespace: t, reference: r } = e;\n    return [\n        t,\n        r\n    ].join(Rr);\n}\nfunction gi(e) {\n    const [t, r, i] = e.split(Rr);\n    return {\n        namespace: t,\n        reference: r,\n        address: i\n    };\n}\nfunction yn(e) {\n    const { namespace: t, reference: r, address: i } = e;\n    return [\n        t,\n        r,\n        i\n    ].join(Rr);\n}\nfunction mi(e, t) {\n    const r = [];\n    return e.forEach((i)=>{\n        const n = t(i);\n        r.includes(n) || r.push(n);\n    }), r;\n}\nfunction wn(e) {\n    const { address: t } = gi(e);\n    return t;\n}\nfunction xn(e) {\n    const { namespace: t, reference: r } = gi(e);\n    return bn({\n        namespace: t,\n        reference: r\n    });\n}\nfunction Yo(e, t) {\n    const { namespace: r, reference: i } = An(t);\n    return yn({\n        namespace: r,\n        reference: i,\n        address: e\n    });\n}\nfunction Vo(e) {\n    return mi(e, wn);\n}\nfunction Mn(e) {\n    return mi(e, xn);\n}\nfunction Wo(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...n.accounts);\n    }), r;\n}\nfunction Xo(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...Mn(n.accounts));\n    }), r;\n}\nfunction $o(e, t = []) {\n    const r = [];\n    return Object.keys(e).forEach((i)=>{\n        if (t.length && !t.includes(i)) return;\n        const n = e[i];\n        r.push(...Or(i, n));\n    }), r;\n}\nfunction Or(e, t) {\n    return e.includes(\":\") ? [\n        e\n    ] : t.chains || [];\n}\nvar Zo = Object.defineProperty, En = Object.getOwnPropertySymbols, ts = Object.prototype.hasOwnProperty, es = Object.prototype.propertyIsEnumerable, Sn = (e, t, r)=>t in e ? Zo(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, In = (e, t)=>{\n    for(var r in t || (t = {}))ts.call(t, r) && Sn(e, r, t[r]);\n    if (En) for (var r of En(t))es.call(t, r) && Sn(e, r, t[r]);\n    return e;\n};\nconst Nn = \"ReactNative\", qt = {\n    reactNative: \"react-native\",\n    node: \"node\",\n    browser: \"browser\",\n    unknown: \"unknown\"\n}, Pr = \" \", rs = \":\", _n = \"/\", Ai = 2, is = 1e3, Bn = \"js\";\nfunction bi() {\n    return typeof process < \"u\" && typeof process.versions < \"u\" && typeof process.versions.node < \"u\";\n}\nfunction rr() {\n    return !(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && navigator.product === Nn;\n}\nfunction gr() {\n    return !bi() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)();\n}\nfunction We() {\n    return rr() ? qt.reactNative : bi() ? qt.node : gr() ? qt.browser : qt.unknown;\n}\nfunction ns() {\n    var e;\n    try {\n        return rr() && typeof global < \"u\" && typeof (global == null ? void 0 : global.Application) < \"u\" ? (e = global.Application) == null ? void 0 : e.applicationId : void 0;\n    } catch  {\n        return;\n    }\n}\nfunction Cn(e, t) {\n    let r = query_string__WEBPACK_IMPORTED_MODULE_3__.parse(e);\n    return r = In(In({}, r), t), e = query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(r), e;\n}\nfunction fs() {\n    return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__.getWindowMetadata)() || {\n        name: \"\",\n        description: \"\",\n        url: \"\",\n        icons: [\n            \"\"\n        ]\n    };\n}\nfunction os(e, t) {\n    var r;\n    const i = We(), n = {\n        protocol: e,\n        version: t,\n        env: i\n    };\n    return i === \"browser\" && (n.host = ((r = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : r.host) || \"unknown\"), n;\n}\nfunction Rn() {\n    if (We() === qt.reactNative && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\") {\n        const { OS: r, Version: i } = global.Platform;\n        return [\n            r,\n            i\n        ].join(\"-\");\n    }\n    const e = (0,detect_browser__WEBPACK_IMPORTED_MODULE_13__.detect)();\n    if (e === null) return \"unknown\";\n    const t = e.os ? e.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n    return e.type === \"browser\" ? [\n        t,\n        e.name,\n        e.version\n    ].join(\"-\") : [\n        t,\n        e.version\n    ].join(\"-\");\n}\nfunction On() {\n    var e;\n    const t = We();\n    return t === qt.browser ? [\n        t,\n        ((e = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : e.host) || \"unknown\"\n    ].join(\":\") : t;\n}\nfunction Pn(e, t, r) {\n    const i = Rn(), n = On();\n    return [\n        [\n            e,\n            t\n        ].join(\"-\"),\n        [\n            Bn,\n            r\n        ].join(\"-\"),\n        i,\n        n\n    ].join(\"/\");\n}\nfunction ss({ protocol: e, version: t, relayUrl: r, sdkVersion: i, auth: n, projectId: o, useOnCloseEvent: h, bundleId: p }) {\n    const A = r.split(\"?\"), v = Pn(e, t, i), w = {\n        auth: n,\n        ua: v,\n        projectId: o,\n        useOnCloseEvent: h || void 0,\n        origin: p || void 0\n    }, y = Cn(A[1] || \"\", w);\n    return A[0] + \"?\" + y;\n}\nfunction as(e) {\n    let t = (e.match(/^[^:]+(?=:\\/\\/)/gi) || [])[0];\n    const r = typeof t < \"u\" ? e.split(\"://\")[1] : e;\n    return t = t === \"wss\" ? \"https\" : \"http\", [\n        t,\n        r\n    ].join(\"://\");\n}\nfunction us(e, t, r) {\n    if (!e[t] || typeof e[t] !== r) throw new Error(`Missing or invalid \"${t}\" param`);\n}\nfunction Tn(e, t = Ai) {\n    return Dn(e.split(_n), t);\n}\nfunction hs(e) {\n    return Tn(e).join(Pr);\n}\nfunction _e(e, t) {\n    return e.filter((r)=>t.includes(r)).length === e.length;\n}\nfunction Dn(e, t = Ai) {\n    return e.slice(Math.max(e.length - t, 0));\n}\nfunction cs(e) {\n    return Object.fromEntries(e.entries());\n}\nfunction ls(e) {\n    return new Map(Object.entries(e));\n}\nfunction ds(e, t) {\n    const r = {};\n    return Object.keys(e).forEach((i)=>{\n        r[i] = t(e[i]);\n    }), r;\n}\nconst ps = (e)=>e;\nfunction Fn(e) {\n    return e.trim().replace(/^\\w/, (t)=>t.toUpperCase());\n}\nfunction vs(e) {\n    return e.split(Pr).map((t)=>Fn(t)).join(Pr);\n}\nfunction gs(e = _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES, t) {\n    const r = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e || _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES);\n    let i, n, o;\n    return {\n        resolve: (h)=>{\n            o && i && (clearTimeout(o), i(h));\n        },\n        reject: (h)=>{\n            o && n && (clearTimeout(o), n(h));\n        },\n        done: ()=>new Promise((h, p)=>{\n                o = setTimeout(()=>{\n                    p(new Error(t));\n                }, r), i = h, n = p;\n            })\n    };\n}\nfunction ms(e, t, r) {\n    return new Promise(async (i, n)=>{\n        const o = setTimeout(()=>n(new Error(r)), t);\n        try {\n            const h = await e;\n            i(h);\n        } catch (h) {\n            n(h);\n        }\n        clearTimeout(o);\n    });\n}\nfunction yi(e, t) {\n    if (typeof t == \"string\" && t.startsWith(`${e}:`)) return t;\n    if (e.toLowerCase() === \"topic\") {\n        if (typeof t != \"string\") throw new Error('Value must be \"string\" for expirer target type: topic');\n        return `topic:${t}`;\n    } else if (e.toLowerCase() === \"id\") {\n        if (typeof t != \"number\") throw new Error('Value must be \"number\" for expirer target type: id');\n        return `id:${t}`;\n    }\n    throw new Error(`Unknown expirer target type: ${e}`);\n}\nfunction As(e) {\n    return yi(\"topic\", e);\n}\nfunction bs(e) {\n    return yi(\"id\", e);\n}\nfunction ys(e) {\n    const [t, r] = e.split(\":\"), i = {\n        id: void 0,\n        topic: void 0\n    };\n    if (t === \"topic\" && typeof r == \"string\") i.topic = r;\n    else if (t === \"id\" && Number.isInteger(Number(r))) i.id = Number(r);\n    else throw new Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);\n    return i;\n}\nfunction ws(e, t) {\n    return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)((t || Date.now()) + (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e));\n}\nfunction xs(e) {\n    return Date.now() >= (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e);\n}\nfunction Ms(e, t) {\n    return `${e}${t ? `:${t}` : \"\"}`;\n}\nfunction me(e = [], t = []) {\n    return [\n        ...new Set([\n            ...e,\n            ...t\n        ])\n    ];\n}\nasync function Es({ id: e, topic: t, wcDeepLink: r }) {\n    var i;\n    try {\n        if (!r) return;\n        const n = typeof r == \"string\" ? JSON.parse(r) : r, o = n?.href;\n        if (typeof o != \"string\") return;\n        const h = Un(o, e, t), p = We();\n        if (p === qt.browser) {\n            if (!((i = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()) != null && i.hasFocus())) {\n                console.warn(\"Document does not have focus, skipping deeplink.\");\n                return;\n            }\n            h.startsWith(\"https://\") || h.startsWith(\"http://\") ? window.open(h, \"_blank\", \"noreferrer noopener\") : window.open(h, kn() ? \"_blank\" : \"_self\", \"noreferrer noopener\");\n        } else p === qt.reactNative && typeof (global == null ? void 0 : global.Linking) < \"u\" && await global.Linking.openURL(h);\n    } catch (n) {\n        console.error(n);\n    }\n}\nfunction Un(e, t, r) {\n    const i = `requestId=${t}&sessionTopic=${r}`;\n    e.endsWith(\"/\") && (e = e.slice(0, -1));\n    let n = `${e}`;\n    if (e.startsWith(\"https://t.me\")) {\n        const o = e.includes(\"?\") ? \"&startapp=\" : \"?startapp=\";\n        n = `${n}${o}${qn(i, !0)}`;\n    } else n = `${n}/wc?${i}`;\n    return n;\n}\nasync function Ss(e, t) {\n    let r = \"\";\n    try {\n        if (gr() && (r = localStorage.getItem(t), r)) return r;\n        r = await e.getItem(t);\n    } catch (i) {\n        console.error(i);\n    }\n    return r;\n}\nfunction wi(e, t) {\n    return e.filter((r)=>t.includes(r));\n}\nfunction Is(e, t) {\n    if (!e.includes(t)) return null;\n    const r = e.split(/([&,?,=])/), i = r.indexOf(t);\n    return r[i + 2];\n}\nfunction Ns() {\n    return typeof crypto < \"u\" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/gu, (e)=>{\n        const t = Math.random() * 16 | 0;\n        return (e === \"x\" ? t : t & 3 | 8).toString(16);\n    });\n}\nfunction _s() {\n    return typeof process < \"u\" && process.env.IS_VITEST === \"true\";\n}\nfunction kn() {\n    return  false && (0);\n}\nfunction qn(e, t = !1) {\n    const r = Buffer.from(e).toString(\"base64\");\n    return t ? r.replace(/[=]/g, \"\") : r;\n}\nfunction xi(e) {\n    return Buffer.from(e, \"base64\").toString(\"utf-8\");\n}\nvar Kn = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction Bs(e) {\n    var t = e.default;\n    if (typeof t == \"function\") {\n        var r = function() {\n            return t.apply(this, arguments);\n        };\n        r.prototype = t.prototype;\n    } else r = {};\n    return Object.defineProperty(r, \"__esModule\", {\n        value: !0\n    }), Object.keys(e).forEach(function(i) {\n        var n = Object.getOwnPropertyDescriptor(e, i);\n        Object.defineProperty(r, i, n.get ? n : {\n            enumerable: !0,\n            get: function() {\n                return e[i];\n            }\n        });\n    }), r;\n}\nvar Hn = {\n    exports: {}\n}; /**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */ \n(function(e) {\n    (function() {\n        var t = \"input is invalid type\", r = \"finalize already called\", i = \"undefined\" == \"object\", n = i ? window : {};\n        n.JS_SHA3_NO_WINDOW && (i = !1);\n        var o = !i && typeof self == \"object\", h = !n.JS_SHA3_NO_NODE_JS && typeof process == \"object\" && process.versions && process.versions.node;\n        h ? n = Kn : o && (n = self);\n        var p = !n.JS_SHA3_NO_COMMON_JS && !0 && e.exports, A = !n.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < \"u\", v = \"0123456789abcdef\".split(\"\"), w = [\n            31,\n            7936,\n            2031616,\n            520093696\n        ], y = [\n            4,\n            1024,\n            262144,\n            67108864\n        ], S = [\n            1,\n            256,\n            65536,\n            16777216\n        ], N = [\n            6,\n            1536,\n            393216,\n            100663296\n        ], I = [\n            0,\n            8,\n            16,\n            24\n        ], C = [\n            1,\n            0,\n            32898,\n            0,\n            32906,\n            2147483648,\n            2147516416,\n            2147483648,\n            32907,\n            0,\n            2147483649,\n            0,\n            2147516545,\n            2147483648,\n            32777,\n            2147483648,\n            138,\n            0,\n            136,\n            0,\n            2147516425,\n            0,\n            2147483658,\n            0,\n            2147516555,\n            0,\n            139,\n            2147483648,\n            32905,\n            2147483648,\n            32771,\n            2147483648,\n            32770,\n            2147483648,\n            128,\n            2147483648,\n            32778,\n            0,\n            2147483658,\n            2147483648,\n            2147516545,\n            2147483648,\n            32896,\n            2147483648,\n            2147483649,\n            0,\n            2147516424,\n            2147483648\n        ], D = [\n            224,\n            256,\n            384,\n            512\n        ], U = [\n            128,\n            256\n        ], J = [\n            \"hex\",\n            \"buffer\",\n            \"arrayBuffer\",\n            \"array\",\n            \"digest\"\n        ], Bt = {\n            128: 168,\n            256: 136\n        };\n        (n.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(u) {\n            return Object.prototype.toString.call(u) === \"[object Array]\";\n        }), A && (n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(u) {\n            return typeof u == \"object\" && u.buffer && u.buffer.constructor === ArrayBuffer;\n        });\n        for(var G = function(u, E, _) {\n            return function(B) {\n                return new s(u, E, u).update(B)[_]();\n            };\n        }, H = function(u, E, _) {\n            return function(B, R) {\n                return new s(u, E, R).update(B)[_]();\n            };\n        }, L = function(u, E, _) {\n            return function(B, R, F, P) {\n                return f[\"cshake\" + u].update(B, R, F, P)[_]();\n            };\n        }, Pt = function(u, E, _) {\n            return function(B, R, F, P) {\n                return f[\"kmac\" + u].update(B, R, F, P)[_]();\n            };\n        }, W = function(u, E, _, B) {\n            for(var R = 0; R < J.length; ++R){\n                var F = J[R];\n                u[F] = E(_, B, F);\n            }\n            return u;\n        }, Rt = function(u, E) {\n            var _ = G(u, E, \"hex\");\n            return _.create = function() {\n                return new s(u, E, u);\n            }, _.update = function(B) {\n                return _.create().update(B);\n            }, W(_, G, u, E);\n        }, Vt = function(u, E) {\n            var _ = H(u, E, \"hex\");\n            return _.create = function(B) {\n                return new s(u, E, B);\n            }, _.update = function(B, R) {\n                return _.create(R).update(B);\n            }, W(_, H, u, E);\n        }, Y = function(u, E) {\n            var _ = Bt[u], B = L(u, E, \"hex\");\n            return B.create = function(R, F, P) {\n                return !F && !P ? f[\"shake\" + u].create(R) : new s(u, E, R).bytepad([\n                    F,\n                    P\n                ], _);\n            }, B.update = function(R, F, P, O) {\n                return B.create(F, P, O).update(R);\n            }, W(B, L, u, E);\n        }, Wt = function(u, E) {\n            var _ = Bt[u], B = Pt(u, E, \"hex\");\n            return B.create = function(R, F, P) {\n                return new g(u, E, F).bytepad([\n                    \"KMAC\",\n                    P\n                ], _).bytepad([\n                    R\n                ], _);\n            }, B.update = function(R, F, P, O) {\n                return B.create(R, P, O).update(F);\n            }, W(B, Pt, u, E);\n        }, b = [\n            {\n                name: \"keccak\",\n                padding: S,\n                bits: D,\n                createMethod: Rt\n            },\n            {\n                name: \"sha3\",\n                padding: N,\n                bits: D,\n                createMethod: Rt\n            },\n            {\n                name: \"shake\",\n                padding: w,\n                bits: U,\n                createMethod: Vt\n            },\n            {\n                name: \"cshake\",\n                padding: y,\n                bits: U,\n                createMethod: Y\n            },\n            {\n                name: \"kmac\",\n                padding: y,\n                bits: U,\n                createMethod: Wt\n            }\n        ], f = {}, a = [], c = 0; c < b.length; ++c)for(var d = b[c], m = d.bits, x = 0; x < m.length; ++x){\n            var M = d.name + \"_\" + m[x];\n            if (a.push(M), f[M] = d.createMethod(m[x], d.padding), d.name !== \"sha3\") {\n                var l = d.name + m[x];\n                a.push(l), f[l] = f[M];\n            }\n        }\n        function s(u, E, _) {\n            this.blocks = [], this.s = [], this.padding = E, this.outputBits = _, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (u << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = _ >> 5, this.extraBytes = (_ & 31) >> 3;\n            for(var B = 0; B < 50; ++B)this.s[B] = 0;\n        }\n        s.prototype.update = function(u) {\n            if (this.finalized) throw new Error(r);\n            var E, _ = typeof u;\n            if (_ !== \"string\") {\n                if (_ === \"object\") {\n                    if (u === null) throw new Error(t);\n                    if (A && u.constructor === ArrayBuffer) u = new Uint8Array(u);\n                    else if (!Array.isArray(u) && (!A || !ArrayBuffer.isView(u))) throw new Error(t);\n                } else throw new Error(t);\n                E = !0;\n            }\n            for(var B = this.blocks, R = this.byteCount, F = u.length, P = this.blockCount, O = 0, Ct = this.s, T, q; O < F;){\n                if (this.reset) for(this.reset = !1, B[0] = this.block, T = 1; T < P + 1; ++T)B[T] = 0;\n                if (E) for(T = this.start; O < F && T < R; ++O)B[T >> 2] |= u[O] << I[T++ & 3];\n                else for(T = this.start; O < F && T < R; ++O)q = u.charCodeAt(O), q < 128 ? B[T >> 2] |= q << I[T++ & 3] : q < 2048 ? (B[T >> 2] |= (192 | q >> 6) << I[T++ & 3], B[T >> 2] |= (128 | q & 63) << I[T++ & 3]) : q < 55296 || q >= 57344 ? (B[T >> 2] |= (224 | q >> 12) << I[T++ & 3], B[T >> 2] |= (128 | q >> 6 & 63) << I[T++ & 3], B[T >> 2] |= (128 | q & 63) << I[T++ & 3]) : (q = 65536 + ((q & 1023) << 10 | u.charCodeAt(++O) & 1023), B[T >> 2] |= (240 | q >> 18) << I[T++ & 3], B[T >> 2] |= (128 | q >> 12 & 63) << I[T++ & 3], B[T >> 2] |= (128 | q >> 6 & 63) << I[T++ & 3], B[T >> 2] |= (128 | q & 63) << I[T++ & 3]);\n                if (this.lastByteIndex = T, T >= R) {\n                    for(this.start = T - R, this.block = B[P], T = 0; T < P; ++T)Ct[T] ^= B[T];\n                    k(Ct), this.reset = !0;\n                } else this.start = T;\n            }\n            return this;\n        }, s.prototype.encode = function(u, E) {\n            var _ = u & 255, B = 1, R = [\n                _\n            ];\n            for(u = u >> 8, _ = u & 255; _ > 0;)R.unshift(_), u = u >> 8, _ = u & 255, ++B;\n            return E ? R.push(B) : R.unshift(B), this.update(R), R.length;\n        }, s.prototype.encodeString = function(u) {\n            var E, _ = typeof u;\n            if (_ !== \"string\") {\n                if (_ === \"object\") {\n                    if (u === null) throw new Error(t);\n                    if (A && u.constructor === ArrayBuffer) u = new Uint8Array(u);\n                    else if (!Array.isArray(u) && (!A || !ArrayBuffer.isView(u))) throw new Error(t);\n                } else throw new Error(t);\n                E = !0;\n            }\n            var B = 0, R = u.length;\n            if (E) B = R;\n            else for(var F = 0; F < u.length; ++F){\n                var P = u.charCodeAt(F);\n                P < 128 ? B += 1 : P < 2048 ? B += 2 : P < 55296 || P >= 57344 ? B += 3 : (P = 65536 + ((P & 1023) << 10 | u.charCodeAt(++F) & 1023), B += 4);\n            }\n            return B += this.encode(B * 8), this.update(u), B;\n        }, s.prototype.bytepad = function(u, E) {\n            for(var _ = this.encode(E), B = 0; B < u.length; ++B)_ += this.encodeString(u[B]);\n            var R = E - _ % E, F = [];\n            return F.length = R, this.update(F), this;\n        }, s.prototype.finalize = function() {\n            if (!this.finalized) {\n                this.finalized = !0;\n                var u = this.blocks, E = this.lastByteIndex, _ = this.blockCount, B = this.s;\n                if (u[E >> 2] |= this.padding[E & 3], this.lastByteIndex === this.byteCount) for(u[0] = u[_], E = 1; E < _ + 1; ++E)u[E] = 0;\n                for(u[_ - 1] |= 2147483648, E = 0; E < _; ++E)B[E] ^= u[E];\n                k(B);\n            }\n        }, s.prototype.toString = s.prototype.hex = function() {\n            this.finalize();\n            for(var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, F = 0, P = \"\", O; F < _;){\n                for(R = 0; R < u && F < _; ++R, ++F)O = E[R], P += v[O >> 4 & 15] + v[O & 15] + v[O >> 12 & 15] + v[O >> 8 & 15] + v[O >> 20 & 15] + v[O >> 16 & 15] + v[O >> 28 & 15] + v[O >> 24 & 15];\n                F % u === 0 && (k(E), R = 0);\n            }\n            return B && (O = E[R], P += v[O >> 4 & 15] + v[O & 15], B > 1 && (P += v[O >> 12 & 15] + v[O >> 8 & 15]), B > 2 && (P += v[O >> 20 & 15] + v[O >> 16 & 15])), P;\n        }, s.prototype.arrayBuffer = function() {\n            this.finalize();\n            var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, F = 0, P = this.outputBits >> 3, O;\n            B ? O = new ArrayBuffer(_ + 1 << 2) : O = new ArrayBuffer(P);\n            for(var Ct = new Uint32Array(O); F < _;){\n                for(R = 0; R < u && F < _; ++R, ++F)Ct[F] = E[R];\n                F % u === 0 && k(E);\n            }\n            return B && (Ct[R] = E[R], O = O.slice(0, P)), O;\n        }, s.prototype.buffer = s.prototype.arrayBuffer, s.prototype.digest = s.prototype.array = function() {\n            this.finalize();\n            for(var u = this.blockCount, E = this.s, _ = this.outputBlocks, B = this.extraBytes, R = 0, F = 0, P = [], O, Ct; F < _;){\n                for(R = 0; R < u && F < _; ++R, ++F)O = F << 2, Ct = E[R], P[O] = Ct & 255, P[O + 1] = Ct >> 8 & 255, P[O + 2] = Ct >> 16 & 255, P[O + 3] = Ct >> 24 & 255;\n                F % u === 0 && k(E);\n            }\n            return B && (O = F << 2, Ct = E[R], P[O] = Ct & 255, B > 1 && (P[O + 1] = Ct >> 8 & 255), B > 2 && (P[O + 2] = Ct >> 16 & 255)), P;\n        };\n        function g(u, E, _) {\n            s.call(this, u, E, _);\n        }\n        g.prototype = new s, g.prototype.finalize = function() {\n            return this.encode(this.outputBits, !0), s.prototype.finalize.call(this);\n        };\n        var k = function(u) {\n            var E, _, B, R, F, P, O, Ct, T, q, Te, X, $, De, Z, tt, Fe, et, rt, Ue, it, nt, ke, ft, ot, qe, st, at, Ke, ut, ht, He, ct, lt, Le, dt, pt, ze, vt, gt, je, mt, At, Qe, bt, yt, Je, wt, xt, Ge, Mt, Et, Ye, St, It, Ve, Nt, _t, Me, Ee, Se, Ie, Ne;\n            for(B = 0; B < 48; B += 2)R = u[0] ^ u[10] ^ u[20] ^ u[30] ^ u[40], F = u[1] ^ u[11] ^ u[21] ^ u[31] ^ u[41], P = u[2] ^ u[12] ^ u[22] ^ u[32] ^ u[42], O = u[3] ^ u[13] ^ u[23] ^ u[33] ^ u[43], Ct = u[4] ^ u[14] ^ u[24] ^ u[34] ^ u[44], T = u[5] ^ u[15] ^ u[25] ^ u[35] ^ u[45], q = u[6] ^ u[16] ^ u[26] ^ u[36] ^ u[46], Te = u[7] ^ u[17] ^ u[27] ^ u[37] ^ u[47], X = u[8] ^ u[18] ^ u[28] ^ u[38] ^ u[48], $ = u[9] ^ u[19] ^ u[29] ^ u[39] ^ u[49], E = X ^ (P << 1 | O >>> 31), _ = $ ^ (O << 1 | P >>> 31), u[0] ^= E, u[1] ^= _, u[10] ^= E, u[11] ^= _, u[20] ^= E, u[21] ^= _, u[30] ^= E, u[31] ^= _, u[40] ^= E, u[41] ^= _, E = R ^ (Ct << 1 | T >>> 31), _ = F ^ (T << 1 | Ct >>> 31), u[2] ^= E, u[3] ^= _, u[12] ^= E, u[13] ^= _, u[22] ^= E, u[23] ^= _, u[32] ^= E, u[33] ^= _, u[42] ^= E, u[43] ^= _, E = P ^ (q << 1 | Te >>> 31), _ = O ^ (Te << 1 | q >>> 31), u[4] ^= E, u[5] ^= _, u[14] ^= E, u[15] ^= _, u[24] ^= E, u[25] ^= _, u[34] ^= E, u[35] ^= _, u[44] ^= E, u[45] ^= _, E = Ct ^ (X << 1 | $ >>> 31), _ = T ^ ($ << 1 | X >>> 31), u[6] ^= E, u[7] ^= _, u[16] ^= E, u[17] ^= _, u[26] ^= E, u[27] ^= _, u[36] ^= E, u[37] ^= _, u[46] ^= E, u[47] ^= _, E = q ^ (R << 1 | F >>> 31), _ = Te ^ (F << 1 | R >>> 31), u[8] ^= E, u[9] ^= _, u[18] ^= E, u[19] ^= _, u[28] ^= E, u[29] ^= _, u[38] ^= E, u[39] ^= _, u[48] ^= E, u[49] ^= _, De = u[0], Z = u[1], yt = u[11] << 4 | u[10] >>> 28, Je = u[10] << 4 | u[11] >>> 28, at = u[20] << 3 | u[21] >>> 29, Ke = u[21] << 3 | u[20] >>> 29, Ee = u[31] << 9 | u[30] >>> 23, Se = u[30] << 9 | u[31] >>> 23, mt = u[40] << 18 | u[41] >>> 14, At = u[41] << 18 | u[40] >>> 14, lt = u[2] << 1 | u[3] >>> 31, Le = u[3] << 1 | u[2] >>> 31, tt = u[13] << 12 | u[12] >>> 20, Fe = u[12] << 12 | u[13] >>> 20, wt = u[22] << 10 | u[23] >>> 22, xt = u[23] << 10 | u[22] >>> 22, ut = u[33] << 13 | u[32] >>> 19, ht = u[32] << 13 | u[33] >>> 19, Ie = u[42] << 2 | u[43] >>> 30, Ne = u[43] << 2 | u[42] >>> 30, St = u[5] << 30 | u[4] >>> 2, It = u[4] << 30 | u[5] >>> 2, dt = u[14] << 6 | u[15] >>> 26, pt = u[15] << 6 | u[14] >>> 26, et = u[25] << 11 | u[24] >>> 21, rt = u[24] << 11 | u[25] >>> 21, Ge = u[34] << 15 | u[35] >>> 17, Mt = u[35] << 15 | u[34] >>> 17, He = u[45] << 29 | u[44] >>> 3, ct = u[44] << 29 | u[45] >>> 3, ft = u[6] << 28 | u[7] >>> 4, ot = u[7] << 28 | u[6] >>> 4, Ve = u[17] << 23 | u[16] >>> 9, Nt = u[16] << 23 | u[17] >>> 9, ze = u[26] << 25 | u[27] >>> 7, vt = u[27] << 25 | u[26] >>> 7, Ue = u[36] << 21 | u[37] >>> 11, it = u[37] << 21 | u[36] >>> 11, Et = u[47] << 24 | u[46] >>> 8, Ye = u[46] << 24 | u[47] >>> 8, Qe = u[8] << 27 | u[9] >>> 5, bt = u[9] << 27 | u[8] >>> 5, qe = u[18] << 20 | u[19] >>> 12, st = u[19] << 20 | u[18] >>> 12, _t = u[29] << 7 | u[28] >>> 25, Me = u[28] << 7 | u[29] >>> 25, gt = u[38] << 8 | u[39] >>> 24, je = u[39] << 8 | u[38] >>> 24, nt = u[48] << 14 | u[49] >>> 18, ke = u[49] << 14 | u[48] >>> 18, u[0] = De ^ ~tt & et, u[1] = Z ^ ~Fe & rt, u[10] = ft ^ ~qe & at, u[11] = ot ^ ~st & Ke, u[20] = lt ^ ~dt & ze, u[21] = Le ^ ~pt & vt, u[30] = Qe ^ ~yt & wt, u[31] = bt ^ ~Je & xt, u[40] = St ^ ~Ve & _t, u[41] = It ^ ~Nt & Me, u[2] = tt ^ ~et & Ue, u[3] = Fe ^ ~rt & it, u[12] = qe ^ ~at & ut, u[13] = st ^ ~Ke & ht, u[22] = dt ^ ~ze & gt, u[23] = pt ^ ~vt & je, u[32] = yt ^ ~wt & Ge, u[33] = Je ^ ~xt & Mt, u[42] = Ve ^ ~_t & Ee, u[43] = Nt ^ ~Me & Se, u[4] = et ^ ~Ue & nt, u[5] = rt ^ ~it & ke, u[14] = at ^ ~ut & He, u[15] = Ke ^ ~ht & ct, u[24] = ze ^ ~gt & mt, u[25] = vt ^ ~je & At, u[34] = wt ^ ~Ge & Et, u[35] = xt ^ ~Mt & Ye, u[44] = _t ^ ~Ee & Ie, u[45] = Me ^ ~Se & Ne, u[6] = Ue ^ ~nt & De, u[7] = it ^ ~ke & Z, u[16] = ut ^ ~He & ft, u[17] = ht ^ ~ct & ot, u[26] = gt ^ ~mt & lt, u[27] = je ^ ~At & Le, u[36] = Ge ^ ~Et & Qe, u[37] = Mt ^ ~Ye & bt, u[46] = Ee ^ ~Ie & St, u[47] = Se ^ ~Ne & It, u[8] = nt ^ ~De & tt, u[9] = ke ^ ~Z & Fe, u[18] = He ^ ~ft & qe, u[19] = ct ^ ~ot & st, u[28] = mt ^ ~lt & dt, u[29] = At ^ ~Le & pt, u[38] = Et ^ ~Qe & yt, u[39] = Ye ^ ~bt & Je, u[48] = Ie ^ ~St & Ve, u[49] = Ne ^ ~It & Nt, u[0] ^= C[B], u[1] ^= C[B + 1];\n        };\n        if (p) e.exports = f;\n        else for(c = 0; c < a.length; ++c)n[a[c]] = f[a[c]];\n    })();\n})(Hn);\nvar Cs = Hn.exports;\nconst Rs = \"logger/5.7.0\";\nlet Ln = !1, zn = !1;\nconst Tr = {\n    debug: 1,\n    default: 2,\n    info: 2,\n    warning: 3,\n    error: 4,\n    off: 5\n};\nlet jn = Tr.default, Mi = null;\nfunction Os() {\n    try {\n        const e = [];\n        if ([\n            \"NFD\",\n            \"NFC\",\n            \"NFKD\",\n            \"NFKC\"\n        ].forEach((t)=>{\n            try {\n                if (\"test\".normalize(t) !== \"test\") throw new Error(\"bad normalize\");\n            } catch  {\n                e.push(t);\n            }\n        }), e.length) throw new Error(\"missing \" + e.join(\", \"));\n        if (String.fromCharCode(233).normalize(\"NFD\") !== String.fromCharCode(101, 769)) throw new Error(\"broken implementation\");\n    } catch (e) {\n        return e.message;\n    }\n    return null;\n}\nconst Qn = Os();\nvar Ei;\n(function(e) {\n    e.DEBUG = \"DEBUG\", e.INFO = \"INFO\", e.WARNING = \"WARNING\", e.ERROR = \"ERROR\", e.OFF = \"OFF\";\n})(Ei || (Ei = {}));\nvar re;\n(function(e) {\n    e.UNKNOWN_ERROR = \"UNKNOWN_ERROR\", e.NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\", e.UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\", e.NETWORK_ERROR = \"NETWORK_ERROR\", e.SERVER_ERROR = \"SERVER_ERROR\", e.TIMEOUT = \"TIMEOUT\", e.BUFFER_OVERRUN = \"BUFFER_OVERRUN\", e.NUMERIC_FAULT = \"NUMERIC_FAULT\", e.MISSING_NEW = \"MISSING_NEW\", e.INVALID_ARGUMENT = \"INVALID_ARGUMENT\", e.MISSING_ARGUMENT = \"MISSING_ARGUMENT\", e.UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\", e.CALL_EXCEPTION = \"CALL_EXCEPTION\", e.INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\", e.NONCE_EXPIRED = \"NONCE_EXPIRED\", e.REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\", e.UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\", e.TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\", e.ACTION_REJECTED = \"ACTION_REJECTED\";\n})(re || (re = {}));\nconst Jn = \"0123456789abcdef\";\nclass z {\n    constructor(t){\n        Object.defineProperty(this, \"version\", {\n            enumerable: !0,\n            value: t,\n            writable: !1\n        });\n    }\n    _log(t, r) {\n        const i = t.toLowerCase();\n        Tr[i] == null && this.throwArgumentError(\"invalid log level name\", \"logLevel\", t), !(jn > Tr[i]) && console.log.apply(console, r);\n    }\n    debug(...t) {\n        this._log(z.levels.DEBUG, t);\n    }\n    info(...t) {\n        this._log(z.levels.INFO, t);\n    }\n    warn(...t) {\n        this._log(z.levels.WARNING, t);\n    }\n    makeError(t, r, i) {\n        if (zn) return this.makeError(\"censored error\", r, {});\n        r || (r = z.errors.UNKNOWN_ERROR), i || (i = {});\n        const n = [];\n        Object.keys(i).forEach((A)=>{\n            const v = i[A];\n            try {\n                if (v instanceof Uint8Array) {\n                    let w = \"\";\n                    for(let y = 0; y < v.length; y++)w += Jn[v[y] >> 4], w += Jn[v[y] & 15];\n                    n.push(A + \"=Uint8Array(0x\" + w + \")\");\n                } else n.push(A + \"=\" + JSON.stringify(v));\n            } catch  {\n                n.push(A + \"=\" + JSON.stringify(i[A].toString()));\n            }\n        }), n.push(`code=${r}`), n.push(`version=${this.version}`);\n        const o = t;\n        let h = \"\";\n        switch(r){\n            case re.NUMERIC_FAULT:\n                {\n                    h = \"NUMERIC_FAULT\";\n                    const A = t;\n                    switch(A){\n                        case \"overflow\":\n                        case \"underflow\":\n                        case \"division-by-zero\":\n                            h += \"-\" + A;\n                            break;\n                        case \"negative-power\":\n                        case \"negative-width\":\n                            h += \"-unsupported\";\n                            break;\n                        case \"unbound-bitwise-result\":\n                            h += \"-unbound-result\";\n                            break;\n                    }\n                    break;\n                }\n            case re.CALL_EXCEPTION:\n            case re.INSUFFICIENT_FUNDS:\n            case re.MISSING_NEW:\n            case re.NONCE_EXPIRED:\n            case re.REPLACEMENT_UNDERPRICED:\n            case re.TRANSACTION_REPLACED:\n            case re.UNPREDICTABLE_GAS_LIMIT:\n                h = r;\n                break;\n        }\n        h && (t += \" [ See: https://links.ethers.org/v5-errors-\" + h + \" ]\"), n.length && (t += \" (\" + n.join(\", \") + \")\");\n        const p = new Error(t);\n        return p.reason = o, p.code = r, Object.keys(i).forEach(function(A) {\n            p[A] = i[A];\n        }), p;\n    }\n    throwError(t, r, i) {\n        throw this.makeError(t, r, i);\n    }\n    throwArgumentError(t, r, i) {\n        return this.throwError(t, z.errors.INVALID_ARGUMENT, {\n            argument: r,\n            value: i\n        });\n    }\n    assert(t, r, i, n) {\n        t || this.throwError(r, i, n);\n    }\n    assertArgument(t, r, i, n) {\n        t || this.throwArgumentError(r, i, n);\n    }\n    checkNormalize(t) {\n        Qn && this.throwError(\"platform missing String.prototype.normalize\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"String.prototype.normalize\",\n            form: Qn\n        });\n    }\n    checkSafeUint53(t, r) {\n        typeof t == \"number\" && (r == null && (r = \"value not safe\"), (t < 0 || t >= 9007199254740991) && this.throwError(r, z.errors.NUMERIC_FAULT, {\n            operation: \"checkSafeInteger\",\n            fault: \"out-of-safe-range\",\n            value: t\n        }), t % 1 && this.throwError(r, z.errors.NUMERIC_FAULT, {\n            operation: \"checkSafeInteger\",\n            fault: \"non-integer\",\n            value: t\n        }));\n    }\n    checkArgumentCount(t, r, i) {\n        i ? i = \": \" + i : i = \"\", t < r && this.throwError(\"missing argument\" + i, z.errors.MISSING_ARGUMENT, {\n            count: t,\n            expectedCount: r\n        }), t > r && this.throwError(\"too many arguments\" + i, z.errors.UNEXPECTED_ARGUMENT, {\n            count: t,\n            expectedCount: r\n        });\n    }\n    checkNew(t, r) {\n        (t === Object || t == null) && this.throwError(\"missing new\", z.errors.MISSING_NEW, {\n            name: r.name\n        });\n    }\n    checkAbstract(t, r) {\n        t === r ? this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(r.name) + \" directly; use a sub-class\", z.errors.UNSUPPORTED_OPERATION, {\n            name: t.name,\n            operation: \"new\"\n        }) : (t === Object || t == null) && this.throwError(\"missing new\", z.errors.MISSING_NEW, {\n            name: r.name\n        });\n    }\n    static globalLogger() {\n        return Mi || (Mi = new z(Rs)), Mi;\n    }\n    static setCensorship(t, r) {\n        if (!t && r && this.globalLogger().throwError(\"cannot permanently disable censorship\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setCensorship\"\n        }), Ln) {\n            if (!t) return;\n            this.globalLogger().throwError(\"error censorship permanent\", z.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        zn = !!t, Ln = !!r;\n    }\n    static setLogLevel(t) {\n        const r = Tr[t.toLowerCase()];\n        if (r == null) {\n            z.globalLogger().warn(\"invalid log level - \" + t);\n            return;\n        }\n        jn = r;\n    }\n    static from(t) {\n        return new z(t);\n    }\n}\nz.errors = re, z.levels = Ei;\nconst Ps = \"bytes/5.7.0\", Tt = new z(Ps);\nfunction Gn(e) {\n    return !!e.toHexString;\n}\nfunction ir(e) {\n    return e.slice || (e.slice = function() {\n        const t = Array.prototype.slice.call(arguments);\n        return ir(new Uint8Array(Array.prototype.slice.apply(e, t)));\n    }), e;\n}\nfunction Ts(e) {\n    return Jt(e) && !(e.length % 2) || nr(e);\n}\nfunction Yn(e) {\n    return typeof e == \"number\" && e == e && e % 1 === 0;\n}\nfunction nr(e) {\n    if (e == null) return !1;\n    if (e.constructor === Uint8Array) return !0;\n    if (typeof e == \"string\" || !Yn(e.length) || e.length < 0) return !1;\n    for(let t = 0; t < e.length; t++){\n        const r = e[t];\n        if (!Yn(r) || r < 0 || r >= 256) return !1;\n    }\n    return !0;\n}\nfunction Ot(e, t) {\n    if (t || (t = {}), typeof e == \"number\") {\n        Tt.checkSafeUint53(e, \"invalid arrayify value\");\n        const r = [];\n        for(; e;)r.unshift(e & 255), e = parseInt(String(e / 256));\n        return r.length === 0 && r.push(0), ir(new Uint8Array(r));\n    }\n    if (t.allowMissingPrefix && typeof e == \"string\" && e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), Gn(e) && (e = e.toHexString()), Jt(e)) {\n        let r = e.substring(2);\n        r.length % 2 && (t.hexPad === \"left\" ? r = \"0\" + r : t.hexPad === \"right\" ? r += \"0\" : Tt.throwArgumentError(\"hex data is odd-length\", \"value\", e));\n        const i = [];\n        for(let n = 0; n < r.length; n += 2)i.push(parseInt(r.substring(n, n + 2), 16));\n        return ir(new Uint8Array(i));\n    }\n    return nr(e) ? ir(new Uint8Array(e)) : Tt.throwArgumentError(\"invalid arrayify value\", \"value\", e);\n}\nfunction Ds(e) {\n    const t = e.map((n)=>Ot(n)), r = t.reduce((n, o)=>n + o.length, 0), i = new Uint8Array(r);\n    return t.reduce((n, o)=>(i.set(o, n), n + o.length), 0), ir(i);\n}\nfunction Fs(e, t) {\n    e = Ot(e), e.length > t && Tt.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    const r = new Uint8Array(t);\n    return r.set(e, t - e.length), ir(r);\n}\nfunction Jt(e, t) {\n    return !(typeof e != \"string\" || !e.match(/^0x[0-9A-Fa-f]*$/) || t && e.length !== 2 + 2 * t);\n}\nconst Si = \"0123456789abcdef\";\nfunction Kt(e, t) {\n    if (t || (t = {}), typeof e == \"number\") {\n        Tt.checkSafeUint53(e, \"invalid hexlify value\");\n        let r = \"\";\n        for(; e;)r = Si[e & 15] + r, e = Math.floor(e / 16);\n        return r.length ? (r.length % 2 && (r = \"0\" + r), \"0x\" + r) : \"0x00\";\n    }\n    if (typeof e == \"bigint\") return e = e.toString(16), e.length % 2 ? \"0x0\" + e : \"0x\" + e;\n    if (t.allowMissingPrefix && typeof e == \"string\" && e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), Gn(e)) return e.toHexString();\n    if (Jt(e)) return e.length % 2 && (t.hexPad === \"left\" ? e = \"0x0\" + e.substring(2) : t.hexPad === \"right\" ? e += \"0\" : Tt.throwArgumentError(\"hex data is odd-length\", \"value\", e)), e.toLowerCase();\n    if (nr(e)) {\n        let r = \"0x\";\n        for(let i = 0; i < e.length; i++){\n            let n = e[i];\n            r += Si[(n & 240) >> 4] + Si[n & 15];\n        }\n        return r;\n    }\n    return Tt.throwArgumentError(\"invalid hexlify value\", \"value\", e);\n}\nfunction Us(e) {\n    if (typeof e != \"string\") e = Kt(e);\n    else if (!Jt(e) || e.length % 2) return null;\n    return (e.length - 2) / 2;\n}\nfunction Vn(e, t, r) {\n    return typeof e != \"string\" ? e = Kt(e) : (!Jt(e) || e.length % 2) && Tt.throwArgumentError(\"invalid hexData\", \"value\", e), t = 2 + 2 * t, r != null ? \"0x\" + e.substring(t, 2 + 2 * r) : \"0x\" + e.substring(t);\n}\nfunction oe(e, t) {\n    for(typeof e != \"string\" ? e = Kt(e) : Jt(e) || Tt.throwArgumentError(\"invalid hex string\", \"value\", e), e.length > 2 * t + 2 && Tt.throwArgumentError(\"value out of range\", \"value\", arguments[1]); e.length < 2 * t + 2;)e = \"0x0\" + e.substring(2);\n    return e;\n}\nfunction Wn(e) {\n    const t = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (Ts(e)) {\n        let r = Ot(e);\n        r.length === 64 ? (t.v = 27 + (r[32] >> 7), r[32] &= 127, t.r = Kt(r.slice(0, 32)), t.s = Kt(r.slice(32, 64))) : r.length === 65 ? (t.r = Kt(r.slice(0, 32)), t.s = Kt(r.slice(32, 64)), t.v = r[64]) : Tt.throwArgumentError(\"invalid signature string\", \"signature\", e), t.v < 27 && (t.v === 0 || t.v === 1 ? t.v += 27 : Tt.throwArgumentError(\"signature invalid v byte\", \"signature\", e)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r[32] |= 128), t._vs = Kt(r.slice(32, 64));\n    } else {\n        if (t.r = e.r, t.s = e.s, t.v = e.v, t.recoveryParam = e.recoveryParam, t._vs = e._vs, t._vs != null) {\n            const n = Fs(Ot(t._vs), 32);\n            t._vs = Kt(n);\n            const o = n[0] >= 128 ? 1 : 0;\n            t.recoveryParam == null ? t.recoveryParam = o : t.recoveryParam !== o && Tt.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", e), n[0] &= 127;\n            const h = Kt(n);\n            t.s == null ? t.s = h : t.s !== h && Tt.throwArgumentError(\"signature v mismatch _vs\", \"signature\", e);\n        }\n        if (t.recoveryParam == null) t.v == null ? Tt.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", e) : t.v === 0 || t.v === 1 ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;\n        else if (t.v == null) t.v = 27 + t.recoveryParam;\n        else {\n            const n = t.v === 0 || t.v === 1 ? t.v : 1 - t.v % 2;\n            t.recoveryParam !== n && Tt.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", e);\n        }\n        t.r == null || !Jt(t.r) ? Tt.throwArgumentError(\"signature missing or invalid r\", \"signature\", e) : t.r = oe(t.r, 32), t.s == null || !Jt(t.s) ? Tt.throwArgumentError(\"signature missing or invalid s\", \"signature\", e) : t.s = oe(t.s, 32);\n        const r = Ot(t.s);\n        r[0] >= 128 && Tt.throwArgumentError(\"signature s out of range\", \"signature\", e), t.recoveryParam && (r[0] |= 128);\n        const i = Kt(r);\n        t._vs && (Jt(t._vs) || Tt.throwArgumentError(\"signature invalid _vs\", \"signature\", e), t._vs = oe(t._vs, 32)), t._vs == null ? t._vs = i : t._vs !== i && Tt.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", e);\n    }\n    return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t;\n}\nfunction Ii(e) {\n    return \"0x\" + Cs.keccak_256(Ot(e));\n}\nvar Xn = {\n    exports: {}\n}, ks = {}, qs = Object.freeze({\n    __proto__: null,\n    default: ks\n}), Ks = Bs(qs);\n(function(e) {\n    (function(t, r) {\n        function i(b, f) {\n            if (!b) throw new Error(f || \"Assertion failed\");\n        }\n        function n(b, f) {\n            b.super_ = f;\n            var a = function() {};\n            a.prototype = f.prototype, b.prototype = new a, b.prototype.constructor = b;\n        }\n        function o(b, f, a) {\n            if (o.isBN(b)) return b;\n            this.negative = 0, this.words = null, this.length = 0, this.red = null, b !== null && ((f === \"le\" || f === \"be\") && (a = f, f = 10), this._init(b || 0, f || 10, a || \"be\"));\n        }\n        typeof t == \"object\" ? t.exports = o : r.BN = o, o.BN = o, o.wordSize = 26;\n        var h;\n        try {\n             false ? 0 : h = Ks.Buffer;\n        } catch  {}\n        o.isBN = function(f) {\n            return f instanceof o ? !0 : f !== null && typeof f == \"object\" && f.constructor.wordSize === o.wordSize && Array.isArray(f.words);\n        }, o.max = function(f, a) {\n            return f.cmp(a) > 0 ? f : a;\n        }, o.min = function(f, a) {\n            return f.cmp(a) < 0 ? f : a;\n        }, o.prototype._init = function(f, a, c) {\n            if (typeof f == \"number\") return this._initNumber(f, a, c);\n            if (typeof f == \"object\") return this._initArray(f, a, c);\n            a === \"hex\" && (a = 16), i(a === (a | 0) && a >= 2 && a <= 36), f = f.toString().replace(/\\s+/g, \"\");\n            var d = 0;\n            f[0] === \"-\" && (d++, this.negative = 1), d < f.length && (a === 16 ? this._parseHex(f, d, c) : (this._parseBase(f, a, d), c === \"le\" && this._initArray(this.toArray(), a, c)));\n        }, o.prototype._initNumber = function(f, a, c) {\n            f < 0 && (this.negative = 1, f = -f), f < 67108864 ? (this.words = [\n                f & 67108863\n            ], this.length = 1) : f < 4503599627370496 ? (this.words = [\n                f & 67108863,\n                f / 67108864 & 67108863\n            ], this.length = 2) : (i(f < 9007199254740992), this.words = [\n                f & 67108863,\n                f / 67108864 & 67108863,\n                1\n            ], this.length = 3), c === \"le\" && this._initArray(this.toArray(), a, c);\n        }, o.prototype._initArray = function(f, a, c) {\n            if (i(typeof f.length == \"number\"), f.length <= 0) return this.words = [\n                0\n            ], this.length = 1, this;\n            this.length = Math.ceil(f.length / 3), this.words = new Array(this.length);\n            for(var d = 0; d < this.length; d++)this.words[d] = 0;\n            var m, x, M = 0;\n            if (c === \"be\") for(d = f.length - 1, m = 0; d >= 0; d -= 3)x = f[d] | f[d - 1] << 8 | f[d - 2] << 16, this.words[m] |= x << M & 67108863, this.words[m + 1] = x >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, m++);\n            else if (c === \"le\") for(d = 0, m = 0; d < f.length; d += 3)x = f[d] | f[d + 1] << 8 | f[d + 2] << 16, this.words[m] |= x << M & 67108863, this.words[m + 1] = x >>> 26 - M & 67108863, M += 24, M >= 26 && (M -= 26, m++);\n            return this._strip();\n        };\n        function p(b, f) {\n            var a = b.charCodeAt(f);\n            if (a >= 48 && a <= 57) return a - 48;\n            if (a >= 65 && a <= 70) return a - 55;\n            if (a >= 97 && a <= 102) return a - 87;\n            i(!1, \"Invalid character in \" + b);\n        }\n        function A(b, f, a) {\n            var c = p(b, a);\n            return a - 1 >= f && (c |= p(b, a - 1) << 4), c;\n        }\n        o.prototype._parseHex = function(f, a, c) {\n            this.length = Math.ceil((f.length - a) / 6), this.words = new Array(this.length);\n            for(var d = 0; d < this.length; d++)this.words[d] = 0;\n            var m = 0, x = 0, M;\n            if (c === \"be\") for(d = f.length - 1; d >= a; d -= 2)M = A(f, a, d) << m, this.words[x] |= M & 67108863, m >= 18 ? (m -= 18, x += 1, this.words[x] |= M >>> 26) : m += 8;\n            else {\n                var l = f.length - a;\n                for(d = l % 2 === 0 ? a + 1 : a; d < f.length; d += 2)M = A(f, a, d) << m, this.words[x] |= M & 67108863, m >= 18 ? (m -= 18, x += 1, this.words[x] |= M >>> 26) : m += 8;\n            }\n            this._strip();\n        };\n        function v(b, f, a, c) {\n            for(var d = 0, m = 0, x = Math.min(b.length, a), M = f; M < x; M++){\n                var l = b.charCodeAt(M) - 48;\n                d *= c, l >= 49 ? m = l - 49 + 10 : l >= 17 ? m = l - 17 + 10 : m = l, i(l >= 0 && m < c, \"Invalid character\"), d += m;\n            }\n            return d;\n        }\n        o.prototype._parseBase = function(f, a, c) {\n            this.words = [\n                0\n            ], this.length = 1;\n            for(var d = 0, m = 1; m <= 67108863; m *= a)d++;\n            d--, m = m / a | 0;\n            for(var x = f.length - c, M = x % d, l = Math.min(x, x - M) + c, s = 0, g = c; g < l; g += d)s = v(f, g, g + d, a), this.imuln(m), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);\n            if (M !== 0) {\n                var k = 1;\n                for(s = v(f, g, f.length, a), g = 0; g < M; g++)k *= a;\n                this.imuln(k), this.words[0] + s < 67108864 ? this.words[0] += s : this._iaddn(s);\n            }\n            this._strip();\n        }, o.prototype.copy = function(f) {\n            f.words = new Array(this.length);\n            for(var a = 0; a < this.length; a++)f.words[a] = this.words[a];\n            f.length = this.length, f.negative = this.negative, f.red = this.red;\n        };\n        function w(b, f) {\n            b.words = f.words, b.length = f.length, b.negative = f.negative, b.red = f.red;\n        }\n        if (o.prototype._move = function(f) {\n            w(f, this);\n        }, o.prototype.clone = function() {\n            var f = new o(null);\n            return this.copy(f), f;\n        }, o.prototype._expand = function(f) {\n            for(; this.length < f;)this.words[this.length++] = 0;\n            return this;\n        }, o.prototype._strip = function() {\n            for(; this.length > 1 && this.words[this.length - 1] === 0;)this.length--;\n            return this._normSign();\n        }, o.prototype._normSign = function() {\n            return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;\n        }, typeof Symbol < \"u\" && typeof Symbol.for == \"function\") try {\n            o.prototype[Symbol.for(\"nodejs.util.inspect.custom\")] = y;\n        } catch  {\n            o.prototype.inspect = y;\n        }\n        else o.prototype.inspect = y;\n        function y() {\n            return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n        }\n        var S = [\n            \"\",\n            \"0\",\n            \"00\",\n            \"000\",\n            \"0000\",\n            \"00000\",\n            \"000000\",\n            \"0000000\",\n            \"00000000\",\n            \"000000000\",\n            \"0000000000\",\n            \"00000000000\",\n            \"000000000000\",\n            \"0000000000000\",\n            \"00000000000000\",\n            \"000000000000000\",\n            \"0000000000000000\",\n            \"00000000000000000\",\n            \"000000000000000000\",\n            \"0000000000000000000\",\n            \"00000000000000000000\",\n            \"000000000000000000000\",\n            \"0000000000000000000000\",\n            \"00000000000000000000000\",\n            \"000000000000000000000000\",\n            \"0000000000000000000000000\"\n        ], N = [\n            0,\n            0,\n            25,\n            16,\n            12,\n            11,\n            10,\n            9,\n            8,\n            8,\n            7,\n            7,\n            7,\n            7,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5\n        ], I = [\n            0,\n            0,\n            33554432,\n            43046721,\n            16777216,\n            48828125,\n            60466176,\n            40353607,\n            16777216,\n            43046721,\n            1e7,\n            19487171,\n            35831808,\n            62748517,\n            7529536,\n            11390625,\n            16777216,\n            24137569,\n            34012224,\n            47045881,\n            64e6,\n            4084101,\n            5153632,\n            6436343,\n            7962624,\n            9765625,\n            11881376,\n            14348907,\n            17210368,\n            20511149,\n            243e5,\n            28629151,\n            33554432,\n            39135393,\n            45435424,\n            52521875,\n            60466176\n        ];\n        o.prototype.toString = function(f, a) {\n            f = f || 10, a = a | 0 || 1;\n            var c;\n            if (f === 16 || f === \"hex\") {\n                c = \"\";\n                for(var d = 0, m = 0, x = 0; x < this.length; x++){\n                    var M = this.words[x], l = ((M << d | m) & 16777215).toString(16);\n                    m = M >>> 24 - d & 16777215, d += 2, d >= 26 && (d -= 26, x--), m !== 0 || x !== this.length - 1 ? c = S[6 - l.length] + l + c : c = l + c;\n                }\n                for(m !== 0 && (c = m.toString(16) + c); c.length % a !== 0;)c = \"0\" + c;\n                return this.negative !== 0 && (c = \"-\" + c), c;\n            }\n            if (f === (f | 0) && f >= 2 && f <= 36) {\n                var s = N[f], g = I[f];\n                c = \"\";\n                var k = this.clone();\n                for(k.negative = 0; !k.isZero();){\n                    var u = k.modrn(g).toString(f);\n                    k = k.idivn(g), k.isZero() ? c = u + c : c = S[s - u.length] + u + c;\n                }\n                for(this.isZero() && (c = \"0\" + c); c.length % a !== 0;)c = \"0\" + c;\n                return this.negative !== 0 && (c = \"-\" + c), c;\n            }\n            i(!1, \"Base should be between 2 and 36\");\n        }, o.prototype.toNumber = function() {\n            var f = this.words[0];\n            return this.length === 2 ? f += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? f += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && i(!1, \"Number can only safely store up to 53 bits\"), this.negative !== 0 ? -f : f;\n        }, o.prototype.toJSON = function() {\n            return this.toString(16, 2);\n        }, h && (o.prototype.toBuffer = function(f, a) {\n            return this.toArrayLike(h, f, a);\n        }), o.prototype.toArray = function(f, a) {\n            return this.toArrayLike(Array, f, a);\n        };\n        var C = function(f, a) {\n            return f.allocUnsafe ? f.allocUnsafe(a) : new f(a);\n        };\n        o.prototype.toArrayLike = function(f, a, c) {\n            this._strip();\n            var d = this.byteLength(), m = c || Math.max(1, d);\n            i(d <= m, \"byte array longer than desired length\"), i(m > 0, \"Requested array length <= 0\");\n            var x = C(f, m), M = a === \"le\" ? \"LE\" : \"BE\";\n            return this[\"_toArrayLike\" + M](x, d), x;\n        }, o.prototype._toArrayLikeLE = function(f, a) {\n            for(var c = 0, d = 0, m = 0, x = 0; m < this.length; m++){\n                var M = this.words[m] << x | d;\n                f[c++] = M & 255, c < f.length && (f[c++] = M >> 8 & 255), c < f.length && (f[c++] = M >> 16 & 255), x === 6 ? (c < f.length && (f[c++] = M >> 24 & 255), d = 0, x = 0) : (d = M >>> 24, x += 2);\n            }\n            if (c < f.length) for(f[c++] = d; c < f.length;)f[c++] = 0;\n        }, o.prototype._toArrayLikeBE = function(f, a) {\n            for(var c = f.length - 1, d = 0, m = 0, x = 0; m < this.length; m++){\n                var M = this.words[m] << x | d;\n                f[c--] = M & 255, c >= 0 && (f[c--] = M >> 8 & 255), c >= 0 && (f[c--] = M >> 16 & 255), x === 6 ? (c >= 0 && (f[c--] = M >> 24 & 255), d = 0, x = 0) : (d = M >>> 24, x += 2);\n            }\n            if (c >= 0) for(f[c--] = d; c >= 0;)f[c--] = 0;\n        }, Math.clz32 ? o.prototype._countBits = function(f) {\n            return 32 - Math.clz32(f);\n        } : o.prototype._countBits = function(f) {\n            var a = f, c = 0;\n            return a >= 4096 && (c += 13, a >>>= 13), a >= 64 && (c += 7, a >>>= 7), a >= 8 && (c += 4, a >>>= 4), a >= 2 && (c += 2, a >>>= 2), c + a;\n        }, o.prototype._zeroBits = function(f) {\n            if (f === 0) return 26;\n            var a = f, c = 0;\n            return a & 8191 || (c += 13, a >>>= 13), a & 127 || (c += 7, a >>>= 7), a & 15 || (c += 4, a >>>= 4), a & 3 || (c += 2, a >>>= 2), a & 1 || c++, c;\n        }, o.prototype.bitLength = function() {\n            var f = this.words[this.length - 1], a = this._countBits(f);\n            return (this.length - 1) * 26 + a;\n        };\n        function D(b) {\n            for(var f = new Array(b.bitLength()), a = 0; a < f.length; a++){\n                var c = a / 26 | 0, d = a % 26;\n                f[a] = b.words[c] >>> d & 1;\n            }\n            return f;\n        }\n        o.prototype.zeroBits = function() {\n            if (this.isZero()) return 0;\n            for(var f = 0, a = 0; a < this.length; a++){\n                var c = this._zeroBits(this.words[a]);\n                if (f += c, c !== 26) break;\n            }\n            return f;\n        }, o.prototype.byteLength = function() {\n            return Math.ceil(this.bitLength() / 8);\n        }, o.prototype.toTwos = function(f) {\n            return this.negative !== 0 ? this.abs().inotn(f).iaddn(1) : this.clone();\n        }, o.prototype.fromTwos = function(f) {\n            return this.testn(f - 1) ? this.notn(f).iaddn(1).ineg() : this.clone();\n        }, o.prototype.isNeg = function() {\n            return this.negative !== 0;\n        }, o.prototype.neg = function() {\n            return this.clone().ineg();\n        }, o.prototype.ineg = function() {\n            return this.isZero() || (this.negative ^= 1), this;\n        }, o.prototype.iuor = function(f) {\n            for(; this.length < f.length;)this.words[this.length++] = 0;\n            for(var a = 0; a < f.length; a++)this.words[a] = this.words[a] | f.words[a];\n            return this._strip();\n        }, o.prototype.ior = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuor(f);\n        }, o.prototype.or = function(f) {\n            return this.length > f.length ? this.clone().ior(f) : f.clone().ior(this);\n        }, o.prototype.uor = function(f) {\n            return this.length > f.length ? this.clone().iuor(f) : f.clone().iuor(this);\n        }, o.prototype.iuand = function(f) {\n            var a;\n            this.length > f.length ? a = f : a = this;\n            for(var c = 0; c < a.length; c++)this.words[c] = this.words[c] & f.words[c];\n            return this.length = a.length, this._strip();\n        }, o.prototype.iand = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuand(f);\n        }, o.prototype.and = function(f) {\n            return this.length > f.length ? this.clone().iand(f) : f.clone().iand(this);\n        }, o.prototype.uand = function(f) {\n            return this.length > f.length ? this.clone().iuand(f) : f.clone().iuand(this);\n        }, o.prototype.iuxor = function(f) {\n            var a, c;\n            this.length > f.length ? (a = this, c = f) : (a = f, c = this);\n            for(var d = 0; d < c.length; d++)this.words[d] = a.words[d] ^ c.words[d];\n            if (this !== a) for(; d < a.length; d++)this.words[d] = a.words[d];\n            return this.length = a.length, this._strip();\n        }, o.prototype.ixor = function(f) {\n            return i((this.negative | f.negative) === 0), this.iuxor(f);\n        }, o.prototype.xor = function(f) {\n            return this.length > f.length ? this.clone().ixor(f) : f.clone().ixor(this);\n        }, o.prototype.uxor = function(f) {\n            return this.length > f.length ? this.clone().iuxor(f) : f.clone().iuxor(this);\n        }, o.prototype.inotn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = Math.ceil(f / 26) | 0, c = f % 26;\n            this._expand(a), c > 0 && a--;\n            for(var d = 0; d < a; d++)this.words[d] = ~this.words[d] & 67108863;\n            return c > 0 && (this.words[d] = ~this.words[d] & 67108863 >> 26 - c), this._strip();\n        }, o.prototype.notn = function(f) {\n            return this.clone().inotn(f);\n        }, o.prototype.setn = function(f, a) {\n            i(typeof f == \"number\" && f >= 0);\n            var c = f / 26 | 0, d = f % 26;\n            return this._expand(c + 1), a ? this.words[c] = this.words[c] | 1 << d : this.words[c] = this.words[c] & ~(1 << d), this._strip();\n        }, o.prototype.iadd = function(f) {\n            var a;\n            if (this.negative !== 0 && f.negative === 0) return this.negative = 0, a = this.isub(f), this.negative ^= 1, this._normSign();\n            if (this.negative === 0 && f.negative !== 0) return f.negative = 0, a = this.isub(f), f.negative = 1, a._normSign();\n            var c, d;\n            this.length > f.length ? (c = this, d = f) : (c = f, d = this);\n            for(var m = 0, x = 0; x < d.length; x++)a = (c.words[x] | 0) + (d.words[x] | 0) + m, this.words[x] = a & 67108863, m = a >>> 26;\n            for(; m !== 0 && x < c.length; x++)a = (c.words[x] | 0) + m, this.words[x] = a & 67108863, m = a >>> 26;\n            if (this.length = c.length, m !== 0) this.words[this.length] = m, this.length++;\n            else if (c !== this) for(; x < c.length; x++)this.words[x] = c.words[x];\n            return this;\n        }, o.prototype.add = function(f) {\n            var a;\n            return f.negative !== 0 && this.negative === 0 ? (f.negative = 0, a = this.sub(f), f.negative ^= 1, a) : f.negative === 0 && this.negative !== 0 ? (this.negative = 0, a = f.sub(this), this.negative = 1, a) : this.length > f.length ? this.clone().iadd(f) : f.clone().iadd(this);\n        }, o.prototype.isub = function(f) {\n            if (f.negative !== 0) {\n                f.negative = 0;\n                var a = this.iadd(f);\n                return f.negative = 1, a._normSign();\n            } else if (this.negative !== 0) return this.negative = 0, this.iadd(f), this.negative = 1, this._normSign();\n            var c = this.cmp(f);\n            if (c === 0) return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n            var d, m;\n            c > 0 ? (d = this, m = f) : (d = f, m = this);\n            for(var x = 0, M = 0; M < m.length; M++)a = (d.words[M] | 0) - (m.words[M] | 0) + x, x = a >> 26, this.words[M] = a & 67108863;\n            for(; x !== 0 && M < d.length; M++)a = (d.words[M] | 0) + x, x = a >> 26, this.words[M] = a & 67108863;\n            if (x === 0 && M < d.length && d !== this) for(; M < d.length; M++)this.words[M] = d.words[M];\n            return this.length = Math.max(this.length, M), d !== this && (this.negative = 1), this._strip();\n        }, o.prototype.sub = function(f) {\n            return this.clone().isub(f);\n        };\n        function U(b, f, a) {\n            a.negative = f.negative ^ b.negative;\n            var c = b.length + f.length | 0;\n            a.length = c, c = c - 1 | 0;\n            var d = b.words[0] | 0, m = f.words[0] | 0, x = d * m, M = x & 67108863, l = x / 67108864 | 0;\n            a.words[0] = M;\n            for(var s = 1; s < c; s++){\n                for(var g = l >>> 26, k = l & 67108863, u = Math.min(s, f.length - 1), E = Math.max(0, s - b.length + 1); E <= u; E++){\n                    var _ = s - E | 0;\n                    d = b.words[_] | 0, m = f.words[E] | 0, x = d * m + k, g += x / 67108864 | 0, k = x & 67108863;\n                }\n                a.words[s] = k | 0, l = g | 0;\n            }\n            return l !== 0 ? a.words[s] = l | 0 : a.length--, a._strip();\n        }\n        var J = function(f, a, c) {\n            var d = f.words, m = a.words, x = c.words, M = 0, l, s, g, k = d[0] | 0, u = k & 8191, E = k >>> 13, _ = d[1] | 0, B = _ & 8191, R = _ >>> 13, F = d[2] | 0, P = F & 8191, O = F >>> 13, Ct = d[3] | 0, T = Ct & 8191, q = Ct >>> 13, Te = d[4] | 0, X = Te & 8191, $ = Te >>> 13, De = d[5] | 0, Z = De & 8191, tt = De >>> 13, Fe = d[6] | 0, et = Fe & 8191, rt = Fe >>> 13, Ue = d[7] | 0, it = Ue & 8191, nt = Ue >>> 13, ke = d[8] | 0, ft = ke & 8191, ot = ke >>> 13, qe = d[9] | 0, st = qe & 8191, at = qe >>> 13, Ke = m[0] | 0, ut = Ke & 8191, ht = Ke >>> 13, He = m[1] | 0, ct = He & 8191, lt = He >>> 13, Le = m[2] | 0, dt = Le & 8191, pt = Le >>> 13, ze = m[3] | 0, vt = ze & 8191, gt = ze >>> 13, je = m[4] | 0, mt = je & 8191, At = je >>> 13, Qe = m[5] | 0, bt = Qe & 8191, yt = Qe >>> 13, Je = m[6] | 0, wt = Je & 8191, xt = Je >>> 13, Ge = m[7] | 0, Mt = Ge & 8191, Et = Ge >>> 13, Ye = m[8] | 0, St = Ye & 8191, It = Ye >>> 13, Ve = m[9] | 0, Nt = Ve & 8191, _t = Ve >>> 13;\n            c.negative = f.negative ^ a.negative, c.length = 19, l = Math.imul(u, ut), s = Math.imul(u, ht), s = s + Math.imul(E, ut) | 0, g = Math.imul(E, ht);\n            var Me = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, l = Math.imul(B, ut), s = Math.imul(B, ht), s = s + Math.imul(R, ut) | 0, g = Math.imul(R, ht), l = l + Math.imul(u, ct) | 0, s = s + Math.imul(u, lt) | 0, s = s + Math.imul(E, ct) | 0, g = g + Math.imul(E, lt) | 0;\n            var Ee = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, l = Math.imul(P, ut), s = Math.imul(P, ht), s = s + Math.imul(O, ut) | 0, g = Math.imul(O, ht), l = l + Math.imul(B, ct) | 0, s = s + Math.imul(B, lt) | 0, s = s + Math.imul(R, ct) | 0, g = g + Math.imul(R, lt) | 0, l = l + Math.imul(u, dt) | 0, s = s + Math.imul(u, pt) | 0, s = s + Math.imul(E, dt) | 0, g = g + Math.imul(E, pt) | 0;\n            var Se = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, l = Math.imul(T, ut), s = Math.imul(T, ht), s = s + Math.imul(q, ut) | 0, g = Math.imul(q, ht), l = l + Math.imul(P, ct) | 0, s = s + Math.imul(P, lt) | 0, s = s + Math.imul(O, ct) | 0, g = g + Math.imul(O, lt) | 0, l = l + Math.imul(B, dt) | 0, s = s + Math.imul(B, pt) | 0, s = s + Math.imul(R, dt) | 0, g = g + Math.imul(R, pt) | 0, l = l + Math.imul(u, vt) | 0, s = s + Math.imul(u, gt) | 0, s = s + Math.imul(E, vt) | 0, g = g + Math.imul(E, gt) | 0;\n            var Ie = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, l = Math.imul(X, ut), s = Math.imul(X, ht), s = s + Math.imul($, ut) | 0, g = Math.imul($, ht), l = l + Math.imul(T, ct) | 0, s = s + Math.imul(T, lt) | 0, s = s + Math.imul(q, ct) | 0, g = g + Math.imul(q, lt) | 0, l = l + Math.imul(P, dt) | 0, s = s + Math.imul(P, pt) | 0, s = s + Math.imul(O, dt) | 0, g = g + Math.imul(O, pt) | 0, l = l + Math.imul(B, vt) | 0, s = s + Math.imul(B, gt) | 0, s = s + Math.imul(R, vt) | 0, g = g + Math.imul(R, gt) | 0, l = l + Math.imul(u, mt) | 0, s = s + Math.imul(u, At) | 0, s = s + Math.imul(E, mt) | 0, g = g + Math.imul(E, At) | 0;\n            var Ne = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, l = Math.imul(Z, ut), s = Math.imul(Z, ht), s = s + Math.imul(tt, ut) | 0, g = Math.imul(tt, ht), l = l + Math.imul(X, ct) | 0, s = s + Math.imul(X, lt) | 0, s = s + Math.imul($, ct) | 0, g = g + Math.imul($, lt) | 0, l = l + Math.imul(T, dt) | 0, s = s + Math.imul(T, pt) | 0, s = s + Math.imul(q, dt) | 0, g = g + Math.imul(q, pt) | 0, l = l + Math.imul(P, vt) | 0, s = s + Math.imul(P, gt) | 0, s = s + Math.imul(O, vt) | 0, g = g + Math.imul(O, gt) | 0, l = l + Math.imul(B, mt) | 0, s = s + Math.imul(B, At) | 0, s = s + Math.imul(R, mt) | 0, g = g + Math.imul(R, At) | 0, l = l + Math.imul(u, bt) | 0, s = s + Math.imul(u, yt) | 0, s = s + Math.imul(E, bt) | 0, g = g + Math.imul(E, yt) | 0;\n            var Zr = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (Zr >>> 26) | 0, Zr &= 67108863, l = Math.imul(et, ut), s = Math.imul(et, ht), s = s + Math.imul(rt, ut) | 0, g = Math.imul(rt, ht), l = l + Math.imul(Z, ct) | 0, s = s + Math.imul(Z, lt) | 0, s = s + Math.imul(tt, ct) | 0, g = g + Math.imul(tt, lt) | 0, l = l + Math.imul(X, dt) | 0, s = s + Math.imul(X, pt) | 0, s = s + Math.imul($, dt) | 0, g = g + Math.imul($, pt) | 0, l = l + Math.imul(T, vt) | 0, s = s + Math.imul(T, gt) | 0, s = s + Math.imul(q, vt) | 0, g = g + Math.imul(q, gt) | 0, l = l + Math.imul(P, mt) | 0, s = s + Math.imul(P, At) | 0, s = s + Math.imul(O, mt) | 0, g = g + Math.imul(O, At) | 0, l = l + Math.imul(B, bt) | 0, s = s + Math.imul(B, yt) | 0, s = s + Math.imul(R, bt) | 0, g = g + Math.imul(R, yt) | 0, l = l + Math.imul(u, wt) | 0, s = s + Math.imul(u, xt) | 0, s = s + Math.imul(E, wt) | 0, g = g + Math.imul(E, xt) | 0;\n            var ti = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ti >>> 26) | 0, ti &= 67108863, l = Math.imul(it, ut), s = Math.imul(it, ht), s = s + Math.imul(nt, ut) | 0, g = Math.imul(nt, ht), l = l + Math.imul(et, ct) | 0, s = s + Math.imul(et, lt) | 0, s = s + Math.imul(rt, ct) | 0, g = g + Math.imul(rt, lt) | 0, l = l + Math.imul(Z, dt) | 0, s = s + Math.imul(Z, pt) | 0, s = s + Math.imul(tt, dt) | 0, g = g + Math.imul(tt, pt) | 0, l = l + Math.imul(X, vt) | 0, s = s + Math.imul(X, gt) | 0, s = s + Math.imul($, vt) | 0, g = g + Math.imul($, gt) | 0, l = l + Math.imul(T, mt) | 0, s = s + Math.imul(T, At) | 0, s = s + Math.imul(q, mt) | 0, g = g + Math.imul(q, At) | 0, l = l + Math.imul(P, bt) | 0, s = s + Math.imul(P, yt) | 0, s = s + Math.imul(O, bt) | 0, g = g + Math.imul(O, yt) | 0, l = l + Math.imul(B, wt) | 0, s = s + Math.imul(B, xt) | 0, s = s + Math.imul(R, wt) | 0, g = g + Math.imul(R, xt) | 0, l = l + Math.imul(u, Mt) | 0, s = s + Math.imul(u, Et) | 0, s = s + Math.imul(E, Mt) | 0, g = g + Math.imul(E, Et) | 0;\n            var ei = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ei >>> 26) | 0, ei &= 67108863, l = Math.imul(ft, ut), s = Math.imul(ft, ht), s = s + Math.imul(ot, ut) | 0, g = Math.imul(ot, ht), l = l + Math.imul(it, ct) | 0, s = s + Math.imul(it, lt) | 0, s = s + Math.imul(nt, ct) | 0, g = g + Math.imul(nt, lt) | 0, l = l + Math.imul(et, dt) | 0, s = s + Math.imul(et, pt) | 0, s = s + Math.imul(rt, dt) | 0, g = g + Math.imul(rt, pt) | 0, l = l + Math.imul(Z, vt) | 0, s = s + Math.imul(Z, gt) | 0, s = s + Math.imul(tt, vt) | 0, g = g + Math.imul(tt, gt) | 0, l = l + Math.imul(X, mt) | 0, s = s + Math.imul(X, At) | 0, s = s + Math.imul($, mt) | 0, g = g + Math.imul($, At) | 0, l = l + Math.imul(T, bt) | 0, s = s + Math.imul(T, yt) | 0, s = s + Math.imul(q, bt) | 0, g = g + Math.imul(q, yt) | 0, l = l + Math.imul(P, wt) | 0, s = s + Math.imul(P, xt) | 0, s = s + Math.imul(O, wt) | 0, g = g + Math.imul(O, xt) | 0, l = l + Math.imul(B, Mt) | 0, s = s + Math.imul(B, Et) | 0, s = s + Math.imul(R, Mt) | 0, g = g + Math.imul(R, Et) | 0, l = l + Math.imul(u, St) | 0, s = s + Math.imul(u, It) | 0, s = s + Math.imul(E, St) | 0, g = g + Math.imul(E, It) | 0;\n            var ri = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ri >>> 26) | 0, ri &= 67108863, l = Math.imul(st, ut), s = Math.imul(st, ht), s = s + Math.imul(at, ut) | 0, g = Math.imul(at, ht), l = l + Math.imul(ft, ct) | 0, s = s + Math.imul(ft, lt) | 0, s = s + Math.imul(ot, ct) | 0, g = g + Math.imul(ot, lt) | 0, l = l + Math.imul(it, dt) | 0, s = s + Math.imul(it, pt) | 0, s = s + Math.imul(nt, dt) | 0, g = g + Math.imul(nt, pt) | 0, l = l + Math.imul(et, vt) | 0, s = s + Math.imul(et, gt) | 0, s = s + Math.imul(rt, vt) | 0, g = g + Math.imul(rt, gt) | 0, l = l + Math.imul(Z, mt) | 0, s = s + Math.imul(Z, At) | 0, s = s + Math.imul(tt, mt) | 0, g = g + Math.imul(tt, At) | 0, l = l + Math.imul(X, bt) | 0, s = s + Math.imul(X, yt) | 0, s = s + Math.imul($, bt) | 0, g = g + Math.imul($, yt) | 0, l = l + Math.imul(T, wt) | 0, s = s + Math.imul(T, xt) | 0, s = s + Math.imul(q, wt) | 0, g = g + Math.imul(q, xt) | 0, l = l + Math.imul(P, Mt) | 0, s = s + Math.imul(P, Et) | 0, s = s + Math.imul(O, Mt) | 0, g = g + Math.imul(O, Et) | 0, l = l + Math.imul(B, St) | 0, s = s + Math.imul(B, It) | 0, s = s + Math.imul(R, St) | 0, g = g + Math.imul(R, It) | 0, l = l + Math.imul(u, Nt) | 0, s = s + Math.imul(u, _t) | 0, s = s + Math.imul(E, Nt) | 0, g = g + Math.imul(E, _t) | 0;\n            var ii = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ii >>> 26) | 0, ii &= 67108863, l = Math.imul(st, ct), s = Math.imul(st, lt), s = s + Math.imul(at, ct) | 0, g = Math.imul(at, lt), l = l + Math.imul(ft, dt) | 0, s = s + Math.imul(ft, pt) | 0, s = s + Math.imul(ot, dt) | 0, g = g + Math.imul(ot, pt) | 0, l = l + Math.imul(it, vt) | 0, s = s + Math.imul(it, gt) | 0, s = s + Math.imul(nt, vt) | 0, g = g + Math.imul(nt, gt) | 0, l = l + Math.imul(et, mt) | 0, s = s + Math.imul(et, At) | 0, s = s + Math.imul(rt, mt) | 0, g = g + Math.imul(rt, At) | 0, l = l + Math.imul(Z, bt) | 0, s = s + Math.imul(Z, yt) | 0, s = s + Math.imul(tt, bt) | 0, g = g + Math.imul(tt, yt) | 0, l = l + Math.imul(X, wt) | 0, s = s + Math.imul(X, xt) | 0, s = s + Math.imul($, wt) | 0, g = g + Math.imul($, xt) | 0, l = l + Math.imul(T, Mt) | 0, s = s + Math.imul(T, Et) | 0, s = s + Math.imul(q, Mt) | 0, g = g + Math.imul(q, Et) | 0, l = l + Math.imul(P, St) | 0, s = s + Math.imul(P, It) | 0, s = s + Math.imul(O, St) | 0, g = g + Math.imul(O, It) | 0, l = l + Math.imul(B, Nt) | 0, s = s + Math.imul(B, _t) | 0, s = s + Math.imul(R, Nt) | 0, g = g + Math.imul(R, _t) | 0;\n            var ni = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ni >>> 26) | 0, ni &= 67108863, l = Math.imul(st, dt), s = Math.imul(st, pt), s = s + Math.imul(at, dt) | 0, g = Math.imul(at, pt), l = l + Math.imul(ft, vt) | 0, s = s + Math.imul(ft, gt) | 0, s = s + Math.imul(ot, vt) | 0, g = g + Math.imul(ot, gt) | 0, l = l + Math.imul(it, mt) | 0, s = s + Math.imul(it, At) | 0, s = s + Math.imul(nt, mt) | 0, g = g + Math.imul(nt, At) | 0, l = l + Math.imul(et, bt) | 0, s = s + Math.imul(et, yt) | 0, s = s + Math.imul(rt, bt) | 0, g = g + Math.imul(rt, yt) | 0, l = l + Math.imul(Z, wt) | 0, s = s + Math.imul(Z, xt) | 0, s = s + Math.imul(tt, wt) | 0, g = g + Math.imul(tt, xt) | 0, l = l + Math.imul(X, Mt) | 0, s = s + Math.imul(X, Et) | 0, s = s + Math.imul($, Mt) | 0, g = g + Math.imul($, Et) | 0, l = l + Math.imul(T, St) | 0, s = s + Math.imul(T, It) | 0, s = s + Math.imul(q, St) | 0, g = g + Math.imul(q, It) | 0, l = l + Math.imul(P, Nt) | 0, s = s + Math.imul(P, _t) | 0, s = s + Math.imul(O, Nt) | 0, g = g + Math.imul(O, _t) | 0;\n            var fi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (fi >>> 26) | 0, fi &= 67108863, l = Math.imul(st, vt), s = Math.imul(st, gt), s = s + Math.imul(at, vt) | 0, g = Math.imul(at, gt), l = l + Math.imul(ft, mt) | 0, s = s + Math.imul(ft, At) | 0, s = s + Math.imul(ot, mt) | 0, g = g + Math.imul(ot, At) | 0, l = l + Math.imul(it, bt) | 0, s = s + Math.imul(it, yt) | 0, s = s + Math.imul(nt, bt) | 0, g = g + Math.imul(nt, yt) | 0, l = l + Math.imul(et, wt) | 0, s = s + Math.imul(et, xt) | 0, s = s + Math.imul(rt, wt) | 0, g = g + Math.imul(rt, xt) | 0, l = l + Math.imul(Z, Mt) | 0, s = s + Math.imul(Z, Et) | 0, s = s + Math.imul(tt, Mt) | 0, g = g + Math.imul(tt, Et) | 0, l = l + Math.imul(X, St) | 0, s = s + Math.imul(X, It) | 0, s = s + Math.imul($, St) | 0, g = g + Math.imul($, It) | 0, l = l + Math.imul(T, Nt) | 0, s = s + Math.imul(T, _t) | 0, s = s + Math.imul(q, Nt) | 0, g = g + Math.imul(q, _t) | 0;\n            var oi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (oi >>> 26) | 0, oi &= 67108863, l = Math.imul(st, mt), s = Math.imul(st, At), s = s + Math.imul(at, mt) | 0, g = Math.imul(at, At), l = l + Math.imul(ft, bt) | 0, s = s + Math.imul(ft, yt) | 0, s = s + Math.imul(ot, bt) | 0, g = g + Math.imul(ot, yt) | 0, l = l + Math.imul(it, wt) | 0, s = s + Math.imul(it, xt) | 0, s = s + Math.imul(nt, wt) | 0, g = g + Math.imul(nt, xt) | 0, l = l + Math.imul(et, Mt) | 0, s = s + Math.imul(et, Et) | 0, s = s + Math.imul(rt, Mt) | 0, g = g + Math.imul(rt, Et) | 0, l = l + Math.imul(Z, St) | 0, s = s + Math.imul(Z, It) | 0, s = s + Math.imul(tt, St) | 0, g = g + Math.imul(tt, It) | 0, l = l + Math.imul(X, Nt) | 0, s = s + Math.imul(X, _t) | 0, s = s + Math.imul($, Nt) | 0, g = g + Math.imul($, _t) | 0;\n            var si = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (si >>> 26) | 0, si &= 67108863, l = Math.imul(st, bt), s = Math.imul(st, yt), s = s + Math.imul(at, bt) | 0, g = Math.imul(at, yt), l = l + Math.imul(ft, wt) | 0, s = s + Math.imul(ft, xt) | 0, s = s + Math.imul(ot, wt) | 0, g = g + Math.imul(ot, xt) | 0, l = l + Math.imul(it, Mt) | 0, s = s + Math.imul(it, Et) | 0, s = s + Math.imul(nt, Mt) | 0, g = g + Math.imul(nt, Et) | 0, l = l + Math.imul(et, St) | 0, s = s + Math.imul(et, It) | 0, s = s + Math.imul(rt, St) | 0, g = g + Math.imul(rt, It) | 0, l = l + Math.imul(Z, Nt) | 0, s = s + Math.imul(Z, _t) | 0, s = s + Math.imul(tt, Nt) | 0, g = g + Math.imul(tt, _t) | 0;\n            var ai = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ai >>> 26) | 0, ai &= 67108863, l = Math.imul(st, wt), s = Math.imul(st, xt), s = s + Math.imul(at, wt) | 0, g = Math.imul(at, xt), l = l + Math.imul(ft, Mt) | 0, s = s + Math.imul(ft, Et) | 0, s = s + Math.imul(ot, Mt) | 0, g = g + Math.imul(ot, Et) | 0, l = l + Math.imul(it, St) | 0, s = s + Math.imul(it, It) | 0, s = s + Math.imul(nt, St) | 0, g = g + Math.imul(nt, It) | 0, l = l + Math.imul(et, Nt) | 0, s = s + Math.imul(et, _t) | 0, s = s + Math.imul(rt, Nt) | 0, g = g + Math.imul(rt, _t) | 0;\n            var ui = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ui >>> 26) | 0, ui &= 67108863, l = Math.imul(st, Mt), s = Math.imul(st, Et), s = s + Math.imul(at, Mt) | 0, g = Math.imul(at, Et), l = l + Math.imul(ft, St) | 0, s = s + Math.imul(ft, It) | 0, s = s + Math.imul(ot, St) | 0, g = g + Math.imul(ot, It) | 0, l = l + Math.imul(it, Nt) | 0, s = s + Math.imul(it, _t) | 0, s = s + Math.imul(nt, Nt) | 0, g = g + Math.imul(nt, _t) | 0;\n            var hi = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (hi >>> 26) | 0, hi &= 67108863, l = Math.imul(st, St), s = Math.imul(st, It), s = s + Math.imul(at, St) | 0, g = Math.imul(at, It), l = l + Math.imul(ft, Nt) | 0, s = s + Math.imul(ft, _t) | 0, s = s + Math.imul(ot, Nt) | 0, g = g + Math.imul(ot, _t) | 0;\n            var ci = (M + l | 0) + ((s & 8191) << 13) | 0;\n            M = (g + (s >>> 13) | 0) + (ci >>> 26) | 0, ci &= 67108863, l = Math.imul(st, Nt), s = Math.imul(st, _t), s = s + Math.imul(at, Nt) | 0, g = Math.imul(at, _t);\n            var li = (M + l | 0) + ((s & 8191) << 13) | 0;\n            return M = (g + (s >>> 13) | 0) + (li >>> 26) | 0, li &= 67108863, x[0] = Me, x[1] = Ee, x[2] = Se, x[3] = Ie, x[4] = Ne, x[5] = Zr, x[6] = ti, x[7] = ei, x[8] = ri, x[9] = ii, x[10] = ni, x[11] = fi, x[12] = oi, x[13] = si, x[14] = ai, x[15] = ui, x[16] = hi, x[17] = ci, x[18] = li, M !== 0 && (x[19] = M, c.length++), c;\n        };\n        Math.imul || (J = U);\n        function Bt(b, f, a) {\n            a.negative = f.negative ^ b.negative, a.length = b.length + f.length;\n            for(var c = 0, d = 0, m = 0; m < a.length - 1; m++){\n                var x = d;\n                d = 0;\n                for(var M = c & 67108863, l = Math.min(m, f.length - 1), s = Math.max(0, m - b.length + 1); s <= l; s++){\n                    var g = m - s, k = b.words[g] | 0, u = f.words[s] | 0, E = k * u, _ = E & 67108863;\n                    x = x + (E / 67108864 | 0) | 0, _ = _ + M | 0, M = _ & 67108863, x = x + (_ >>> 26) | 0, d += x >>> 26, x &= 67108863;\n                }\n                a.words[m] = M, c = x, x = d;\n            }\n            return c !== 0 ? a.words[m] = c : a.length--, a._strip();\n        }\n        function G(b, f, a) {\n            return Bt(b, f, a);\n        }\n        o.prototype.mulTo = function(f, a) {\n            var c, d = this.length + f.length;\n            return this.length === 10 && f.length === 10 ? c = J(this, f, a) : d < 63 ? c = U(this, f, a) : d < 1024 ? c = Bt(this, f, a) : c = G(this, f, a), c;\n        }, o.prototype.mul = function(f) {\n            var a = new o(null);\n            return a.words = new Array(this.length + f.length), this.mulTo(f, a);\n        }, o.prototype.mulf = function(f) {\n            var a = new o(null);\n            return a.words = new Array(this.length + f.length), G(this, f, a);\n        }, o.prototype.imul = function(f) {\n            return this.clone().mulTo(f, this);\n        }, o.prototype.imuln = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(typeof f == \"number\"), i(f < 67108864);\n            for(var c = 0, d = 0; d < this.length; d++){\n                var m = (this.words[d] | 0) * f, x = (m & 67108863) + (c & 67108863);\n                c >>= 26, c += m / 67108864 | 0, c += x >>> 26, this.words[d] = x & 67108863;\n            }\n            return c !== 0 && (this.words[d] = c, this.length++), a ? this.ineg() : this;\n        }, o.prototype.muln = function(f) {\n            return this.clone().imuln(f);\n        }, o.prototype.sqr = function() {\n            return this.mul(this);\n        }, o.prototype.isqr = function() {\n            return this.imul(this.clone());\n        }, o.prototype.pow = function(f) {\n            var a = D(f);\n            if (a.length === 0) return new o(1);\n            for(var c = this, d = 0; d < a.length && a[d] === 0; d++, c = c.sqr());\n            if (++d < a.length) for(var m = c.sqr(); d < a.length; d++, m = m.sqr())a[d] !== 0 && (c = c.mul(m));\n            return c;\n        }, o.prototype.iushln = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26, d = 67108863 >>> 26 - a << 26 - a, m;\n            if (a !== 0) {\n                var x = 0;\n                for(m = 0; m < this.length; m++){\n                    var M = this.words[m] & d, l = (this.words[m] | 0) - M << a;\n                    this.words[m] = l | x, x = M >>> 26 - a;\n                }\n                x && (this.words[m] = x, this.length++);\n            }\n            if (c !== 0) {\n                for(m = this.length - 1; m >= 0; m--)this.words[m + c] = this.words[m];\n                for(m = 0; m < c; m++)this.words[m] = 0;\n                this.length += c;\n            }\n            return this._strip();\n        }, o.prototype.ishln = function(f) {\n            return i(this.negative === 0), this.iushln(f);\n        }, o.prototype.iushrn = function(f, a, c) {\n            i(typeof f == \"number\" && f >= 0);\n            var d;\n            a ? d = (a - a % 26) / 26 : d = 0;\n            var m = f % 26, x = Math.min((f - m) / 26, this.length), M = 67108863 ^ 67108863 >>> m << m, l = c;\n            if (d -= x, d = Math.max(0, d), l) {\n                for(var s = 0; s < x; s++)l.words[s] = this.words[s];\n                l.length = x;\n            }\n            if (x !== 0) if (this.length > x) for(this.length -= x, s = 0; s < this.length; s++)this.words[s] = this.words[s + x];\n            else this.words[0] = 0, this.length = 1;\n            var g = 0;\n            for(s = this.length - 1; s >= 0 && (g !== 0 || s >= d); s--){\n                var k = this.words[s] | 0;\n                this.words[s] = g << 26 - m | k >>> m, g = k & M;\n            }\n            return l && g !== 0 && (l.words[l.length++] = g), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();\n        }, o.prototype.ishrn = function(f, a, c) {\n            return i(this.negative === 0), this.iushrn(f, a, c);\n        }, o.prototype.shln = function(f) {\n            return this.clone().ishln(f);\n        }, o.prototype.ushln = function(f) {\n            return this.clone().iushln(f);\n        }, o.prototype.shrn = function(f) {\n            return this.clone().ishrn(f);\n        }, o.prototype.ushrn = function(f) {\n            return this.clone().iushrn(f);\n        }, o.prototype.testn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26, d = 1 << a;\n            if (this.length <= c) return !1;\n            var m = this.words[c];\n            return !!(m & d);\n        }, o.prototype.imaskn = function(f) {\n            i(typeof f == \"number\" && f >= 0);\n            var a = f % 26, c = (f - a) / 26;\n            if (i(this.negative === 0, \"imaskn works only with positive numbers\"), this.length <= c) return this;\n            if (a !== 0 && c++, this.length = Math.min(c, this.length), a !== 0) {\n                var d = 67108863 ^ 67108863 >>> a << a;\n                this.words[this.length - 1] &= d;\n            }\n            return this._strip();\n        }, o.prototype.maskn = function(f) {\n            return this.clone().imaskn(f);\n        }, o.prototype.iaddn = function(f) {\n            return i(typeof f == \"number\"), i(f < 67108864), f < 0 ? this.isubn(-f) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= f ? (this.words[0] = f - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(f), this.negative = 1, this) : this._iaddn(f);\n        }, o.prototype._iaddn = function(f) {\n            this.words[0] += f;\n            for(var a = 0; a < this.length && this.words[a] >= 67108864; a++)this.words[a] -= 67108864, a === this.length - 1 ? this.words[a + 1] = 1 : this.words[a + 1]++;\n            return this.length = Math.max(this.length, a + 1), this;\n        }, o.prototype.isubn = function(f) {\n            if (i(typeof f == \"number\"), i(f < 67108864), f < 0) return this.iaddn(-f);\n            if (this.negative !== 0) return this.negative = 0, this.iaddn(f), this.negative = 1, this;\n            if (this.words[0] -= f, this.length === 1 && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;\n            else for(var a = 0; a < this.length && this.words[a] < 0; a++)this.words[a] += 67108864, this.words[a + 1] -= 1;\n            return this._strip();\n        }, o.prototype.addn = function(f) {\n            return this.clone().iaddn(f);\n        }, o.prototype.subn = function(f) {\n            return this.clone().isubn(f);\n        }, o.prototype.iabs = function() {\n            return this.negative = 0, this;\n        }, o.prototype.abs = function() {\n            return this.clone().iabs();\n        }, o.prototype._ishlnsubmul = function(f, a, c) {\n            var d = f.length + c, m;\n            this._expand(d);\n            var x, M = 0;\n            for(m = 0; m < f.length; m++){\n                x = (this.words[m + c] | 0) + M;\n                var l = (f.words[m] | 0) * a;\n                x -= l & 67108863, M = (x >> 26) - (l / 67108864 | 0), this.words[m + c] = x & 67108863;\n            }\n            for(; m < this.length - c; m++)x = (this.words[m + c] | 0) + M, M = x >> 26, this.words[m + c] = x & 67108863;\n            if (M === 0) return this._strip();\n            for(i(M === -1), M = 0, m = 0; m < this.length; m++)x = -(this.words[m] | 0) + M, M = x >> 26, this.words[m] = x & 67108863;\n            return this.negative = 1, this._strip();\n        }, o.prototype._wordDiv = function(f, a) {\n            var c = this.length - f.length, d = this.clone(), m = f, x = m.words[m.length - 1] | 0, M = this._countBits(x);\n            c = 26 - M, c !== 0 && (m = m.ushln(c), d.iushln(c), x = m.words[m.length - 1] | 0);\n            var l = d.length - m.length, s;\n            if (a !== \"mod\") {\n                s = new o(null), s.length = l + 1, s.words = new Array(s.length);\n                for(var g = 0; g < s.length; g++)s.words[g] = 0;\n            }\n            var k = d.clone()._ishlnsubmul(m, 1, l);\n            k.negative === 0 && (d = k, s && (s.words[l] = 1));\n            for(var u = l - 1; u >= 0; u--){\n                var E = (d.words[m.length + u] | 0) * 67108864 + (d.words[m.length + u - 1] | 0);\n                for(E = Math.min(E / x | 0, 67108863), d._ishlnsubmul(m, E, u); d.negative !== 0;)E--, d.negative = 0, d._ishlnsubmul(m, 1, u), d.isZero() || (d.negative ^= 1);\n                s && (s.words[u] = E);\n            }\n            return s && s._strip(), d._strip(), a !== \"div\" && c !== 0 && d.iushrn(c), {\n                div: s || null,\n                mod: d\n            };\n        }, o.prototype.divmod = function(f, a, c) {\n            if (i(!f.isZero()), this.isZero()) return {\n                div: new o(0),\n                mod: new o(0)\n            };\n            var d, m, x;\n            return this.negative !== 0 && f.negative === 0 ? (x = this.neg().divmod(f, a), a !== \"mod\" && (d = x.div.neg()), a !== \"div\" && (m = x.mod.neg(), c && m.negative !== 0 && m.iadd(f)), {\n                div: d,\n                mod: m\n            }) : this.negative === 0 && f.negative !== 0 ? (x = this.divmod(f.neg(), a), a !== \"mod\" && (d = x.div.neg()), {\n                div: d,\n                mod: x.mod\n            }) : this.negative & f.negative ? (x = this.neg().divmod(f.neg(), a), a !== \"div\" && (m = x.mod.neg(), c && m.negative !== 0 && m.isub(f)), {\n                div: x.div,\n                mod: m\n            }) : f.length > this.length || this.cmp(f) < 0 ? {\n                div: new o(0),\n                mod: this\n            } : f.length === 1 ? a === \"div\" ? {\n                div: this.divn(f.words[0]),\n                mod: null\n            } : a === \"mod\" ? {\n                div: null,\n                mod: new o(this.modrn(f.words[0]))\n            } : {\n                div: this.divn(f.words[0]),\n                mod: new o(this.modrn(f.words[0]))\n            } : this._wordDiv(f, a);\n        }, o.prototype.div = function(f) {\n            return this.divmod(f, \"div\", !1).div;\n        }, o.prototype.mod = function(f) {\n            return this.divmod(f, \"mod\", !1).mod;\n        }, o.prototype.umod = function(f) {\n            return this.divmod(f, \"mod\", !0).mod;\n        }, o.prototype.divRound = function(f) {\n            var a = this.divmod(f);\n            if (a.mod.isZero()) return a.div;\n            var c = a.div.negative !== 0 ? a.mod.isub(f) : a.mod, d = f.ushrn(1), m = f.andln(1), x = c.cmp(d);\n            return x < 0 || m === 1 && x === 0 ? a.div : a.div.negative !== 0 ? a.div.isubn(1) : a.div.iaddn(1);\n        }, o.prototype.modrn = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(f <= 67108863);\n            for(var c = (1 << 26) % f, d = 0, m = this.length - 1; m >= 0; m--)d = (c * d + (this.words[m] | 0)) % f;\n            return a ? -d : d;\n        }, o.prototype.modn = function(f) {\n            return this.modrn(f);\n        }, o.prototype.idivn = function(f) {\n            var a = f < 0;\n            a && (f = -f), i(f <= 67108863);\n            for(var c = 0, d = this.length - 1; d >= 0; d--){\n                var m = (this.words[d] | 0) + c * 67108864;\n                this.words[d] = m / f | 0, c = m % f;\n            }\n            return this._strip(), a ? this.ineg() : this;\n        }, o.prototype.divn = function(f) {\n            return this.clone().idivn(f);\n        }, o.prototype.egcd = function(f) {\n            i(f.negative === 0), i(!f.isZero());\n            var a = this, c = f.clone();\n            a.negative !== 0 ? a = a.umod(f) : a = a.clone();\n            for(var d = new o(1), m = new o(0), x = new o(0), M = new o(1), l = 0; a.isEven() && c.isEven();)a.iushrn(1), c.iushrn(1), ++l;\n            for(var s = c.clone(), g = a.clone(); !a.isZero();){\n                for(var k = 0, u = 1; !(a.words[0] & u) && k < 26; ++k, u <<= 1);\n                if (k > 0) for(a.iushrn(k); k-- > 0;)(d.isOdd() || m.isOdd()) && (d.iadd(s), m.isub(g)), d.iushrn(1), m.iushrn(1);\n                for(var E = 0, _ = 1; !(c.words[0] & _) && E < 26; ++E, _ <<= 1);\n                if (E > 0) for(c.iushrn(E); E-- > 0;)(x.isOdd() || M.isOdd()) && (x.iadd(s), M.isub(g)), x.iushrn(1), M.iushrn(1);\n                a.cmp(c) >= 0 ? (a.isub(c), d.isub(x), m.isub(M)) : (c.isub(a), x.isub(d), M.isub(m));\n            }\n            return {\n                a: x,\n                b: M,\n                gcd: c.iushln(l)\n            };\n        }, o.prototype._invmp = function(f) {\n            i(f.negative === 0), i(!f.isZero());\n            var a = this, c = f.clone();\n            a.negative !== 0 ? a = a.umod(f) : a = a.clone();\n            for(var d = new o(1), m = new o(0), x = c.clone(); a.cmpn(1) > 0 && c.cmpn(1) > 0;){\n                for(var M = 0, l = 1; !(a.words[0] & l) && M < 26; ++M, l <<= 1);\n                if (M > 0) for(a.iushrn(M); M-- > 0;)d.isOdd() && d.iadd(x), d.iushrn(1);\n                for(var s = 0, g = 1; !(c.words[0] & g) && s < 26; ++s, g <<= 1);\n                if (s > 0) for(c.iushrn(s); s-- > 0;)m.isOdd() && m.iadd(x), m.iushrn(1);\n                a.cmp(c) >= 0 ? (a.isub(c), d.isub(m)) : (c.isub(a), m.isub(d));\n            }\n            var k;\n            return a.cmpn(1) === 0 ? k = d : k = m, k.cmpn(0) < 0 && k.iadd(f), k;\n        }, o.prototype.gcd = function(f) {\n            if (this.isZero()) return f.abs();\n            if (f.isZero()) return this.abs();\n            var a = this.clone(), c = f.clone();\n            a.negative = 0, c.negative = 0;\n            for(var d = 0; a.isEven() && c.isEven(); d++)a.iushrn(1), c.iushrn(1);\n            do {\n                for(; a.isEven();)a.iushrn(1);\n                for(; c.isEven();)c.iushrn(1);\n                var m = a.cmp(c);\n                if (m < 0) {\n                    var x = a;\n                    a = c, c = x;\n                } else if (m === 0 || c.cmpn(1) === 0) break;\n                a.isub(c);\n            }while (!0);\n            return c.iushln(d);\n        }, o.prototype.invm = function(f) {\n            return this.egcd(f).a.umod(f);\n        }, o.prototype.isEven = function() {\n            return (this.words[0] & 1) === 0;\n        }, o.prototype.isOdd = function() {\n            return (this.words[0] & 1) === 1;\n        }, o.prototype.andln = function(f) {\n            return this.words[0] & f;\n        }, o.prototype.bincn = function(f) {\n            i(typeof f == \"number\");\n            var a = f % 26, c = (f - a) / 26, d = 1 << a;\n            if (this.length <= c) return this._expand(c + 1), this.words[c] |= d, this;\n            for(var m = d, x = c; m !== 0 && x < this.length; x++){\n                var M = this.words[x] | 0;\n                M += m, m = M >>> 26, M &= 67108863, this.words[x] = M;\n            }\n            return m !== 0 && (this.words[x] = m, this.length++), this;\n        }, o.prototype.isZero = function() {\n            return this.length === 1 && this.words[0] === 0;\n        }, o.prototype.cmpn = function(f) {\n            var a = f < 0;\n            if (this.negative !== 0 && !a) return -1;\n            if (this.negative === 0 && a) return 1;\n            this._strip();\n            var c;\n            if (this.length > 1) c = 1;\n            else {\n                a && (f = -f), i(f <= 67108863, \"Number is too big\");\n                var d = this.words[0] | 0;\n                c = d === f ? 0 : d < f ? -1 : 1;\n            }\n            return this.negative !== 0 ? -c | 0 : c;\n        }, o.prototype.cmp = function(f) {\n            if (this.negative !== 0 && f.negative === 0) return -1;\n            if (this.negative === 0 && f.negative !== 0) return 1;\n            var a = this.ucmp(f);\n            return this.negative !== 0 ? -a | 0 : a;\n        }, o.prototype.ucmp = function(f) {\n            if (this.length > f.length) return 1;\n            if (this.length < f.length) return -1;\n            for(var a = 0, c = this.length - 1; c >= 0; c--){\n                var d = this.words[c] | 0, m = f.words[c] | 0;\n                if (d !== m) {\n                    d < m ? a = -1 : d > m && (a = 1);\n                    break;\n                }\n            }\n            return a;\n        }, o.prototype.gtn = function(f) {\n            return this.cmpn(f) === 1;\n        }, o.prototype.gt = function(f) {\n            return this.cmp(f) === 1;\n        }, o.prototype.gten = function(f) {\n            return this.cmpn(f) >= 0;\n        }, o.prototype.gte = function(f) {\n            return this.cmp(f) >= 0;\n        }, o.prototype.ltn = function(f) {\n            return this.cmpn(f) === -1;\n        }, o.prototype.lt = function(f) {\n            return this.cmp(f) === -1;\n        }, o.prototype.lten = function(f) {\n            return this.cmpn(f) <= 0;\n        }, o.prototype.lte = function(f) {\n            return this.cmp(f) <= 0;\n        }, o.prototype.eqn = function(f) {\n            return this.cmpn(f) === 0;\n        }, o.prototype.eq = function(f) {\n            return this.cmp(f) === 0;\n        }, o.red = function(f) {\n            return new Y(f);\n        }, o.prototype.toRed = function(f) {\n            return i(!this.red, \"Already a number in reduction context\"), i(this.negative === 0, \"red works only with positives\"), f.convertTo(this)._forceRed(f);\n        }, o.prototype.fromRed = function() {\n            return i(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n        }, o.prototype._forceRed = function(f) {\n            return this.red = f, this;\n        }, o.prototype.forceRed = function(f) {\n            return i(!this.red, \"Already a number in reduction context\"), this._forceRed(f);\n        }, o.prototype.redAdd = function(f) {\n            return i(this.red, \"redAdd works only with red numbers\"), this.red.add(this, f);\n        }, o.prototype.redIAdd = function(f) {\n            return i(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, f);\n        }, o.prototype.redSub = function(f) {\n            return i(this.red, \"redSub works only with red numbers\"), this.red.sub(this, f);\n        }, o.prototype.redISub = function(f) {\n            return i(this.red, \"redISub works only with red numbers\"), this.red.isub(this, f);\n        }, o.prototype.redShl = function(f) {\n            return i(this.red, \"redShl works only with red numbers\"), this.red.shl(this, f);\n        }, o.prototype.redMul = function(f) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, f), this.red.mul(this, f);\n        }, o.prototype.redIMul = function(f) {\n            return i(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, f), this.red.imul(this, f);\n        }, o.prototype.redSqr = function() {\n            return i(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n        }, o.prototype.redISqr = function() {\n            return i(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n        }, o.prototype.redSqrt = function() {\n            return i(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n        }, o.prototype.redInvm = function() {\n            return i(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n        }, o.prototype.redNeg = function() {\n            return i(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n        }, o.prototype.redPow = function(f) {\n            return i(this.red && !f.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, f);\n        };\n        var H = {\n            k256: null,\n            p224: null,\n            p192: null,\n            p25519: null\n        };\n        function L(b, f) {\n            this.name = b, this.p = new o(f, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n        }\n        L.prototype._tmp = function() {\n            var f = new o(null);\n            return f.words = new Array(Math.ceil(this.n / 13)), f;\n        }, L.prototype.ireduce = function(f) {\n            var a = f, c;\n            do this.split(a, this.tmp), a = this.imulK(a), a = a.iadd(this.tmp), c = a.bitLength();\n            while (c > this.n);\n            var d = c < this.n ? -1 : a.ucmp(this.p);\n            return d === 0 ? (a.words[0] = 0, a.length = 1) : d > 0 ? a.isub(this.p) : a.strip !== void 0 ? a.strip() : a._strip(), a;\n        }, L.prototype.split = function(f, a) {\n            f.iushrn(this.n, 0, a);\n        }, L.prototype.imulK = function(f) {\n            return f.imul(this.k);\n        };\n        function Pt() {\n            L.call(this, \"k256\", \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\");\n        }\n        n(Pt, L), Pt.prototype.split = function(f, a) {\n            for(var c = 4194303, d = Math.min(f.length, 9), m = 0; m < d; m++)a.words[m] = f.words[m];\n            if (a.length = d, f.length <= 9) {\n                f.words[0] = 0, f.length = 1;\n                return;\n            }\n            var x = f.words[9];\n            for(a.words[a.length++] = x & c, m = 10; m < f.length; m++){\n                var M = f.words[m] | 0;\n                f.words[m - 10] = (M & c) << 4 | x >>> 22, x = M;\n            }\n            x >>>= 22, f.words[m - 10] = x, x === 0 && f.length > 10 ? f.length -= 10 : f.length -= 9;\n        }, Pt.prototype.imulK = function(f) {\n            f.words[f.length] = 0, f.words[f.length + 1] = 0, f.length += 2;\n            for(var a = 0, c = 0; c < f.length; c++){\n                var d = f.words[c] | 0;\n                a += d * 977, f.words[c] = a & 67108863, a = d * 64 + (a / 67108864 | 0);\n            }\n            return f.words[f.length - 1] === 0 && (f.length--, f.words[f.length - 1] === 0 && f.length--), f;\n        };\n        function W() {\n            L.call(this, \"p224\", \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\");\n        }\n        n(W, L);\n        function Rt() {\n            L.call(this, \"p192\", \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\");\n        }\n        n(Rt, L);\n        function Vt() {\n            L.call(this, \"25519\", \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\");\n        }\n        n(Vt, L), Vt.prototype.imulK = function(f) {\n            for(var a = 0, c = 0; c < f.length; c++){\n                var d = (f.words[c] | 0) * 19 + a, m = d & 67108863;\n                d >>>= 26, f.words[c] = m, a = d;\n            }\n            return a !== 0 && (f.words[f.length++] = a), f;\n        }, o._prime = function(f) {\n            if (H[f]) return H[f];\n            var a;\n            if (f === \"k256\") a = new Pt;\n            else if (f === \"p224\") a = new W;\n            else if (f === \"p192\") a = new Rt;\n            else if (f === \"p25519\") a = new Vt;\n            else throw new Error(\"Unknown prime \" + f);\n            return H[f] = a, a;\n        };\n        function Y(b) {\n            if (typeof b == \"string\") {\n                var f = o._prime(b);\n                this.m = f.p, this.prime = f;\n            } else i(b.gtn(1), \"modulus must be greater than 1\"), this.m = b, this.prime = null;\n        }\n        Y.prototype._verify1 = function(f) {\n            i(f.negative === 0, \"red works only with positives\"), i(f.red, \"red works only with red numbers\");\n        }, Y.prototype._verify2 = function(f, a) {\n            i((f.negative | a.negative) === 0, \"red works only with positives\"), i(f.red && f.red === a.red, \"red works only with red numbers\");\n        }, Y.prototype.imod = function(f) {\n            return this.prime ? this.prime.ireduce(f)._forceRed(this) : (w(f, f.umod(this.m)._forceRed(this)), f);\n        }, Y.prototype.neg = function(f) {\n            return f.isZero() ? f.clone() : this.m.sub(f)._forceRed(this);\n        }, Y.prototype.add = function(f, a) {\n            this._verify2(f, a);\n            var c = f.add(a);\n            return c.cmp(this.m) >= 0 && c.isub(this.m), c._forceRed(this);\n        }, Y.prototype.iadd = function(f, a) {\n            this._verify2(f, a);\n            var c = f.iadd(a);\n            return c.cmp(this.m) >= 0 && c.isub(this.m), c;\n        }, Y.prototype.sub = function(f, a) {\n            this._verify2(f, a);\n            var c = f.sub(a);\n            return c.cmpn(0) < 0 && c.iadd(this.m), c._forceRed(this);\n        }, Y.prototype.isub = function(f, a) {\n            this._verify2(f, a);\n            var c = f.isub(a);\n            return c.cmpn(0) < 0 && c.iadd(this.m), c;\n        }, Y.prototype.shl = function(f, a) {\n            return this._verify1(f), this.imod(f.ushln(a));\n        }, Y.prototype.imul = function(f, a) {\n            return this._verify2(f, a), this.imod(f.imul(a));\n        }, Y.prototype.mul = function(f, a) {\n            return this._verify2(f, a), this.imod(f.mul(a));\n        }, Y.prototype.isqr = function(f) {\n            return this.imul(f, f.clone());\n        }, Y.prototype.sqr = function(f) {\n            return this.mul(f, f);\n        }, Y.prototype.sqrt = function(f) {\n            if (f.isZero()) return f.clone();\n            var a = this.m.andln(3);\n            if (i(a % 2 === 1), a === 3) {\n                var c = this.m.add(new o(1)).iushrn(2);\n                return this.pow(f, c);\n            }\n            for(var d = this.m.subn(1), m = 0; !d.isZero() && d.andln(1) === 0;)m++, d.iushrn(1);\n            i(!d.isZero());\n            var x = new o(1).toRed(this), M = x.redNeg(), l = this.m.subn(1).iushrn(1), s = this.m.bitLength();\n            for(s = new o(2 * s * s).toRed(this); this.pow(s, l).cmp(M) !== 0;)s.redIAdd(M);\n            for(var g = this.pow(s, d), k = this.pow(f, d.addn(1).iushrn(1)), u = this.pow(f, d), E = m; u.cmp(x) !== 0;){\n                for(var _ = u, B = 0; _.cmp(x) !== 0; B++)_ = _.redSqr();\n                i(B < E);\n                var R = this.pow(g, new o(1).iushln(E - B - 1));\n                k = k.redMul(R), g = R.redSqr(), u = u.redMul(g), E = B;\n            }\n            return k;\n        }, Y.prototype.invm = function(f) {\n            var a = f._invmp(this.m);\n            return a.negative !== 0 ? (a.negative = 0, this.imod(a).redNeg()) : this.imod(a);\n        }, Y.prototype.pow = function(f, a) {\n            if (a.isZero()) return new o(1).toRed(this);\n            if (a.cmpn(1) === 0) return f.clone();\n            var c = 4, d = new Array(1 << c);\n            d[0] = new o(1).toRed(this), d[1] = f;\n            for(var m = 2; m < d.length; m++)d[m] = this.mul(d[m - 1], f);\n            var x = d[0], M = 0, l = 0, s = a.bitLength() % 26;\n            for(s === 0 && (s = 26), m = a.length - 1; m >= 0; m--){\n                for(var g = a.words[m], k = s - 1; k >= 0; k--){\n                    var u = g >> k & 1;\n                    if (x !== d[0] && (x = this.sqr(x)), u === 0 && M === 0) {\n                        l = 0;\n                        continue;\n                    }\n                    M <<= 1, M |= u, l++, !(l !== c && (m !== 0 || k !== 0)) && (x = this.mul(x, d[M]), l = 0, M = 0);\n                }\n                s = 26;\n            }\n            return x;\n        }, Y.prototype.convertTo = function(f) {\n            var a = f.umod(this.m);\n            return a === f ? a.clone() : a;\n        }, Y.prototype.convertFrom = function(f) {\n            var a = f.clone();\n            return a.red = null, a;\n        }, o.mont = function(f) {\n            return new Wt(f);\n        };\n        function Wt(b) {\n            Y.call(this, b), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n        }\n        n(Wt, Y), Wt.prototype.convertTo = function(f) {\n            return this.imod(f.ushln(this.shift));\n        }, Wt.prototype.convertFrom = function(f) {\n            var a = this.imod(f.mul(this.rinv));\n            return a.red = null, a;\n        }, Wt.prototype.imul = function(f, a) {\n            if (f.isZero() || a.isZero()) return f.words[0] = 0, f.length = 1, f;\n            var c = f.imul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), m = c.isub(d).iushrn(this.shift), x = m;\n            return m.cmp(this.m) >= 0 ? x = m.isub(this.m) : m.cmpn(0) < 0 && (x = m.iadd(this.m)), x._forceRed(this);\n        }, Wt.prototype.mul = function(f, a) {\n            if (f.isZero() || a.isZero()) return new o(0)._forceRed(this);\n            var c = f.mul(a), d = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), m = c.isub(d).iushrn(this.shift), x = m;\n            return m.cmp(this.m) >= 0 ? x = m.isub(this.m) : m.cmpn(0) < 0 && (x = m.iadd(this.m)), x._forceRed(this);\n        }, Wt.prototype.invm = function(f) {\n            var a = this.imod(f._invmp(this.m).mul(this.r2));\n            return a._forceRed(this);\n        };\n    })(e, Kn);\n})(Xn);\nvar K = Xn.exports;\nconst $n = \"bignumber/5.7.0\";\nvar Dr = K.BN;\nconst Ae = new z($n), Ni = {}, Zn = 9007199254740991;\nfunction Hs(e) {\n    return e != null && (V.isBigNumber(e) || typeof e == \"number\" && e % 1 === 0 || typeof e == \"string\" && !!e.match(/^-?[0-9]+$/) || Jt(e) || typeof e == \"bigint\" || nr(e));\n}\nlet tf = !1;\nclass V {\n    constructor(t, r){\n        t !== Ni && Ae.throwError(\"cannot call constructor directly; use BigNumber.from\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new (BigNumber)\"\n        }), this._hex = r, this._isBigNumber = !0, Object.freeze(this);\n    }\n    fromTwos(t) {\n        return zt(j(this).fromTwos(t));\n    }\n    toTwos(t) {\n        return zt(j(this).toTwos(t));\n    }\n    abs() {\n        return this._hex[0] === \"-\" ? V.from(this._hex.substring(1)) : this;\n    }\n    add(t) {\n        return zt(j(this).add(j(t)));\n    }\n    sub(t) {\n        return zt(j(this).sub(j(t)));\n    }\n    div(t) {\n        return V.from(t).isZero() && $t(\"division-by-zero\", \"div\"), zt(j(this).div(j(t)));\n    }\n    mul(t) {\n        return zt(j(this).mul(j(t)));\n    }\n    mod(t) {\n        const r = j(t);\n        return r.isNeg() && $t(\"division-by-zero\", \"mod\"), zt(j(this).umod(r));\n    }\n    pow(t) {\n        const r = j(t);\n        return r.isNeg() && $t(\"negative-power\", \"pow\"), zt(j(this).pow(r));\n    }\n    and(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && $t(\"unbound-bitwise-result\", \"and\"), zt(j(this).and(r));\n    }\n    or(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && $t(\"unbound-bitwise-result\", \"or\"), zt(j(this).or(r));\n    }\n    xor(t) {\n        const r = j(t);\n        return (this.isNegative() || r.isNeg()) && $t(\"unbound-bitwise-result\", \"xor\"), zt(j(this).xor(r));\n    }\n    mask(t) {\n        return (this.isNegative() || t < 0) && $t(\"negative-width\", \"mask\"), zt(j(this).maskn(t));\n    }\n    shl(t) {\n        return (this.isNegative() || t < 0) && $t(\"negative-width\", \"shl\"), zt(j(this).shln(t));\n    }\n    shr(t) {\n        return (this.isNegative() || t < 0) && $t(\"negative-width\", \"shr\"), zt(j(this).shrn(t));\n    }\n    eq(t) {\n        return j(this).eq(j(t));\n    }\n    lt(t) {\n        return j(this).lt(j(t));\n    }\n    lte(t) {\n        return j(this).lte(j(t));\n    }\n    gt(t) {\n        return j(this).gt(j(t));\n    }\n    gte(t) {\n        return j(this).gte(j(t));\n    }\n    isNegative() {\n        return this._hex[0] === \"-\";\n    }\n    isZero() {\n        return j(this).isZero();\n    }\n    toNumber() {\n        try {\n            return j(this).toNumber();\n        } catch  {\n            $t(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        } catch  {}\n        return Ae.throwError(\"this platform does not support BigInt\", z.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        return arguments.length > 0 && (arguments[0] === 10 ? tf || (tf = !0, Ae.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\")) : arguments[0] === 16 ? Ae.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", z.errors.UNEXPECTED_ARGUMENT, {}) : Ae.throwError(\"BigNumber.toString does not accept parameters\", z.errors.UNEXPECTED_ARGUMENT, {})), j(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(t) {\n        return {\n            type: \"BigNumber\",\n            hex: this.toHexString()\n        };\n    }\n    static from(t) {\n        if (t instanceof V) return t;\n        if (typeof t == \"string\") return t.match(/^-?0x[0-9a-f]+$/i) ? new V(Ni, mr(t)) : t.match(/^-?[0-9]+$/) ? new V(Ni, mr(new Dr(t))) : Ae.throwArgumentError(\"invalid BigNumber string\", \"value\", t);\n        if (typeof t == \"number\") return t % 1 && $t(\"underflow\", \"BigNumber.from\", t), (t >= Zn || t <= -Zn) && $t(\"overflow\", \"BigNumber.from\", t), V.from(String(t));\n        const r = t;\n        if (typeof r == \"bigint\") return V.from(r.toString());\n        if (nr(r)) return V.from(Kt(r));\n        if (r) if (r.toHexString) {\n            const i = r.toHexString();\n            if (typeof i == \"string\") return V.from(i);\n        } else {\n            let i = r._hex;\n            if (i == null && r.type === \"BigNumber\" && (i = r.hex), typeof i == \"string\" && (Jt(i) || i[0] === \"-\" && Jt(i.substring(1)))) return V.from(i);\n        }\n        return Ae.throwArgumentError(\"invalid BigNumber value\", \"value\", t);\n    }\n    static isBigNumber(t) {\n        return !!(t && t._isBigNumber);\n    }\n}\nfunction mr(e) {\n    if (typeof e != \"string\") return mr(e.toString(16));\n    if (e[0] === \"-\") return e = e.substring(1), e[0] === \"-\" && Ae.throwArgumentError(\"invalid hex\", \"value\", e), e = mr(e), e === \"0x00\" ? e : \"-\" + e;\n    if (e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), e === \"0x\") return \"0x00\";\n    for(e.length % 2 && (e = \"0x0\" + e.substring(2)); e.length > 4 && e.substring(0, 4) === \"0x00\";)e = \"0x\" + e.substring(4);\n    return e;\n}\nfunction zt(e) {\n    return V.from(mr(e));\n}\nfunction j(e) {\n    const t = V.from(e).toHexString();\n    return t[0] === \"-\" ? new Dr(\"-\" + t.substring(3), 16) : new Dr(t.substring(2), 16);\n}\nfunction $t(e, t, r) {\n    const i = {\n        fault: e,\n        operation: t\n    };\n    return r != null && (i.value = r), Ae.throwError(e, z.errors.NUMERIC_FAULT, i);\n}\nfunction Ls(e) {\n    return new Dr(e, 36).toString(16);\n}\nconst Ht = new z($n), Ar = {}, ef = V.from(0), rf = V.from(-1);\nfunction nf(e, t, r, i) {\n    const n = {\n        fault: t,\n        operation: r\n    };\n    return i !== void 0 && (n.value = i), Ht.throwError(e, z.errors.NUMERIC_FAULT, n);\n}\nlet br = \"0\";\nfor(; br.length < 256;)br += br;\nfunction _i(e) {\n    if (typeof e != \"number\") try {\n        e = V.from(e).toNumber();\n    } catch  {}\n    return typeof e == \"number\" && e >= 0 && e <= 256 && !(e % 1) ? \"1\" + br.substring(0, e) : Ht.throwArgumentError(\"invalid decimal size\", \"decimals\", e);\n}\nfunction Bi(e, t) {\n    t == null && (t = 0);\n    const r = _i(t);\n    e = V.from(e);\n    const i = e.lt(ef);\n    i && (e = e.mul(rf));\n    let n = e.mod(r).toString();\n    for(; n.length < r.length - 1;)n = \"0\" + n;\n    n = n.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const o = e.div(r).toString();\n    return r.length === 1 ? e = o : e = o + \".\" + n, i && (e = \"-\" + e), e;\n}\nfunction be(e, t) {\n    t == null && (t = 0);\n    const r = _i(t);\n    (typeof e != \"string\" || !e.match(/^-?[0-9.]+$/)) && Ht.throwArgumentError(\"invalid decimal value\", \"value\", e);\n    const i = e.substring(0, 1) === \"-\";\n    i && (e = e.substring(1)), e === \".\" && Ht.throwArgumentError(\"missing value\", \"value\", e);\n    const n = e.split(\".\");\n    n.length > 2 && Ht.throwArgumentError(\"too many decimal points\", \"value\", e);\n    let o = n[0], h = n[1];\n    for(o || (o = \"0\"), h || (h = \"0\"); h[h.length - 1] === \"0\";)h = h.substring(0, h.length - 1);\n    for(h.length > r.length - 1 && nf(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\"), h === \"\" && (h = \"0\"); h.length < r.length - 1;)h += \"0\";\n    const p = V.from(o), A = V.from(h);\n    let v = p.mul(r).add(A);\n    return i && (v = v.mul(rf)), v;\n}\nclass vr {\n    constructor(t, r, i, n){\n        t !== Ar && Ht.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new FixedFormat\"\n        }), this.signed = r, this.width = i, this.decimals = n, this.name = (r ? \"\" : \"u\") + \"fixed\" + String(i) + \"x\" + String(n), this._multiplier = _i(n), Object.freeze(this);\n    }\n    static from(t) {\n        if (t instanceof vr) return t;\n        typeof t == \"number\" && (t = `fixed128x${t}`);\n        let r = !0, i = 128, n = 18;\n        if (typeof t == \"string\") {\n            if (t !== \"fixed\") if (t === \"ufixed\") r = !1;\n            else {\n                const o = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                o || Ht.throwArgumentError(\"invalid fixed format\", \"format\", t), r = o[1] !== \"u\", i = parseInt(o[2]), n = parseInt(o[3]);\n            }\n        } else if (t) {\n            const o = (h, p, A)=>t[h] == null ? A : (typeof t[h] !== p && Ht.throwArgumentError(\"invalid fixed format (\" + h + \" not \" + p + \")\", \"format.\" + h, t[h]), t[h]);\n            r = o(\"signed\", \"boolean\", r), i = o(\"width\", \"number\", i), n = o(\"decimals\", \"number\", n);\n        }\n        return i % 8 && Ht.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", i), n > 80 && Ht.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", n), new vr(Ar, r, i, n);\n    }\n}\nclass Ut {\n    constructor(t, r, i, n){\n        t !== Ar && Ht.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", z.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new FixedFormat\"\n        }), this.format = n, this._hex = r, this._value = i, this._isFixedNumber = !0, Object.freeze(this);\n    }\n    _checkFormat(t) {\n        this.format.name !== t.format.name && Ht.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", t);\n    }\n    addUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.add(i), this.format.decimals, this.format);\n    }\n    subUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.sub(i), this.format.decimals, this.format);\n    }\n    mulUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.mul(i).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(t) {\n        this._checkFormat(t);\n        const r = be(this._value, this.format.decimals), i = be(t._value, t.format.decimals);\n        return Ut.fromValue(r.mul(this.format._multiplier).div(i), this.format.decimals, this.format);\n    }\n    floor() {\n        const t = this.toString().split(\".\");\n        t.length === 1 && t.push(\"0\");\n        let r = Ut.from(t[0], this.format);\n        const i = !t[1].match(/^(0*)$/);\n        return this.isNegative() && i && (r = r.subUnsafe(ff.toFormat(r.format))), r;\n    }\n    ceiling() {\n        const t = this.toString().split(\".\");\n        t.length === 1 && t.push(\"0\");\n        let r = Ut.from(t[0], this.format);\n        const i = !t[1].match(/^(0*)$/);\n        return !this.isNegative() && i && (r = r.addUnsafe(ff.toFormat(r.format))), r;\n    }\n    round(t) {\n        t == null && (t = 0);\n        const r = this.toString().split(\".\");\n        if (r.length === 1 && r.push(\"0\"), (t < 0 || t > 80 || t % 1) && Ht.throwArgumentError(\"invalid decimal count\", \"decimals\", t), r[1].length <= t) return this;\n        const i = Ut.from(\"1\" + br.substring(0, t), this.format), n = zs.toFormat(this.format);\n        return this.mulUnsafe(i).addUnsafe(n).floor().divUnsafe(i);\n    }\n    isZero() {\n        return this._value === \"0.0\" || this._value === \"0\";\n    }\n    isNegative() {\n        return this._value[0] === \"-\";\n    }\n    toString() {\n        return this._value;\n    }\n    toHexString(t) {\n        if (t == null) return this._hex;\n        t % 8 && Ht.throwArgumentError(\"invalid byte width\", \"width\", t);\n        const r = V.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();\n        return oe(r, t / 8);\n    }\n    toUnsafeFloat() {\n        return parseFloat(this.toString());\n    }\n    toFormat(t) {\n        return Ut.fromString(this._value, t);\n    }\n    static fromValue(t, r, i) {\n        return i == null && r != null && !Hs(r) && (i = r, r = null), r == null && (r = 0), i == null && (i = \"fixed\"), Ut.fromString(Bi(t, r), vr.from(i));\n    }\n    static fromString(t, r) {\n        r == null && (r = \"fixed\");\n        const i = vr.from(r), n = be(t, i.decimals);\n        !i.signed && n.lt(ef) && nf(\"unsigned value cannot be negative\", \"overflow\", \"value\", t);\n        let o = null;\n        i.signed ? o = n.toTwos(i.width).toHexString() : (o = n.toHexString(), o = oe(o, i.width / 8));\n        const h = Bi(n, i.decimals);\n        return new Ut(Ar, o, h, i);\n    }\n    static fromBytes(t, r) {\n        r == null && (r = \"fixed\");\n        const i = vr.from(r);\n        if (Ot(t).length > i.width / 8) throw new Error(\"overflow\");\n        let n = V.from(t);\n        i.signed && (n = n.fromTwos(i.width));\n        const o = n.toTwos((i.signed ? 0 : 1) + i.width).toHexString(), h = Bi(n, i.decimals);\n        return new Ut(Ar, o, h, i);\n    }\n    static from(t, r) {\n        if (typeof t == \"string\") return Ut.fromString(t, r);\n        if (nr(t)) return Ut.fromBytes(t, r);\n        try {\n            return Ut.fromValue(t, 0, r);\n        } catch (i) {\n            if (i.code !== z.errors.INVALID_ARGUMENT) throw i;\n        }\n        return Ht.throwArgumentError(\"invalid FixedNumber value\", \"value\", t);\n    }\n    static isFixedNumber(t) {\n        return !!(t && t._isFixedNumber);\n    }\n}\nconst ff = Ut.from(1), zs = Ut.from(\"0.5\"), js = \"strings/5.7.0\", of = new z(js);\nvar Fr;\n(function(e) {\n    e.current = \"\", e.NFC = \"NFC\", e.NFD = \"NFD\", e.NFKC = \"NFKC\", e.NFKD = \"NFKD\";\n})(Fr || (Fr = {}));\nvar fr;\n(function(e) {\n    e.UNEXPECTED_CONTINUE = \"unexpected continuation byte\", e.BAD_PREFIX = \"bad codepoint prefix\", e.OVERRUN = \"string overrun\", e.MISSING_CONTINUE = \"missing continuation byte\", e.OUT_OF_RANGE = \"out of UTF-8 range\", e.UTF16_SURROGATE = \"UTF-16 surrogate\", e.OVERLONG = \"overlong representation\";\n})(fr || (fr = {}));\nfunction Qs(e, t, r, i, n) {\n    return of.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`, \"bytes\", r);\n}\nfunction sf(e, t, r, i, n) {\n    if (e === fr.BAD_PREFIX || e === fr.UNEXPECTED_CONTINUE) {\n        let o = 0;\n        for(let h = t + 1; h < r.length && r[h] >> 6 === 2; h++)o++;\n        return o;\n    }\n    return e === fr.OVERRUN ? r.length - t - 1 : 0;\n}\nfunction Js(e, t, r, i, n) {\n    return e === fr.OVERLONG ? (i.push(n), 0) : (i.push(65533), sf(e, t, r));\n}\nObject.freeze({\n    error: Qs,\n    ignore: sf,\n    replace: Js\n});\nfunction Ci(e, t = Fr.current) {\n    t != Fr.current && (of.checkNormalize(), e = e.normalize(t));\n    let r = [];\n    for(let i = 0; i < e.length; i++){\n        const n = e.charCodeAt(i);\n        if (n < 128) r.push(n);\n        else if (n < 2048) r.push(n >> 6 | 192), r.push(n & 63 | 128);\n        else if ((n & 64512) == 55296) {\n            i++;\n            const o = e.charCodeAt(i);\n            if (i >= e.length || (o & 64512) !== 56320) throw new Error(\"invalid utf-8 string\");\n            const h = 65536 + ((n & 1023) << 10) + (o & 1023);\n            r.push(h >> 18 | 240), r.push(h >> 12 & 63 | 128), r.push(h >> 6 & 63 | 128), r.push(h & 63 | 128);\n        } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(n & 63 | 128);\n    }\n    return Ot(r);\n}\nfunction Gs(e) {\n    if (e.length % 4 !== 0) throw new Error(\"bad data\");\n    let t = [];\n    for(let r = 0; r < e.length; r += 4)t.push(parseInt(e.substring(r, r + 4), 16));\n    return t;\n}\nfunction Ri(e, t) {\n    t || (t = function(n) {\n        return [\n            parseInt(n, 16)\n        ];\n    });\n    let r = 0, i = {};\n    return e.split(\",\").forEach((n)=>{\n        let o = n.split(\":\");\n        r += parseInt(o[0], 16), i[r] = t(o[1]);\n    }), i;\n}\nfunction af(e) {\n    let t = 0;\n    return e.split(\",\").map((r)=>{\n        let i = r.split(\"-\");\n        i.length === 1 ? i[1] = \"0\" : i[1] === \"\" && (i[1] = \"1\");\n        let n = t + parseInt(i[0], 16);\n        return t = parseInt(i[1], 16), {\n            l: n,\n            h: t\n        };\n    });\n}\naf(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"), \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((e)=>parseInt(e, 16)), Ri(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\"), Ri(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\"), Ri(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", Gs), af(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nconst uf = \"hash/5.7.0\";\nfunction Ys(e) {\n    e = atob(e);\n    const t = [];\n    for(let r = 0; r < e.length; r++)t.push(e.charCodeAt(r));\n    return Ot(t);\n}\nfunction hf(e, t) {\n    t == null && (t = 1);\n    const r = [], i = r.forEach, n = function(o, h) {\n        i.call(o, function(p) {\n            h > 0 && Array.isArray(p) ? n(p, h - 1) : r.push(p);\n        });\n    };\n    return n(e, t), r;\n}\nfunction Vs(e) {\n    const t = {};\n    for(let r = 0; r < e.length; r++){\n        const i = e[r];\n        t[i[0]] = i[1];\n    }\n    return t;\n}\nfunction Ws(e) {\n    let t = 0;\n    function r() {\n        return e[t++] << 8 | e[t++];\n    }\n    let i = r(), n = 1, o = [\n        0,\n        1\n    ];\n    for(let H = 1; H < i; H++)o.push(n += r());\n    let h = r(), p = t;\n    t += h;\n    let A = 0, v = 0;\n    function w() {\n        return A == 0 && (v = v << 8 | e[t++], A = 8), v >> --A & 1;\n    }\n    const y = 31, S = Math.pow(2, y), N = S >>> 1, I = N >> 1, C = S - 1;\n    let D = 0;\n    for(let H = 0; H < y; H++)D = D << 1 | w();\n    let U = [], J = 0, Bt = S;\n    for(;;){\n        let H = Math.floor(((D - J + 1) * n - 1) / Bt), L = 0, Pt = i;\n        for(; Pt - L > 1;){\n            let Vt = L + Pt >>> 1;\n            H < o[Vt] ? Pt = Vt : L = Vt;\n        }\n        if (L == 0) break;\n        U.push(L);\n        let W = J + Math.floor(Bt * o[L] / n), Rt = J + Math.floor(Bt * o[L + 1] / n) - 1;\n        for(; !((W ^ Rt) & N);)D = D << 1 & C | w(), W = W << 1 & C, Rt = Rt << 1 & C | 1;\n        for(; W & ~Rt & I;)D = D & N | D << 1 & C >>> 1 | w(), W = W << 1 ^ N, Rt = (Rt ^ N) << 1 | N | 1;\n        J = W, Bt = 1 + Rt - W;\n    }\n    let G = i - 4;\n    return U.map((H)=>{\n        switch(H - G){\n            case 3:\n                return G + 65792 + (e[p++] << 16 | e[p++] << 8 | e[p++]);\n            case 2:\n                return G + 256 + (e[p++] << 8 | e[p++]);\n            case 1:\n                return G + e[p++];\n            default:\n                return H - 1;\n        }\n    });\n}\nfunction Xs(e) {\n    let t = 0;\n    return ()=>e[t++];\n}\nfunction $s(e) {\n    return Xs(Ws(e));\n}\nfunction Zs(e) {\n    return e & 1 ? ~e >> 1 : e >> 1;\n}\nfunction t0(e, t) {\n    let r = Array(e);\n    for(let i = 0; i < e; i++)r[i] = 1 + t();\n    return r;\n}\nfunction cf(e, t) {\n    let r = Array(e);\n    for(let i = 0, n = -1; i < e; i++)r[i] = n += 1 + t();\n    return r;\n}\nfunction e0(e, t) {\n    let r = Array(e);\n    for(let i = 0, n = 0; i < e; i++)r[i] = n += Zs(t());\n    return r;\n}\nfunction Ur(e, t) {\n    let r = cf(e(), e), i = e(), n = cf(i, e), o = t0(i, e);\n    for(let h = 0; h < i; h++)for(let p = 0; p < o[h]; p++)r.push(n[h] + p);\n    return t ? r.map((h)=>t[h]) : r;\n}\nfunction r0(e) {\n    let t = [];\n    for(;;){\n        let r = e();\n        if (r == 0) break;\n        t.push(n0(r, e));\n    }\n    for(;;){\n        let r = e() - 1;\n        if (r < 0) break;\n        t.push(f0(r, e));\n    }\n    return Vs(hf(t));\n}\nfunction i0(e) {\n    let t = [];\n    for(;;){\n        let r = e();\n        if (r == 0) break;\n        t.push(r);\n    }\n    return t;\n}\nfunction lf(e, t, r) {\n    let i = Array(e).fill(void 0).map(()=>[]);\n    for(let n = 0; n < t; n++)e0(e, r).forEach((o, h)=>i[h].push(o));\n    return i;\n}\nfunction n0(e, t) {\n    let r = 1 + t(), i = t(), n = i0(t), o = lf(n.length, 1 + e, t);\n    return hf(o.map((h, p)=>{\n        const A = h[0], v = h.slice(1);\n        return Array(n[p]).fill(void 0).map((w, y)=>{\n            let S = y * i;\n            return [\n                A + y * r,\n                v.map((N)=>N + S)\n            ];\n        });\n    }));\n}\nfunction f0(e, t) {\n    let r = 1 + t();\n    return lf(r, 1 + e, t).map((n)=>[\n            n[0],\n            n.slice(1)\n        ]);\n}\nfunction o0(e) {\n    let t = Ur(e).sort((i, n)=>i - n);\n    return r();\n    function r() {\n        let i = [];\n        for(;;){\n            let v = Ur(e, t);\n            if (v.length == 0) break;\n            i.push({\n                set: new Set(v),\n                node: r()\n            });\n        }\n        i.sort((v, w)=>w.set.size - v.set.size);\n        let n = e(), o = n % 3;\n        n = n / 3 | 0;\n        let h = !!(n & 1);\n        n >>= 1;\n        let p = n == 1, A = n == 2;\n        return {\n            branches: i,\n            valid: o,\n            fe0f: h,\n            save: p,\n            check: A\n        };\n    }\n}\nfunction s0() {\n    return $s(Ys(\"\"));\n}\nconst kr = s0();\nnew Set(Ur(kr)), new Set(Ur(kr)), r0(kr), o0(kr), new z(uf);\nconst a0 = new Uint8Array(32);\na0.fill(0);\nconst u0 = `\u0019Ethereum Signed Message:\n`;\nfunction df(e) {\n    return typeof e == \"string\" && (e = Ci(e)), Ii(Ds([\n        Ci(u0),\n        Ci(String(e.length)),\n        e\n    ]));\n}\nconst h0 = \"rlp/5.7.0\";\nnew z(h0);\nconst c0 = \"address/5.7.0\", yr = new z(c0);\nfunction pf(e) {\n    Jt(e, 20) || yr.throwArgumentError(\"invalid address\", \"address\", e), e = e.toLowerCase();\n    const t = e.substring(2).split(\"\"), r = new Uint8Array(40);\n    for(let n = 0; n < 40; n++)r[n] = t[n].charCodeAt(0);\n    const i = Ot(Ii(r));\n    for(let n = 0; n < 40; n += 2)i[n >> 1] >> 4 >= 8 && (t[n] = t[n].toUpperCase()), (i[n >> 1] & 15) >= 8 && (t[n + 1] = t[n + 1].toUpperCase());\n    return \"0x\" + t.join(\"\");\n}\nconst l0 = 9007199254740991;\nfunction d0(e) {\n    return Math.log10 ? Math.log10(e) : Math.log(e) / Math.LN10;\n}\nconst Oi = {};\nfor(let e = 0; e < 10; e++)Oi[String(e)] = String(e);\nfor(let e = 0; e < 26; e++)Oi[String.fromCharCode(65 + e)] = String(10 + e);\nconst vf = Math.floor(d0(l0));\nfunction p0(e) {\n    e = e.toUpperCase(), e = e.substring(4) + e.substring(0, 2) + \"00\";\n    let t = e.split(\"\").map((i)=>Oi[i]).join(\"\");\n    for(; t.length >= vf;){\n        let i = t.substring(0, vf);\n        t = parseInt(i, 10) % 97 + t.substring(i.length);\n    }\n    let r = String(98 - parseInt(t, 10) % 97);\n    for(; r.length < 2;)r = \"0\" + r;\n    return r;\n}\nfunction v0(e) {\n    let t = null;\n    if (typeof e != \"string\" && yr.throwArgumentError(\"invalid address\", \"address\", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) e.substring(0, 2) !== \"0x\" && (e = \"0x\" + e), t = pf(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && yr.throwArgumentError(\"bad address checksum\", \"address\", e);\n    else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        for(e.substring(2, 4) !== p0(e) && yr.throwArgumentError(\"bad icap checksum\", \"address\", e), t = Ls(e.substring(4)); t.length < 40;)t = \"0\" + t;\n        t = pf(\"0x\" + t);\n    } else yr.throwArgumentError(\"invalid address\", \"address\", e);\n    return t;\n}\nconst g0 = \"properties/5.7.0\";\nnew z(g0);\nfunction wr(e, t, r) {\n    Object.defineProperty(e, t, {\n        enumerable: !0,\n        value: r,\n        writable: !1\n    });\n}\nnew z(uf);\nconst m0 = new Uint8Array(32);\nm0.fill(0), V.from(-1);\nconst A0 = V.from(0), b0 = V.from(1);\nV.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"), oe(b0.toHexString(), 32), oe(A0.toHexString(), 32);\nvar se = {}, Q = {}, xr = gf;\nfunction gf(e, t) {\n    if (!e) throw new Error(t || \"Assertion failed\");\n}\ngf.equal = function(t, r, i) {\n    if (t != r) throw new Error(i || \"Assertion failed: \" + t + \" != \" + r);\n};\nvar Pi = {\n    exports: {}\n};\ntypeof Object.create == \"function\" ? Pi.exports = function(t, r) {\n    r && (t.super_ = r, t.prototype = Object.create(r.prototype, {\n        constructor: {\n            value: t,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n        }\n    }));\n} : Pi.exports = function(t, r) {\n    if (r) {\n        t.super_ = r;\n        var i = function() {};\n        i.prototype = r.prototype, t.prototype = new i, t.prototype.constructor = t;\n    }\n};\nvar y0 = xr, w0 = Pi.exports;\nQ.inherits = w0;\nfunction x0(e, t) {\n    return (e.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e.length ? !1 : (e.charCodeAt(t + 1) & 64512) === 56320;\n}\nfunction M0(e, t) {\n    if (Array.isArray(e)) return e.slice();\n    if (!e) return [];\n    var r = [];\n    if (typeof e == \"string\") if (t) {\n        if (t === \"hex\") for(e = e.replace(/[^a-z0-9]+/ig, \"\"), e.length % 2 !== 0 && (e = \"0\" + e), n = 0; n < e.length; n += 2)r.push(parseInt(e[n] + e[n + 1], 16));\n    } else for(var i = 0, n = 0; n < e.length; n++){\n        var o = e.charCodeAt(n);\n        o < 128 ? r[i++] = o : o < 2048 ? (r[i++] = o >> 6 | 192, r[i++] = o & 63 | 128) : x0(e, n) ? (o = 65536 + ((o & 1023) << 10) + (e.charCodeAt(++n) & 1023), r[i++] = o >> 18 | 240, r[i++] = o >> 12 & 63 | 128, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128) : (r[i++] = o >> 12 | 224, r[i++] = o >> 6 & 63 | 128, r[i++] = o & 63 | 128);\n    }\n    else for(n = 0; n < e.length; n++)r[n] = e[n] | 0;\n    return r;\n}\nQ.toArray = M0;\nfunction E0(e) {\n    for(var t = \"\", r = 0; r < e.length; r++)t += Af(e[r].toString(16));\n    return t;\n}\nQ.toHex = E0;\nfunction mf(e) {\n    var t = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;\n    return t >>> 0;\n}\nQ.htonl = mf;\nfunction S0(e, t) {\n    for(var r = \"\", i = 0; i < e.length; i++){\n        var n = e[i];\n        t === \"little\" && (n = mf(n)), r += bf(n.toString(16));\n    }\n    return r;\n}\nQ.toHex32 = S0;\nfunction Af(e) {\n    return e.length === 1 ? \"0\" + e : e;\n}\nQ.zero2 = Af;\nfunction bf(e) {\n    return e.length === 7 ? \"0\" + e : e.length === 6 ? \"00\" + e : e.length === 5 ? \"000\" + e : e.length === 4 ? \"0000\" + e : e.length === 3 ? \"00000\" + e : e.length === 2 ? \"000000\" + e : e.length === 1 ? \"0000000\" + e : e;\n}\nQ.zero8 = bf;\nfunction I0(e, t, r, i) {\n    var n = r - t;\n    y0(n % 4 === 0);\n    for(var o = new Array(n / 4), h = 0, p = t; h < o.length; h++, p += 4){\n        var A;\n        i === \"big\" ? A = e[p] << 24 | e[p + 1] << 16 | e[p + 2] << 8 | e[p + 3] : A = e[p + 3] << 24 | e[p + 2] << 16 | e[p + 1] << 8 | e[p], o[h] = A >>> 0;\n    }\n    return o;\n}\nQ.join32 = I0;\nfunction N0(e, t) {\n    for(var r = new Array(e.length * 4), i = 0, n = 0; i < e.length; i++, n += 4){\n        var o = e[i];\n        t === \"big\" ? (r[n] = o >>> 24, r[n + 1] = o >>> 16 & 255, r[n + 2] = o >>> 8 & 255, r[n + 3] = o & 255) : (r[n + 3] = o >>> 24, r[n + 2] = o >>> 16 & 255, r[n + 1] = o >>> 8 & 255, r[n] = o & 255);\n    }\n    return r;\n}\nQ.split32 = N0;\nfunction _0(e, t) {\n    return e >>> t | e << 32 - t;\n}\nQ.rotr32 = _0;\nfunction B0(e, t) {\n    return e << t | e >>> 32 - t;\n}\nQ.rotl32 = B0;\nfunction C0(e, t) {\n    return e + t >>> 0;\n}\nQ.sum32 = C0;\nfunction R0(e, t, r) {\n    return e + t + r >>> 0;\n}\nQ.sum32_3 = R0;\nfunction O0(e, t, r, i) {\n    return e + t + r + i >>> 0;\n}\nQ.sum32_4 = O0;\nfunction P0(e, t, r, i, n) {\n    return e + t + r + i + n >>> 0;\n}\nQ.sum32_5 = P0;\nfunction T0(e, t, r, i) {\n    var n = e[t], o = e[t + 1], h = i + o >>> 0, p = (h < i ? 1 : 0) + r + n;\n    e[t] = p >>> 0, e[t + 1] = h;\n}\nQ.sum64 = T0;\nfunction D0(e, t, r, i) {\n    var n = t + i >>> 0, o = (n < t ? 1 : 0) + e + r;\n    return o >>> 0;\n}\nQ.sum64_hi = D0;\nfunction F0(e, t, r, i) {\n    var n = t + i;\n    return n >>> 0;\n}\nQ.sum64_lo = F0;\nfunction U0(e, t, r, i, n, o, h, p) {\n    var A = 0, v = t;\n    v = v + i >>> 0, A += v < t ? 1 : 0, v = v + o >>> 0, A += v < o ? 1 : 0, v = v + p >>> 0, A += v < p ? 1 : 0;\n    var w = e + r + n + h + A;\n    return w >>> 0;\n}\nQ.sum64_4_hi = U0;\nfunction k0(e, t, r, i, n, o, h, p) {\n    var A = t + i + o + p;\n    return A >>> 0;\n}\nQ.sum64_4_lo = k0;\nfunction q0(e, t, r, i, n, o, h, p, A, v) {\n    var w = 0, y = t;\n    y = y + i >>> 0, w += y < t ? 1 : 0, y = y + o >>> 0, w += y < o ? 1 : 0, y = y + p >>> 0, w += y < p ? 1 : 0, y = y + v >>> 0, w += y < v ? 1 : 0;\n    var S = e + r + n + h + A + w;\n    return S >>> 0;\n}\nQ.sum64_5_hi = q0;\nfunction K0(e, t, r, i, n, o, h, p, A, v) {\n    var w = t + i + o + p + v;\n    return w >>> 0;\n}\nQ.sum64_5_lo = K0;\nfunction H0(e, t, r) {\n    var i = t << 32 - r | e >>> r;\n    return i >>> 0;\n}\nQ.rotr64_hi = H0;\nfunction L0(e, t, r) {\n    var i = e << 32 - r | t >>> r;\n    return i >>> 0;\n}\nQ.rotr64_lo = L0;\nfunction z0(e, t, r) {\n    return e >>> r;\n}\nQ.shr64_hi = z0;\nfunction j0(e, t, r) {\n    var i = e << 32 - r | t >>> r;\n    return i >>> 0;\n}\nQ.shr64_lo = j0;\nvar or = {}, yf = Q, Q0 = xr;\nfunction qr() {\n    this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = \"big\", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;\n}\nor.BlockHash = qr, qr.prototype.update = function(t, r) {\n    if (t = yf.toArray(t, r), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {\n        t = this.pending;\n        var i = t.length % this._delta8;\n        this.pending = t.slice(t.length - i, t.length), this.pending.length === 0 && (this.pending = null), t = yf.join32(t, 0, t.length - i, this.endian);\n        for(var n = 0; n < t.length; n += this._delta32)this._update(t, n, n + this._delta32);\n    }\n    return this;\n}, qr.prototype.digest = function(t) {\n    return this.update(this._pad()), Q0(this.pending === null), this._digest(t);\n}, qr.prototype._pad = function() {\n    var t = this.pendingTotal, r = this._delta8, i = r - (t + this.padLength) % r, n = new Array(i + this.padLength);\n    n[0] = 128;\n    for(var o = 1; o < i; o++)n[o] = 0;\n    if (t <<= 3, this.endian === \"big\") {\n        for(var h = 8; h < this.padLength; h++)n[o++] = 0;\n        n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = t >>> 24 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 8 & 255, n[o++] = t & 255;\n    } else for(n[o++] = t & 255, n[o++] = t >>> 8 & 255, n[o++] = t >>> 16 & 255, n[o++] = t >>> 24 & 255, n[o++] = 0, n[o++] = 0, n[o++] = 0, n[o++] = 0, h = 8; h < this.padLength; h++)n[o++] = 0;\n    return n;\n};\nvar sr = {}, ae = {}, J0 = Q, ue = J0.rotr32;\nfunction G0(e, t, r, i) {\n    if (e === 0) return wf(t, r, i);\n    if (e === 1 || e === 3) return Mf(t, r, i);\n    if (e === 2) return xf(t, r, i);\n}\nae.ft_1 = G0;\nfunction wf(e, t, r) {\n    return e & t ^ ~e & r;\n}\nae.ch32 = wf;\nfunction xf(e, t, r) {\n    return e & t ^ e & r ^ t & r;\n}\nae.maj32 = xf;\nfunction Mf(e, t, r) {\n    return e ^ t ^ r;\n}\nae.p32 = Mf;\nfunction Y0(e) {\n    return ue(e, 2) ^ ue(e, 13) ^ ue(e, 22);\n}\nae.s0_256 = Y0;\nfunction V0(e) {\n    return ue(e, 6) ^ ue(e, 11) ^ ue(e, 25);\n}\nae.s1_256 = V0;\nfunction W0(e) {\n    return ue(e, 7) ^ ue(e, 18) ^ e >>> 3;\n}\nae.g0_256 = W0;\nfunction X0(e) {\n    return ue(e, 17) ^ ue(e, 19) ^ e >>> 10;\n}\nae.g1_256 = X0;\nvar ar = Q, $0 = or, Z0 = ae, Ti = ar.rotl32, Mr = ar.sum32, ta = ar.sum32_5, ea = Z0.ft_1, Ef = $0.BlockHash, ra = [\n    1518500249,\n    1859775393,\n    2400959708,\n    3395469782\n];\nfunction he() {\n    if (!(this instanceof he)) return new he;\n    Ef.call(this), this.h = [\n        1732584193,\n        4023233417,\n        2562383102,\n        271733878,\n        3285377520\n    ], this.W = new Array(80);\n}\nar.inherits(he, Ef);\nvar ia = he;\nhe.blockSize = 512, he.outSize = 160, he.hmacStrength = 80, he.padLength = 64, he.prototype._update = function(t, r) {\n    for(var i = this.W, n = 0; n < 16; n++)i[n] = t[r + n];\n    for(; n < i.length; n++)i[n] = Ti(i[n - 3] ^ i[n - 8] ^ i[n - 14] ^ i[n - 16], 1);\n    var o = this.h[0], h = this.h[1], p = this.h[2], A = this.h[3], v = this.h[4];\n    for(n = 0; n < i.length; n++){\n        var w = ~~(n / 20), y = ta(Ti(o, 5), ea(w, h, p, A), v, i[n], ra[w]);\n        v = A, A = p, p = Ti(h, 30), h = o, o = y;\n    }\n    this.h[0] = Mr(this.h[0], o), this.h[1] = Mr(this.h[1], h), this.h[2] = Mr(this.h[2], p), this.h[3] = Mr(this.h[3], A), this.h[4] = Mr(this.h[4], v);\n}, he.prototype._digest = function(t) {\n    return t === \"hex\" ? ar.toHex32(this.h, \"big\") : ar.split32(this.h, \"big\");\n};\nvar ur = Q, na = or, hr = ae, fa = xr, ie = ur.sum32, oa = ur.sum32_4, sa = ur.sum32_5, aa = hr.ch32, ua = hr.maj32, ha = hr.s0_256, ca = hr.s1_256, la = hr.g0_256, da = hr.g1_256, Sf = na.BlockHash, pa = [\n    1116352408,\n    1899447441,\n    3049323471,\n    3921009573,\n    961987163,\n    1508970993,\n    2453635748,\n    2870763221,\n    3624381080,\n    310598401,\n    607225278,\n    1426881987,\n    1925078388,\n    2162078206,\n    2614888103,\n    3248222580,\n    3835390401,\n    4022224774,\n    264347078,\n    604807628,\n    770255983,\n    1249150122,\n    1555081692,\n    1996064986,\n    2554220882,\n    2821834349,\n    2952996808,\n    3210313671,\n    3336571891,\n    3584528711,\n    113926993,\n    338241895,\n    666307205,\n    773529912,\n    1294757372,\n    1396182291,\n    1695183700,\n    1986661051,\n    2177026350,\n    2456956037,\n    2730485921,\n    2820302411,\n    3259730800,\n    3345764771,\n    3516065817,\n    3600352804,\n    4094571909,\n    275423344,\n    430227734,\n    506948616,\n    659060556,\n    883997877,\n    958139571,\n    1322822218,\n    1537002063,\n    1747873779,\n    1955562222,\n    2024104815,\n    2227730452,\n    2361852424,\n    2428436474,\n    2756734187,\n    3204031479,\n    3329325298\n];\nfunction ce() {\n    if (!(this instanceof ce)) return new ce;\n    Sf.call(this), this.h = [\n        1779033703,\n        3144134277,\n        1013904242,\n        2773480762,\n        1359893119,\n        2600822924,\n        528734635,\n        1541459225\n    ], this.k = pa, this.W = new Array(64);\n}\nur.inherits(ce, Sf);\nvar If = ce;\nce.blockSize = 512, ce.outSize = 256, ce.hmacStrength = 192, ce.padLength = 64, ce.prototype._update = function(t, r) {\n    for(var i = this.W, n = 0; n < 16; n++)i[n] = t[r + n];\n    for(; n < i.length; n++)i[n] = oa(da(i[n - 2]), i[n - 7], la(i[n - 15]), i[n - 16]);\n    var o = this.h[0], h = this.h[1], p = this.h[2], A = this.h[3], v = this.h[4], w = this.h[5], y = this.h[6], S = this.h[7];\n    for(fa(this.k.length === i.length), n = 0; n < i.length; n++){\n        var N = sa(S, ca(v), aa(v, w, y), this.k[n], i[n]), I = ie(ha(o), ua(o, h, p));\n        S = y, y = w, w = v, v = ie(A, N), A = p, p = h, h = o, o = ie(N, I);\n    }\n    this.h[0] = ie(this.h[0], o), this.h[1] = ie(this.h[1], h), this.h[2] = ie(this.h[2], p), this.h[3] = ie(this.h[3], A), this.h[4] = ie(this.h[4], v), this.h[5] = ie(this.h[5], w), this.h[6] = ie(this.h[6], y), this.h[7] = ie(this.h[7], S);\n}, ce.prototype._digest = function(t) {\n    return t === \"hex\" ? ur.toHex32(this.h, \"big\") : ur.split32(this.h, \"big\");\n};\nvar Di = Q, Nf = If;\nfunction ye() {\n    if (!(this instanceof ye)) return new ye;\n    Nf.call(this), this.h = [\n        3238371032,\n        914150663,\n        812702999,\n        4144912697,\n        4290775857,\n        1750603025,\n        1694076839,\n        3204075428\n    ];\n}\nDi.inherits(ye, Nf);\nvar va = ye;\nye.blockSize = 512, ye.outSize = 224, ye.hmacStrength = 192, ye.padLength = 64, ye.prototype._digest = function(t) {\n    return t === \"hex\" ? Di.toHex32(this.h.slice(0, 7), \"big\") : Di.split32(this.h.slice(0, 7), \"big\");\n};\nvar jt = Q, ga = or, ma = xr, le = jt.rotr64_hi, de = jt.rotr64_lo, _f = jt.shr64_hi, Bf = jt.shr64_lo, Be = jt.sum64, Fi = jt.sum64_hi, Ui = jt.sum64_lo, Aa = jt.sum64_4_hi, ba = jt.sum64_4_lo, ya = jt.sum64_5_hi, wa = jt.sum64_5_lo, Cf = ga.BlockHash, xa = [\n    1116352408,\n    3609767458,\n    1899447441,\n    602891725,\n    3049323471,\n    3964484399,\n    3921009573,\n    2173295548,\n    961987163,\n    4081628472,\n    1508970993,\n    3053834265,\n    2453635748,\n    2937671579,\n    2870763221,\n    3664609560,\n    3624381080,\n    2734883394,\n    310598401,\n    1164996542,\n    607225278,\n    1323610764,\n    1426881987,\n    3590304994,\n    1925078388,\n    4068182383,\n    2162078206,\n    991336113,\n    2614888103,\n    633803317,\n    3248222580,\n    3479774868,\n    3835390401,\n    2666613458,\n    4022224774,\n    944711139,\n    264347078,\n    2341262773,\n    604807628,\n    2007800933,\n    770255983,\n    1495990901,\n    1249150122,\n    1856431235,\n    1555081692,\n    3175218132,\n    1996064986,\n    2198950837,\n    2554220882,\n    3999719339,\n    2821834349,\n    766784016,\n    2952996808,\n    2566594879,\n    3210313671,\n    3203337956,\n    3336571891,\n    1034457026,\n    3584528711,\n    2466948901,\n    113926993,\n    3758326383,\n    338241895,\n    168717936,\n    666307205,\n    1188179964,\n    773529912,\n    1546045734,\n    1294757372,\n    1522805485,\n    1396182291,\n    2643833823,\n    1695183700,\n    2343527390,\n    1986661051,\n    1014477480,\n    2177026350,\n    1206759142,\n    2456956037,\n    344077627,\n    2730485921,\n    1290863460,\n    2820302411,\n    3158454273,\n    3259730800,\n    3505952657,\n    3345764771,\n    106217008,\n    3516065817,\n    3606008344,\n    3600352804,\n    1432725776,\n    4094571909,\n    1467031594,\n    275423344,\n    851169720,\n    430227734,\n    3100823752,\n    506948616,\n    1363258195,\n    659060556,\n    3750685593,\n    883997877,\n    3785050280,\n    958139571,\n    3318307427,\n    1322822218,\n    3812723403,\n    1537002063,\n    2003034995,\n    1747873779,\n    3602036899,\n    1955562222,\n    1575990012,\n    2024104815,\n    1125592928,\n    2227730452,\n    2716904306,\n    2361852424,\n    442776044,\n    2428436474,\n    593698344,\n    2756734187,\n    3733110249,\n    3204031479,\n    2999351573,\n    3329325298,\n    3815920427,\n    3391569614,\n    3928383900,\n    3515267271,\n    566280711,\n    3940187606,\n    3454069534,\n    4118630271,\n    4000239992,\n    116418474,\n    1914138554,\n    174292421,\n    2731055270,\n    289380356,\n    3203993006,\n    460393269,\n    320620315,\n    685471733,\n    587496836,\n    852142971,\n    1086792851,\n    1017036298,\n    365543100,\n    1126000580,\n    2618297676,\n    1288033470,\n    3409855158,\n    1501505948,\n    4234509866,\n    1607167915,\n    987167468,\n    1816402316,\n    1246189591\n];\nfunction ne() {\n    if (!(this instanceof ne)) return new ne;\n    Cf.call(this), this.h = [\n        1779033703,\n        4089235720,\n        3144134277,\n        2227873595,\n        1013904242,\n        4271175723,\n        2773480762,\n        1595750129,\n        1359893119,\n        2917565137,\n        2600822924,\n        725511199,\n        528734635,\n        4215389547,\n        1541459225,\n        327033209\n    ], this.k = xa, this.W = new Array(160);\n}\njt.inherits(ne, Cf);\nvar Rf = ne;\nne.blockSize = 1024, ne.outSize = 512, ne.hmacStrength = 192, ne.padLength = 128, ne.prototype._prepareBlock = function(t, r) {\n    for(var i = this.W, n = 0; n < 32; n++)i[n] = t[r + n];\n    for(; n < i.length; n += 2){\n        var o = Pa(i[n - 4], i[n - 3]), h = Ta(i[n - 4], i[n - 3]), p = i[n - 14], A = i[n - 13], v = Ra(i[n - 30], i[n - 29]), w = Oa(i[n - 30], i[n - 29]), y = i[n - 32], S = i[n - 31];\n        i[n] = Aa(o, h, p, A, v, w, y, S), i[n + 1] = ba(o, h, p, A, v, w, y, S);\n    }\n}, ne.prototype._update = function(t, r) {\n    this._prepareBlock(t, r);\n    var i = this.W, n = this.h[0], o = this.h[1], h = this.h[2], p = this.h[3], A = this.h[4], v = this.h[5], w = this.h[6], y = this.h[7], S = this.h[8], N = this.h[9], I = this.h[10], C = this.h[11], D = this.h[12], U = this.h[13], J = this.h[14], Bt = this.h[15];\n    ma(this.k.length === i.length);\n    for(var G = 0; G < i.length; G += 2){\n        var H = J, L = Bt, Pt = Ba(S, N), W = Ca(S, N), Rt = Ma(S, N, I, C, D), Vt = Ea(S, N, I, C, D, U), Y = this.k[G], Wt = this.k[G + 1], b = i[G], f = i[G + 1], a = ya(H, L, Pt, W, Rt, Vt, Y, Wt, b, f), c = wa(H, L, Pt, W, Rt, Vt, Y, Wt, b, f);\n        H = Na(n, o), L = _a(n, o), Pt = Sa(n, o, h, p, A), W = Ia(n, o, h, p, A, v);\n        var d = Fi(H, L, Pt, W), m = Ui(H, L, Pt, W);\n        J = D, Bt = U, D = I, U = C, I = S, C = N, S = Fi(w, y, a, c), N = Ui(y, y, a, c), w = A, y = v, A = h, v = p, h = n, p = o, n = Fi(a, c, d, m), o = Ui(a, c, d, m);\n    }\n    Be(this.h, 0, n, o), Be(this.h, 2, h, p), Be(this.h, 4, A, v), Be(this.h, 6, w, y), Be(this.h, 8, S, N), Be(this.h, 10, I, C), Be(this.h, 12, D, U), Be(this.h, 14, J, Bt);\n}, ne.prototype._digest = function(t) {\n    return t === \"hex\" ? jt.toHex32(this.h, \"big\") : jt.split32(this.h, \"big\");\n};\nfunction Ma(e, t, r, i, n) {\n    var o = e & r ^ ~e & n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ea(e, t, r, i, n, o) {\n    var h = t & i ^ ~t & o;\n    return h < 0 && (h += 4294967296), h;\n}\nfunction Sa(e, t, r, i, n) {\n    var o = e & r ^ e & n ^ r & n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ia(e, t, r, i, n, o) {\n    var h = t & i ^ t & o ^ i & o;\n    return h < 0 && (h += 4294967296), h;\n}\nfunction Na(e, t) {\n    var r = le(e, t, 28), i = le(t, e, 2), n = le(t, e, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction _a(e, t) {\n    var r = de(e, t, 28), i = de(t, e, 2), n = de(t, e, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ba(e, t) {\n    var r = le(e, t, 14), i = le(e, t, 18), n = le(t, e, 9), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ca(e, t) {\n    var r = de(e, t, 14), i = de(e, t, 18), n = de(t, e, 9), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ra(e, t) {\n    var r = le(e, t, 1), i = le(e, t, 8), n = _f(e, t, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Oa(e, t) {\n    var r = de(e, t, 1), i = de(e, t, 8), n = Bf(e, t, 7), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Pa(e, t) {\n    var r = le(e, t, 19), i = le(t, e, 29), n = _f(e, t, 6), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nfunction Ta(e, t) {\n    var r = de(e, t, 19), i = de(t, e, 29), n = Bf(e, t, 6), o = r ^ i ^ n;\n    return o < 0 && (o += 4294967296), o;\n}\nvar ki = Q, Of = Rf;\nfunction we() {\n    if (!(this instanceof we)) return new we;\n    Of.call(this), this.h = [\n        3418070365,\n        3238371032,\n        1654270250,\n        914150663,\n        2438529370,\n        812702999,\n        355462360,\n        4144912697,\n        1731405415,\n        4290775857,\n        2394180231,\n        1750603025,\n        3675008525,\n        1694076839,\n        1203062813,\n        3204075428\n    ];\n}\nki.inherits(we, Of);\nvar Da = we;\nwe.blockSize = 1024, we.outSize = 384, we.hmacStrength = 192, we.padLength = 128, we.prototype._digest = function(t) {\n    return t === \"hex\" ? ki.toHex32(this.h.slice(0, 12), \"big\") : ki.split32(this.h.slice(0, 12), \"big\");\n}, sr.sha1 = ia, sr.sha224 = va, sr.sha256 = If, sr.sha384 = Da, sr.sha512 = Rf;\nvar Pf = {}, Xe = Q, Fa = or, Kr = Xe.rotl32, Tf = Xe.sum32, Er = Xe.sum32_3, Df = Xe.sum32_4, Ff = Fa.BlockHash;\nfunction pe() {\n    if (!(this instanceof pe)) return new pe;\n    Ff.call(this), this.h = [\n        1732584193,\n        4023233417,\n        2562383102,\n        271733878,\n        3285377520\n    ], this.endian = \"little\";\n}\nXe.inherits(pe, Ff), Pf.ripemd160 = pe, pe.blockSize = 512, pe.outSize = 160, pe.hmacStrength = 192, pe.padLength = 64, pe.prototype._update = function(t, r) {\n    for(var i = this.h[0], n = this.h[1], o = this.h[2], h = this.h[3], p = this.h[4], A = i, v = n, w = o, y = h, S = p, N = 0; N < 80; N++){\n        var I = Tf(Kr(Df(i, Uf(N, n, o, h), t[qa[N] + r], Ua(N)), Ha[N]), p);\n        i = p, p = h, h = Kr(o, 10), o = n, n = I, I = Tf(Kr(Df(A, Uf(79 - N, v, w, y), t[Ka[N] + r], ka(N)), La[N]), S), A = S, S = y, y = Kr(w, 10), w = v, v = I;\n    }\n    I = Er(this.h[1], o, y), this.h[1] = Er(this.h[2], h, S), this.h[2] = Er(this.h[3], p, A), this.h[3] = Er(this.h[4], i, v), this.h[4] = Er(this.h[0], n, w), this.h[0] = I;\n}, pe.prototype._digest = function(t) {\n    return t === \"hex\" ? Xe.toHex32(this.h, \"little\") : Xe.split32(this.h, \"little\");\n};\nfunction Uf(e, t, r, i) {\n    return e <= 15 ? t ^ r ^ i : e <= 31 ? t & r | ~t & i : e <= 47 ? (t | ~r) ^ i : e <= 63 ? t & i | r & ~i : t ^ (r | ~i);\n}\nfunction Ua(e) {\n    return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;\n}\nfunction ka(e) {\n    return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;\n}\nvar qa = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    7,\n    4,\n    13,\n    1,\n    10,\n    6,\n    15,\n    3,\n    12,\n    0,\n    9,\n    5,\n    2,\n    14,\n    11,\n    8,\n    3,\n    10,\n    14,\n    4,\n    9,\n    15,\n    8,\n    1,\n    2,\n    7,\n    0,\n    6,\n    13,\n    11,\n    5,\n    12,\n    1,\n    9,\n    11,\n    10,\n    0,\n    8,\n    12,\n    4,\n    13,\n    3,\n    7,\n    15,\n    14,\n    5,\n    6,\n    2,\n    4,\n    0,\n    5,\n    9,\n    7,\n    12,\n    2,\n    10,\n    14,\n    1,\n    3,\n    8,\n    11,\n    6,\n    15,\n    13\n], Ka = [\n    5,\n    14,\n    7,\n    0,\n    9,\n    2,\n    11,\n    4,\n    13,\n    6,\n    15,\n    8,\n    1,\n    10,\n    3,\n    12,\n    6,\n    11,\n    3,\n    7,\n    0,\n    13,\n    5,\n    10,\n    14,\n    15,\n    8,\n    12,\n    4,\n    9,\n    1,\n    2,\n    15,\n    5,\n    1,\n    3,\n    7,\n    14,\n    6,\n    9,\n    11,\n    8,\n    12,\n    2,\n    10,\n    0,\n    4,\n    13,\n    8,\n    6,\n    4,\n    1,\n    3,\n    11,\n    15,\n    0,\n    5,\n    12,\n    2,\n    13,\n    9,\n    7,\n    10,\n    14,\n    12,\n    15,\n    10,\n    4,\n    1,\n    5,\n    8,\n    7,\n    6,\n    2,\n    13,\n    14,\n    0,\n    3,\n    9,\n    11\n], Ha = [\n    11,\n    14,\n    15,\n    12,\n    5,\n    8,\n    7,\n    9,\n    11,\n    13,\n    14,\n    15,\n    6,\n    7,\n    9,\n    8,\n    7,\n    6,\n    8,\n    13,\n    11,\n    9,\n    7,\n    15,\n    7,\n    12,\n    15,\n    9,\n    11,\n    7,\n    13,\n    12,\n    11,\n    13,\n    6,\n    7,\n    14,\n    9,\n    13,\n    15,\n    14,\n    8,\n    13,\n    6,\n    5,\n    12,\n    7,\n    5,\n    11,\n    12,\n    14,\n    15,\n    14,\n    15,\n    9,\n    8,\n    9,\n    14,\n    5,\n    6,\n    8,\n    6,\n    5,\n    12,\n    9,\n    15,\n    5,\n    11,\n    6,\n    8,\n    13,\n    12,\n    5,\n    12,\n    13,\n    14,\n    11,\n    8,\n    5,\n    6\n], La = [\n    8,\n    9,\n    9,\n    11,\n    13,\n    15,\n    15,\n    5,\n    7,\n    7,\n    8,\n    11,\n    14,\n    14,\n    12,\n    6,\n    9,\n    13,\n    15,\n    7,\n    12,\n    8,\n    9,\n    11,\n    7,\n    7,\n    12,\n    7,\n    6,\n    15,\n    13,\n    11,\n    9,\n    7,\n    15,\n    11,\n    8,\n    6,\n    6,\n    14,\n    12,\n    13,\n    5,\n    14,\n    13,\n    13,\n    7,\n    5,\n    15,\n    5,\n    8,\n    11,\n    14,\n    14,\n    6,\n    14,\n    6,\n    9,\n    12,\n    9,\n    12,\n    5,\n    15,\n    8,\n    8,\n    5,\n    12,\n    9,\n    12,\n    5,\n    14,\n    6,\n    8,\n    13,\n    6,\n    5,\n    15,\n    13,\n    11,\n    11\n], za = Q, ja = xr;\nfunction cr(e, t, r) {\n    if (!(this instanceof cr)) return new cr(e, t, r);\n    this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(za.toArray(t, r));\n}\nvar Qa = cr;\ncr.prototype._init = function(t) {\n    t.length > this.blockSize && (t = new this.Hash().update(t).digest()), ja(t.length <= this.blockSize);\n    for(var r = t.length; r < this.blockSize; r++)t.push(0);\n    for(r = 0; r < t.length; r++)t[r] ^= 54;\n    for(this.inner = new this.Hash().update(t), r = 0; r < t.length; r++)t[r] ^= 106;\n    this.outer = new this.Hash().update(t);\n}, cr.prototype.update = function(t, r) {\n    return this.inner.update(t, r), this;\n}, cr.prototype.digest = function(t) {\n    return this.outer.update(this.inner.digest()), this.outer.digest(t);\n}, function(e) {\n    var t = e;\n    t.utils = Q, t.common = or, t.sha = sr, t.ripemd = Pf, t.hmac = Qa, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;\n}(se);\nfunction lr(e, t, r) {\n    return r = {\n        path: t,\n        exports: {},\n        require: function(i, n) {\n            return Ja(i, n ?? r.path);\n        }\n    }, e(r, r.exports), r.exports;\n}\nfunction Ja() {\n    throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\");\n}\nvar qi = kf;\nfunction kf(e, t) {\n    if (!e) throw new Error(t || \"Assertion failed\");\n}\nkf.equal = function(t, r, i) {\n    if (t != r) throw new Error(i || \"Assertion failed: \" + t + \" != \" + r);\n};\nvar fe = lr(function(e, t) {\n    var r = t;\n    function i(h, p) {\n        if (Array.isArray(h)) return h.slice();\n        if (!h) return [];\n        var A = [];\n        if (typeof h != \"string\") {\n            for(var v = 0; v < h.length; v++)A[v] = h[v] | 0;\n            return A;\n        }\n        if (p === \"hex\") {\n            h = h.replace(/[^a-z0-9]+/ig, \"\"), h.length % 2 !== 0 && (h = \"0\" + h);\n            for(var v = 0; v < h.length; v += 2)A.push(parseInt(h[v] + h[v + 1], 16));\n        } else for(var v = 0; v < h.length; v++){\n            var w = h.charCodeAt(v), y = w >> 8, S = w & 255;\n            y ? A.push(y, S) : A.push(S);\n        }\n        return A;\n    }\n    r.toArray = i;\n    function n(h) {\n        return h.length === 1 ? \"0\" + h : h;\n    }\n    r.zero2 = n;\n    function o(h) {\n        for(var p = \"\", A = 0; A < h.length; A++)p += n(h[A].toString(16));\n        return p;\n    }\n    r.toHex = o, r.encode = function(p, A) {\n        return A === \"hex\" ? o(p) : p;\n    };\n}), Gt = lr(function(e, t) {\n    var r = t;\n    r.assert = qi, r.toArray = fe.toArray, r.zero2 = fe.zero2, r.toHex = fe.toHex, r.encode = fe.encode;\n    function i(A, v, w) {\n        var y = new Array(Math.max(A.bitLength(), w) + 1);\n        y.fill(0);\n        for(var S = 1 << v + 1, N = A.clone(), I = 0; I < y.length; I++){\n            var C, D = N.andln(S - 1);\n            N.isOdd() ? (D > (S >> 1) - 1 ? C = (S >> 1) - D : C = D, N.isubn(C)) : C = 0, y[I] = C, N.iushrn(1);\n        }\n        return y;\n    }\n    r.getNAF = i;\n    function n(A, v) {\n        var w = [\n            [],\n            []\n        ];\n        A = A.clone(), v = v.clone();\n        for(var y = 0, S = 0, N; A.cmpn(-y) > 0 || v.cmpn(-S) > 0;){\n            var I = A.andln(3) + y & 3, C = v.andln(3) + S & 3;\n            I === 3 && (I = -1), C === 3 && (C = -1);\n            var D;\n            I & 1 ? (N = A.andln(7) + y & 7, (N === 3 || N === 5) && C === 2 ? D = -I : D = I) : D = 0, w[0].push(D);\n            var U;\n            C & 1 ? (N = v.andln(7) + S & 7, (N === 3 || N === 5) && I === 2 ? U = -C : U = C) : U = 0, w[1].push(U), 2 * y === D + 1 && (y = 1 - y), 2 * S === U + 1 && (S = 1 - S), A.iushrn(1), v.iushrn(1);\n        }\n        return w;\n    }\n    r.getJSF = n;\n    function o(A, v, w) {\n        var y = \"_\" + v;\n        A.prototype[v] = function() {\n            return this[y] !== void 0 ? this[y] : this[y] = w.call(this);\n        };\n    }\n    r.cachedProperty = o;\n    function h(A) {\n        return typeof A == \"string\" ? r.toArray(A, \"hex\") : A;\n    }\n    r.parseBytes = h;\n    function p(A) {\n        return new K(A, \"hex\", \"le\");\n    }\n    r.intFromLE = p;\n}), Hr = Gt.getNAF, Ga = Gt.getJSF, Lr = Gt.assert;\nfunction Ce(e, t) {\n    this.type = e, this.p = new K(t.p, 16), this.red = t.prime ? K.red(t.prime) : K.mont(this.p), this.zero = new K(0).toRed(this.red), this.one = new K(1).toRed(this.red), this.two = new K(2).toRed(this.red), this.n = t.n && new K(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;\n    var r = this.n && this.p.div(this.n);\n    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));\n}\nvar $e = Ce;\nCe.prototype.point = function() {\n    throw new Error(\"Not implemented\");\n}, Ce.prototype.validate = function() {\n    throw new Error(\"Not implemented\");\n}, Ce.prototype._fixedNafMul = function(t, r) {\n    Lr(t.precomputed);\n    var i = t._getDoubles(), n = Hr(r, 1, this._bitLength), o = (1 << i.step + 1) - (i.step % 2 === 0 ? 2 : 1);\n    o /= 3;\n    var h = [], p, A;\n    for(p = 0; p < n.length; p += i.step){\n        A = 0;\n        for(var v = p + i.step - 1; v >= p; v--)A = (A << 1) + n[v];\n        h.push(A);\n    }\n    for(var w = this.jpoint(null, null, null), y = this.jpoint(null, null, null), S = o; S > 0; S--){\n        for(p = 0; p < h.length; p++)A = h[p], A === S ? y = y.mixedAdd(i.points[p]) : A === -S && (y = y.mixedAdd(i.points[p].neg()));\n        w = w.add(y);\n    }\n    return w.toP();\n}, Ce.prototype._wnafMul = function(t, r) {\n    var i = 4, n = t._getNAFPoints(i);\n    i = n.wnd;\n    for(var o = n.points, h = Hr(r, i, this._bitLength), p = this.jpoint(null, null, null), A = h.length - 1; A >= 0; A--){\n        for(var v = 0; A >= 0 && h[A] === 0; A--)v++;\n        if (A >= 0 && v++, p = p.dblp(v), A < 0) break;\n        var w = h[A];\n        Lr(w !== 0), t.type === \"affine\" ? w > 0 ? p = p.mixedAdd(o[w - 1 >> 1]) : p = p.mixedAdd(o[-w - 1 >> 1].neg()) : w > 0 ? p = p.add(o[w - 1 >> 1]) : p = p.add(o[-w - 1 >> 1].neg());\n    }\n    return t.type === \"affine\" ? p.toP() : p;\n}, Ce.prototype._wnafMulAdd = function(t, r, i, n, o) {\n    var h = this._wnafT1, p = this._wnafT2, A = this._wnafT3, v = 0, w, y, S;\n    for(w = 0; w < n; w++){\n        S = r[w];\n        var N = S._getNAFPoints(t);\n        h[w] = N.wnd, p[w] = N.points;\n    }\n    for(w = n - 1; w >= 1; w -= 2){\n        var I = w - 1, C = w;\n        if (h[I] !== 1 || h[C] !== 1) {\n            A[I] = Hr(i[I], h[I], this._bitLength), A[C] = Hr(i[C], h[C], this._bitLength), v = Math.max(A[I].length, v), v = Math.max(A[C].length, v);\n            continue;\n        }\n        var D = [\n            r[I],\n            null,\n            null,\n            r[C]\n        ];\n        r[I].y.cmp(r[C].y) === 0 ? (D[1] = r[I].add(r[C]), D[2] = r[I].toJ().mixedAdd(r[C].neg())) : r[I].y.cmp(r[C].y.redNeg()) === 0 ? (D[1] = r[I].toJ().mixedAdd(r[C]), D[2] = r[I].add(r[C].neg())) : (D[1] = r[I].toJ().mixedAdd(r[C]), D[2] = r[I].toJ().mixedAdd(r[C].neg()));\n        var U = [\n            -3,\n            -1,\n            -5,\n            -7,\n            0,\n            7,\n            5,\n            1,\n            3\n        ], J = Ga(i[I], i[C]);\n        for(v = Math.max(J[0].length, v), A[I] = new Array(v), A[C] = new Array(v), y = 0; y < v; y++){\n            var Bt = J[0][y] | 0, G = J[1][y] | 0;\n            A[I][y] = U[(Bt + 1) * 3 + (G + 1)], A[C][y] = 0, p[I] = D;\n        }\n    }\n    var H = this.jpoint(null, null, null), L = this._wnafT4;\n    for(w = v; w >= 0; w--){\n        for(var Pt = 0; w >= 0;){\n            var W = !0;\n            for(y = 0; y < n; y++)L[y] = A[y][w] | 0, L[y] !== 0 && (W = !1);\n            if (!W) break;\n            Pt++, w--;\n        }\n        if (w >= 0 && Pt++, H = H.dblp(Pt), w < 0) break;\n        for(y = 0; y < n; y++){\n            var Rt = L[y];\n            Rt !== 0 && (Rt > 0 ? S = p[y][Rt - 1 >> 1] : Rt < 0 && (S = p[y][-Rt - 1 >> 1].neg()), S.type === \"affine\" ? H = H.mixedAdd(S) : H = H.add(S));\n        }\n    }\n    for(w = 0; w < n; w++)p[w] = null;\n    return o ? H : H.toP();\n};\nfunction Zt(e, t) {\n    this.curve = e, this.type = t, this.precomputed = null;\n}\nCe.BasePoint = Zt, Zt.prototype.eq = function() {\n    throw new Error(\"Not implemented\");\n}, Zt.prototype.validate = function() {\n    return this.curve.validate(this);\n}, Ce.prototype.decodePoint = function(t, r) {\n    t = Gt.toArray(t, r);\n    var i = this.p.byteLength();\n    if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * i) {\n        t[0] === 6 ? Lr(t[t.length - 1] % 2 === 0) : t[0] === 7 && Lr(t[t.length - 1] % 2 === 1);\n        var n = this.point(t.slice(1, 1 + i), t.slice(1 + i, 1 + 2 * i));\n        return n;\n    } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === i) return this.pointFromX(t.slice(1, 1 + i), t[0] === 3);\n    throw new Error(\"Unknown point format\");\n}, Zt.prototype.encodeCompressed = function(t) {\n    return this.encode(t, !0);\n}, Zt.prototype._encode = function(t) {\n    var r = this.curve.p.byteLength(), i = this.getX().toArray(\"be\", r);\n    return t ? [\n        this.getY().isEven() ? 2 : 3\n    ].concat(i) : [\n        4\n    ].concat(i, this.getY().toArray(\"be\", r));\n}, Zt.prototype.encode = function(t, r) {\n    return Gt.encode(this._encode(r), t);\n}, Zt.prototype.precompute = function(t) {\n    if (this.precomputed) return this;\n    var r = {\n        doubles: null,\n        naf: null,\n        beta: null\n    };\n    return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, t), r.beta = this._getBeta(), this.precomputed = r, this;\n}, Zt.prototype._hasDoubles = function(t) {\n    if (!this.precomputed) return !1;\n    var r = this.precomputed.doubles;\n    return r ? r.points.length >= Math.ceil((t.bitLength() + 1) / r.step) : !1;\n}, Zt.prototype._getDoubles = function(t, r) {\n    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n    for(var i = [\n        this\n    ], n = this, o = 0; o < r; o += t){\n        for(var h = 0; h < t; h++)n = n.dbl();\n        i.push(n);\n    }\n    return {\n        step: t,\n        points: i\n    };\n}, Zt.prototype._getNAFPoints = function(t) {\n    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n    for(var r = [\n        this\n    ], i = (1 << t) - 1, n = i === 1 ? null : this.dbl(), o = 1; o < i; o++)r[o] = r[o - 1].add(n);\n    return {\n        wnd: t,\n        points: r\n    };\n}, Zt.prototype._getBeta = function() {\n    return null;\n}, Zt.prototype.dblp = function(t) {\n    for(var r = this, i = 0; i < t; i++)r = r.dbl();\n    return r;\n};\nvar Ki = lr(function(e) {\n    typeof Object.create == \"function\" ? e.exports = function(r, i) {\n        i && (r.super_ = i, r.prototype = Object.create(i.prototype, {\n            constructor: {\n                value: r,\n                enumerable: !1,\n                writable: !0,\n                configurable: !0\n            }\n        }));\n    } : e.exports = function(r, i) {\n        if (i) {\n            r.super_ = i;\n            var n = function() {};\n            n.prototype = i.prototype, r.prototype = new n, r.prototype.constructor = r;\n        }\n    };\n}), Ya = Gt.assert;\nfunction te(e) {\n    $e.call(this, \"short\", e), this.a = new K(e.a, 16).toRed(this.red), this.b = new K(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);\n}\nKi(te, $e);\nvar Va = te;\nte.prototype._getEndomorphism = function(t) {\n    if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {\n        var r, i;\n        if (t.beta) r = new K(t.beta, 16).toRed(this.red);\n        else {\n            var n = this._getEndoRoots(this.p);\n            r = n[0].cmp(n[1]) < 0 ? n[0] : n[1], r = r.toRed(this.red);\n        }\n        if (t.lambda) i = new K(t.lambda, 16);\n        else {\n            var o = this._getEndoRoots(this.n);\n            this.g.mul(o[0]).x.cmp(this.g.x.redMul(r)) === 0 ? i = o[0] : (i = o[1], Ya(this.g.mul(i).x.cmp(this.g.x.redMul(r)) === 0));\n        }\n        var h;\n        return t.basis ? h = t.basis.map(function(p) {\n            return {\n                a: new K(p.a, 16),\n                b: new K(p.b, 16)\n            };\n        }) : h = this._getEndoBasis(i), {\n            beta: r,\n            lambda: i,\n            basis: h\n        };\n    }\n}, te.prototype._getEndoRoots = function(t) {\n    var r = t === this.p ? this.red : K.mont(t), i = new K(2).toRed(r).redInvm(), n = i.redNeg(), o = new K(3).toRed(r).redNeg().redSqrt().redMul(i), h = n.redAdd(o).fromRed(), p = n.redSub(o).fromRed();\n    return [\n        h,\n        p\n    ];\n}, te.prototype._getEndoBasis = function(t) {\n    for(var r = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), i = t, n = this.n.clone(), o = new K(1), h = new K(0), p = new K(0), A = new K(1), v, w, y, S, N, I, C, D = 0, U, J; i.cmpn(0) !== 0;){\n        var Bt = n.div(i);\n        U = n.sub(Bt.mul(i)), J = p.sub(Bt.mul(o));\n        var G = A.sub(Bt.mul(h));\n        if (!y && U.cmp(r) < 0) v = C.neg(), w = o, y = U.neg(), S = J;\n        else if (y && ++D === 2) break;\n        C = U, n = i, i = U, p = o, o = J, A = h, h = G;\n    }\n    N = U.neg(), I = J;\n    var H = y.sqr().add(S.sqr()), L = N.sqr().add(I.sqr());\n    return L.cmp(H) >= 0 && (N = v, I = w), y.negative && (y = y.neg(), S = S.neg()), N.negative && (N = N.neg(), I = I.neg()), [\n        {\n            a: y,\n            b: S\n        },\n        {\n            a: N,\n            b: I\n        }\n    ];\n}, te.prototype._endoSplit = function(t) {\n    var r = this.endo.basis, i = r[0], n = r[1], o = n.b.mul(t).divRound(this.n), h = i.b.neg().mul(t).divRound(this.n), p = o.mul(i.a), A = h.mul(n.a), v = o.mul(i.b), w = h.mul(n.b), y = t.sub(p).sub(A), S = v.add(w).neg();\n    return {\n        k1: y,\n        k2: S\n    };\n}, te.prototype.pointFromX = function(t, r) {\n    t = new K(t, 16), t.red || (t = t.toRed(this.red));\n    var i = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), n = i.redSqrt();\n    if (n.redSqr().redSub(i).cmp(this.zero) !== 0) throw new Error(\"invalid point\");\n    var o = n.fromRed().isOdd();\n    return (r && !o || !r && o) && (n = n.redNeg()), this.point(t, n);\n}, te.prototype.validate = function(t) {\n    if (t.inf) return !0;\n    var r = t.x, i = t.y, n = this.a.redMul(r), o = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);\n    return i.redSqr().redISub(o).cmpn(0) === 0;\n}, te.prototype._endoWnafMulAdd = function(t, r, i) {\n    for(var n = this._endoWnafT1, o = this._endoWnafT2, h = 0; h < t.length; h++){\n        var p = this._endoSplit(r[h]), A = t[h], v = A._getBeta();\n        p.k1.negative && (p.k1.ineg(), A = A.neg(!0)), p.k2.negative && (p.k2.ineg(), v = v.neg(!0)), n[h * 2] = A, n[h * 2 + 1] = v, o[h * 2] = p.k1, o[h * 2 + 1] = p.k2;\n    }\n    for(var w = this._wnafMulAdd(1, n, o, h * 2, i), y = 0; y < h * 2; y++)n[y] = null, o[y] = null;\n    return w;\n};\nfunction Dt(e, t, r, i) {\n    $e.BasePoint.call(this, e, \"affine\"), t === null && r === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new K(t, 16), this.y = new K(r, 16), i && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);\n}\nKi(Dt, $e.BasePoint), te.prototype.point = function(t, r, i) {\n    return new Dt(this, t, r, i);\n}, te.prototype.pointFromJSON = function(t, r) {\n    return Dt.fromJSON(this, t, r);\n}, Dt.prototype._getBeta = function() {\n    if (this.curve.endo) {\n        var t = this.precomputed;\n        if (t && t.beta) return t.beta;\n        var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n        if (t) {\n            var i = this.curve, n = function(o) {\n                return i.point(o.x.redMul(i.endo.beta), o.y);\n            };\n            t.beta = r, r.precomputed = {\n                beta: null,\n                naf: t.naf && {\n                    wnd: t.naf.wnd,\n                    points: t.naf.points.map(n)\n                },\n                doubles: t.doubles && {\n                    step: t.doubles.step,\n                    points: t.doubles.points.map(n)\n                }\n            };\n        }\n        return r;\n    }\n}, Dt.prototype.toJSON = function() {\n    return this.precomputed ? [\n        this.x,\n        this.y,\n        this.precomputed && {\n            doubles: this.precomputed.doubles && {\n                step: this.precomputed.doubles.step,\n                points: this.precomputed.doubles.points.slice(1)\n            },\n            naf: this.precomputed.naf && {\n                wnd: this.precomputed.naf.wnd,\n                points: this.precomputed.naf.points.slice(1)\n            }\n        }\n    ] : [\n        this.x,\n        this.y\n    ];\n}, Dt.fromJSON = function(t, r, i) {\n    typeof r == \"string\" && (r = JSON.parse(r));\n    var n = t.point(r[0], r[1], i);\n    if (!r[2]) return n;\n    function o(p) {\n        return t.point(p[0], p[1], i);\n    }\n    var h = r[2];\n    return n.precomputed = {\n        beta: null,\n        doubles: h.doubles && {\n            step: h.doubles.step,\n            points: [\n                n\n            ].concat(h.doubles.points.map(o))\n        },\n        naf: h.naf && {\n            wnd: h.naf.wnd,\n            points: [\n                n\n            ].concat(h.naf.points.map(o))\n        }\n    }, n;\n}, Dt.prototype.inspect = function() {\n    return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n}, Dt.prototype.isInfinity = function() {\n    return this.inf;\n}, Dt.prototype.add = function(t) {\n    if (this.inf) return t;\n    if (t.inf) return this;\n    if (this.eq(t)) return this.dbl();\n    if (this.neg().eq(t)) return this.curve.point(null, null);\n    if (this.x.cmp(t.x) === 0) return this.curve.point(null, null);\n    var r = this.y.redSub(t.y);\n    r.cmpn(0) !== 0 && (r = r.redMul(this.x.redSub(t.x).redInvm()));\n    var i = r.redSqr().redISub(this.x).redISub(t.x), n = r.redMul(this.x.redSub(i)).redISub(this.y);\n    return this.curve.point(i, n);\n}, Dt.prototype.dbl = function() {\n    if (this.inf) return this;\n    var t = this.y.redAdd(this.y);\n    if (t.cmpn(0) === 0) return this.curve.point(null, null);\n    var r = this.curve.a, i = this.x.redSqr(), n = t.redInvm(), o = i.redAdd(i).redIAdd(i).redIAdd(r).redMul(n), h = o.redSqr().redISub(this.x.redAdd(this.x)), p = o.redMul(this.x.redSub(h)).redISub(this.y);\n    return this.curve.point(h, p);\n}, Dt.prototype.getX = function() {\n    return this.x.fromRed();\n}, Dt.prototype.getY = function() {\n    return this.y.fromRed();\n}, Dt.prototype.mul = function(t) {\n    return t = new K(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([\n        this\n    ], [\n        t\n    ]) : this.curve._wnafMul(this, t);\n}, Dt.prototype.mulAdd = function(t, r, i) {\n    var n = [\n        this,\n        r\n    ], o = [\n        t,\n        i\n    ];\n    return this.curve.endo ? this.curve._endoWnafMulAdd(n, o) : this.curve._wnafMulAdd(1, n, o, 2);\n}, Dt.prototype.jmulAdd = function(t, r, i) {\n    var n = [\n        this,\n        r\n    ], o = [\n        t,\n        i\n    ];\n    return this.curve.endo ? this.curve._endoWnafMulAdd(n, o, !0) : this.curve._wnafMulAdd(1, n, o, 2, !0);\n}, Dt.prototype.eq = function(t) {\n    return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);\n}, Dt.prototype.neg = function(t) {\n    if (this.inf) return this;\n    var r = this.curve.point(this.x, this.y.redNeg());\n    if (t && this.precomputed) {\n        var i = this.precomputed, n = function(o) {\n            return o.neg();\n        };\n        r.precomputed = {\n            naf: i.naf && {\n                wnd: i.naf.wnd,\n                points: i.naf.points.map(n)\n            },\n            doubles: i.doubles && {\n                step: i.doubles.step,\n                points: i.doubles.points.map(n)\n            }\n        };\n    }\n    return r;\n}, Dt.prototype.toJ = function() {\n    if (this.inf) return this.curve.jpoint(null, null, null);\n    var t = this.curve.jpoint(this.x, this.y, this.curve.one);\n    return t;\n};\nfunction Ft(e, t, r, i) {\n    $e.BasePoint.call(this, e, \"jacobian\"), t === null && r === null && i === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new K(0)) : (this.x = new K(t, 16), this.y = new K(r, 16), this.z = new K(i, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;\n}\nKi(Ft, $e.BasePoint), te.prototype.jpoint = function(t, r, i) {\n    return new Ft(this, t, r, i);\n}, Ft.prototype.toP = function() {\n    if (this.isInfinity()) return this.curve.point(null, null);\n    var t = this.z.redInvm(), r = t.redSqr(), i = this.x.redMul(r), n = this.y.redMul(r).redMul(t);\n    return this.curve.point(i, n);\n}, Ft.prototype.neg = function() {\n    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n}, Ft.prototype.add = function(t) {\n    if (this.isInfinity()) return t;\n    if (t.isInfinity()) return this;\n    var r = t.z.redSqr(), i = this.z.redSqr(), n = this.x.redMul(r), o = t.x.redMul(i), h = this.y.redMul(r.redMul(t.z)), p = t.y.redMul(i.redMul(this.z)), A = n.redSub(o), v = h.redSub(p);\n    if (A.cmpn(0) === 0) return v.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n    var w = A.redSqr(), y = w.redMul(A), S = n.redMul(w), N = v.redSqr().redIAdd(y).redISub(S).redISub(S), I = v.redMul(S.redISub(N)).redISub(h.redMul(y)), C = this.z.redMul(t.z).redMul(A);\n    return this.curve.jpoint(N, I, C);\n}, Ft.prototype.mixedAdd = function(t) {\n    if (this.isInfinity()) return t.toJ();\n    if (t.isInfinity()) return this;\n    var r = this.z.redSqr(), i = this.x, n = t.x.redMul(r), o = this.y, h = t.y.redMul(r).redMul(this.z), p = i.redSub(n), A = o.redSub(h);\n    if (p.cmpn(0) === 0) return A.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n    var v = p.redSqr(), w = v.redMul(p), y = i.redMul(v), S = A.redSqr().redIAdd(w).redISub(y).redISub(y), N = A.redMul(y.redISub(S)).redISub(o.redMul(w)), I = this.z.redMul(p);\n    return this.curve.jpoint(S, N, I);\n}, Ft.prototype.dblp = function(t) {\n    if (t === 0) return this;\n    if (this.isInfinity()) return this;\n    if (!t) return this.dbl();\n    var r;\n    if (this.curve.zeroA || this.curve.threeA) {\n        var i = this;\n        for(r = 0; r < t; r++)i = i.dbl();\n        return i;\n    }\n    var n = this.curve.a, o = this.curve.tinv, h = this.x, p = this.y, A = this.z, v = A.redSqr().redSqr(), w = p.redAdd(p);\n    for(r = 0; r < t; r++){\n        var y = h.redSqr(), S = w.redSqr(), N = S.redSqr(), I = y.redAdd(y).redIAdd(y).redIAdd(n.redMul(v)), C = h.redMul(S), D = I.redSqr().redISub(C.redAdd(C)), U = C.redISub(D), J = I.redMul(U);\n        J = J.redIAdd(J).redISub(N);\n        var Bt = w.redMul(A);\n        r + 1 < t && (v = v.redMul(N)), h = D, A = Bt, w = J;\n    }\n    return this.curve.jpoint(h, w.redMul(o), A);\n}, Ft.prototype.dbl = function() {\n    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();\n}, Ft.prototype._zeroDbl = function() {\n    var t, r, i;\n    if (this.zOne) {\n        var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);\n        p = p.redIAdd(p);\n        var A = n.redAdd(n).redIAdd(n), v = A.redSqr().redISub(p).redISub(p), w = h.redIAdd(h);\n        w = w.redIAdd(w), w = w.redIAdd(w), t = v, r = A.redMul(p.redISub(v)).redISub(w), i = this.y.redAdd(this.y);\n    } else {\n        var y = this.x.redSqr(), S = this.y.redSqr(), N = S.redSqr(), I = this.x.redAdd(S).redSqr().redISub(y).redISub(N);\n        I = I.redIAdd(I);\n        var C = y.redAdd(y).redIAdd(y), D = C.redSqr(), U = N.redIAdd(N);\n        U = U.redIAdd(U), U = U.redIAdd(U), t = D.redISub(I).redISub(I), r = C.redMul(I.redISub(t)).redISub(U), i = this.y.redMul(this.z), i = i.redIAdd(i);\n    }\n    return this.curve.jpoint(t, r, i);\n}, Ft.prototype._threeDbl = function() {\n    var t, r, i;\n    if (this.zOne) {\n        var n = this.x.redSqr(), o = this.y.redSqr(), h = o.redSqr(), p = this.x.redAdd(o).redSqr().redISub(n).redISub(h);\n        p = p.redIAdd(p);\n        var A = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), v = A.redSqr().redISub(p).redISub(p);\n        t = v;\n        var w = h.redIAdd(h);\n        w = w.redIAdd(w), w = w.redIAdd(w), r = A.redMul(p.redISub(v)).redISub(w), i = this.y.redAdd(this.y);\n    } else {\n        var y = this.z.redSqr(), S = this.y.redSqr(), N = this.x.redMul(S), I = this.x.redSub(y).redMul(this.x.redAdd(y));\n        I = I.redAdd(I).redIAdd(I);\n        var C = N.redIAdd(N);\n        C = C.redIAdd(C);\n        var D = C.redAdd(C);\n        t = I.redSqr().redISub(D), i = this.y.redAdd(this.z).redSqr().redISub(S).redISub(y);\n        var U = S.redSqr();\n        U = U.redIAdd(U), U = U.redIAdd(U), U = U.redIAdd(U), r = I.redMul(C.redISub(t)).redISub(U);\n    }\n    return this.curve.jpoint(t, r, i);\n}, Ft.prototype._dbl = function() {\n    var t = this.curve.a, r = this.x, i = this.y, n = this.z, o = n.redSqr().redSqr(), h = r.redSqr(), p = i.redSqr(), A = h.redAdd(h).redIAdd(h).redIAdd(t.redMul(o)), v = r.redAdd(r);\n    v = v.redIAdd(v);\n    var w = v.redMul(p), y = A.redSqr().redISub(w.redAdd(w)), S = w.redISub(y), N = p.redSqr();\n    N = N.redIAdd(N), N = N.redIAdd(N), N = N.redIAdd(N);\n    var I = A.redMul(S).redISub(N), C = i.redAdd(i).redMul(n);\n    return this.curve.jpoint(y, I, C);\n}, Ft.prototype.trpl = function() {\n    if (!this.curve.zeroA) return this.dbl().add(this);\n    var t = this.x.redSqr(), r = this.y.redSqr(), i = this.z.redSqr(), n = r.redSqr(), o = t.redAdd(t).redIAdd(t), h = o.redSqr(), p = this.x.redAdd(r).redSqr().redISub(t).redISub(n);\n    p = p.redIAdd(p), p = p.redAdd(p).redIAdd(p), p = p.redISub(h);\n    var A = p.redSqr(), v = n.redIAdd(n);\n    v = v.redIAdd(v), v = v.redIAdd(v), v = v.redIAdd(v);\n    var w = o.redIAdd(p).redSqr().redISub(h).redISub(A).redISub(v), y = r.redMul(w);\n    y = y.redIAdd(y), y = y.redIAdd(y);\n    var S = this.x.redMul(A).redISub(y);\n    S = S.redIAdd(S), S = S.redIAdd(S);\n    var N = this.y.redMul(w.redMul(v.redISub(w)).redISub(p.redMul(A)));\n    N = N.redIAdd(N), N = N.redIAdd(N), N = N.redIAdd(N);\n    var I = this.z.redAdd(p).redSqr().redISub(i).redISub(A);\n    return this.curve.jpoint(S, N, I);\n}, Ft.prototype.mul = function(t, r) {\n    return t = new K(t, r), this.curve._wnafMul(this, t);\n}, Ft.prototype.eq = function(t) {\n    if (t.type === \"affine\") return this.eq(t.toJ());\n    if (this === t) return !0;\n    var r = this.z.redSqr(), i = t.z.redSqr();\n    if (this.x.redMul(i).redISub(t.x.redMul(r)).cmpn(0) !== 0) return !1;\n    var n = r.redMul(this.z), o = i.redMul(t.z);\n    return this.y.redMul(o).redISub(t.y.redMul(n)).cmpn(0) === 0;\n}, Ft.prototype.eqXToP = function(t) {\n    var r = this.z.redSqr(), i = t.toRed(this.curve.red).redMul(r);\n    if (this.x.cmp(i) === 0) return !0;\n    for(var n = t.clone(), o = this.curve.redN.redMul(r);;){\n        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;\n        if (i.redIAdd(o), this.x.cmp(i) === 0) return !0;\n    }\n}, Ft.prototype.inspect = function() {\n    return this.isInfinity() ? \"<EC JPoint Infinity>\" : \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n}, Ft.prototype.isInfinity = function() {\n    return this.z.cmpn(0) === 0;\n};\nvar zr = lr(function(e, t) {\n    var r = t;\n    r.base = $e, r.short = Va, r.mont = null, r.edwards = null;\n}), jr = lr(function(e, t) {\n    var r = t, i = Gt.assert;\n    function n(p) {\n        p.type === \"short\" ? this.curve = new zr.short(p) : p.type === \"edwards\" ? this.curve = new zr.edwards(p) : this.curve = new zr.mont(p), this.g = this.curve.g, this.n = this.curve.n, this.hash = p.hash, i(this.g.validate(), \"Invalid curve\"), i(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n    }\n    r.PresetCurve = n;\n    function o(p, A) {\n        Object.defineProperty(r, p, {\n            configurable: !0,\n            enumerable: !0,\n            get: function() {\n                var v = new n(A);\n                return Object.defineProperty(r, p, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: v\n                }), v;\n            }\n        });\n    }\n    o(\"p192\", {\n        type: \"short\",\n        prime: \"p192\",\n        p: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",\n        b: \"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",\n        n: \"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\n            \"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"\n        ]\n    }), o(\"p224\", {\n        type: \"short\",\n        prime: \"p224\",\n        p: \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",\n        a: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",\n        b: \"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",\n        n: \"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\n            \"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"\n        ]\n    }), o(\"p256\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",\n        a: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",\n        b: \"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",\n        n: \"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\n            \"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"\n        ]\n    }), o(\"p384\", {\n        type: \"short\",\n        prime: null,\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",\n        a: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",\n        b: \"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",\n        n: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",\n        hash: se.sha384,\n        gRed: !1,\n        g: [\n            \"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\n            \"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"\n        ]\n    }), o(\"p521\", {\n        type: \"short\",\n        prime: null,\n        p: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",\n        a: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",\n        b: \"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",\n        n: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",\n        hash: se.sha512,\n        gRed: !1,\n        g: [\n            \"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\n            \"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"\n        ]\n    }), o(\"curve25519\", {\n        type: \"mont\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"76d06\",\n        b: \"1\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"9\"\n        ]\n    }), o(\"ed25519\", {\n        type: \"edwards\",\n        prime: \"p25519\",\n        p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n        a: \"-1\",\n        c: \"1\",\n        d: \"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",\n        n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n        hash: se.sha256,\n        gRed: !1,\n        g: [\n            \"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\n            \"6666666666666666666666666666666666666666666666666666666666666658\"\n        ]\n    });\n    var h;\n    try {\n        h = null.crash();\n    } catch  {\n        h = void 0;\n    }\n    o(\"secp256k1\", {\n        type: \"short\",\n        prime: \"k256\",\n        p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n        a: \"0\",\n        b: \"7\",\n        n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n        h: \"1\",\n        hash: se.sha256,\n        beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n        lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n        basis: [\n            {\n                a: \"3086d221a7d46bcde86c90e49284eb15\",\n                b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n            },\n            {\n                a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n                b: \"3086d221a7d46bcde86c90e49284eb15\"\n            }\n        ],\n        gRed: !1,\n        g: [\n            \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n            \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",\n            h\n        ]\n    });\n});\nfunction Re(e) {\n    if (!(this instanceof Re)) return new Re(e);\n    this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;\n    var t = fe.toArray(e.entropy, e.entropyEnc || \"hex\"), r = fe.toArray(e.nonce, e.nonceEnc || \"hex\"), i = fe.toArray(e.pers, e.persEnc || \"hex\");\n    qi(t.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._init(t, r, i);\n}\nvar qf = Re;\nRe.prototype._init = function(t, r, i) {\n    var n = t.concat(r).concat(i);\n    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);\n    for(var o = 0; o < this.V.length; o++)this.K[o] = 0, this.V[o] = 1;\n    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;\n}, Re.prototype._hmac = function() {\n    return new se.hmac(this.hash, this.K);\n}, Re.prototype._update = function(t) {\n    var r = this._hmac().update(this.V).update([\n        0\n    ]);\n    t && (r = r.update(t)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([\n        1\n    ]).update(t).digest(), this.V = this._hmac().update(this.V).digest());\n}, Re.prototype.reseed = function(t, r, i, n) {\n    typeof r != \"string\" && (n = i, i = r, r = null), t = fe.toArray(t, r), i = fe.toArray(i, n), qi(t.length >= this.minEntropy / 8, \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"), this._update(t.concat(i || [])), this._reseed = 1;\n}, Re.prototype.generate = function(t, r, i, n) {\n    if (this._reseed > this.reseedInterval) throw new Error(\"Reseed is required\");\n    typeof r != \"string\" && (n = i, i = r, r = null), i && (i = fe.toArray(i, n || \"hex\"), this._update(i));\n    for(var o = []; o.length < t;)this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);\n    var h = o.slice(0, t);\n    return this._update(i), this._reseed++, fe.encode(h, r);\n};\nvar Hi = Gt.assert;\nfunction kt(e, t) {\n    this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);\n}\nvar Li = kt;\nkt.fromPublic = function(t, r, i) {\n    return r instanceof kt ? r : new kt(t, {\n        pub: r,\n        pubEnc: i\n    });\n}, kt.fromPrivate = function(t, r, i) {\n    return r instanceof kt ? r : new kt(t, {\n        priv: r,\n        privEnc: i\n    });\n}, kt.prototype.validate = function() {\n    var t = this.getPublic();\n    return t.isInfinity() ? {\n        result: !1,\n        reason: \"Invalid public key\"\n    } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {\n        result: !0,\n        reason: null\n    } : {\n        result: !1,\n        reason: \"Public key * N != O\"\n    } : {\n        result: !1,\n        reason: \"Public key is not a point\"\n    };\n}, kt.prototype.getPublic = function(t, r) {\n    return typeof t == \"string\" && (r = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, t) : this.pub;\n}, kt.prototype.getPrivate = function(t) {\n    return t === \"hex\" ? this.priv.toString(16, 2) : this.priv;\n}, kt.prototype._importPrivate = function(t, r) {\n    this.priv = new K(t, r || 16), this.priv = this.priv.umod(this.ec.curve.n);\n}, kt.prototype._importPublic = function(t, r) {\n    if (t.x || t.y) {\n        this.ec.curve.type === \"mont\" ? Hi(t.x, \"Need x coordinate\") : (this.ec.curve.type === \"short\" || this.ec.curve.type === \"edwards\") && Hi(t.x && t.y, \"Need both x and y coordinate\"), this.pub = this.ec.curve.point(t.x, t.y);\n        return;\n    }\n    this.pub = this.ec.curve.decodePoint(t, r);\n}, kt.prototype.derive = function(t) {\n    return t.validate() || Hi(t.validate(), \"public point not validated\"), t.mul(this.priv).getX();\n}, kt.prototype.sign = function(t, r, i) {\n    return this.ec.sign(t, this, r, i);\n}, kt.prototype.verify = function(t, r) {\n    return this.ec.verify(t, r, this);\n}, kt.prototype.inspect = function() {\n    return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n};\nvar Wa = Gt.assert;\nfunction Qr(e, t) {\n    if (e instanceof Qr) return e;\n    this._importDER(e, t) || (Wa(e.r && e.s, \"Signature without r or s\"), this.r = new K(e.r, 16), this.s = new K(e.s, 16), e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);\n}\nvar Jr = Qr;\nfunction Xa() {\n    this.place = 0;\n}\nfunction zi(e, t) {\n    var r = e[t.place++];\n    if (!(r & 128)) return r;\n    var i = r & 15;\n    if (i === 0 || i > 4) return !1;\n    for(var n = 0, o = 0, h = t.place; o < i; o++, h++)n <<= 8, n |= e[h], n >>>= 0;\n    return n <= 127 ? !1 : (t.place = h, n);\n}\nfunction Kf(e) {\n    for(var t = 0, r = e.length - 1; !e[t] && !(e[t + 1] & 128) && t < r;)t++;\n    return t === 0 ? e : e.slice(t);\n}\nQr.prototype._importDER = function(t, r) {\n    t = Gt.toArray(t, r);\n    var i = new Xa;\n    if (t[i.place++] !== 48) return !1;\n    var n = zi(t, i);\n    if (n === !1 || n + i.place !== t.length || t[i.place++] !== 2) return !1;\n    var o = zi(t, i);\n    if (o === !1) return !1;\n    var h = t.slice(i.place, o + i.place);\n    if (i.place += o, t[i.place++] !== 2) return !1;\n    var p = zi(t, i);\n    if (p === !1 || t.length !== p + i.place) return !1;\n    var A = t.slice(i.place, p + i.place);\n    if (h[0] === 0) if (h[1] & 128) h = h.slice(1);\n    else return !1;\n    if (A[0] === 0) if (A[1] & 128) A = A.slice(1);\n    else return !1;\n    return this.r = new K(h), this.s = new K(A), this.recoveryParam = null, !0;\n};\nfunction ji(e, t) {\n    if (t < 128) {\n        e.push(t);\n        return;\n    }\n    var r = 1 + (Math.log(t) / Math.LN2 >>> 3);\n    for(e.push(r | 128); --r;)e.push(t >>> (r << 3) & 255);\n    e.push(t);\n}\nQr.prototype.toDER = function(t) {\n    var r = this.r.toArray(), i = this.s.toArray();\n    for(r[0] & 128 && (r = [\n        0\n    ].concat(r)), i[0] & 128 && (i = [\n        0\n    ].concat(i)), r = Kf(r), i = Kf(i); !i[0] && !(i[1] & 128);)i = i.slice(1);\n    var n = [\n        2\n    ];\n    ji(n, r.length), n = n.concat(r), n.push(2), ji(n, i.length);\n    var o = n.concat(i), h = [\n        48\n    ];\n    return ji(h, o.length), h = h.concat(o), Gt.encode(h, t);\n};\nvar $a = function() {\n    throw new Error(\"unsupported\");\n}, Hf = Gt.assert;\nfunction ee(e) {\n    if (!(this instanceof ee)) return new ee(e);\n    typeof e == \"string\" && (Hf(Object.prototype.hasOwnProperty.call(jr, e), \"Unknown curve \" + e), e = jr[e]), e instanceof jr.PresetCurve && (e = {\n        curve: e\n    }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;\n}\nvar Za = ee;\nee.prototype.keyPair = function(t) {\n    return new Li(this, t);\n}, ee.prototype.keyFromPrivate = function(t, r) {\n    return Li.fromPrivate(this, t, r);\n}, ee.prototype.keyFromPublic = function(t, r) {\n    return Li.fromPublic(this, t, r);\n}, ee.prototype.genKeyPair = function(t) {\n    t || (t = {});\n    for(var r = new qf({\n        hash: this.hash,\n        pers: t.pers,\n        persEnc: t.persEnc || \"utf8\",\n        entropy: t.entropy || $a(this.hash.hmacStrength),\n        entropyEnc: t.entropy && t.entropyEnc || \"utf8\",\n        nonce: this.n.toArray()\n    }), i = this.n.byteLength(), n = this.n.sub(new K(2));;){\n        var o = new K(r.generate(i));\n        if (!(o.cmp(n) > 0)) return o.iaddn(1), this.keyFromPrivate(o);\n    }\n}, ee.prototype._truncateToN = function(t, r) {\n    var i = t.byteLength() * 8 - this.n.bitLength();\n    return i > 0 && (t = t.ushrn(i)), !r && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;\n}, ee.prototype.sign = function(t, r, i, n) {\n    typeof i == \"object\" && (n = i, i = null), n || (n = {}), r = this.keyFromPrivate(r, i), t = this._truncateToN(new K(t, 16));\n    for(var o = this.n.byteLength(), h = r.getPrivate().toArray(\"be\", o), p = t.toArray(\"be\", o), A = new qf({\n        hash: this.hash,\n        entropy: h,\n        nonce: p,\n        pers: n.pers,\n        persEnc: n.persEnc || \"utf8\"\n    }), v = this.n.sub(new K(1)), w = 0;; w++){\n        var y = n.k ? n.k(w) : new K(A.generate(this.n.byteLength()));\n        if (y = this._truncateToN(y, !0), !(y.cmpn(1) <= 0 || y.cmp(v) >= 0)) {\n            var S = this.g.mul(y);\n            if (!S.isInfinity()) {\n                var N = S.getX(), I = N.umod(this.n);\n                if (I.cmpn(0) !== 0) {\n                    var C = y.invm(this.n).mul(I.mul(r.getPrivate()).iadd(t));\n                    if (C = C.umod(this.n), C.cmpn(0) !== 0) {\n                        var D = (S.getY().isOdd() ? 1 : 0) | (N.cmp(I) !== 0 ? 2 : 0);\n                        return n.canonical && C.cmp(this.nh) > 0 && (C = this.n.sub(C), D ^= 1), new Jr({\n                            r: I,\n                            s: C,\n                            recoveryParam: D\n                        });\n                    }\n                }\n            }\n        }\n    }\n}, ee.prototype.verify = function(t, r, i, n) {\n    t = this._truncateToN(new K(t, 16)), i = this.keyFromPublic(i, n), r = new Jr(r, \"hex\");\n    var o = r.r, h = r.s;\n    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0 || h.cmpn(1) < 0 || h.cmp(this.n) >= 0) return !1;\n    var p = h.invm(this.n), A = p.mul(t).umod(this.n), v = p.mul(o).umod(this.n), w;\n    return this.curve._maxwellTrick ? (w = this.g.jmulAdd(A, i.getPublic(), v), w.isInfinity() ? !1 : w.eqXToP(o)) : (w = this.g.mulAdd(A, i.getPublic(), v), w.isInfinity() ? !1 : w.getX().umod(this.n).cmp(o) === 0);\n}, ee.prototype.recoverPubKey = function(e, t, r, i) {\n    Hf((3 & r) === r, \"The recovery param is more than two bits\"), t = new Jr(t, i);\n    var n = this.n, o = new K(e), h = t.r, p = t.s, A = r & 1, v = r >> 1;\n    if (h.cmp(this.curve.p.umod(this.curve.n)) >= 0 && v) throw new Error(\"Unable to find sencond key candinate\");\n    v ? h = this.curve.pointFromX(h.add(this.curve.n), A) : h = this.curve.pointFromX(h, A);\n    var w = t.r.invm(n), y = n.sub(o).mul(w).umod(n), S = p.mul(w).umod(n);\n    return this.g.mulAdd(y, h, S);\n}, ee.prototype.getKeyRecoveryParam = function(e, t, r, i) {\n    if (t = new Jr(t, i), t.recoveryParam !== null) return t.recoveryParam;\n    for(var n = 0; n < 4; n++){\n        var o;\n        try {\n            o = this.recoverPubKey(e, t, n);\n        } catch  {\n            continue;\n        }\n        if (o.eq(r)) return n;\n    }\n    throw new Error(\"Unable to find valid recovery factor\");\n};\nvar tu = lr(function(e, t) {\n    var r = t;\n    r.version = \"6.5.4\", r.utils = Gt, r.rand = function() {\n        throw new Error(\"unsupported\");\n    }, r.curve = zr, r.curves = jr, r.ec = Za, r.eddsa = null;\n}), eu = tu.ec;\nconst ru = \"signing-key/5.7.0\", Qi = new z(ru);\nlet Ji = null;\nfunction ve() {\n    return Ji || (Ji = new eu(\"secp256k1\")), Ji;\n}\nclass iu {\n    constructor(t){\n        wr(this, \"curve\", \"secp256k1\"), wr(this, \"privateKey\", Kt(t)), Us(this.privateKey) !== 32 && Qi.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        const r = ve().keyFromPrivate(Ot(this.privateKey));\n        wr(this, \"publicKey\", \"0x\" + r.getPublic(!1, \"hex\")), wr(this, \"compressedPublicKey\", \"0x\" + r.getPublic(!0, \"hex\")), wr(this, \"_isSigningKey\", !0);\n    }\n    _addPoint(t) {\n        const r = ve().keyFromPublic(Ot(this.publicKey)), i = ve().keyFromPublic(Ot(t));\n        return \"0x\" + r.pub.add(i.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(t) {\n        const r = ve().keyFromPrivate(Ot(this.privateKey)), i = Ot(t);\n        i.length !== 32 && Qi.throwArgumentError(\"bad digest length\", \"digest\", t);\n        const n = r.sign(i, {\n            canonical: !0\n        });\n        return Wn({\n            recoveryParam: n.recoveryParam,\n            r: oe(\"0x\" + n.r.toString(16), 32),\n            s: oe(\"0x\" + n.s.toString(16), 32)\n        });\n    }\n    computeSharedSecret(t) {\n        const r = ve().keyFromPrivate(Ot(this.privateKey)), i = ve().keyFromPublic(Ot(Lf(t)));\n        return oe(\"0x\" + r.derive(i.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(t) {\n        return !!(t && t._isSigningKey);\n    }\n}\nfunction nu(e, t) {\n    const r = Wn(t), i = {\n        r: Ot(r.r),\n        s: Ot(r.s)\n    };\n    return \"0x\" + ve().recoverPubKey(Ot(e), i, r.recoveryParam).encode(\"hex\", !1);\n}\nfunction Lf(e, t) {\n    const r = Ot(e);\n    if (r.length === 32) {\n        const i = new iu(r);\n        return t ? \"0x\" + ve().keyFromPrivate(r).getPublic(!0, \"hex\") : i.publicKey;\n    } else {\n        if (r.length === 33) return t ? Kt(r) : \"0x\" + ve().keyFromPublic(r).getPublic(!1, \"hex\");\n        if (r.length === 65) return t ? \"0x\" + ve().keyFromPublic(r).getPublic(!0, \"hex\") : Kt(r);\n    }\n    return Qi.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\nconst fu = \"transactions/5.7.0\";\nnew z(fu);\nvar zf;\n(function(e) {\n    e[e.legacy = 0] = \"legacy\", e[e.eip2930 = 1] = \"eip2930\", e[e.eip1559 = 2] = \"eip1559\";\n})(zf || (zf = {}));\nfunction ou(e) {\n    const t = Lf(e);\n    return v0(Vn(Ii(Vn(t, 1)), 12));\n}\nfunction su(e, t) {\n    return ou(nu(Ot(e), t));\n}\nconst au = \"https://rpc.walletconnect.org/v1\";\nasync function jf(e, t, r, i, n, o) {\n    switch(r.t){\n        case \"eip191\":\n            return Qf(e, t, r.s);\n        case \"eip1271\":\n            return await Jf(e, t, r.s, i, n, o);\n        default:\n            throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r.t}`);\n    }\n}\nfunction Qf(e, t, r) {\n    return su(df(t), r).toLowerCase() === e.toLowerCase();\n}\nasync function Jf(e, t, r, i, n, o) {\n    try {\n        const h = \"0x1626ba7e\", p = \"0000000000000000000000000000000000000000000000000000000000000040\", A = \"0000000000000000000000000000000000000000000000000000000000000041\", v = r.substring(2), w = df(t).substring(2), y = h + w + p + A + v, S = await fetch(`${o || au}/?chainId=${i}&projectId=${n}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: uu(),\n                jsonrpc: \"2.0\",\n                method: \"eth_call\",\n                params: [\n                    {\n                        to: e,\n                        data: y\n                    },\n                    \"latest\"\n                ]\n            })\n        }), { result: N } = await S.json();\n        return N ? N.slice(0, h.length).toLowerCase() === h.toLowerCase() : !1;\n    } catch (h) {\n        return console.error(\"isValidEip1271Signature: \", h), !1;\n    }\n}\nfunction uu() {\n    return Date.now() + Math.floor(Math.random() * 1e3);\n}\nvar hu = Object.defineProperty, cu = Object.defineProperties, lu = Object.getOwnPropertyDescriptors, Gf = Object.getOwnPropertySymbols, du = Object.prototype.hasOwnProperty, pu = Object.prototype.propertyIsEnumerable, Yf = (e, t, r)=>t in e ? hu(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, Gi = (e, t)=>{\n    for(var r in t || (t = {}))du.call(t, r) && Yf(e, r, t[r]);\n    if (Gf) for (var r of Gf(t))pu.call(t, r) && Yf(e, r, t[r]);\n    return e;\n}, Vf = (e, t)=>cu(e, lu(t));\nconst vu = \"did:pkh:\", Gr = (e)=>e?.split(\":\"), Yi = (e)=>{\n    const t = e && Gr(e);\n    if (t) return e.includes(vu) ? t[3] : t[1];\n}, gu = (e)=>{\n    const t = e && Gr(e);\n    if (t) return t[2] + \":\" + t[3];\n}, Vi = (e)=>{\n    const t = e && Gr(e);\n    if (t) return t.pop();\n};\nasync function mu(e) {\n    const { cacao: t, projectId: r } = e, { s: i, p: n } = t, o = Wf(n, n.iss), h = Vi(n.iss);\n    return await jf(h, o, i, Yi(n.iss), r);\n}\nconst Wf = (e, t)=>{\n    const r = `${e.domain} wants you to sign in with your Ethereum account:`, i = Vi(t);\n    if (!e.aud && !e.uri) throw new Error(\"Either `aud` or `uri` is required to construct the message\");\n    let n = e.statement || void 0;\n    const o = `URI: ${e.aud || e.uri}`, h = `Version: ${e.version}`, p = `Chain ID: ${Yi(t)}`, A = `Nonce: ${e.nonce}`, v = `Issued At: ${e.iat}`, w = e.exp ? `Expiration Time: ${e.exp}` : void 0, y = e.nbf ? `Not Before: ${e.nbf}` : void 0, S = e.requestId ? `Request ID: ${e.requestId}` : void 0, N = e.resources ? `Resources:${e.resources.map((C)=>`\n- ${C}`).join(\"\")}` : void 0, I = Vr(e.resources);\n    if (I) {\n        const C = Oe(I);\n        n = $i(n, C);\n    }\n    return [\n        r,\n        i,\n        \"\",\n        n,\n        \"\",\n        o,\n        h,\n        p,\n        A,\n        v,\n        w,\n        y,\n        S,\n        N\n    ].filter((C)=>C != null).join(`\n`);\n};\nfunction Au(e, t, r) {\n    return r.includes(\"did:pkh:\") || (r = `did:pkh:${r}`), {\n        h: {\n            t: \"caip122\"\n        },\n        p: {\n            iss: r,\n            domain: e.domain,\n            aud: e.aud,\n            version: e.version,\n            nonce: e.nonce,\n            iat: e.iat,\n            statement: e.statement,\n            requestId: e.requestId,\n            resources: e.resources,\n            nbf: e.nbf,\n            exp: e.exp\n        },\n        s: t\n    };\n}\nfunction bu(e) {\n    var t;\n    const { authPayload: r, chains: i, methods: n } = e, o = r.statement || \"\";\n    if (!(i != null && i.length)) return r;\n    const h = r.chains, p = wi(h, i);\n    if (!(p != null && p.length)) throw new Error(\"No supported chains\");\n    const A = Xf(r.resources);\n    if (!A) return r;\n    ge(A);\n    const v = $f(A, \"eip155\");\n    let w = r?.resources || [];\n    if (v != null && v.length) {\n        const y = Zf(v), S = wi(y, n);\n        if (!(S != null && S.length)) throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(y)}, supported: ${JSON.stringify(n)}`);\n        const N = Wi(\"request\", S, {\n            chains: p\n        }), I = io(A, \"eip155\", N);\n        w = ((t = r?.resources) == null ? void 0 : t.slice(0, -1)) || [], w.push(Yr(I));\n    }\n    return Vf(Gi({}, r), {\n        statement: fo(o, Vr(w)),\n        chains: p,\n        resources: r != null && r.resources || w.length > 0 ? w : void 0\n    });\n}\nfunction Xf(e) {\n    const t = Vr(e);\n    if (t && Xi(t)) return Oe(t);\n}\nfunction yu(e, t) {\n    var r;\n    return (r = e?.att) == null ? void 0 : r.hasOwnProperty(t);\n}\nfunction $f(e, t) {\n    var r, i;\n    return (r = e?.att) != null && r[t] ? Object.keys((i = e?.att) == null ? void 0 : i[t]) : [];\n}\nfunction wu(e) {\n    return e?.map((t)=>Object.keys(t)) || [];\n}\nfunction Zf(e) {\n    return e?.map((t)=>{\n        var r;\n        return (r = t.split(\"/\")) == null ? void 0 : r[1];\n    }) || [];\n}\nfunction to(e) {\n    return Buffer.from(JSON.stringify(e)).toString(\"base64\");\n}\nfunction eo(e) {\n    return JSON.parse(Buffer.from(e, \"base64\").toString(\"utf-8\"));\n}\nfunction ge(e) {\n    if (!e) throw new Error(\"No recap provided, value is undefined\");\n    if (!e.att) throw new Error(\"No `att` property found\");\n    const t = Object.keys(e.att);\n    if (!(t != null && t.length)) throw new Error(\"No resources found in `att` property\");\n    t.forEach((r)=>{\n        const i = e.att[r];\n        if (Array.isArray(i)) throw new Error(`Resource must be an object: ${r}`);\n        if (typeof i != \"object\") throw new Error(`Resource must be an object: ${r}`);\n        if (!Object.keys(i).length) throw new Error(`Resource object is empty: ${r}`);\n        Object.keys(i).forEach((n)=>{\n            const o = i[n];\n            if (!Array.isArray(o)) throw new Error(`Ability limits ${n} must be an array of objects, found: ${o}`);\n            if (!o.length) throw new Error(`Value of ${n} is empty array, must be an array with objects`);\n            o.forEach((h)=>{\n                if (typeof h != \"object\") throw new Error(`Ability limits (${n}) must be an array of objects, found: ${h}`);\n            });\n        });\n    });\n}\nfunction ro(e, t, r, i = {}) {\n    return r?.sort((n, o)=>n.localeCompare(o)), {\n        att: {\n            [e]: Wi(t, r, i)\n        }\n    };\n}\nfunction io(e, t, r) {\n    var i;\n    return e.att[t] = Gi({}, r), ((i = Object.keys(e.att)) == null ? void 0 : i.sort((n, o)=>n.localeCompare(o))).reduce((n, o)=>(n.att[o] = e.att[o], n), {\n        att: {}\n    });\n}\nfunction Wi(e, t, r = {}) {\n    t = t?.sort((n, o)=>n.localeCompare(o));\n    const i = t.map((n)=>({\n            [`${e}/${n}`]: [\n                r\n            ]\n        }));\n    return Object.assign({}, ...i);\n}\nfunction Yr(e) {\n    return ge(e), `urn:recap:${to(e).replace(/=/g, \"\")}`;\n}\nfunction Oe(e) {\n    const t = eo(e.replace(\"urn:recap:\", \"\"));\n    return ge(t), t;\n}\nfunction xu(e, t, r) {\n    const i = ro(e, t, r);\n    return Yr(i);\n}\nfunction Xi(e) {\n    return e && e.includes(\"urn:recap:\");\n}\nfunction Mu(e, t) {\n    const r = Oe(e), i = Oe(t), n = no(r, i);\n    return Yr(n);\n}\nfunction no(e, t) {\n    ge(e), ge(t);\n    const r = Object.keys(e.att).concat(Object.keys(t.att)).sort((n, o)=>n.localeCompare(o)), i = {\n        att: {}\n    };\n    return r.forEach((n)=>{\n        var o, h;\n        Object.keys(((o = e.att) == null ? void 0 : o[n]) || {}).concat(Object.keys(((h = t.att) == null ? void 0 : h[n]) || {})).sort((p, A)=>p.localeCompare(A)).forEach((p)=>{\n            var A, v;\n            i.att[n] = Vf(Gi({}, i.att[n]), {\n                [p]: ((A = e.att[n]) == null ? void 0 : A[p]) || ((v = t.att[n]) == null ? void 0 : v[p])\n            });\n        });\n    }), i;\n}\nfunction $i(e = \"\", t) {\n    ge(t);\n    const r = \"I further authorize the stated URI to perform the following actions on my behalf: \";\n    if (e.includes(r)) return e;\n    const i = [];\n    let n = 0;\n    Object.keys(t.att).forEach((p)=>{\n        const A = Object.keys(t.att[p]).map((y)=>({\n                ability: y.split(\"/\")[0],\n                action: y.split(\"/\")[1]\n            }));\n        A.sort((y, S)=>y.action.localeCompare(S.action));\n        const v = {};\n        A.forEach((y)=>{\n            v[y.ability] || (v[y.ability] = []), v[y.ability].push(y.action);\n        });\n        const w = Object.keys(v).map((y)=>(n++, `(${n}) '${y}': '${v[y].join(\"', '\")}' for '${p}'.`));\n        i.push(w.join(\", \").replace(\".,\", \".\"));\n    });\n    const o = i.join(\" \"), h = `${r}${o}`;\n    return `${e ? e + \" \" : \"\"}${h}`;\n}\nfunction Eu(e) {\n    var t;\n    const r = Oe(e);\n    ge(r);\n    const i = (t = r.att) == null ? void 0 : t.eip155;\n    return i ? Object.keys(i).map((n)=>n.split(\"/\")[1]) : [];\n}\nfunction Su(e) {\n    const t = Oe(e);\n    ge(t);\n    const r = [];\n    return Object.values(t.att).forEach((i)=>{\n        Object.values(i).forEach((n)=>{\n            var o;\n            (o = n?.[0]) != null && o.chains && r.push(n[0].chains);\n        });\n    }), [\n        ...new Set(r.flat())\n    ];\n}\nfunction fo(e, t) {\n    if (!t) return e;\n    const r = Oe(t);\n    return ge(r), $i(e, r);\n}\nfunction Vr(e) {\n    if (!e) return;\n    const t = e?.[e.length - 1];\n    return Xi(t) ? t : void 0;\n}\nconst Zi = \"base10\", Lt = \"base16\", tn = \"base64pad\", Iu = \"base64url\", dr = \"utf8\", en = 0, pr = 1, Sr = 2, Nu = 0, oo = 1, Ir = 12, rn = 32;\nfunction _u() {\n    const e = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.generateKeyPair();\n    return {\n        privateKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.secretKey, Lt),\n        publicKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e.publicKey, Lt)\n    };\n}\nfunction Bu() {\n    const e = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(rn);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e, Lt);\n}\nfunction Cu(e, t) {\n    const r = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_8__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, Lt), (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(t, Lt), !0), i = new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_5__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.SHA256, r).expand(rn);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(i, Lt);\n}\nfunction Ru(e) {\n    const t = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, Lt));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t, Lt);\n}\nfunction Ou(e) {\n    const t = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, dr));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(t, Lt);\n}\nfunction nn(e) {\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(`${e}`, Zi);\n}\nfunction Ze(e) {\n    return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(e, Zi));\n}\nfunction Pu(e) {\n    const t = nn(typeof e.type < \"u\" ? e.type : en);\n    if (Ze(t) === pr && typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n    const r = typeof e.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.senderPublicKey, Lt) : void 0, i = typeof e.iv < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.iv, Lt) : (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Ir), n = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey, Lt)).seal(i, (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.message, dr));\n    return fn({\n        type: t,\n        sealed: n,\n        iv: i,\n        senderPublicKey: r,\n        encoding: e.encoding\n    });\n}\nfunction Tu(e, t) {\n    const r = nn(Sr), i = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Ir), n = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e, dr);\n    return fn({\n        type: r,\n        sealed: n,\n        iv: i,\n        encoding: t\n    });\n}\nfunction Du(e) {\n    const t = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_4__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(e.symKey, Lt)), { sealed: r, iv: i } = Wr({\n        encoded: e.encoded,\n        encoding: e?.encoding\n    }), n = t.open(i, r);\n    if (n === null) throw new Error(\"Failed to decrypt\");\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(n, dr);\n}\nfunction Fu(e, t) {\n    const { sealed: r } = Wr({\n        encoded: e,\n        encoding: t\n    });\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(r, dr);\n}\nfunction fn(e) {\n    const { encoding: t = tn } = e;\n    if (Ze(e.type) === Sr) return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n        e.type,\n        e.sealed\n    ]), t);\n    if (Ze(e.type) === pr) {\n        if (typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n        return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n            e.type,\n            e.senderPublicKey,\n            e.iv,\n            e.sealed\n        ]), t);\n    }\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.concat)([\n        e.type,\n        e.iv,\n        e.sealed\n    ]), t);\n}\nfunction Wr(e) {\n    const { encoded: t, encoding: r = tn } = e, i = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.fromString)(t, r), n = i.slice(Nu, oo), o = oo;\n    if (Ze(n) === pr) {\n        const v = o + rn, w = v + Ir, y = i.slice(o, v), S = i.slice(v, w), N = i.slice(w);\n        return {\n            type: n,\n            sealed: N,\n            iv: S,\n            senderPublicKey: y\n        };\n    }\n    if (Ze(n) === Sr) {\n        const v = i.slice(o), w = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_6__.randomBytes)(Ir);\n        return {\n            type: n,\n            sealed: v,\n            iv: w\n        };\n    }\n    const h = o + Ir, p = i.slice(o, h), A = i.slice(h);\n    return {\n        type: n,\n        sealed: A,\n        iv: p\n    };\n}\nfunction Uu(e, t) {\n    const r = Wr({\n        encoded: e,\n        encoding: t?.encoding\n    });\n    return so({\n        type: Ze(r.type),\n        senderPublicKey: typeof r.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_9__.toString)(r.senderPublicKey, Lt) : void 0,\n        receiverPublicKey: t?.receiverPublicKey\n    });\n}\nfunction so(e) {\n    const t = e?.type || en;\n    if (t === pr) {\n        if (typeof e?.senderPublicKey > \"u\") throw new Error(\"missing sender public key\");\n        if (typeof e?.receiverPublicKey > \"u\") throw new Error(\"missing receiver public key\");\n    }\n    return {\n        type: t,\n        senderPublicKey: e?.senderPublicKey,\n        receiverPublicKey: e?.receiverPublicKey\n    };\n}\nfunction ku(e) {\n    return e.type === pr && typeof e.senderPublicKey == \"string\" && typeof e.receiverPublicKey == \"string\";\n}\nfunction qu(e) {\n    return e.type === Sr;\n}\nfunction ao(e) {\n    return new elliptic__WEBPACK_IMPORTED_MODULE_10__.ec(\"p256\").keyFromPublic({\n        x: Buffer.from(e.x, \"base64\").toString(\"hex\"),\n        y: Buffer.from(e.y, \"base64\").toString(\"hex\")\n    }, \"hex\");\n}\nfunction Ku(e) {\n    let t = e.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const r = t.length % 4;\n    return r > 0 && (t += \"=\".repeat(4 - r)), t;\n}\nfunction Hu(e) {\n    return Buffer.from(Ku(e), \"base64\");\n}\nfunction Lu(e, t) {\n    const [r, i, n] = e.split(\".\"), o = Hu(n);\n    if (o.length !== 64) throw new Error(\"Invalid signature length\");\n    const h = o.slice(0, 32).toString(\"hex\"), p = o.slice(32, 64).toString(\"hex\"), A = `${r}.${i}`, v = new _stablelib_sha256__WEBPACK_IMPORTED_MODULE_7__.SHA256().update(Buffer.from(A)).digest(), w = ao(t), y = Buffer.from(v).toString(\"hex\");\n    if (!w.verify(y, {\n        r: h,\n        s: p\n    })) throw new Error(\"Invalid signature\");\n    return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_11__.decodeJWT)(e).payload;\n}\nconst uo = \"irn\";\nfunction zu(e) {\n    return e?.relay || {\n        protocol: uo\n    };\n}\nfunction ju(e) {\n    const t = _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_12__.RELAY_JSONRPC[e];\n    if (typeof t > \"u\") throw new Error(`Relay Protocol not supported: ${e}`);\n    return t;\n}\nvar Qu = Object.defineProperty, Ju = Object.defineProperties, Gu = Object.getOwnPropertyDescriptors, ho = Object.getOwnPropertySymbols, Yu = Object.prototype.hasOwnProperty, Vu = Object.prototype.propertyIsEnumerable, co = (e, t, r)=>t in e ? Qu(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, lo = (e, t)=>{\n    for(var r in t || (t = {}))Yu.call(t, r) && co(e, r, t[r]);\n    if (ho) for (var r of ho(t))Vu.call(t, r) && co(e, r, t[r]);\n    return e;\n}, Wu = (e, t)=>Ju(e, Gu(t));\nfunction po(e, t = \"-\") {\n    const r = {}, i = \"relay\" + t;\n    return Object.keys(e).forEach((n)=>{\n        if (n.startsWith(i)) {\n            const o = n.replace(i, \"\"), h = e[n];\n            r[o] = h;\n        }\n    }), r;\n}\nfunction Xu(e) {\n    if (!e.includes(\"wc:\")) {\n        const A = xi(e);\n        A != null && A.includes(\"wc:\") && (e = A);\n    }\n    e = e.includes(\"wc://\") ? e.replace(\"wc://\", \"\") : e, e = e.includes(\"wc:\") ? e.replace(\"wc:\", \"\") : e;\n    const t = e.indexOf(\":\"), r = e.indexOf(\"?\") !== -1 ? e.indexOf(\"?\") : void 0, i = e.substring(0, t), n = e.substring(t + 1, r).split(\"@\"), o = typeof r < \"u\" ? e.substring(r) : \"\", h = query_string__WEBPACK_IMPORTED_MODULE_3__.parse(o), p = typeof h.methods == \"string\" ? h.methods.split(\",\") : void 0;\n    return {\n        protocol: i,\n        topic: vo(n[0]),\n        version: parseInt(n[1], 10),\n        symKey: h.symKey,\n        relay: po(h),\n        methods: p,\n        expiryTimestamp: h.expiryTimestamp ? parseInt(h.expiryTimestamp, 10) : void 0\n    };\n}\nfunction vo(e) {\n    return e.startsWith(\"//\") ? e.substring(2) : e;\n}\nfunction go(e, t = \"-\") {\n    const r = \"relay\", i = {};\n    return Object.keys(e).forEach((n)=>{\n        const o = r + t + n;\n        e[n] && (i[o] = e[n]);\n    }), i;\n}\nfunction $u(e) {\n    return `${e.protocol}:${e.topic}@${e.version}?` + query_string__WEBPACK_IMPORTED_MODULE_3__.stringify(lo(Wu(lo({\n        symKey: e.symKey\n    }, go(e.relay)), {\n        expiryTimestamp: e.expiryTimestamp\n    }), e.methods ? {\n        methods: e.methods.join(\",\")\n    } : {}));\n}\nfunction Zu(e, t, r) {\n    return `${e}?wc_ev=${r}&topic=${t}`;\n}\nvar th = Object.defineProperty, eh = Object.defineProperties, rh = Object.getOwnPropertyDescriptors, mo = Object.getOwnPropertySymbols, ih = Object.prototype.hasOwnProperty, nh = Object.prototype.propertyIsEnumerable, Ao = (e, t, r)=>t in e ? th(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: r\n    }) : e[t] = r, fh = (e, t)=>{\n    for(var r in t || (t = {}))ih.call(t, r) && Ao(e, r, t[r]);\n    if (mo) for (var r of mo(t))nh.call(t, r) && Ao(e, r, t[r]);\n    return e;\n}, oh = (e, t)=>eh(e, rh(t));\nfunction tr(e) {\n    const t = [];\n    return e.forEach((r)=>{\n        const [i, n] = r.split(\":\");\n        t.push(`${i}:${n}`);\n    }), t;\n}\nfunction bo(e) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        t.push(...tr(r.accounts));\n    }), t;\n}\nfunction yo(e, t) {\n    const r = [];\n    return Object.values(e).forEach((i)=>{\n        tr(i.accounts).includes(t) && r.push(...i.methods);\n    }), r;\n}\nfunction wo(e, t) {\n    const r = [];\n    return Object.values(e).forEach((i)=>{\n        tr(i.accounts).includes(t) && r.push(...i.events);\n    }), r;\n}\nfunction sh(e, t) {\n    const r = Oo(e, t);\n    if (r) throw new Error(r.message);\n    const i = {};\n    for (const [n, o] of Object.entries(e))i[n] = {\n        methods: o.methods,\n        events: o.events,\n        chains: o.accounts.map((h)=>`${h.split(\":\")[0]}:${h.split(\":\")[1]}`)\n    };\n    return i;\n}\nfunction ah(e) {\n    const { proposal: { requiredNamespaces: t, optionalNamespaces: r = {} }, supportedNamespaces: i } = e, n = sn(t), o = sn(r), h = {};\n    Object.keys(i).forEach((v)=>{\n        const w = i[v].chains, y = i[v].methods, S = i[v].events, N = i[v].accounts;\n        w.forEach((I)=>{\n            if (!N.some((C)=>C.includes(I))) throw new Error(`No accounts provided for chain ${I} in namespace ${v}`);\n        }), h[v] = {\n            chains: w,\n            methods: y,\n            events: S,\n            accounts: N\n        };\n    });\n    const p = To(t, h, \"approve()\");\n    if (p) throw new Error(p.message);\n    const A = {};\n    return !Object.keys(t).length && !Object.keys(r).length ? h : (Object.keys(n).forEach((v)=>{\n        const w = i[v].chains.filter((I)=>{\n            var C, D;\n            return (D = (C = n[v]) == null ? void 0 : C.chains) == null ? void 0 : D.includes(I);\n        }), y = i[v].methods.filter((I)=>{\n            var C, D;\n            return (D = (C = n[v]) == null ? void 0 : C.methods) == null ? void 0 : D.includes(I);\n        }), S = i[v].events.filter((I)=>{\n            var C, D;\n            return (D = (C = n[v]) == null ? void 0 : C.events) == null ? void 0 : D.includes(I);\n        }), N = w.map((I)=>i[v].accounts.filter((C)=>C.includes(`${I}:`))).flat();\n        A[v] = {\n            chains: w,\n            methods: y,\n            events: S,\n            accounts: N\n        };\n    }), Object.keys(o).forEach((v)=>{\n        var w, y, S, N, I, C;\n        if (!i[v]) return;\n        const D = (y = (w = o[v]) == null ? void 0 : w.chains) == null ? void 0 : y.filter((G)=>i[v].chains.includes(G)), U = i[v].methods.filter((G)=>{\n            var H, L;\n            return (L = (H = o[v]) == null ? void 0 : H.methods) == null ? void 0 : L.includes(G);\n        }), J = i[v].events.filter((G)=>{\n            var H, L;\n            return (L = (H = o[v]) == null ? void 0 : H.events) == null ? void 0 : L.includes(G);\n        }), Bt = D?.map((G)=>i[v].accounts.filter((H)=>H.includes(`${G}:`))).flat();\n        A[v] = {\n            chains: me((S = A[v]) == null ? void 0 : S.chains, D),\n            methods: me((N = A[v]) == null ? void 0 : N.methods, U),\n            events: me((I = A[v]) == null ? void 0 : I.events, J),\n            accounts: me((C = A[v]) == null ? void 0 : C.accounts, Bt)\n        };\n    }), A);\n}\nfunction on(e) {\n    return e.includes(\":\");\n}\nfunction xo(e) {\n    return on(e) ? e.split(\":\")[0] : e;\n}\nfunction sn(e) {\n    var t, r, i;\n    const n = {};\n    if (!Xr(e)) return n;\n    for (const [o, h] of Object.entries(e)){\n        const p = on(o) ? [\n            o\n        ] : h.chains, A = h.methods || [], v = h.events || [], w = xo(o);\n        n[w] = oh(fh({}, n[w]), {\n            chains: me(p, (t = n[w]) == null ? void 0 : t.chains),\n            methods: me(A, (r = n[w]) == null ? void 0 : r.methods),\n            events: me(v, (i = n[w]) == null ? void 0 : i.events)\n        });\n    }\n    return n;\n}\nfunction Mo(e) {\n    const t = {};\n    return e?.forEach((r)=>{\n        const [i, n] = r.split(\":\");\n        t[i] || (t[i] = {\n            accounts: [],\n            chains: [],\n            events: []\n        }), t[i].accounts.push(r), t[i].chains.push(`${i}:${n}`);\n    }), t;\n}\nfunction uh(e, t) {\n    t = t.map((i)=>i.replace(\"did:pkh:\", \"\"));\n    const r = Mo(t);\n    for (const [i, n] of Object.entries(r))n.methods ? n.methods = me(n.methods, e) : n.methods = e, n.events = [\n        \"chainChanged\",\n        \"accountsChanged\"\n    ];\n    return r;\n}\nconst Eo = {\n    INVALID_METHOD: {\n        message: \"Invalid method.\",\n        code: 1001\n    },\n    INVALID_EVENT: {\n        message: \"Invalid event.\",\n        code: 1002\n    },\n    INVALID_UPDATE_REQUEST: {\n        message: \"Invalid update request.\",\n        code: 1003\n    },\n    INVALID_EXTEND_REQUEST: {\n        message: \"Invalid extend request.\",\n        code: 1004\n    },\n    INVALID_SESSION_SETTLE_REQUEST: {\n        message: \"Invalid session settle request.\",\n        code: 1005\n    },\n    UNAUTHORIZED_METHOD: {\n        message: \"Unauthorized method.\",\n        code: 3001\n    },\n    UNAUTHORIZED_EVENT: {\n        message: \"Unauthorized event.\",\n        code: 3002\n    },\n    UNAUTHORIZED_UPDATE_REQUEST: {\n        message: \"Unauthorized update request.\",\n        code: 3003\n    },\n    UNAUTHORIZED_EXTEND_REQUEST: {\n        message: \"Unauthorized extend request.\",\n        code: 3004\n    },\n    USER_REJECTED: {\n        message: \"User rejected.\",\n        code: 5e3\n    },\n    USER_REJECTED_CHAINS: {\n        message: \"User rejected chains.\",\n        code: 5001\n    },\n    USER_REJECTED_METHODS: {\n        message: \"User rejected methods.\",\n        code: 5002\n    },\n    USER_REJECTED_EVENTS: {\n        message: \"User rejected events.\",\n        code: 5003\n    },\n    UNSUPPORTED_CHAINS: {\n        message: \"Unsupported chains.\",\n        code: 5100\n    },\n    UNSUPPORTED_METHODS: {\n        message: \"Unsupported methods.\",\n        code: 5101\n    },\n    UNSUPPORTED_EVENTS: {\n        message: \"Unsupported events.\",\n        code: 5102\n    },\n    UNSUPPORTED_ACCOUNTS: {\n        message: \"Unsupported accounts.\",\n        code: 5103\n    },\n    UNSUPPORTED_NAMESPACE_KEY: {\n        message: \"Unsupported namespace key.\",\n        code: 5104\n    },\n    USER_DISCONNECTED: {\n        message: \"User disconnected.\",\n        code: 6e3\n    },\n    SESSION_SETTLEMENT_FAILED: {\n        message: \"Session settlement failed.\",\n        code: 7e3\n    },\n    WC_METHOD_UNSUPPORTED: {\n        message: \"Unsupported wc_ method.\",\n        code: 10001\n    }\n}, So = {\n    NOT_INITIALIZED: {\n        message: \"Not initialized.\",\n        code: 1\n    },\n    NO_MATCHING_KEY: {\n        message: \"No matching key.\",\n        code: 2\n    },\n    RESTORE_WILL_OVERRIDE: {\n        message: \"Restore will override.\",\n        code: 3\n    },\n    RESUBSCRIBED: {\n        message: \"Resubscribed.\",\n        code: 4\n    },\n    MISSING_OR_INVALID: {\n        message: \"Missing or invalid.\",\n        code: 5\n    },\n    EXPIRED: {\n        message: \"Expired.\",\n        code: 6\n    },\n    UNKNOWN_TYPE: {\n        message: \"Unknown type.\",\n        code: 7\n    },\n    MISMATCHED_TOPIC: {\n        message: \"Mismatched topic.\",\n        code: 8\n    },\n    NON_CONFORMING_NAMESPACES: {\n        message: \"Non conforming namespaces.\",\n        code: 9\n    }\n};\nfunction xe(e, t) {\n    const { message: r, code: i } = So[e];\n    return {\n        message: t ? `${r} ${t}` : r,\n        code: i\n    };\n}\nfunction er(e, t) {\n    const { message: r, code: i } = Eo[e];\n    return {\n        message: t ? `${r} ${t}` : r,\n        code: i\n    };\n}\nfunction Nr(e, t) {\n    return Array.isArray(e) ? typeof t < \"u\" && e.length ? e.every(t) : !0 : !1;\n}\nfunction Xr(e) {\n    return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;\n}\nfunction Pe(e) {\n    return typeof e > \"u\";\n}\nfunction Yt(e, t) {\n    return t && Pe(e) ? !0 : typeof e == \"string\" && !!e.trim().length;\n}\nfunction $r(e, t) {\n    return t && Pe(e) ? !0 : typeof e == \"number\" && !isNaN(e);\n}\nfunction hh(e, t) {\n    const { requiredNamespaces: r } = t, i = Object.keys(e.namespaces), n = Object.keys(r);\n    let o = !0;\n    return _e(n, i) ? (i.forEach((h)=>{\n        const { accounts: p, methods: A, events: v } = e.namespaces[h], w = tr(p), y = r[h];\n        (!_e(Or(h, y), w) || !_e(y.methods, A) || !_e(y.events, v)) && (o = !1);\n    }), o) : !1;\n}\nfunction _r(e) {\n    return Yt(e, !1) && e.includes(\":\") ? e.split(\":\").length === 2 : !1;\n}\nfunction Io(e) {\n    if (Yt(e, !1) && e.includes(\":\")) {\n        const t = e.split(\":\");\n        if (t.length === 3) {\n            const r = t[0] + \":\" + t[1];\n            return !!t[2] && _r(r);\n        }\n    }\n    return !1;\n}\nfunction ch(e) {\n    function t(r) {\n        try {\n            return typeof new URL(r) < \"u\";\n        } catch  {\n            return !1;\n        }\n    }\n    try {\n        if (Yt(e, !1)) {\n            if (t(e)) return !0;\n            const r = xi(e);\n            return t(r);\n        }\n    } catch  {}\n    return !1;\n}\nfunction lh(e) {\n    var t;\n    return (t = e?.proposer) == null ? void 0 : t.publicKey;\n}\nfunction dh(e) {\n    return e?.topic;\n}\nfunction ph(e, t) {\n    let r = null;\n    return Yt(e?.publicKey, !1) || (r = xe(\"MISSING_OR_INVALID\", `${t} controller public key should be a string`)), r;\n}\nfunction an(e) {\n    let t = !0;\n    return Nr(e) ? e.length && (t = e.every((r)=>Yt(r, !1))) : t = !1, t;\n}\nfunction No(e, t, r) {\n    let i = null;\n    return Nr(t) && t.length ? t.forEach((n)=>{\n        i || _r(n) || (i = er(\"UNSUPPORTED_CHAINS\", `${r}, chain ${n} should be a string and conform to \"namespace:chainId\" format`));\n    }) : _r(e) || (i = er(\"UNSUPPORTED_CHAINS\", `${r}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)), i;\n}\nfunction _o(e, t, r) {\n    let i = null;\n    return Object.entries(e).forEach(([n, o])=>{\n        if (i) return;\n        const h = No(n, Or(n, o), `${t} ${r}`);\n        h && (i = h);\n    }), i;\n}\nfunction Bo(e, t) {\n    let r = null;\n    return Nr(e) ? e.forEach((i)=>{\n        r || Io(i) || (r = er(\"UNSUPPORTED_ACCOUNTS\", `${t}, account ${i} should be a string and conform to \"namespace:chainId:address\" format`));\n    }) : r = er(\"UNSUPPORTED_ACCOUNTS\", `${t}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`), r;\n}\nfunction Co(e, t) {\n    let r = null;\n    return Object.values(e).forEach((i)=>{\n        if (r) return;\n        const n = Bo(i?.accounts, `${t} namespace`);\n        n && (r = n);\n    }), r;\n}\nfunction Ro(e, t) {\n    let r = null;\n    return an(e?.methods) ? an(e?.events) || (r = er(\"UNSUPPORTED_EVENTS\", `${t}, events should be an array of strings or empty array for no events`)) : r = er(\"UNSUPPORTED_METHODS\", `${t}, methods should be an array of strings or empty array for no methods`), r;\n}\nfunction un(e, t) {\n    let r = null;\n    return Object.values(e).forEach((i)=>{\n        if (r) return;\n        const n = Ro(i, `${t}, namespace`);\n        n && (r = n);\n    }), r;\n}\nfunction vh(e, t, r) {\n    let i = null;\n    if (e && Xr(e)) {\n        const n = un(e, t);\n        n && (i = n);\n        const o = _o(e, t, r);\n        o && (i = o);\n    } else i = xe(\"MISSING_OR_INVALID\", `${t}, ${r} should be an object with data`);\n    return i;\n}\nfunction Oo(e, t) {\n    let r = null;\n    if (e && Xr(e)) {\n        const i = un(e, t);\n        i && (r = i);\n        const n = Co(e, t);\n        n && (r = n);\n    } else r = xe(\"MISSING_OR_INVALID\", `${t}, namespaces should be an object with data`);\n    return r;\n}\nfunction Po(e) {\n    return Yt(e.protocol, !0);\n}\nfunction gh(e, t) {\n    let r = !1;\n    return t && !e ? r = !0 : e && Nr(e) && e.length && e.forEach((i)=>{\n        r = Po(i);\n    }), r;\n}\nfunction mh(e) {\n    return typeof e == \"number\";\n}\nfunction Ah(e) {\n    return typeof e < \"u\" && typeof e !== null;\n}\nfunction bh(e) {\n    return !(!e || typeof e != \"object\" || !e.code || !$r(e.code, !1) || !e.message || !Yt(e.message, !1));\n}\nfunction yh(e) {\n    return !(Pe(e) || !Yt(e.method, !1));\n}\nfunction wh(e) {\n    return !(Pe(e) || Pe(e.result) && Pe(e.error) || !$r(e.id, !1) || !Yt(e.jsonrpc, !1));\n}\nfunction xh(e) {\n    return !(Pe(e) || !Yt(e.name, !1));\n}\nfunction Mh(e, t) {\n    return !(!_r(t) || !bo(e).includes(t));\n}\nfunction Eh(e, t, r) {\n    return Yt(r, !1) ? yo(e, t).includes(r) : !1;\n}\nfunction Sh(e, t, r) {\n    return Yt(r, !1) ? wo(e, t).includes(r) : !1;\n}\nfunction To(e, t, r) {\n    let i = null;\n    const n = Ih(e), o = Nh(t), h = Object.keys(n), p = Object.keys(o), A = Do(Object.keys(e)), v = Do(Object.keys(t)), w = A.filter((y)=>!v.includes(y));\n    return w.length && (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${w.toString()}\n      Received: ${Object.keys(t).toString()}`)), _e(h, p) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces chains don't satisfy required namespaces.\n      Required: ${h.toString()}\n      Approved: ${p.toString()}`)), Object.keys(t).forEach((y)=>{\n        if (!y.includes(\":\") || i) return;\n        const S = tr(t[y].accounts);\n        S.includes(y) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces accounts don't satisfy namespace accounts for ${y}\n        Required: ${y}\n        Approved: ${S.toString()}`));\n    }), h.forEach((y)=>{\n        i || (_e(n[y].methods, o[y].methods) ? _e(n[y].events, o[y].events) || (i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces events don't satisfy namespace events for ${y}`)) : i = xe(\"NON_CONFORMING_NAMESPACES\", `${r} namespaces methods don't satisfy namespace methods for ${y}`));\n    }), i;\n}\nfunction Ih(e) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        var i;\n        r.includes(\":\") ? t[r] = e[r] : (i = e[r].chains) == null || i.forEach((n)=>{\n            t[n] = {\n                methods: e[r].methods,\n                events: e[r].events\n            };\n        });\n    }), t;\n}\nfunction Do(e) {\n    return [\n        ...new Set(e.map((t)=>t.includes(\":\") ? t.split(\":\")[0] : t))\n    ];\n}\nfunction Nh(e) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        if (r.includes(\":\")) t[r] = e[r];\n        else {\n            const i = tr(e[r].accounts);\n            i?.forEach((n)=>{\n                t[n] = {\n                    accounts: e[r].accounts.filter((o)=>o.includes(`${n}:`)),\n                    methods: e[r].methods,\n                    events: e[r].events\n                };\n            });\n        }\n    }), t;\n}\nfunction _h(e, t) {\n    return $r(e, !1) && e <= t.max && e >= t.min;\n}\nfunction Bh() {\n    const e = We();\n    return new Promise((t)=>{\n        switch(e){\n            case qt.browser:\n                t(Fo());\n                break;\n            case qt.reactNative:\n                t(Uo());\n                break;\n            case qt.node:\n                t(ko());\n                break;\n            default:\n                t(!0);\n        }\n    });\n}\nfunction Fo() {\n    return gr() && navigator?.onLine;\n}\nasync function Uo() {\n    if (rr() && typeof global < \"u\" && global != null && global.NetInfo) {\n        const e = await (global == null ? void 0 : global.NetInfo.fetch());\n        return e?.isConnected;\n    }\n    return !0;\n}\nfunction ko() {\n    return !0;\n}\nfunction Ch(e) {\n    switch(We()){\n        case qt.browser:\n            qo(e);\n            break;\n        case qt.reactNative:\n            Ko(e);\n            break;\n        case qt.node:\n            break;\n    }\n}\nfunction qo(e) {\n    !rr() && gr() && (window.addEventListener(\"online\", ()=>e(!0)), window.addEventListener(\"offline\", ()=>e(!1)));\n}\nfunction Ko(e) {\n    rr() && typeof global < \"u\" && global != null && global.NetInfo && global?.NetInfo.addEventListener((t)=>e(t?.isConnected));\n}\nconst hn = {};\nclass Rh {\n    static get(t) {\n        return hn[t];\n    }\n    static set(t, r) {\n        hn[t] = r;\n    }\n    static delete(t) {\n        delete hn[t];\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdXRpbHMvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlDO0FBQThGO0FBQWtHO0FBQW9FO0FBQWdDO0FBQWdFO0FBQXdDO0FBQWlEO0FBQXVEO0FBQXFDO0FBQXNFO0FBQStCO0FBQXVEO0FBQTBEO0FBQUEsTUFBTXdDLEtBQUc7QUFBSSxTQUFTQyxHQUFHQyxDQUFDO0lBQUUsTUFBSyxDQUFDQyxHQUFFQyxFQUFFLEdBQUNGLEVBQUVHLEtBQUssQ0FBQ0w7SUFBSSxPQUFNO1FBQUNNLFdBQVVIO1FBQUVJLFdBQVVIO0lBQUM7QUFBQztBQUFDLFNBQVNJLEdBQUdOLENBQUM7SUFBRSxNQUFLLEVBQUNJLFdBQVVILENBQUMsRUFBQ0ksV0FBVUgsQ0FBQyxFQUFDLEdBQUNGO0lBQUUsT0FBTTtRQUFDQztRQUFFQztLQUFFLENBQUNLLElBQUksQ0FBQ1Q7QUFBRztBQUFDLFNBQVNVLEdBQUdSLENBQUM7SUFBRSxNQUFLLENBQUNDLEdBQUVDLEdBQUVPLEVBQUUsR0FBQ1QsRUFBRUcsS0FBSyxDQUFDTDtJQUFJLE9BQU07UUFBQ00sV0FBVUg7UUFBRUksV0FBVUg7UUFBRVEsU0FBUUQ7SUFBQztBQUFDO0FBQUMsU0FBU0UsR0FBR1gsQ0FBQztJQUFFLE1BQUssRUFBQ0ksV0FBVUgsQ0FBQyxFQUFDSSxXQUFVSCxDQUFDLEVBQUNRLFNBQVFELENBQUMsRUFBQyxHQUFDVDtJQUFFLE9BQU07UUFBQ0M7UUFBRUM7UUFB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LElBQUUsSUFBSSxDQUFDUCxLQUFLLEVBQUNuQixJQUFFVixLQUFHb0MsSUFBRXRDLEdBQUUsRUFBRVksRUFBRTJCLElBQUVuRCxFQUFFb0QsVUFBVSxDQUFDNUIsSUFBRzJCLElBQUUsTUFBSTNDLENBQUMsQ0FBQzBDLEtBQUcsRUFBRSxJQUFFQyxLQUFHM0QsQ0FBQyxDQUFDMEQsTUFBSSxFQUFFLEdBQUNDLElBQUUsT0FBTTNDLENBQUFBLENBQUMsQ0FBQzBDLEtBQUcsRUFBRSxJQUFFLENBQUMsTUFBSUMsS0FBRyxNQUFJM0QsQ0FBQyxDQUFDMEQsTUFBSSxFQUFFLEVBQUMxQyxDQUFDLENBQUMwQyxLQUFHLEVBQUUsSUFBRSxDQUFDLE1BQUlDLElBQUUsRUFBQyxLQUFJM0QsQ0FBQyxDQUFDMEQsTUFBSSxFQUFFLElBQUVDLElBQUUsU0FBT0EsS0FBRyxRQUFPM0MsQ0FBQUEsQ0FBQyxDQUFDMEMsS0FBRyxFQUFFLElBQUUsQ0FBQyxNQUFJQyxLQUFHLEVBQUMsS0FBSTNELENBQUMsQ0FBQzBELE1BQUksRUFBRSxFQUFDMUMsQ0FBQyxDQUFDMEMsS0FBRyxFQUFFLElBQUUsQ0FBQyxNQUFJQyxLQUFHLElBQUUsRUFBQyxLQUFJM0QsQ0FBQyxDQUFDMEQsTUFBSSxFQUFFLEVBQUMxQyxDQUFDLENBQUMwQyxLQUFHLEVBQUUsSUFBRSxDQUFDLE1BQUlDLElBQUUsRUFBQyxLQUFJM0QsQ0FBQyxDQUFDMEQsTUFBSSxFQUFFLElBQUdDLENBQUFBLElBQUUsUUFBTyxFQUFDQSxJQUFFLElBQUcsS0FBSSxLQUFHbkQsRUFBRW9ELFVBQVUsQ0FBQyxFQUFFNUIsS0FBRyxJQUFHLEdBQUdoQixDQUFDLENBQUMwQyxLQUFHLEVBQUUsSUFBRSxDQUFDLE1BQUlDLEtBQUcsRUFBQyxLQUFJM0QsQ0FBQyxDQUFDMEQsTUFBSSxFQUFFLEVBQUMxQyxDQUFDLENBQUMwQyxLQUFHLEVBQUUsSUFBRSxDQUFDLE1BQUlDLEtBQUcsS0FBRyxFQUFDLEtBQUkzRCxDQUFDLENBQUMwRCxNQUFJLEVBQUUsRUFBQzFDLENB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LEdBQUVDLEdBQUVJLEdBQUVFLEdBQUVDLEdBQUVTLEdBQUV5QixJQUFHQyxHQUFFQyxHQUFFYSxJQUFHQyxHQUFFQyxHQUFFQyxJQUFHQyxHQUFFQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQyxJQUFHQztZQUFHLElBQUk1RyxJQUFFLEdBQUVBLElBQUUsSUFBR0EsS0FBRyxFQUFFSSxJQUFFWixDQUFDLENBQUMsRUFBRSxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxFQUFDYyxJQUFFZCxDQUFDLENBQUMsRUFBRSxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxFQUFDZSxJQUFFZixDQUFDLENBQUMsRUFBRSxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxFQUFDd0IsSUFBRXhCLENBQUMsQ0FBQyxFQUFFLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEVBQUNpRCxLQUFHakQsQ0FBQyxDQUFDLEVBQUUsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsRUFBQ2tELElBQUVsRCxDQUFDLENBQUMsRUFBRSxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxFQUFDbUQsSUFBRW5ELENBQUMsQ0FBQyxFQUFFLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEVBQUNnRSxLQUFHaEUsQ0FBQyxDQUFDLEVBQUUsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsR0FBQ0EsQ0FBQyxDQUFDLEdBQUcsRUFBQ2lFLElBQUVqRSxDQUFDLENBQUMsRUFBRSxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxHQUFDQSxDQUFDLENBQUMsR0FBRyxFQUFDa0UsSUFBRWxFLENBQUMsQ0FBQyxFQUFFLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEdBQUNBLENBQUMsQ0FBQyxHQUFHLEVBQUNNLElBQUUyRCxJQUFHbEQsQ0FBQUEsS0FBRyxJQUFFUyxNQUFJLEVBQUMsR0FBR2pCLElBQUUyRCxJQUFHMUMsQ0FBQUEsS0FBRyxJQUFFVCxNQUFJLEVBQUMsR0FBR2YsQ0FBQyxDQUFDLEVBQUUsSUFBRU0sR0FBRU4sQ0FBQyxDQUFDLEVBQUUsSUFBRU8sR0FBRVAsQ0FBQyxDQUFDLEdBQUcsSUFBRU0sR0FBRU4sQ0FBQyxDQUFDLEdBQUcsSUFBRU8sR0FBRVAsQ0FBQyxDQUFDLEdBQUcsSUFBRU0sR0FBRU4sQ0FBQyxDQUFDLEdBQUcsSUFBRU8sR0FBRVAsQ0FBQyxD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S0FBR2xGLENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHaUgsS0FBR2pILENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHa0gsS0FBR2xILENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHK0YsS0FBRy9GLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHZ0csS0FBR2hHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHdUYsS0FBR3ZGLENBQUMsQ0FBQyxFQUFFLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEVBQUUsS0FBRyxJQUFHd0YsS0FBR3hGLENBQUMsQ0FBQyxFQUFFLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEVBQUUsS0FBRyxJQUFHcUUsS0FBR3JFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHc0UsS0FBR3RFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHcUcsS0FBR3JHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHc0csS0FBR3RHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHbUYsS0FBR25GLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHb0YsS0FBR3BGLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHbUgsS0FBR25ILENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHb0gsS0FBR3BILENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHMkcsS0FBRzNHLENBQUMsQ0FBQyxFQUFFLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsS0FBRyxHQUFFNEcsS0FBRzVHLENBQUMsQ0FBQyxFQUFFLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsS0FBRyxHQUFFeUYsS0FBR3pGLENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHMEYsS0FBRzFGLENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHdUUsS0FBR3ZFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHd0UsS0FBR3hFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHdUcsS0FBR3ZHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHd0csS0FBR3hHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHcUYsS0FBR3JGLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFc0YsS0FBR3RGLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFNkUsS0FBRzdFLENBQUMsQ0FBQyxFQUFFLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsS0FBRyxHQUFFOEUsS0FBRzlFLENBQUMsQ0FBQyxFQUFFLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsS0FBRyxHQUFFNkcsS0FBRzdHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFOEcsS0FBRzlHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFMkYsS0FBRzNGLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFNEYsS0FBRzVGLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFeUUsS0FBR3pFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHMEUsS0FBRzFFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHeUcsS0FBR3pHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFMEcsS0FBRzFHLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxHQUFFaUcsS0FBR2pHLENBQUMsQ0FBQyxFQUFFLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsS0FBRyxHQUFFa0csS0FBR2xHLENBQUMsQ0FBQyxFQUFFLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsS0FBRyxHQUFFK0UsS0FBRy9FLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHZ0YsS0FBR2hGLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHK0csS0FBRy9HLENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHZ0gsS0FBR2hILENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHNkYsS0FBRzdGLENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHOEYsS0FBRzlGLENBQUMsQ0FBQyxHQUFHLElBQUUsSUFBRUEsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHMkUsS0FBRzNFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHNEUsS0FBRzVFLENBQUMsQ0FBQyxHQUFHLElBQUUsS0FBR0EsQ0FBQyxDQUFDLEdBQUcsS0FBRyxJQUFHQSxD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O0lBQUc7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRTtJQUFHO0lBQUc7SUFBRTtJQUFFO0lBQUU7SUFBRztJQUFFO0lBQUc7Q0FBRyxFQUFDRyxLQUFHO0lBQUM7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFFO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRTtJQUFFO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRztJQUFHO0lBQUU7SUFBRztJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRTtJQUFFO0lBQUc7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFFO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFHO0lBQUc7SUFBRztJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFFO0lBQUU7SUFBRTtDQUFHLEVBQUNELEtBQUc7SUFBQztJQUFHO0lBQUc7SUFBRztJQUFHO0lBQUU7SUFBRTtJQUFFO0lBQUU7SUFBRztJQUFHO0lBQUc7SUFBRztJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFFO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRztJQUFFO0lBQUc7SUFBRTtJQUFHO0lBQUc7SUFBRztJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRztJQUFHO0lBQUc7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUc7SUFBRztJQUFHO0lBQUc7SUFBRztJQUFFO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFFO0lBQUc7SUFBRztJQUFHO0lBQUc7SUFBRTtJQUFFO0NBQUUsRUFBQ0csS0FBRztJQUFDO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFHO0lBQUc7SUFBRTtJQUFFO0lBQUU7SUFBRTtJQUFHO0lBQUc7SUFBRztJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUc7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFHO0lBQUc7SUFBRztJQUFFO0lBQUU7SUFBRztJQUFHO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFHO0lBQUU7SUFBRztJQUFHO0lBQUc7SUFBRTtJQUFFO0lBQUc7SUFBRTtJQUFFO0lBQUc7SUFBRztJQUFHO0lBQUU7SUFBRztJQUFFO0lBQUU7SUFBRztJQUFFO0lBQUc7SUFBRTtJQUFHO0lBQUU7SUFBRTtJQUFFO0lBQUc7SUFBRTtJQUFHO0lBQUU7SUFBRztJQUFFO0lBQUU7SUFBRztJQUFFO0lBQUU7SUFBRztJQUFHO0lBQUc7Q0FBRyxFQUFDQyxLQUFHdEwsR0FBRXVMLEtBQUd0TDtBQUFHLFNBQVN1TCxHQUFHLzVCLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBRyxDQUFFLEtBQUksWUFBWTY1QixFQUFDLEdBQUcsT0FBTyxJQUFJQSxHQUFHLzVCLEdBQUVDLEdBQUVDO0lBQUcsSUFBSSxDQUFDODVCLElBQUksR0FBQ2g2QixHQUFFLElBQUksQ0FBQ3N5QixTQUFTLEdBQUN0eUIsRUFBRXN5QixTQUFTLEdBQUMsR0FBRSxJQUFJLENBQUNDLE9BQU8sR0FBQ3Z5QixFQUFFdXlCLE9BQU8sR0FBQyxHQUFFLElBQUksQ0FBQzBILEtBQUssR0FBQyxNQUFLLElBQUksQ0FBQ0MsS0FBSyxHQUFDLE1BQUssSUFBSSxDQUFDcGUsS0FBSyxDQUFDK2QsR0FBR3RkLE9BQU8sQ0FBQ3RjLEdBQUVDO0FBQUc7QUFBQyxJQUFJaTZCLEtBQUdKO0FBQUdBLEdBQUczM0IsU0FBUyxDQUFDMFosS0FBSyxHQUFDLFNBQVM3YixDQUFDO0lBQUVBLEVBQUV3QixNQUFNLEdBQUMsSUFBSSxDQUFDNndCLFNBQVMsSUFBR3J5QixDQUFBQSxJQUFFLElBQUksSUFBSSxDQUFDKzVCLElBQUksR0FBRzdyQixNQUFNLENBQUNsTyxHQUFHc1IsTUFBTSxFQUFDLEdBQUd1b0IsR0FBRzc1QixFQUFFd0IsTUFBTSxJQUFFLElBQUksQ0FBQzZ3QixTQUFTO0lBQUUsSUFBSSxJQUFJcHlCLElBQUVELEVBQUV3QixNQUFNLEVBQUN2QixJQUFFLElBQUksQ0FBQ295QixTQUFTLEVBQUNweUIsSUFBSUQsRUFBRWUsSUFBSSxDQUFDO0lBQUcsSUFBSWQsSUFBRSxHQUFFQSxJQUFFRCxFQUFFd0IsTUFBTSxFQUFDdkIsSUFBSUQsQ0FBQyxDQUFDQyxFQUFFLElBQUU7SUFBRyxJQUFJLElBQUksQ0FBQys1QixLQUFLLEdBQUMsSUFBSSxJQUFJLENBQUNELElBQUksR0FBRzdyQixNQUFNLENBQUNsTyxJQUFHQyxJQUFFLEdBQUVBLElBQUVELEVBQUV3QixNQUFNLEVBQUN2QixJQUFJRCxDQUFDLENBQUNDLEVBQUUsSUFBRTtJQUFJLElBQUksQ0FBQ2c2QixLQUFLLEdBQUMsSUFBSSxJQUFJLENBQUNGLElBQUksR0FBRzdyQixNQUFNLENBQUNsTztBQUFFLEdBQUU4NUIsR0FBRzMzQixTQUFTLENBQUMrTCxNQUFNLEdBQUMsU0FBU2xPLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE9BQU8sSUFBSSxDQUFDKzVCLEtBQUssQ0FBQzlyQixNQUFNLENBQUNsTyxHQUFFQyxJQUFHLElBQUk7QUFBQSxHQUFFNjVCLEdBQUczM0IsU0FBUyxDQUFDbVAsTUFBTSxHQUFDLFNBQVN0UixDQUFDO0lBQUUsT0FBTyxJQUFJLENBQUNpNkIsS0FBSyxDQUFDL3JCLE1BQU0sQ0FBQyxJQUFJLENBQUM4ckIsS0FBSyxDQUFDMW9CLE1BQU0sS0FBSSxJQUFJLENBQUMyb0IsS0FBSyxDQUFDM29CLE1BQU0sQ0FBQ3RSO0FBQUUsR0FBRSxTQUFTRCxDQUFDO0lBQUUsSUFBSUMsSUFBRUQ7SUFBRUMsRUFBRW02QixLQUFLLEdBQUM3TCxHQUFFdHVCLEVBQUVvNkIsTUFBTSxHQUFDcmIsSUFBRy9lLEVBQUVxNkIsR0FBRyxHQUFDckgsSUFBR2h6QixFQUFFczZCLE1BQU0sR0FBQzNCLElBQUczNEIsRUFBRXU2QixJQUFJLEdBQUNMLElBQUdsNkIsRUFBRXM0QixJQUFJLEdBQUN0NEIsRUFBRXE2QixHQUFHLENBQUMvQixJQUFJLEVBQUN0NEIsRUFBRXc0QixNQUFNLEdBQUN4NEIsRUFBRXE2QixHQUFHLENBQUM3QixNQUFNLEVBQUN4NEIsRUFBRXU0QixNQUFNLEdBQUN2NEIsRUFBRXE2QixHQUFHLENBQUM5QixNQUFNLEVBQUN2NEIsRUFBRXk0QixNQUFNLEdBQUN6NEIsRUFBRXE2QixHQUFHLENBQUM1QixNQUFNLEVBQUN6NEIsRUFBRTA0QixNQUFNLEdBQUMxNEIsRUFBRXE2QixHQUFHLENBQUMzQixNQUFNLEVBQUMxNEIsRUFBRW81QixTQUFTLEdBQUNwNUIsRUFBRXM2QixNQUFNLENBQUNsQixTQUFTO0FBQUEsRUFBRS9LO0FBQUksU0FBU21NLEdBQUd6NkIsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxPQUFPQSxJQUFFO1FBQUN3NkIsTUFBS3o2QjtRQUFFd00sU0FBUSxDQUFDO1FBQUVrdUIsU0FBUSxTQUFTbDZCLENBQUMsRUFBQ0ssQ0FBQztZQUFFLE9BQU84NUIsR0FBR242QixHQUFFSyxLQUFHWixFQUFFdzZCLElBQUk7UUFBQztJQUFDLEdBQUUxNkIsRUFBRUUsR0FBRUEsRUFBRXVNLE9BQU8sR0FBRXZNLEVBQUV1TSxPQUFPO0FBQUE7QUFBQyxTQUFTbXVCO0lBQUssTUFBTSxJQUFJNXpCLE1BQU07QUFBMEU7QUFBQyxJQUFJNnpCLEtBQUdDO0FBQUcsU0FBU0EsR0FBRzk2QixDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFHLENBQUNELEdBQUUsTUFBTSxJQUFJZ0gsTUFBTS9HLEtBQUc7QUFBbUI7QUFBQzY2QixHQUFHcE0sS0FBSyxHQUFDLFNBQVN6dUIsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUM7SUFBRSxJQUFHUixLQUFHQyxHQUFFLE1BQU0sSUFBSThHLE1BQU12RyxLQUFHLHVCQUFxQlIsSUFBRSxTQUFPQztBQUFFO0FBQUUsSUFBSTY2QixLQUFHTixHQUFHLFNBQVN6NkIsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSUMsSUFBRUQ7SUFBRSxTQUFTUSxFQUFFMkYsQ0FBQyxFQUFDRSxDQUFDO1FBQUUsSUFBR2lILE1BQU1DLE9BQU8sQ0FBQ3BILElBQUcsT0FBT0EsRUFBRWtCLEtBQUs7UUFBRyxJQUFHLENBQUNsQixHQUFFLE9BQU0sRUFBRTtRQUFDLElBQUlHLElBQUUsRUFBRTtRQUFDLElBQUcsT0FBT0gsS0FBRyxVQUFTO1lBQUMsSUFBSSxJQUFJSSxJQUFFLEdBQUVBLElBQUVKLEVBQUUzRSxNQUFNLEVBQUMrRSxJQUFJRCxDQUFDLENBQUNDLEVBQUUsR0FBQ0osQ0FBQyxDQUFDSSxFQUFFLEdBQUM7WUFBRSxPQUFPRDtRQUFDO1FBQUMsSUFBR0QsTUFBSSxPQUFNO1lBQUNGLElBQUVBLEVBQUVaLE9BQU8sQ0FBQyxnQkFBZSxLQUFJWSxFQUFFM0UsTUFBTSxHQUFDLE1BQUksS0FBSTJFLENBQUFBLElBQUUsTUFBSUEsQ0FBQUE7WUFBRyxJQUFJLElBQUlJLElBQUUsR0FBRUEsSUFBRUosRUFBRTNFLE1BQU0sRUFBQytFLEtBQUcsRUFBRUQsRUFBRXZGLElBQUksQ0FBQzhZLFNBQVMxVCxDQUFDLENBQUNJLEVBQUUsR0FBQ0osQ0FBQyxDQUFDSSxJQUFFLEVBQUUsRUFBQztRQUFJLE9BQU0sSUFBSSxJQUFJQSxJQUFFLEdBQUVBLElBQUVKLEVBQUUzRSxNQUFNLEVBQUMrRSxJQUFJO1lBQUMsSUFBSUMsSUFBRUwsRUFBRXlLLFVBQVUsQ0FBQ3JLLElBQUdJLElBQUVILEtBQUcsR0FBRXNHLElBQUV0RyxJQUFFO1lBQUlHLElBQUVMLEVBQUV2RixJQUFJLENBQUM0RixHQUFFbUcsS0FBR3hHLEVBQUV2RixJQUFJLENBQUMrTDtRQUFFO1FBQUMsT0FBT3hHO0lBQUM7SUFBQ3JHLEVBQUVxYyxPQUFPLEdBQUM5YjtJQUFFLFNBQVNLLEVBQUVzRixDQUFDO1FBQUUsT0FBT0EsRUFBRTNFLE1BQU0sS0FBRyxJQUFFLE1BQUkyRSxJQUFFQTtJQUFDO0lBQUNsRyxFQUFFdXZCLEtBQUssR0FBQzN1QjtJQUFFLFNBQVNvRixFQUFFRSxDQUFDO1FBQUUsSUFBSSxJQUFJRSxJQUFFLElBQUdDLElBQUUsR0FBRUEsSUFBRUgsRUFBRTNFLE1BQU0sRUFBQzhFLElBQUlELEtBQUd4RixFQUFFc0YsQ0FBQyxDQUFDRyxFQUFFLENBQUNySCxRQUFRLENBQUM7UUFBSyxPQUFPb0g7SUFBQztJQUFDcEcsRUFBRWl2QixLQUFLLEdBQUNqcEIsR0FBRWhHLEVBQUU4USxNQUFNLEdBQUMsU0FBUzFLLENBQUMsRUFBQ0MsQ0FBQztRQUFFLE9BQU9BLE1BQUksUUFBTUwsRUFBRUksS0FBR0E7SUFBQztBQUFDLElBQUcwMEIsS0FBR1AsR0FBRyxTQUFTejZCLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlDLElBQUVEO0lBQUVDLEVBQUVtWSxNQUFNLEdBQUN3aUIsSUFBRzM2QixFQUFFcWMsT0FBTyxHQUFDd2UsR0FBR3hlLE9BQU8sRUFBQ3JjLEVBQUV1dkIsS0FBSyxHQUFDc0wsR0FBR3RMLEtBQUssRUFBQ3Z2QixFQUFFaXZCLEtBQUssR0FBQzRMLEdBQUc1TCxLQUFLLEVBQUNqdkIsRUFBRThRLE1BQU0sR0FBQytwQixHQUFHL3BCLE1BQU07SUFBQyxTQUFTdlEsRUFBRThGLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO1FBQUUsSUFBSUcsSUFBRSxJQUFJMkcsTUFBTWhHLEtBQUtDLEdBQUcsQ0FBQ2pCLEVBQUUyWCxTQUFTLElBQUd6WCxLQUFHO1FBQUdHLEVBQUUybEIsSUFBSSxDQUFDO1FBQUcsSUFBSSxJQUFJeGYsSUFBRSxLQUFHdkcsSUFBRSxHQUFFd0csSUFBRXpHLEVBQUV1VyxLQUFLLElBQUc3UCxJQUFFLEdBQUVBLElBQUVyRyxFQUFFbkYsTUFBTSxFQUFDd0wsSUFBSTtZQUFDLElBQUlDLEdBQUVDLElBQUVILEVBQUUyVixLQUFLLENBQUM1VixJQUFFO1lBQUdDLEVBQUUrVixLQUFLLEtBQUk1VixDQUFBQSxJQUFFLENBQUNKLEtBQUcsS0FBRyxJQUFFRyxJQUFFLENBQUNILEtBQUcsS0FBR0ksSUFBRUQsSUFBRUMsR0FBRUgsRUFBRStVLEtBQUssQ0FBQzdVLEVBQUMsSUFBR0EsSUFBRSxHQUFFdEcsQ0FBQyxDQUFDcUcsRUFBRSxHQUFDQyxHQUFFRixFQUFFdVUsTUFBTSxDQUFDO1FBQUU7UUFBQyxPQUFPM2E7SUFBQztJQUFDMUcsRUFBRSs2QixNQUFNLEdBQUN4NkI7SUFBRSxTQUFTSyxFQUFFeUYsQ0FBQyxFQUFDQyxDQUFDO1FBQUUsSUFBSUMsSUFBRTtZQUFDLEVBQUU7WUFBQyxFQUFFO1NBQUM7UUFBQ0YsSUFBRUEsRUFBRXVXLEtBQUssSUFBR3RXLElBQUVBLEVBQUVzVyxLQUFLO1FBQUcsSUFBSSxJQUFJbFcsSUFBRSxHQUFFbUcsSUFBRSxHQUFFQyxHQUFFekcsRUFBRTJjLElBQUksQ0FBQyxDQUFDdGMsS0FBRyxLQUFHSixFQUFFMGMsSUFBSSxDQUFDLENBQUNuVyxLQUFHLEdBQUc7WUFBQyxJQUFJRSxJQUFFMUcsRUFBRW9jLEtBQUssQ0FBQyxLQUFHL2IsSUFBRSxHQUFFc0csSUFBRTFHLEVBQUVtYyxLQUFLLENBQUMsS0FBRzVWLElBQUU7WUFBRUUsTUFBSSxLQUFJQSxDQUFBQSxJQUFFLENBQUMsSUFBR0MsTUFBSSxLQUFJQSxDQUFBQSxJQUFFLENBQUM7WUFBRyxJQUFJQztZQUFFRixJQUFFLElBQUdELENBQUFBLElBQUV6RyxFQUFFb2MsS0FBSyxDQUFDLEtBQUcvYixJQUFFLEdBQUUsQ0FBQ29HLE1BQUksS0FBR0EsTUFBSSxNQUFJRSxNQUFJLElBQUVDLElBQUUsQ0FBQ0YsSUFBRUUsSUFBRUYsQ0FBQUEsSUFBR0UsSUFBRSxHQUFFMUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQ3pGLElBQUksQ0FBQ21NO1lBQUcsSUFBSUM7WUFBRUYsSUFBRSxJQUFHRixDQUFBQSxJQUFFeEcsRUFBRW1jLEtBQUssQ0FBQyxLQUFHNVYsSUFBRSxHQUFFLENBQUNDLE1BQUksS0FBR0EsTUFBSSxNQUFJQyxNQUFJLElBQUVHLElBQUUsQ0FBQ0YsSUFBRUUsSUFBRUYsQ0FBQUEsSUFBR0UsSUFBRSxHQUFFM0csQ0FBQyxDQUFDLEVBQUUsQ0FBQ3pGLElBQUksQ0FBQ29NLElBQUcsSUFBRXhHLE1BQUl1RyxJQUFFLEtBQUl2RyxDQUFBQSxJQUFFLElBQUVBLENBQUFBLEdBQUcsSUFBRW1HLE1BQUlLLElBQUUsS0FBSUwsQ0FBQUEsSUFBRSxJQUFFQSxDQUFBQSxHQUFHeEcsRUFBRWdiLE1BQU0sQ0FBQyxJQUFHL2EsRUFBRSthLE1BQU0sQ0FBQztRQUFFO1FBQUMsT0FBTzlhO0lBQUM7SUFBQ3ZHLEVBQUVnN0IsTUFBTSxHQUFDcDZCO0lBQUUsU0FBU29GLEVBQUVLLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO1FBQUUsSUFBSUcsSUFBRSxNQUFJSjtRQUFFRCxFQUFFbkUsU0FBUyxDQUFDb0UsRUFBRSxHQUFDO1lBQVcsT0FBTyxJQUFJLENBQUNJLEVBQUUsS0FBRyxLQUFLLElBQUUsSUFBSSxDQUFDQSxFQUFFLEdBQUMsSUFBSSxDQUFDQSxFQUFFLEdBQUNILEVBQUUzRCxJQUFJLENBQUMsSUFBSTtRQUFDO0lBQUM7SUFBQzVDLEVBQUVpN0IsY0FBYyxHQUFDajFCO0lBQUUsU0FBU0UsRUFBRUcsQ0FBQztRQUFFLE9BQU8sT0FBT0EsS0FBRyxXQUFTckcsRUFBRXFjLE9BQU8sQ0FBQ2hXLEdBQUUsU0FBT0E7SUFBQztJQUFDckcsRUFBRWs3QixVQUFVLEdBQUNoMUI7SUFBRSxTQUFTRSxFQUFFQyxDQUFDO1FBQUUsT0FBTyxJQUFJK2YsRUFBRS9mLEdBQUUsT0FBTTtJQUFLO0lBQUNyRyxFQUFFbTdCLFNBQVMsR0FBQy8wQjtBQUFDLElBQUdnMUIsS0FBR04sR0FBR0MsTUFBTSxFQUFDTSxLQUFHUCxHQUFHRSxNQUFNLEVBQUNNLEtBQUdSLEdBQUczaUIsTUFBTTtBQUFDLFNBQVNvakIsR0FBR3o3QixDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFJLENBQUN5RixJQUFJLEdBQUMxRixHQUFFLElBQUksQ0FBQ3NHLENBQUMsR0FBQyxJQUFJZ2dCLEVBQUVybUIsRUFBRXFHLENBQUMsRUFBQyxLQUFJLElBQUksQ0FBQ3VWLEdBQUcsR0FBQzViLEVBQUU4bEIsS0FBSyxHQUFDTyxFQUFFekssR0FBRyxDQUFDNWIsRUFBRThsQixLQUFLLElBQUVPLEVBQUVMLElBQUksQ0FBQyxJQUFJLENBQUMzZixDQUFDLEdBQUUsSUFBSSxDQUFDbzFCLElBQUksR0FBQyxJQUFJcFYsRUFBRSxHQUFHeEMsS0FBSyxDQUFDLElBQUksQ0FBQ2pJLEdBQUcsR0FBRSxJQUFJLENBQUM4ZixHQUFHLEdBQUMsSUFBSXJWLEVBQUUsR0FBR3hDLEtBQUssQ0FBQyxJQUFJLENBQUNqSSxHQUFHLEdBQUUsSUFBSSxDQUFDK2YsR0FBRyxHQUFDLElBQUl0VixFQUFFLEdBQUd4QyxLQUFLLENBQUMsSUFBSSxDQUFDakksR0FBRyxHQUFFLElBQUksQ0FBQy9hLENBQUMsR0FBQ2IsRUFBRWEsQ0FBQyxJQUFFLElBQUl3bEIsRUFBRXJtQixFQUFFYSxDQUFDLEVBQUMsS0FBSSxJQUFJLENBQUNxTyxDQUFDLEdBQUNsUCxFQUFFa1AsQ0FBQyxJQUFFLElBQUksQ0FBQzBzQixhQUFhLENBQUM1N0IsRUFBRWtQLENBQUMsRUFBQ2xQLEVBQUU2N0IsSUFBSSxHQUFFLElBQUksQ0FBQ0MsT0FBTyxHQUFDLElBQUl4dUIsTUFBTSxJQUFHLElBQUksQ0FBQ3l1QixPQUFPLEdBQUMsSUFBSXp1QixNQUFNLElBQUcsSUFBSSxDQUFDMHVCLE9BQU8sR0FBQyxJQUFJMXVCLE1BQU0sSUFBRyxJQUFJLENBQUMydUIsT0FBTyxHQUFDLElBQUkzdUIsTUFBTSxJQUFHLElBQUksQ0FBQzR1QixVQUFVLEdBQUMsSUFBSSxDQUFDcjdCLENBQUMsR0FBQyxJQUFJLENBQUNBLENBQUMsQ0FBQ29kLFNBQVMsS0FBRztJQUFFLElBQUloZSxJQUFFLElBQUksQ0FBQ1ksQ0FBQyxJQUFFLElBQUksQ0FBQ3dGLENBQUMsQ0FBQytiLEdBQUcsQ0FBQyxJQUFJLENBQUN2aEIsQ0FBQztJQUFFLENBQUNaLEtBQUdBLEVBQUVnakIsSUFBSSxDQUFDLE9BQUssSUFBRSxJQUFJLENBQUNrWixJQUFJLEdBQUMsT0FBTSxLQUFJLENBQUNDLGFBQWEsR0FBQyxDQUFDLEdBQUUsSUFBSSxDQUFDRCxJQUFJLEdBQUMsSUFBSSxDQUFDdDdCLENBQUMsQ0FBQ2dqQixLQUFLLENBQUMsSUFBSSxDQUFDakksR0FBRztBQUFFO0FBQUMsSUFBSXlnQixLQUFHYjtBQUFHQSxHQUFHcjVCLFNBQVMsQ0FBQ202QixLQUFLLEdBQUM7SUFBVyxNQUFNLElBQUl2MUIsTUFBTTtBQUFrQixHQUFFeTBCLEdBQUdyNUIsU0FBUyxDQUFDbzZCLFFBQVEsR0FBQztJQUFXLE1BQU0sSUFBSXgxQixNQUFNO0FBQWtCLEdBQUV5MEIsR0FBR3I1QixTQUFTLENBQUNxNkIsWUFBWSxHQUFDLFNBQVN4OEIsQ0FBQyxFQUFDQyxDQUFDO0lBQUVzN0IsR0FBR3Y3QixFQUFFeThCLFdBQVc7SUFBRSxJQUFJajhCLElBQUVSLEVBQUUwOEIsV0FBVyxJQUFHNzdCLElBQUV3NkIsR0FBR3A3QixHQUFFLEdBQUUsSUFBSSxDQUFDaThCLFVBQVUsR0FBRWoyQixJQUFFLENBQUMsS0FBR3pGLEVBQUVtOEIsSUFBSSxHQUFDLEtBQUluOEIsQ0FBQUEsRUFBRW04QixJQUFJLEdBQUMsTUFBSSxJQUFFLElBQUU7SUFBRzEyQixLQUFHO0lBQUUsSUFBSUUsSUFBRSxFQUFFLEVBQUNFLEdBQUVDO0lBQUUsSUFBSUQsSUFBRSxHQUFFQSxJQUFFeEYsRUFBRVcsTUFBTSxFQUFDNkUsS0FBRzdGLEVBQUVtOEIsSUFBSSxDQUFDO1FBQUNyMkIsSUFBRTtRQUFFLElBQUksSUFBSUMsSUFBRUYsSUFBRTdGLEVBQUVtOEIsSUFBSSxHQUFDLEdBQUVwMkIsS0FBR0YsR0FBRUUsSUFBSUQsSUFBRSxDQUFDQSxLQUFHLEtBQUd6RixDQUFDLENBQUMwRixFQUFFO1FBQUNKLEVBQUVwRixJQUFJLENBQUN1RjtJQUFFO0lBQUMsSUFBSSxJQUFJRSxJQUFFLElBQUksQ0FBQ28yQixNQUFNLENBQUMsTUFBSyxNQUFLLE9BQU1qMkIsSUFBRSxJQUFJLENBQUNpMkIsTUFBTSxDQUFDLE1BQUssTUFBSyxPQUFNOXZCLElBQUU3RyxHQUFFNkcsSUFBRSxHQUFFQSxJQUFJO1FBQUMsSUFBSXpHLElBQUUsR0FBRUEsSUFBRUYsRUFBRTNFLE1BQU0sRUFBQzZFLElBQUlDLElBQUVILENBQUMsQ0FBQ0UsRUFBRSxFQUFDQyxNQUFJd0csSUFBRW5HLElBQUVBLEVBQUVrMkIsUUFBUSxDQUFDcjhCLEVBQUVzOEIsTUFBTSxDQUFDejJCLEVBQUUsSUFBRUMsTUFBSSxDQUFDd0csS0FBSW5HLENBQUFBLElBQUVBLEVBQUVrMkIsUUFBUSxDQUFDcjhCLEVBQUVzOEIsTUFBTSxDQUFDejJCLEVBQUUsQ0FBQ3VZLEdBQUcsR0FBRTtRQUFHcFksSUFBRUEsRUFBRW9aLEdBQUcsQ0FBQ2paO0lBQUU7SUFBQyxPQUFPSCxFQUFFdTJCLEdBQUc7QUFBRSxHQUFFdkIsR0FBR3I1QixTQUFTLENBQUM2NkIsUUFBUSxHQUFDLFNBQVNoOUIsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSU8sSUFBRSxHQUFFSyxJQUFFYixFQUFFaTlCLGFBQWEsQ0FBQ3o4QjtJQUFHQSxJQUFFSyxFQUFFcThCLEdBQUc7SUFBQyxJQUFJLElBQUlqM0IsSUFBRXBGLEVBQUVpOEIsTUFBTSxFQUFDMzJCLElBQUVrMUIsR0FBR3A3QixHQUFFTyxHQUFFLElBQUksQ0FBQzA3QixVQUFVLEdBQUU3MUIsSUFBRSxJQUFJLENBQUN1MkIsTUFBTSxDQUFDLE1BQUssTUFBSyxPQUFNdDJCLElBQUVILEVBQUUzRSxNQUFNLEdBQUMsR0FBRThFLEtBQUcsR0FBRUEsSUFBSTtRQUFDLElBQUksSUFBSUMsSUFBRSxHQUFFRCxLQUFHLEtBQUdILENBQUMsQ0FBQ0csRUFBRSxLQUFHLEdBQUVBLElBQUlDO1FBQUksSUFBR0QsS0FBRyxLQUFHQyxLQUFJRixJQUFFQSxFQUFFODJCLElBQUksQ0FBQzUyQixJQUFHRCxJQUFFLEdBQUU7UUFBTSxJQUFJRSxJQUFFTCxDQUFDLENBQUNHLEVBQUU7UUFBQ2kxQixHQUFHLzBCLE1BQUksSUFBR3hHLEVBQUV5RixJQUFJLEtBQUcsV0FBU2UsSUFBRSxJQUFFSCxJQUFFQSxFQUFFdzJCLFFBQVEsQ0FBQzUyQixDQUFDLENBQUNPLElBQUUsS0FBRyxFQUFFLElBQUVILElBQUVBLEVBQUV3MkIsUUFBUSxDQUFDNTJCLENBQUMsQ0FBQyxDQUFDTyxJQUFFLEtBQUcsRUFBRSxDQUFDb1ksR0FBRyxNQUFJcFksSUFBRSxJQUFFSCxJQUFFQSxFQUFFdVosR0FBRyxDQUFDM1osQ0FBQyxDQUFDTyxJQUFFLEtBQUcsRUFBRSxJQUFFSCxJQUFFQSxFQUFFdVosR0FBRyxDQUFDM1osQ0FBQyxDQUFDLENBQUNPLElBQUUsS0FBRyxFQUFFLENBQUNvWSxHQUFHO0lBQUc7SUFBQyxPQUFPNWUsRUFBRXlGLElBQUksS0FBRyxXQUFTWSxFQUFFMDJCLEdBQUcsS0FBRzEyQjtBQUFDLEdBQUVtMUIsR0FBR3I1QixTQUFTLENBQUNpN0IsV0FBVyxHQUFDLFNBQVNwOUIsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUMsRUFBQ0ssQ0FBQyxFQUFDb0YsQ0FBQztJQUFFLElBQUlFLElBQUUsSUFBSSxDQUFDMjFCLE9BQU8sRUFBQ3oxQixJQUFFLElBQUksQ0FBQzAxQixPQUFPLEVBQUN6MUIsSUFBRSxJQUFJLENBQUMwMUIsT0FBTyxFQUFDejFCLElBQUUsR0FBRUMsR0FBRUcsR0FBRW1HO0lBQUUsSUFBSXRHLElBQUUsR0FBRUEsSUFBRTNGLEdBQUUyRixJQUFJO1FBQUNzRyxJQUFFN00sQ0FBQyxDQUFDdUcsRUFBRTtRQUFDLElBQUl1RyxJQUFFRCxFQUFFbXdCLGFBQWEsQ0FBQ2o5QjtRQUFHbUcsQ0FBQyxDQUFDSyxFQUFFLEdBQUN1RyxFQUFFbXdCLEdBQUcsRUFBQzcyQixDQUFDLENBQUNHLEVBQUUsR0FBQ3VHLEVBQUUrdkIsTUFBTTtJQUFBO0lBQUMsSUFBSXQyQixJQUFFM0YsSUFBRSxHQUFFMkYsS0FBRyxHQUFFQSxLQUFHLEVBQUU7UUFBQyxJQUFJd0csSUFBRXhHLElBQUUsR0FBRXlHLElBQUV6RztRQUFFLElBQUdMLENBQUMsQ0FBQzZHLEVBQUUsS0FBRyxLQUFHN0csQ0FBQyxDQUFDOEcsRUFBRSxLQUFHLEdBQUU7WUFBQzNHLENBQUMsQ0FBQzBHLEVBQUUsR0FBQ3F1QixHQUFHNzZCLENBQUMsQ0FBQ3dNLEVBQUUsRUFBQzdHLENBQUMsQ0FBQzZHLEVBQUUsRUFBQyxJQUFJLENBQUNrdkIsVUFBVSxHQUFFNTFCLENBQUMsQ0FBQzJHLEVBQUUsR0FBQ291QixHQUFHNzZCLENBQUMsQ0FBQ3lNLEVBQUUsRUFBQzlHLENBQUMsQ0FBQzhHLEVBQUUsRUFBQyxJQUFJLENBQUNpdkIsVUFBVSxHQUFFMzFCLElBQUVlLEtBQUtDLEdBQUcsQ0FBQ2pCLENBQUMsQ0FBQzBHLEVBQUUsQ0FBQ3hMLE1BQU0sRUFBQytFLElBQUdBLElBQUVlLEtBQUtDLEdBQUcsQ0FBQ2pCLENBQUMsQ0FBQzJHLEVBQUUsQ0FBQ3pMLE1BQU0sRUFBQytFO1lBQUc7UUFBUTtRQUFDLElBQUkyRyxJQUFFO1lBQUNqTixDQUFDLENBQUMrTSxFQUFFO1lBQUM7WUFBSztZQUFLL00sQ0FBQyxDQUFDZ04sRUFBRTtTQUFDO1FBQUNoTixDQUFDLENBQUMrTSxFQUFFLENBQUNyRyxDQUFDLENBQUNxVixHQUFHLENBQUMvYixDQUFDLENBQUNnTixFQUFFLENBQUN0RyxDQUFDLE1BQUksSUFBR3VHLENBQUFBLENBQUMsQ0FBQyxFQUFFLEdBQUNqTixDQUFDLENBQUMrTSxFQUFFLENBQUM0UyxHQUFHLENBQUMzZixDQUFDLENBQUNnTixFQUFFLEdBQUVDLENBQUMsQ0FBQyxFQUFFLEdBQUNqTixDQUFDLENBQUMrTSxFQUFFLENBQUNxd0IsR0FBRyxHQUFHUixRQUFRLENBQUM1OEIsQ0FBQyxDQUFDZ04sRUFBRSxDQUFDMlIsR0FBRyxHQUFFLElBQUczZSxDQUFDLENBQUMrTSxFQUFFLENBQUNyRyxDQUFDLENBQUNxVixHQUFHLENBQUMvYixDQUFDLENBQUNnTixFQUFFLENBQUN0RyxDQUFDLENBQUN1ZSxNQUFNLFFBQU0sSUFBR2hZLENBQUFBLENBQUMsQ0FBQyxFQUFFLEdBQUNqTixDQUFDLENBQUMrTSxFQUFFLENBQUNxd0IsR0FBRyxHQUFHUixRQUFRLENBQUM1OEIsQ0FBQyxDQUFDZ04sRUFBRSxHQUFFQyxDQUFDLENBQUMsRUFBRSxHQUFDak4sQ0FBQyxDQUFDK00sRUFBRSxDQUFDNFMsR0FBRyxDQUFDM2YsQ0FBQyxDQUFDZ04sRUFBRSxDQUFDMlIsR0FBRyxHQUFFLElBQUkxUixDQUFBQSxDQUFDLENBQUMsRUFBRSxHQUFDak4sQ0FBQyxDQUFDK00sRUFBRSxDQUFDcXdCLEdBQUcsR0FBR1IsUUFBUSxDQUFDNThCLENBQUMsQ0FBQ2dOLEVBQUUsR0FBRUMsQ0FBQyxDQUFDLEVBQUUsR0FBQ2pOLENBQUMsQ0FBQytNLEVBQUUsQ0FBQ3F3QixHQUFHLEdBQUdSLFFBQVEsQ0FBQzU4QixDQUFDLENBQUNnTixFQUFFLENBQUMyUixHQUFHLEdBQUU7UUFBRyxJQUFJelIsSUFBRTtZQUFDLENBQUM7WUFBRSxDQUFDO1lBQUUsQ0FBQztZQUFFLENBQUM7WUFBRTtZQUFFO1lBQUU7WUFBRTtZQUFFO1NBQUUsRUFBQ0MsSUFBRWt1QixHQUFHOTZCLENBQUMsQ0FBQ3dNLEVBQUUsRUFBQ3hNLENBQUMsQ0FBQ3lNLEVBQUU7UUFBRSxJQUFJMUcsSUFBRWUsS0FBS0MsR0FBRyxDQUFDNkYsQ0FBQyxDQUFDLEVBQUUsQ0FBQzVMLE1BQU0sRUFBQytFLElBQUdELENBQUMsQ0FBQzBHLEVBQUUsR0FBQyxJQUFJTSxNQUFNL0csSUFBR0QsQ0FBQyxDQUFDMkcsRUFBRSxHQUFDLElBQUlLLE1BQU0vRyxJQUFHSSxJQUFFLEdBQUVBLElBQUVKLEdBQUVJLElBQUk7WUFBQyxJQUFJMEcsS0FBR0QsQ0FBQyxDQUFDLEVBQUUsQ0FBQ3pHLEVBQUUsR0FBQyxHQUFFa0gsSUFBRVQsQ0FBQyxDQUFDLEVBQUUsQ0FBQ3pHLEVBQUUsR0FBQztZQUFFTCxDQUFDLENBQUMwRyxFQUFFLENBQUNyRyxFQUFFLEdBQUN3RyxDQUFDLENBQUMsQ0FBQ0UsS0FBRyxLQUFHLElBQUdRLENBQUFBLElBQUUsR0FBRyxFQUFDdkgsQ0FBQyxDQUFDMkcsRUFBRSxDQUFDdEcsRUFBRSxHQUFDLEdBQUVOLENBQUMsQ0FBQzJHLEVBQUUsR0FBQ0U7UUFBQztJQUFDO0lBQUMsSUFBSWlCLElBQUUsSUFBSSxDQUFDeXVCLE1BQU0sQ0FBQyxNQUFLLE1BQUssT0FBTXZ1QixJQUFFLElBQUksQ0FBQzR0QixPQUFPO0lBQUMsSUFBSXoxQixJQUFFRCxHQUFFQyxLQUFHLEdBQUVBLElBQUk7UUFBQyxJQUFJLElBQUlpSSxLQUFHLEdBQUVqSSxLQUFHLEdBQUc7WUFBQyxJQUFJa0ksSUFBRSxDQUFDO1lBQUUsSUFBSS9ILElBQUUsR0FBRUEsSUFBRTlGLEdBQUU4RixJQUFJMEgsQ0FBQyxDQUFDMUgsRUFBRSxHQUFDTCxDQUFDLENBQUNLLEVBQUUsQ0FBQ0gsRUFBRSxHQUFDLEdBQUU2SCxDQUFDLENBQUMxSCxFQUFFLEtBQUcsS0FBSStILENBQUFBLElBQUUsQ0FBQztZQUFHLElBQUcsQ0FBQ0EsR0FBRTtZQUFNRCxNQUFLakk7UUFBRztRQUFDLElBQUdBLEtBQUcsS0FBR2lJLE1BQUtOLElBQUVBLEVBQUVndkIsSUFBSSxDQUFDMXVCLEtBQUlqSSxJQUFFLEdBQUU7UUFBTSxJQUFJRyxJQUFFLEdBQUVBLElBQUU5RixHQUFFOEYsSUFBSTtZQUFDLElBQUlnSSxLQUFHTixDQUFDLENBQUMxSCxFQUFFO1lBQUNnSSxPQUFLLEtBQUlBLENBQUFBLEtBQUcsSUFBRTdCLElBQUV6RyxDQUFDLENBQUNNLEVBQUUsQ0FBQ2dJLEtBQUcsS0FBRyxFQUFFLEdBQUNBLEtBQUcsS0FBSTdCLENBQUFBLElBQUV6RyxDQUFDLENBQUNNLEVBQUUsQ0FBQyxDQUFDZ0ksS0FBRyxLQUFHLEVBQUUsQ0FBQ2lRLEdBQUcsRUFBQyxHQUFHOVIsRUFBRXJILElBQUksS0FBRyxXQUFTMEksSUFBRUEsRUFBRTB1QixRQUFRLENBQUMvdkIsS0FBR3FCLElBQUVBLEVBQUV5UixHQUFHLENBQUM5UyxFQUFDO1FBQUU7SUFBQztJQUFDLElBQUl0RyxJQUFFLEdBQUVBLElBQUUzRixHQUFFMkYsSUFBSUgsQ0FBQyxDQUFDRyxFQUFFLEdBQUM7SUFBSyxPQUFPUCxJQUFFa0ksSUFBRUEsRUFBRTR1QixHQUFHO0FBQUU7QUFBRSxTQUFTTyxHQUFHdjlCLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUksQ0FBQ3U5QixLQUFLLEdBQUN4OUIsR0FBRSxJQUFJLENBQUMwRixJQUFJLEdBQUN6RixHQUFFLElBQUksQ0FBQ3k4QixXQUFXLEdBQUM7QUFBSTtBQUFDakIsR0FBR2dDLFNBQVMsR0FBQ0YsSUFBR0EsR0FBR243QixTQUFTLENBQUN5aEIsRUFBRSxHQUFDO0lBQVcsTUFBTSxJQUFJN2MsTUFBTTtBQUFrQixHQUFFdTJCLEdBQUduN0IsU0FBUyxDQUFDbzZCLFFBQVEsR0FBQztJQUFXLE9BQU8sSUFBSSxDQUFDZ0IsS0FBSyxDQUFDaEIsUUFBUSxDQUFDLElBQUk7QUFBQyxHQUFFZixHQUFHcjVCLFNBQVMsQ0FBQ3M3QixXQUFXLEdBQUMsU0FBU3o5QixDQUFDLEVBQUNDLENBQUM7SUFBRUQsSUFBRSs2QixHQUFHemUsT0FBTyxDQUFDdGMsR0FBRUM7SUFBRyxJQUFJTyxJQUFFLElBQUksQ0FBQzZGLENBQUMsQ0FBQ3NYLFVBQVU7SUFBRyxJQUFHLENBQUMzZCxDQUFDLENBQUMsRUFBRSxLQUFHLEtBQUdBLENBQUMsQ0FBQyxFQUFFLEtBQUcsS0FBR0EsQ0FBQyxDQUFDLEVBQUUsS0FBRyxNQUFJQSxFQUFFd0IsTUFBTSxHQUFDLE1BQUksSUFBRWhCLEdBQUU7UUFBQ1IsQ0FBQyxDQUFDLEVBQUUsS0FBRyxJQUFFdTdCLEdBQUd2N0IsQ0FBQyxDQUFDQSxFQUFFd0IsTUFBTSxHQUFDLEVBQUUsR0FBQyxNQUFJLEtBQUd4QixDQUFDLENBQUMsRUFBRSxLQUFHLEtBQUd1N0IsR0FBR3Y3QixDQUFDLENBQUNBLEVBQUV3QixNQUFNLEdBQUMsRUFBRSxHQUFDLE1BQUk7UUFBRyxJQUFJWCxJQUFFLElBQUksQ0FBQ3k3QixLQUFLLENBQUN0OEIsRUFBRXFILEtBQUssQ0FBQyxHQUFFLElBQUU3RyxJQUFHUixFQUFFcUgsS0FBSyxDQUFDLElBQUU3RyxHQUFFLElBQUUsSUFBRUE7UUFBSSxPQUFPSztJQUFDLE9BQU0sSUFBRyxDQUFDYixDQUFDLENBQUMsRUFBRSxLQUFHLEtBQUdBLENBQUMsQ0FBQyxFQUFFLEtBQUcsTUFBSUEsRUFBRXdCLE1BQU0sR0FBQyxNQUFJaEIsR0FBRSxPQUFPLElBQUksQ0FBQ2s5QixVQUFVLENBQUMxOUIsRUFBRXFILEtBQUssQ0FBQyxHQUFFLElBQUU3RyxJQUFHUixDQUFDLENBQUMsRUFBRSxLQUFHO0lBQUcsTUFBTSxJQUFJK0csTUFBTTtBQUF1QixHQUFFdTJCLEdBQUduN0IsU0FBUyxDQUFDdzdCLGdCQUFnQixHQUFDLFNBQVMzOUIsQ0FBQztJQUFFLE9BQU8sSUFBSSxDQUFDK1EsTUFBTSxDQUFDL1EsR0FBRSxDQUFDO0FBQUUsR0FBRXM5QixHQUFHbjdCLFNBQVMsQ0FBQ3k3QixPQUFPLEdBQUMsU0FBUzU5QixDQUFDO0lBQUUsSUFBSUMsSUFBRSxJQUFJLENBQUNzOUIsS0FBSyxDQUFDbDNCLENBQUMsQ0FBQ3NYLFVBQVUsSUFBR25kLElBQUUsSUFBSSxDQUFDcTlCLElBQUksR0FBR3ZoQixPQUFPLENBQUMsTUFBS3JjO0lBQUcsT0FBT0QsSUFBRTtRQUFDLElBQUksQ0FBQzg5QixJQUFJLEdBQUdqYixNQUFNLEtBQUcsSUFBRTtLQUFFLENBQUN4akIsTUFBTSxDQUFDbUIsS0FBRztRQUFDO0tBQUUsQ0FBQ25CLE1BQU0sQ0FBQ21CLEdBQUUsSUFBSSxDQUFDczlCLElBQUksR0FBR3hoQixPQUFPLENBQUMsTUFBS3JjO0FBQUcsR0FBRXE5QixHQUFHbjdCLFNBQVMsQ0FBQzRPLE1BQU0sR0FBQyxTQUFTL1EsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBTzg2QixHQUFHaHFCLE1BQU0sQ0FBQyxJQUFJLENBQUM2c0IsT0FBTyxDQUFDMzlCLElBQUdEO0FBQUUsR0FBRXM5QixHQUFHbjdCLFNBQVMsQ0FBQzQ3QixVQUFVLEdBQUMsU0FBUy85QixDQUFDO0lBQUUsSUFBRyxJQUFJLENBQUN5OEIsV0FBVyxFQUFDLE9BQU8sSUFBSTtJQUFDLElBQUl4OEIsSUFBRTtRQUFDKzlCLFNBQVE7UUFBS0MsS0FBSTtRQUFLQyxNQUFLO0lBQUk7SUFBRSxPQUFPaitCLEVBQUVnK0IsR0FBRyxHQUFDLElBQUksQ0FBQ2hCLGFBQWEsQ0FBQyxJQUFHaDlCLEVBQUUrOUIsT0FBTyxHQUFDLElBQUksQ0FBQ3RCLFdBQVcsQ0FBQyxHQUFFMThCLElBQUdDLEVBQUVpK0IsSUFBSSxHQUFDLElBQUksQ0FBQ0MsUUFBUSxJQUFHLElBQUksQ0FBQzFCLFdBQVcsR0FBQ3g4QixHQUFFLElBQUk7QUFBQSxHQUFFcTlCLEdBQUduN0IsU0FBUyxDQUFDaThCLFdBQVcsR0FBQyxTQUFTcCtCLENBQUM7SUFBRSxJQUFHLENBQUMsSUFBSSxDQUFDeThCLFdBQVcsRUFBQyxPQUFNLENBQUM7SUFBRSxJQUFJeDhCLElBQUUsSUFBSSxDQUFDdzhCLFdBQVcsQ0FBQ3VCLE9BQU87SUFBQyxPQUFPLzlCLElBQUVBLEVBQUU2OEIsTUFBTSxDQUFDdDdCLE1BQU0sSUFBRThGLEtBQUtpVixJQUFJLENBQUMsQ0FBQ3ZjLEVBQUVpZSxTQUFTLEtBQUcsS0FBR2hlLEVBQUUwOEIsSUFBSSxJQUFFLENBQUM7QUFBQyxHQUFFVyxHQUFHbjdCLFNBQVMsQ0FBQ3U2QixXQUFXLEdBQUMsU0FBUzE4QixDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFHLElBQUksQ0FBQ3c4QixXQUFXLElBQUUsSUFBSSxDQUFDQSxXQUFXLENBQUN1QixPQUFPLEVBQUMsT0FBTyxJQUFJLENBQUN2QixXQUFXLENBQUN1QixPQUFPO0lBQUMsSUFBSSxJQUFJeDlCLElBQUU7UUFBQyxJQUFJO0tBQUMsRUFBQ0ssSUFBRSxJQUFJLEVBQUNvRixJQUFFLEdBQUVBLElBQUVoRyxHQUFFZ0csS0FBR2pHLEVBQUU7UUFBQyxJQUFJLElBQUltRyxJQUFFLEdBQUVBLElBQUVuRyxHQUFFbUcsSUFBSXRGLElBQUVBLEVBQUV3OUIsR0FBRztRQUFHNzlCLEVBQUVPLElBQUksQ0FBQ0Y7SUFBRTtJQUFDLE9BQU07UUFBQzg3QixNQUFLMzhCO1FBQUU4OEIsUUFBT3Q4QjtJQUFDO0FBQUMsR0FBRTg4QixHQUFHbjdCLFNBQVMsQ0FBQzg2QixhQUFhLEdBQUMsU0FBU2o5QixDQUFDO0lBQUUsSUFBRyxJQUFJLENBQUN5OEIsV0FBVyxJQUFFLElBQUksQ0FBQ0EsV0FBVyxDQUFDd0IsR0FBRyxFQUFDLE9BQU8sSUFBSSxDQUFDeEIsV0FBVyxDQUFDd0IsR0FBRztJQUFDLElBQUksSUFBSWgrQixJQUFFO1FBQUMsSUFBSTtLQUFDLEVBQUNPLElBQUUsQ0FBQyxLQUFHUixDQUFBQSxJQUFHLEdBQUVhLElBQUVMLE1BQUksSUFBRSxPQUFLLElBQUksQ0FBQzY5QixHQUFHLElBQUdwNEIsSUFBRSxHQUFFQSxJQUFFekYsR0FBRXlGLElBQUloRyxDQUFDLENBQUNnRyxFQUFFLEdBQUNoRyxDQUFDLENBQUNnRyxJQUFFLEVBQUUsQ0FBQzJaLEdBQUcsQ0FBQy9lO0lBQUcsT0FBTTtRQUFDcThCLEtBQUlsOUI7UUFBRTg4QixRQUFPNzhCO0lBQUM7QUFBQyxHQUFFcTlCLEdBQUduN0IsU0FBUyxDQUFDZzhCLFFBQVEsR0FBQztJQUFXLE9BQU87QUFBSSxHQUFFYixHQUFHbjdCLFNBQVMsQ0FBQ2c3QixJQUFJLEdBQUMsU0FBU245QixDQUFDO0lBQUUsSUFBSSxJQUFJQyxJQUFFLElBQUksRUFBQ08sSUFBRSxHQUFFQSxJQUFFUixHQUFFUSxJQUFJUCxJQUFFQSxFQUFFbytCLEdBQUc7SUFBRyxPQUFPcCtCO0FBQUM7QUFBRSxJQUFJcStCLEtBQUc5RCxHQUFHLFNBQVN6NkIsQ0FBQztJQUFFLE9BQU91QixPQUFPc04sTUFBTSxJQUFFLGFBQVc3TyxFQUFFeU0sT0FBTyxHQUFDLFNBQVN2TSxDQUFDLEVBQUNPLENBQUM7UUFBRUEsS0FBSVAsQ0FBQUEsRUFBRXViLE1BQU0sR0FBQ2hiLEdBQUVQLEVBQUVrQyxTQUFTLEdBQUNiLE9BQU9zTixNQUFNLENBQUNwTyxFQUFFMkIsU0FBUyxFQUFDO1lBQUN5TCxhQUFZO2dCQUFDakwsT0FBTTFDO2dCQUFFdUMsWUFBVyxDQUFDO2dCQUFFRSxVQUFTLENBQUM7Z0JBQUVELGNBQWEsQ0FBQztZQUFDO1FBQUMsRUFBQztJQUFFLElBQUUxQyxFQUFFeU0sT0FBTyxHQUFDLFNBQVN2TSxDQUFDLEVBQUNPLENBQUM7UUFBRSxJQUFHQSxHQUFFO1lBQUNQLEVBQUV1YixNQUFNLEdBQUNoYjtZQUFFLElBQUlLLElBQUUsWUFBVztZQUFFQSxFQUFFc0IsU0FBUyxHQUFDM0IsRUFBRTJCLFNBQVMsRUFBQ2xDLEVBQUVrQyxTQUFTLEdBQUMsSUFBSXRCLEdBQUVaLEVBQUVrQyxTQUFTLENBQUN5TCxXQUFXLEdBQUMzTjtRQUFDO0lBQUM7QUFBQyxJQUFHcytCLEtBQUd4RCxHQUFHM2lCLE1BQU07QUFBQyxTQUFTb21CLEdBQUd6K0IsQ0FBQztJQUFFczhCLEdBQUd4NUIsSUFBSSxDQUFDLElBQUksRUFBQyxTQUFROUMsSUFBRyxJQUFJLENBQUN3UCxDQUFDLEdBQUMsSUFBSThXLEVBQUV0bUIsRUFBRXdQLENBQUMsRUFBQyxJQUFJc1UsS0FBSyxDQUFDLElBQUksQ0FBQ2pJLEdBQUcsR0FBRSxJQUFJLENBQUN6TSxDQUFDLEdBQUMsSUFBSWtYLEVBQUV0bUIsRUFBRW9QLENBQUMsRUFBQyxJQUFJMFUsS0FBSyxDQUFDLElBQUksQ0FBQ2pJLEdBQUcsR0FBRSxJQUFJLENBQUM2aUIsSUFBSSxHQUFDLElBQUksQ0FBQzlDLEdBQUcsQ0FBQzFXLE9BQU8sSUFBRyxJQUFJLENBQUN5WixLQUFLLEdBQUMsSUFBSSxDQUFDbnZCLENBQUMsQ0FBQ3lVLE9BQU8sR0FBR2YsSUFBSSxDQUFDLE9BQUssR0FBRSxJQUFJLENBQUMwYixNQUFNLEdBQUMsSUFBSSxDQUFDcHZCLENBQUMsQ0FBQ3lVLE9BQU8sR0FBR25FLEdBQUcsQ0FBQyxJQUFJLENBQUN4WixDQUFDLEVBQUU0YyxJQUFJLENBQUMsQ0FBQyxPQUFLLEdBQUUsSUFBSSxDQUFDMmIsSUFBSSxHQUFDLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUM5K0IsSUFBRyxJQUFJLENBQUMrK0IsV0FBVyxHQUFDLElBQUl4eEIsTUFBTSxJQUFHLElBQUksQ0FBQ3l4QixXQUFXLEdBQUMsSUFBSXp4QixNQUFNO0FBQUU7QUFBQ2d4QixHQUFHRSxJQUFHbkM7QUFBSSxJQUFJMkMsS0FBR1I7QUFBR0EsR0FBR3I4QixTQUFTLENBQUMwOEIsZ0JBQWdCLEdBQUMsU0FBUzcrQixDQUFDO0lBQUUsSUFBRyxDQUFFLEVBQUMsSUFBSSxDQUFDMCtCLEtBQUssSUFBRSxDQUFDLElBQUksQ0FBQ3h2QixDQUFDLElBQUUsQ0FBQyxJQUFJLENBQUNyTyxDQUFDLElBQUUsSUFBSSxDQUFDd0YsQ0FBQyxDQUFDc2MsSUFBSSxDQUFDLE9BQUssSUFBRztRQUFDLElBQUkxaUIsR0FBRU87UUFBRSxJQUFHUixFQUFFaytCLElBQUksRUFBQ2orQixJQUFFLElBQUlvbUIsRUFBRXJtQixFQUFFaytCLElBQUksRUFBQyxJQUFJcmEsS0FBSyxDQUFDLElBQUksQ0FBQ2pJLEdBQUc7YUFBTTtZQUFDLElBQUkvYSxJQUFFLElBQUksQ0FBQ28rQixhQUFhLENBQUMsSUFBSSxDQUFDNTRCLENBQUM7WUFBRXBHLElBQUVZLENBQUMsQ0FBQyxFQUFFLENBQUNtYixHQUFHLENBQUNuYixDQUFDLENBQUMsRUFBRSxJQUFFLElBQUVBLENBQUMsQ0FBQyxFQUFFLEdBQUNBLENBQUMsQ0FBQyxFQUFFLEVBQUNaLElBQUVBLEVBQUU0akIsS0FBSyxDQUFDLElBQUksQ0FBQ2pJLEdBQUc7UUFBQztRQUFDLElBQUc1YixFQUFFay9CLE1BQU0sRUFBQzErQixJQUFFLElBQUk2bEIsRUFBRXJtQixFQUFFay9CLE1BQU0sRUFBQzthQUFRO1lBQUMsSUFBSWo1QixJQUFFLElBQUksQ0FBQ2c1QixhQUFhLENBQUMsSUFBSSxDQUFDcCtCLENBQUM7WUFBRSxJQUFJLENBQUNxTyxDQUFDLENBQUM0UixHQUFHLENBQUM3YSxDQUFDLENBQUMsRUFBRSxFQUFFMEosQ0FBQyxDQUFDcU0sR0FBRyxDQUFDLElBQUksQ0FBQzlNLENBQUMsQ0FBQ1MsQ0FBQyxDQUFDOFUsTUFBTSxDQUFDeGtCLFFBQU0sSUFBRU8sSUFBRXlGLENBQUMsQ0FBQyxFQUFFLEdBQUV6RixDQUFBQSxJQUFFeUYsQ0FBQyxDQUFDLEVBQUUsRUFBQ3M0QixHQUFHLElBQUksQ0FBQ3J2QixDQUFDLENBQUM0UixHQUFHLENBQUN0Z0IsR0FBR21QLENBQUMsQ0FBQ3FNLEdBQUcsQ0FBQyxJQUFJLENBQUM5TSxDQUFDLENBQUNTLENBQUMsQ0FBQzhVLE1BQU0sQ0FBQ3hrQixRQUFNLEVBQUM7UUFBRTtRQUFDLElBQUlrRztRQUFFLE9BQU9uRyxFQUFFbS9CLEtBQUssR0FBQ2g1QixJQUFFbkcsRUFBRW0vQixLQUFLLENBQUNoM0IsR0FBRyxDQUFDLFNBQVM5QixDQUFDO1lBQUUsT0FBTTtnQkFBQ2tKLEdBQUUsSUFBSThXLEVBQUVoZ0IsRUFBRWtKLENBQUMsRUFBQztnQkFBSUosR0FBRSxJQUFJa1gsRUFBRWhnQixFQUFFOEksQ0FBQyxFQUFDO1lBQUc7UUFBQyxLQUFHaEosSUFBRSxJQUFJLENBQUNpNUIsYUFBYSxDQUFDNStCLElBQUc7WUFBQzA5QixNQUFLaitCO1lBQUVpL0IsUUFBTzErQjtZQUFFMitCLE9BQU1oNUI7UUFBQztJQUFDO0FBQUMsR0FBRXE0QixHQUFHcjhCLFNBQVMsQ0FBQzg4QixhQUFhLEdBQUMsU0FBU2ovQixDQUFDO0lBQUUsSUFBSUMsSUFBRUQsTUFBSSxJQUFJLENBQUNxRyxDQUFDLEdBQUMsSUFBSSxDQUFDdVYsR0FBRyxHQUFDeUssRUFBRUwsSUFBSSxDQUFDaG1CLElBQUdRLElBQUUsSUFBSTZsQixFQUFFLEdBQUd4QyxLQUFLLENBQUM1akIsR0FBR2dsQixPQUFPLElBQUdwa0IsSUFBRUwsRUFBRTBrQixNQUFNLElBQUdqZixJQUFFLElBQUlvZ0IsRUFBRSxHQUFHeEMsS0FBSyxDQUFDNWpCLEdBQUdpbEIsTUFBTSxHQUFHSCxPQUFPLEdBQUdOLE1BQU0sQ0FBQ2prQixJQUFHMkYsSUFBRXRGLEVBQUVzakIsTUFBTSxDQUFDbGUsR0FBRytkLE9BQU8sSUFBRzNkLElBQUV4RixFQUFFd2pCLE1BQU0sQ0FBQ3BlLEdBQUcrZCxPQUFPO0lBQUcsT0FBTTtRQUFDN2Q7UUFBRUU7S0FBRTtBQUFBLEdBQUVtNEIsR0FBR3I4QixTQUFTLENBQUNpOUIsYUFBYSxHQUFDLFNBQVNwL0IsQ0FBQztJQUFFLElBQUksSUFBSUMsSUFBRSxJQUFJLENBQUNZLENBQUMsQ0FBQzhnQixLQUFLLENBQUNyYSxLQUFLaVQsS0FBSyxDQUFDLElBQUksQ0FBQzFaLENBQUMsQ0FBQ29kLFNBQVMsS0FBRyxLQUFJemQsSUFBRVIsR0FBRWEsSUFBRSxJQUFJLENBQUNBLENBQUMsQ0FBQ2djLEtBQUssSUFBRzVXLElBQUUsSUFBSW9nQixFQUFFLElBQUdsZ0IsSUFBRSxJQUFJa2dCLEVBQUUsSUFBR2hnQixJQUFFLElBQUlnZ0IsRUFBRSxJQUFHL2YsSUFBRSxJQUFJK2YsRUFBRSxJQUFHOWYsR0FBRUMsR0FBRUcsR0FBRW1HLEdBQUVDLEdBQUVDLEdBQUVDLEdBQUVDLElBQUUsR0FBRUMsR0FBRUMsR0FBRTVNLEVBQUV5aUIsSUFBSSxDQUFDLE9BQUssR0FBRztRQUFDLElBQUk1VixLQUFHeE0sRUFBRXVoQixHQUFHLENBQUM1aEI7UUFBRzJNLElBQUV0TSxFQUFFZ2YsR0FBRyxDQUFDeFMsR0FBR3lULEdBQUcsQ0FBQ3RnQixLQUFJNE0sSUFBRS9HLEVBQUV3WixHQUFHLENBQUN4UyxHQUFHeVQsR0FBRyxDQUFDN2E7UUFBSSxJQUFJNEgsSUFBRXZILEVBQUV1WixHQUFHLENBQUN4UyxHQUFHeVQsR0FBRyxDQUFDM2E7UUFBSSxJQUFHLENBQUNRLEtBQUd3RyxFQUFFNk8sR0FBRyxDQUFDL2IsS0FBRyxHQUFFc0csSUFBRTBHLEVBQUUyUixHQUFHLElBQUdwWSxJQUFFUCxHQUFFVSxJQUFFd0csRUFBRXlSLEdBQUcsSUFBRzlSLElBQUVNO2FBQU8sSUFBR3pHLEtBQUcsRUFBRXVHLE1BQUksR0FBRTtRQUFNRCxJQUFFRSxHQUFFdE0sSUFBRUwsR0FBRUEsSUFBRTJNLEdBQUU5RyxJQUFFSixHQUFFQSxJQUFFbUgsR0FBRTlHLElBQUVILEdBQUVBLElBQUUwSDtJQUFDO0lBQUNkLElBQUVJLEVBQUV5UixHQUFHLElBQUc1UixJQUFFSTtJQUFFLElBQUllLElBQUV4SCxFQUFFc2EsR0FBRyxHQUFHckIsR0FBRyxDQUFDOVMsRUFBRW1VLEdBQUcsS0FBSTVTLElBQUV0QixFQUFFa1UsR0FBRyxHQUFHckIsR0FBRyxDQUFDNVMsRUFBRWlVLEdBQUc7SUFBSSxPQUFPNVMsRUFBRTJOLEdBQUcsQ0FBQzdOLE1BQUksS0FBSXBCLENBQUFBLElBQUV4RyxHQUFFeUcsSUFBRXhHLENBQUFBLEdBQUdHLEVBQUUrVSxRQUFRLElBQUcvVSxDQUFBQSxJQUFFQSxFQUFFaVksR0FBRyxJQUFHOVIsSUFBRUEsRUFBRThSLEdBQUcsRUFBQyxHQUFHN1IsRUFBRTJPLFFBQVEsSUFBRzNPLENBQUFBLElBQUVBLEVBQUU2UixHQUFHLElBQUc1UixJQUFFQSxFQUFFNFIsR0FBRyxFQUFDLEdBQUc7UUFBQztZQUFDclAsR0FBRTVJO1lBQUV3SSxHQUFFckM7UUFBQztRQUFFO1lBQUN5QyxHQUFFeEM7WUFBRW9DLEdBQUVuQztRQUFDO0tBQUU7QUFBQSxHQUFFd3hCLEdBQUdyOEIsU0FBUyxDQUFDazlCLFVBQVUsR0FBQyxTQUFTci9CLENBQUM7SUFBRSxJQUFJQyxJQUFFLElBQUksQ0FBQzIrQixJQUFJLENBQUNPLEtBQUssRUFBQzMrQixJQUFFUCxDQUFDLENBQUMsRUFBRSxFQUFDWSxJQUFFWixDQUFDLENBQUMsRUFBRSxFQUFDZ0csSUFBRXBGLEVBQUVzTyxDQUFDLENBQUMyUixHQUFHLENBQUM5Z0IsR0FBR3lpQixRQUFRLENBQUMsSUFBSSxDQUFDNWhCLENBQUMsR0FBRXNGLElBQUUzRixFQUFFMk8sQ0FBQyxDQUFDeVAsR0FBRyxHQUFHa0MsR0FBRyxDQUFDOWdCLEdBQUd5aUIsUUFBUSxDQUFDLElBQUksQ0FBQzVoQixDQUFDLEdBQUV3RixJQUFFSixFQUFFNmEsR0FBRyxDQUFDdGdCLEVBQUUrTyxDQUFDLEdBQUVqSixJQUFFSCxFQUFFMmEsR0FBRyxDQUFDamdCLEVBQUUwTyxDQUFDLEdBQUVoSixJQUFFTixFQUFFNmEsR0FBRyxDQUFDdGdCLEVBQUUyTyxDQUFDLEdBQUUzSSxJQUFFTCxFQUFFMmEsR0FBRyxDQUFDamdCLEVBQUVzTyxDQUFDLEdBQUV4SSxJQUFFM0csRUFBRTZmLEdBQUcsQ0FBQ3haLEdBQUd3WixHQUFHLENBQUN2WixJQUFHd0csSUFBRXZHLEVBQUVxWixHQUFHLENBQUNwWixHQUFHb1ksR0FBRztJQUFHLE9BQU07UUFBQzBnQixJQUFHMzRCO1FBQUU0NEIsSUFBR3p5QjtJQUFDO0FBQUMsR0FBRTB4QixHQUFHcjhCLFNBQVMsQ0FBQ3U3QixVQUFVLEdBQUMsU0FBUzE5QixDQUFDLEVBQUNDLENBQUM7SUFBRUQsSUFBRSxJQUFJcW1CLEVBQUVybUIsR0FBRSxLQUFJQSxFQUFFNGIsR0FBRyxJQUFHNWIsQ0FBQUEsSUFBRUEsRUFBRTZqQixLQUFLLENBQUMsSUFBSSxDQUFDakksR0FBRztJQUFHLElBQUlwYixJQUFFUixFQUFFNGtCLE1BQU0sR0FBR0gsTUFBTSxDQUFDemtCLEdBQUdva0IsT0FBTyxDQUFDcGtCLEVBQUV5a0IsTUFBTSxDQUFDLElBQUksQ0FBQ2xWLENBQUMsR0FBRzZVLE9BQU8sQ0FBQyxJQUFJLENBQUNqVixDQUFDLEdBQUV0TyxJQUFFTCxFQUFFdWtCLE9BQU87SUFBRyxJQUFHbGtCLEVBQUUrakIsTUFBTSxHQUFHUCxNQUFNLENBQUM3akIsR0FBR3diLEdBQUcsQ0FBQyxJQUFJLENBQUN5ZixJQUFJLE1BQUksR0FBRSxNQUFNLElBQUkxMEIsTUFBTTtJQUFpQixJQUFJZCxJQUFFcEYsRUFBRW1qQixPQUFPLEdBQUdsQixLQUFLO0lBQUcsT0FBTSxDQUFDN2lCLEtBQUcsQ0FBQ2dHLEtBQUcsQ0FBQ2hHLEtBQUdnRyxDQUFBQSxLQUFLcEYsQ0FBQUEsSUFBRUEsRUFBRXFrQixNQUFNLEVBQUMsR0FBRyxJQUFJLENBQUNvWCxLQUFLLENBQUN0OEIsR0FBRWE7QUFBRSxHQUFFMjlCLEdBQUdyOEIsU0FBUyxDQUFDbzZCLFFBQVEsR0FBQyxTQUFTdjhCLENBQUM7SUFBRSxJQUFHQSxFQUFFdy9CLEdBQUcsRUFBQyxPQUFNLENBQUM7SUFBRSxJQUFJdi9CLElBQUVELEVBQUUyUCxDQUFDLEVBQUNuUCxJQUFFUixFQUFFMkcsQ0FBQyxFQUFDOUYsSUFBRSxJQUFJLENBQUMwTyxDQUFDLENBQUNrVixNQUFNLENBQUN4a0IsSUFBR2dHLElBQUVoRyxFQUFFMmtCLE1BQU0sR0FBR0gsTUFBTSxDQUFDeGtCLEdBQUdta0IsT0FBTyxDQUFDdmpCLEdBQUd1akIsT0FBTyxDQUFDLElBQUksQ0FBQ2pWLENBQUM7SUFBRSxPQUFPM08sRUFBRW9rQixNQUFNLEdBQUdOLE9BQU8sQ0FBQ3JlLEdBQUdnZCxJQUFJLENBQUMsT0FBSztBQUFDLEdBQUV1YixHQUFHcjhCLFNBQVMsQ0FBQ3M5QixlQUFlLEdBQUMsU0FBU3ovQixDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFLElBQUksSUFBSUssSUFBRSxJQUFJLENBQUNpK0IsV0FBVyxFQUFDNzRCLElBQUUsSUFBSSxDQUFDODRCLFdBQVcsRUFBQzU0QixJQUFFLEdBQUVBLElBQUVuRyxFQUFFd0IsTUFBTSxFQUFDMkUsSUFBSTtRQUFDLElBQUlFLElBQUUsSUFBSSxDQUFDZzVCLFVBQVUsQ0FBQ3AvQixDQUFDLENBQUNrRyxFQUFFLEdBQUVHLElBQUV0RyxDQUFDLENBQUNtRyxFQUFFLEVBQUNJLElBQUVELEVBQUU2M0IsUUFBUTtRQUFHOTNCLEVBQUVpNUIsRUFBRSxDQUFDNWpCLFFBQVEsSUFBR3JWLENBQUFBLEVBQUVpNUIsRUFBRSxDQUFDNWdCLElBQUksSUFBR3BZLElBQUVBLEVBQUVzWSxHQUFHLENBQUMsQ0FBQyxFQUFDLEdBQUd2WSxFQUFFazVCLEVBQUUsQ0FBQzdqQixRQUFRLElBQUdyVixDQUFBQSxFQUFFazVCLEVBQUUsQ0FBQzdnQixJQUFJLElBQUduWSxJQUFFQSxFQUFFcVksR0FBRyxDQUFDLENBQUMsRUFBQyxHQUFHL2QsQ0FBQyxDQUFDc0YsSUFBRSxFQUFFLEdBQUNHLEdBQUV6RixDQUFDLENBQUNzRixJQUFFLElBQUUsRUFBRSxHQUFDSSxHQUFFTixDQUFDLENBQUNFLElBQUUsRUFBRSxHQUFDRSxFQUFFaTVCLEVBQUUsRUFBQ3I1QixDQUFDLENBQUNFLElBQUUsSUFBRSxFQUFFLEdBQUNFLEVBQUVrNUIsRUFBRTtJQUFBO0lBQUMsSUFBSSxJQUFJLzRCLElBQUUsSUFBSSxDQUFDNDJCLFdBQVcsQ0FBQyxHQUFFdjhCLEdBQUVvRixHQUFFRSxJQUFFLEdBQUUzRixJQUFHbUcsSUFBRSxHQUFFQSxJQUFFUixJQUFFLEdBQUVRLElBQUk5RixDQUFDLENBQUM4RixFQUFFLEdBQUMsTUFBS1YsQ0FBQyxDQUFDVSxFQUFFLEdBQUM7SUFBSyxPQUFPSDtBQUFDO0FBQUUsU0FBU2s1QixHQUFHMy9CLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUM7SUFBRTY3QixHQUFHbUIsU0FBUyxDQUFDMzZCLElBQUksQ0FBQyxJQUFJLEVBQUM5QyxHQUFFLFdBQVVDLE1BQUksUUFBTUMsTUFBSSxPQUFNLEtBQUksQ0FBQzBQLENBQUMsR0FBQyxNQUFLLElBQUksQ0FBQ2hKLENBQUMsR0FBQyxNQUFLLElBQUksQ0FBQzY0QixHQUFHLEdBQUMsQ0FBQyxLQUFJLEtBQUksQ0FBQzd2QixDQUFDLEdBQUMsSUFBSTBXLEVBQUVybUIsR0FBRSxLQUFJLElBQUksQ0FBQzJHLENBQUMsR0FBQyxJQUFJMGYsRUFBRXBtQixHQUFFLEtBQUlPLEtBQUksS0FBSSxDQUFDbVAsQ0FBQyxDQUFDdVUsUUFBUSxDQUFDLElBQUksQ0FBQ3FaLEtBQUssQ0FBQzNoQixHQUFHLEdBQUUsSUFBSSxDQUFDalYsQ0FBQyxDQUFDdWQsUUFBUSxDQUFDLElBQUksQ0FBQ3FaLEtBQUssQ0FBQzNoQixHQUFHLElBQUcsSUFBSSxDQUFDak0sQ0FBQyxDQUFDaU0sR0FBRyxJQUFHLEtBQUksQ0FBQ2pNLENBQUMsR0FBQyxJQUFJLENBQUNBLENBQUMsQ0FBQ2tVLEtBQUssQ0FBQyxJQUFJLENBQUMwWixLQUFLLENBQUMzaEIsR0FBRyxJQUFHLElBQUksQ0FBQ2pWLENBQUMsQ0FBQ2lWLEdBQUcsSUFBRyxLQUFJLENBQUNqVixDQUFDLEdBQUMsSUFBSSxDQUFDQSxDQUFDLENBQUNrZCxLQUFLLENBQUMsSUFBSSxDQUFDMFosS0FBSyxDQUFDM2hCLEdBQUcsSUFBRyxJQUFJLENBQUM0akIsR0FBRyxHQUFDLENBQUM7QUFBRTtBQUFDbEIsR0FBR29CLElBQUdyRCxHQUFHbUIsU0FBUyxHQUFFZ0IsR0FBR3I4QixTQUFTLENBQUNtNkIsS0FBSyxHQUFDLFNBQVN0OEIsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUM7SUFBRSxPQUFPLElBQUlrL0IsR0FBRyxJQUFJLEVBQUMxL0IsR0FBRUMsR0FBRU87QUFBRSxHQUFFZytCLEdBQUdyOEIsU0FBUyxDQUFDeTVCLGFBQWEsR0FBQyxTQUFTNTdCLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE9BQU95L0IsR0FBR0MsUUFBUSxDQUFDLElBQUksRUFBQzMvQixHQUFFQztBQUFFLEdBQUV5L0IsR0FBR3Y5QixTQUFTLENBQUNnOEIsUUFBUSxHQUFDO0lBQVcsSUFBRyxJQUFJLENBQUNaLEtBQUssQ0FBQ3FCLElBQUksRUFBQztRQUFDLElBQUk1K0IsSUFBRSxJQUFJLENBQUN5OEIsV0FBVztRQUFDLElBQUd6OEIsS0FBR0EsRUFBRWsrQixJQUFJLEVBQUMsT0FBT2wrQixFQUFFaytCLElBQUk7UUFBQyxJQUFJaitCLElBQUUsSUFBSSxDQUFDczlCLEtBQUssQ0FBQ2pCLEtBQUssQ0FBQyxJQUFJLENBQUMzc0IsQ0FBQyxDQUFDOFUsTUFBTSxDQUFDLElBQUksQ0FBQzhZLEtBQUssQ0FBQ3FCLElBQUksQ0FBQ1YsSUFBSSxHQUFFLElBQUksQ0FBQ3YzQixDQUFDO1FBQUUsSUFBRzNHLEdBQUU7WUFBQyxJQUFJUSxJQUFFLElBQUksQ0FBQys4QixLQUFLLEVBQUMxOEIsSUFBRSxTQUFTb0YsQ0FBQztnQkFBRSxPQUFPekYsRUFBRTg3QixLQUFLLENBQUNyMkIsRUFBRTBKLENBQUMsQ0FBQzhVLE1BQU0sQ0FBQ2prQixFQUFFbytCLElBQUksQ0FBQ1YsSUFBSSxHQUFFajRCLEVBQUVVLENBQUM7WUFBQztZQUFFM0csRUFBRWsrQixJQUFJLEdBQUNqK0IsR0FBRUEsRUFBRXc4QixXQUFXLEdBQUM7Z0JBQUN5QixNQUFLO2dCQUFLRCxLQUFJaitCLEVBQUVpK0IsR0FBRyxJQUFFO29CQUFDZixLQUFJbDlCLEVBQUVpK0IsR0FBRyxDQUFDZixHQUFHO29CQUFDSixRQUFPOThCLEVBQUVpK0IsR0FBRyxDQUFDbkIsTUFBTSxDQUFDMzBCLEdBQUcsQ0FBQ3RIO2dCQUFFO2dCQUFFbTlCLFNBQVFoK0IsRUFBRWcrQixPQUFPLElBQUU7b0JBQUNyQixNQUFLMzhCLEVBQUVnK0IsT0FBTyxDQUFDckIsSUFBSTtvQkFBQ0csUUFBTzk4QixFQUFFZytCLE9BQU8sQ0FBQ2xCLE1BQU0sQ0FBQzMwQixHQUFHLENBQUN0SDtnQkFBRTtZQUFDO1FBQUM7UUFBQyxPQUFPWjtJQUFDO0FBQUMsR0FBRXkvQixHQUFHdjlCLFNBQVMsQ0FBQ29iLE1BQU0sR0FBQztJQUFXLE9BQU8sSUFBSSxDQUFDa2YsV0FBVyxHQUFDO1FBQUMsSUFBSSxDQUFDOXNCLENBQUM7UUFBQyxJQUFJLENBQUNoSixDQUFDO1FBQUMsSUFBSSxDQUFDODFCLFdBQVcsSUFBRTtZQUFDdUIsU0FBUSxJQUFJLENBQUN2QixXQUFXLENBQUN1QixPQUFPLElBQUU7Z0JBQUNyQixNQUFLLElBQUksQ0FBQ0YsV0FBVyxDQUFDdUIsT0FBTyxDQUFDckIsSUFBSTtnQkFBQ0csUUFBTyxJQUFJLENBQUNMLFdBQVcsQ0FBQ3VCLE9BQU8sQ0FBQ2xCLE1BQU0sQ0FBQ3oxQixLQUFLLENBQUM7WUFBRTtZQUFFNDJCLEtBQUksSUFBSSxDQUFDeEIsV0FBVyxDQUFDd0IsR0FBRyxJQUFFO2dCQUFDZixLQUFJLElBQUksQ0FBQ1QsV0FBVyxDQUFDd0IsR0FBRyxDQUFDZixHQUFHO2dCQUFDSixRQUFPLElBQUksQ0FBQ0wsV0FBVyxDQUFDd0IsR0FBRyxDQUFDbkIsTUFBTSxDQUFDejFCLEtBQUssQ0FBQztZQUFFO1FBQUM7S0FBRSxHQUFDO1FBQUMsSUFBSSxDQUFDc0ksQ0FBQztRQUFDLElBQUksQ0FBQ2hKLENBQUM7S0FBQztBQUFBLEdBQUUrNEIsR0FBR0MsUUFBUSxHQUFDLFNBQVMzL0IsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUM7SUFBRSxPQUFPUCxLQUFHLFlBQVdBLENBQUFBLElBQUU2SixLQUFLdkYsS0FBSyxDQUFDdEUsRUFBQztJQUFHLElBQUlZLElBQUViLEVBQUVzOEIsS0FBSyxDQUFDcjhCLENBQUMsQ0FBQyxFQUFFLEVBQUNBLENBQUMsQ0FBQyxFQUFFLEVBQUNPO0lBQUcsSUFBRyxDQUFDUCxDQUFDLENBQUMsRUFBRSxFQUFDLE9BQU9ZO0lBQUUsU0FBU29GLEVBQUVJLENBQUM7UUFBRSxPQUFPckcsRUFBRXM4QixLQUFLLENBQUNqMkIsQ0FBQyxDQUFDLEVBQUUsRUFBQ0EsQ0FBQyxDQUFDLEVBQUUsRUFBQzdGO0lBQUU7SUFBQyxJQUFJMkYsSUFBRWxHLENBQUMsQ0FBQyxFQUFFO0lBQUMsT0FBT1ksRUFBRTQ3QixXQUFXLEdBQUM7UUFBQ3lCLE1BQUs7UUFBS0YsU0FBUTczQixFQUFFNjNCLE9BQU8sSUFBRTtZQUFDckIsTUFBS3gyQixFQUFFNjNCLE9BQU8sQ0FBQ3JCLElBQUk7WUFBQ0csUUFBTztnQkFBQ2o4QjthQUFFLENBQUN4QixNQUFNLENBQUM4RyxFQUFFNjNCLE9BQU8sQ0FBQ2xCLE1BQU0sQ0FBQzMwQixHQUFHLENBQUNsQztRQUFHO1FBQUVnNEIsS0FBSTkzQixFQUFFODNCLEdBQUcsSUFBRTtZQUFDZixLQUFJLzJCLEVBQUU4M0IsR0FBRyxDQUFDZixHQUFHO1lBQUNKLFFBQU87Z0JBQUNqOEI7YUFBRSxDQUFDeEIsTUFBTSxDQUFDOEcsRUFBRTgzQixHQUFHLENBQUNuQixNQUFNLENBQUMzMEIsR0FBRyxDQUFDbEM7UUFBRztJQUFDLEdBQUVwRjtBQUFDLEdBQUU2K0IsR0FBR3Y5QixTQUFTLENBQUMrYSxPQUFPLEdBQUM7SUFBVyxPQUFPLElBQUksQ0FBQzBpQixVQUFVLEtBQUcsd0JBQXNCLGtCQUFnQixJQUFJLENBQUNqd0IsQ0FBQyxDQUFDcVUsT0FBTyxHQUFHL2tCLFFBQVEsQ0FBQyxJQUFHLEtBQUcsU0FBTyxJQUFJLENBQUMwSCxDQUFDLENBQUNxZCxPQUFPLEdBQUcva0IsUUFBUSxDQUFDLElBQUcsS0FBRztBQUFHLEdBQUV5Z0MsR0FBR3Y5QixTQUFTLENBQUN5OUIsVUFBVSxHQUFDO0lBQVcsT0FBTyxJQUFJLENBQUNKLEdBQUc7QUFBQSxHQUFFRSxHQUFHdjlCLFNBQVMsQ0FBQ3lkLEdBQUcsR0FBQyxTQUFTNWYsQ0FBQztJQUFFLElBQUcsSUFBSSxDQUFDdy9CLEdBQUcsRUFBQyxPQUFPeC9CO0lBQUUsSUFBR0EsRUFBRXcvQixHQUFHLEVBQUMsT0FBTyxJQUFJO0lBQUMsSUFBRyxJQUFJLENBQUM1YixFQUFFLENBQUM1akIsSUFBRyxPQUFPLElBQUksQ0FBQ3ErQixHQUFHO0lBQUcsSUFBRyxJQUFJLENBQUN6ZixHQUFHLEdBQUdnRixFQUFFLENBQUM1akIsSUFBRyxPQUFPLElBQUksQ0FBQ3U5QixLQUFLLENBQUNqQixLQUFLLENBQUMsTUFBSztJQUFNLElBQUcsSUFBSSxDQUFDM3NCLENBQUMsQ0FBQ3FNLEdBQUcsQ0FBQ2hjLEVBQUUyUCxDQUFDLE1BQUksR0FBRSxPQUFPLElBQUksQ0FBQzR0QixLQUFLLENBQUNqQixLQUFLLENBQUMsTUFBSztJQUFNLElBQUlyOEIsSUFBRSxJQUFJLENBQUMwRyxDQUFDLENBQUMwZCxNQUFNLENBQUNya0IsRUFBRTJHLENBQUM7SUFBRTFHLEVBQUVnakIsSUFBSSxDQUFDLE9BQUssS0FBSWhqQixDQUFBQSxJQUFFQSxFQUFFd2tCLE1BQU0sQ0FBQyxJQUFJLENBQUM5VSxDQUFDLENBQUMwVSxNQUFNLENBQUNya0IsRUFBRTJQLENBQUMsRUFBRXNWLE9BQU8sR0FBRTtJQUFHLElBQUl6a0IsSUFBRVAsRUFBRTJrQixNQUFNLEdBQUdOLE9BQU8sQ0FBQyxJQUFJLENBQUMzVSxDQUFDLEVBQUUyVSxPQUFPLENBQUN0a0IsRUFBRTJQLENBQUMsR0FBRTlPLElBQUVaLEVBQUV3a0IsTUFBTSxDQUFDLElBQUksQ0FBQzlVLENBQUMsQ0FBQzBVLE1BQU0sQ0FBQzdqQixJQUFJOGpCLE9BQU8sQ0FBQyxJQUFJLENBQUMzZCxDQUFDO0lBQUUsT0FBTyxJQUFJLENBQUM0MkIsS0FBSyxDQUFDakIsS0FBSyxDQUFDOTdCLEdBQUVLO0FBQUUsR0FBRTYrQixHQUFHdjlCLFNBQVMsQ0FBQ2s4QixHQUFHLEdBQUM7SUFBVyxJQUFHLElBQUksQ0FBQ21CLEdBQUcsRUFBQyxPQUFPLElBQUk7SUFBQyxJQUFJeC9CLElBQUUsSUFBSSxDQUFDMkcsQ0FBQyxDQUFDd2QsTUFBTSxDQUFDLElBQUksQ0FBQ3hkLENBQUM7SUFBRSxJQUFHM0csRUFBRWlqQixJQUFJLENBQUMsT0FBSyxHQUFFLE9BQU8sSUFBSSxDQUFDc2EsS0FBSyxDQUFDakIsS0FBSyxDQUFDLE1BQUs7SUFBTSxJQUFJcjhCLElBQUUsSUFBSSxDQUFDczlCLEtBQUssQ0FBQ2h1QixDQUFDLEVBQUMvTyxJQUFFLElBQUksQ0FBQ21QLENBQUMsQ0FBQ2lWLE1BQU0sSUFBRy9qQixJQUFFYixFQUFFaWxCLE9BQU8sSUFBR2hmLElBQUV6RixFQUFFMmpCLE1BQU0sQ0FBQzNqQixHQUFHNGpCLE9BQU8sQ0FBQzVqQixHQUFHNGpCLE9BQU8sQ0FBQ25rQixHQUFHd2tCLE1BQU0sQ0FBQzVqQixJQUFHc0YsSUFBRUYsRUFBRTJlLE1BQU0sR0FBR04sT0FBTyxDQUFDLElBQUksQ0FBQzNVLENBQUMsQ0FBQ3dVLE1BQU0sQ0FBQyxJQUFJLENBQUN4VSxDQUFDLElBQUd0SixJQUFFSixFQUFFd2UsTUFBTSxDQUFDLElBQUksQ0FBQzlVLENBQUMsQ0FBQzBVLE1BQU0sQ0FBQ2xlLElBQUltZSxPQUFPLENBQUMsSUFBSSxDQUFDM2QsQ0FBQztJQUFFLE9BQU8sSUFBSSxDQUFDNDJCLEtBQUssQ0FBQ2pCLEtBQUssQ0FBQ24yQixHQUFFRTtBQUFFLEdBQUVxNUIsR0FBR3Y5QixTQUFTLENBQUMwN0IsSUFBSSxHQUFDO0lBQVcsT0FBTyxJQUFJLENBQUNsdUIsQ0FBQyxDQUFDcVUsT0FBTztBQUFFLEdBQUUwYixHQUFHdjlCLFNBQVMsQ0FBQzI3QixJQUFJLEdBQUM7SUFBVyxPQUFPLElBQUksQ0FBQ24zQixDQUFDLENBQUNxZCxPQUFPO0FBQUUsR0FBRTBiLEdBQUd2OUIsU0FBUyxDQUFDMmUsR0FBRyxHQUFDLFNBQVM5Z0IsQ0FBQztJQUFFLE9BQU9BLElBQUUsSUFBSXFtQixFQUFFcm1CLEdBQUUsS0FBSSxJQUFJLENBQUM0L0IsVUFBVSxLQUFHLElBQUksR0FBQyxJQUFJLENBQUN4QixXQUFXLENBQUNwK0IsS0FBRyxJQUFJLENBQUN1OUIsS0FBSyxDQUFDZixZQUFZLENBQUMsSUFBSSxFQUFDeDhCLEtBQUcsSUFBSSxDQUFDdTlCLEtBQUssQ0FBQ3FCLElBQUksR0FBQyxJQUFJLENBQUNyQixLQUFLLENBQUNrQyxlQUFlLENBQUM7UUFBQyxJQUFJO0tBQUMsRUFBQztRQUFDei9CO0tBQUUsSUFBRSxJQUFJLENBQUN1OUIsS0FBSyxDQUFDUCxRQUFRLENBQUMsSUFBSSxFQUFDaDlCO0FBQUUsR0FBRTAvQixHQUFHdjlCLFNBQVMsQ0FBQzA5QixNQUFNLEdBQUMsU0FBUzcvQixDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFLElBQUlLLElBQUU7UUFBQyxJQUFJO1FBQUNaO0tBQUUsRUFBQ2dHLElBQUU7UUFBQ2pHO1FBQUVRO0tBQUU7SUFBQyxPQUFPLElBQUksQ0FBQys4QixLQUFLLENBQUNxQixJQUFJLEdBQUMsSUFBSSxDQUFDckIsS0FBSyxDQUFDa0MsZUFBZSxDQUFDNStCLEdBQUVvRixLQUFHLElBQUksQ0FBQ3MzQixLQUFLLENBQUNILFdBQVcsQ0FBQyxHQUFFdjhCLEdBQUVvRixHQUFFO0FBQUUsR0FBRXk1QixHQUFHdjlCLFNBQVMsQ0FBQzI5QixPQUFPLEdBQUMsU0FBUzkvQixDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFLElBQUlLLElBQUU7UUFBQyxJQUFJO1FBQUNaO0tBQUUsRUFBQ2dHLElBQUU7UUFBQ2pHO1FBQUVRO0tBQUU7SUFBQyxPQUFPLElBQUksQ0FBQys4QixLQUFLLENBQUNxQixJQUFJLEdBQUMsSUFBSSxDQUFDckIsS0FBSyxDQUFDa0MsZUFBZSxDQUFDNStCLEdBQUVvRixHQUFFLENBQUMsS0FBRyxJQUFJLENBQUNzM0IsS0FBSyxDQUFDSCxXQUFXLENBQUMsR0FBRXY4QixHQUFFb0YsR0FBRSxHQUFFLENBQUM7QUFBRSxHQUFFeTVCLEdBQUd2OUIsU0FBUyxDQUFDeWhCLEVBQUUsR0FBQyxTQUFTNWpCLENBQUM7SUFBRSxPQUFPLElBQUksS0FBR0EsS0FBRyxJQUFJLENBQUN3L0IsR0FBRyxLQUFHeC9CLEVBQUV3L0IsR0FBRyxJQUFHLEtBQUksQ0FBQ0EsR0FBRyxJQUFFLElBQUksQ0FBQzd2QixDQUFDLENBQUNxTSxHQUFHLENBQUNoYyxFQUFFMlAsQ0FBQyxNQUFJLEtBQUcsSUFBSSxDQUFDaEosQ0FBQyxDQUFDcVYsR0FBRyxDQUFDaGMsRUFBRTJHLENBQUMsTUFBSTtBQUFFLEdBQUUrNEIsR0FBR3Y5QixTQUFTLENBQUN5YyxHQUFHLEdBQUMsU0FBUzVlLENBQUM7SUFBRSxJQUFHLElBQUksQ0FBQ3cvQixHQUFHLEVBQUMsT0FBTyxJQUFJO0lBQUMsSUFBSXYvQixJQUFFLElBQUksQ0FBQ3M5QixLQUFLLENBQUNqQixLQUFLLENBQUMsSUFBSSxDQUFDM3NCLENBQUMsRUFBQyxJQUFJLENBQUNoSixDQUFDLENBQUN1ZSxNQUFNO0lBQUksSUFBR2xsQixLQUFHLElBQUksQ0FBQ3k4QixXQUFXLEVBQUM7UUFBQyxJQUFJajhCLElBQUUsSUFBSSxDQUFDaThCLFdBQVcsRUFBQzU3QixJQUFFLFNBQVNvRixDQUFDO1lBQUUsT0FBT0EsRUFBRTJZLEdBQUc7UUFBRTtRQUFFM2UsRUFBRXc4QixXQUFXLEdBQUM7WUFBQ3dCLEtBQUl6OUIsRUFBRXk5QixHQUFHLElBQUU7Z0JBQUNmLEtBQUkxOEIsRUFBRXk5QixHQUFHLENBQUNmLEdBQUc7Z0JBQUNKLFFBQU90OEIsRUFBRXk5QixHQUFHLENBQUNuQixNQUFNLENBQUMzMEIsR0FBRyxDQUFDdEg7WUFBRTtZQUFFbTlCLFNBQVF4OUIsRUFBRXc5QixPQUFPLElBQUU7Z0JBQUNyQixNQUFLbjhCLEVBQUV3OUIsT0FBTyxDQUFDckIsSUFBSTtnQkFBQ0csUUFBT3Q4QixFQUFFdzlCLE9BQU8sQ0FBQ2xCLE1BQU0sQ0FBQzMwQixHQUFHLENBQUN0SDtZQUFFO1FBQUM7SUFBQztJQUFDLE9BQU9aO0FBQUMsR0FBRXkvQixHQUFHdjlCLFNBQVMsQ0FBQ2s3QixHQUFHLEdBQUM7SUFBVyxJQUFHLElBQUksQ0FBQ21DLEdBQUcsRUFBQyxPQUFPLElBQUksQ0FBQ2pDLEtBQUssQ0FBQ1gsTUFBTSxDQUFDLE1BQUssTUFBSztJQUFNLElBQUk1OEIsSUFBRSxJQUFJLENBQUN1OUIsS0FBSyxDQUFDWCxNQUFNLENBQUMsSUFBSSxDQUFDanRCLENBQUMsRUFBQyxJQUFJLENBQUNoSixDQUFDLEVBQUMsSUFBSSxDQUFDNDJCLEtBQUssQ0FBQzdCLEdBQUc7SUFBRSxPQUFPMTdCO0FBQUM7QUFBRSxTQUFTKy9CLEdBQUdoZ0MsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFNjdCLEdBQUdtQixTQUFTLENBQUMzNkIsSUFBSSxDQUFDLElBQUksRUFBQzlDLEdBQUUsYUFBWUMsTUFBSSxRQUFNQyxNQUFJLFFBQU1PLE1BQUksT0FBTSxLQUFJLENBQUNtUCxDQUFDLEdBQUMsSUFBSSxDQUFDNHRCLEtBQUssQ0FBQzdCLEdBQUcsRUFBQyxJQUFJLENBQUMvMEIsQ0FBQyxHQUFDLElBQUksQ0FBQzQyQixLQUFLLENBQUM3QixHQUFHLEVBQUMsSUFBSSxDQUFDamtCLENBQUMsR0FBQyxJQUFJNE8sRUFBRSxFQUFDLElBQUksS0FBSSxDQUFDMVcsQ0FBQyxHQUFDLElBQUkwVyxFQUFFcm1CLEdBQUUsS0FBSSxJQUFJLENBQUMyRyxDQUFDLEdBQUMsSUFBSTBmLEVBQUVwbUIsR0FBRSxLQUFJLElBQUksQ0FBQ3dYLENBQUMsR0FBQyxJQUFJNE8sRUFBRTdsQixHQUFFLEdBQUUsR0FBRyxJQUFJLENBQUNtUCxDQUFDLENBQUNpTSxHQUFHLElBQUcsS0FBSSxDQUFDak0sQ0FBQyxHQUFDLElBQUksQ0FBQ0EsQ0FBQyxDQUFDa1UsS0FBSyxDQUFDLElBQUksQ0FBQzBaLEtBQUssQ0FBQzNoQixHQUFHLElBQUcsSUFBSSxDQUFDalYsQ0FBQyxDQUFDaVYsR0FBRyxJQUFHLEtBQUksQ0FBQ2pWLENBQUMsR0FBQyxJQUFJLENBQUNBLENBQUMsQ0FBQ2tkLEtBQUssQ0FBQyxJQUFJLENBQUMwWixLQUFLLENBQUMzaEIsR0FBRyxJQUFHLElBQUksQ0FBQ25FLENBQUMsQ0FBQ21FLEdBQUcsSUFBRyxLQUFJLENBQUNuRSxDQUFDLEdBQUMsSUFBSSxDQUFDQSxDQUFDLENBQUNvTSxLQUFLLENBQUMsSUFBSSxDQUFDMFosS0FBSyxDQUFDM2hCLEdBQUcsSUFBRyxJQUFJLENBQUNva0IsSUFBSSxHQUFDLElBQUksQ0FBQ3ZvQixDQUFDLEtBQUcsSUFBSSxDQUFDOGxCLEtBQUssQ0FBQzdCLEdBQUc7QUFBQTtBQUFDNEMsR0FBR3lCLElBQUcxRCxHQUFHbUIsU0FBUyxHQUFFZ0IsR0FBR3I4QixTQUFTLENBQUN5NkIsTUFBTSxHQUFDLFNBQVM1OEIsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUM7SUFBRSxPQUFPLElBQUl1L0IsR0FBRyxJQUFJLEVBQUMvL0IsR0FBRUMsR0FBRU87QUFBRSxHQUFFdS9CLEdBQUc1OUIsU0FBUyxDQUFDNDZCLEdBQUcsR0FBQztJQUFXLElBQUcsSUFBSSxDQUFDNkMsVUFBVSxJQUFHLE9BQU8sSUFBSSxDQUFDckMsS0FBSyxDQUFDakIsS0FBSyxDQUFDLE1BQUs7SUFBTSxJQUFJdDhCLElBQUUsSUFBSSxDQUFDeVgsQ0FBQyxDQUFDd04sT0FBTyxJQUFHaGxCLElBQUVELEVBQUU0a0IsTUFBTSxJQUFHcGtCLElBQUUsSUFBSSxDQUFDbVAsQ0FBQyxDQUFDOFUsTUFBTSxDQUFDeGtCLElBQUdZLElBQUUsSUFBSSxDQUFDOEYsQ0FBQyxDQUFDOGQsTUFBTSxDQUFDeGtCLEdBQUd3a0IsTUFBTSxDQUFDemtCO0lBQUcsT0FBTyxJQUFJLENBQUN1OUIsS0FBSyxDQUFDakIsS0FBSyxDQUFDOTdCLEdBQUVLO0FBQUUsR0FBRWsvQixHQUFHNTlCLFNBQVMsQ0FBQ3ljLEdBQUcsR0FBQztJQUFXLE9BQU8sSUFBSSxDQUFDMmUsS0FBSyxDQUFDWCxNQUFNLENBQUMsSUFBSSxDQUFDanRCLENBQUMsRUFBQyxJQUFJLENBQUNoSixDQUFDLENBQUN1ZSxNQUFNLElBQUcsSUFBSSxDQUFDek4sQ0FBQztBQUFDLEdBQUVzb0IsR0FBRzU5QixTQUFTLENBQUN5ZCxHQUFHLEdBQUMsU0FBUzVmLENBQUM7SUFBRSxJQUFHLElBQUksQ0FBQzQvQixVQUFVLElBQUcsT0FBTzUvQjtJQUFFLElBQUdBLEVBQUU0L0IsVUFBVSxJQUFHLE9BQU8sSUFBSTtJQUFDLElBQUkzL0IsSUFBRUQsRUFBRXlYLENBQUMsQ0FBQ21OLE1BQU0sSUFBR3BrQixJQUFFLElBQUksQ0FBQ2lYLENBQUMsQ0FBQ21OLE1BQU0sSUFBRy9qQixJQUFFLElBQUksQ0FBQzhPLENBQUMsQ0FBQzhVLE1BQU0sQ0FBQ3hrQixJQUFHZ0csSUFBRWpHLEVBQUUyUCxDQUFDLENBQUM4VSxNQUFNLENBQUNqa0IsSUFBRzJGLElBQUUsSUFBSSxDQUFDUSxDQUFDLENBQUM4ZCxNQUFNLENBQUN4a0IsRUFBRXdrQixNQUFNLENBQUN6a0IsRUFBRXlYLENBQUMsSUFBR3BSLElBQUVyRyxFQUFFMkcsQ0FBQyxDQUFDOGQsTUFBTSxDQUFDamtCLEVBQUVpa0IsTUFBTSxDQUFDLElBQUksQ0FBQ2hOLENBQUMsSUFBR25SLElBQUV6RixFQUFFd2pCLE1BQU0sQ0FBQ3BlLElBQUdNLElBQUVKLEVBQUVrZSxNQUFNLENBQUNoZTtJQUFHLElBQUdDLEVBQUUyYyxJQUFJLENBQUMsT0FBSyxHQUFFLE9BQU8xYyxFQUFFMGMsSUFBSSxDQUFDLE9BQUssSUFBRSxJQUFJLENBQUNzYSxLQUFLLENBQUNYLE1BQU0sQ0FBQyxNQUFLLE1BQUssUUFBTSxJQUFJLENBQUN5QixHQUFHO0lBQUcsSUFBSTczQixJQUFFRixFQUFFc2UsTUFBTSxJQUFHamUsSUFBRUgsRUFBRWllLE1BQU0sQ0FBQ25lLElBQUd3RyxJQUFFak0sRUFBRTRqQixNQUFNLENBQUNqZSxJQUFHdUcsSUFBRXhHLEVBQUVxZSxNQUFNLEdBQUdSLE9BQU8sQ0FBQ3pkLEdBQUcyZCxPQUFPLENBQUN4WCxHQUFHd1gsT0FBTyxDQUFDeFgsSUFBR0UsSUFBRXpHLEVBQUVrZSxNQUFNLENBQUMzWCxFQUFFd1gsT0FBTyxDQUFDdlgsSUFBSXVYLE9BQU8sQ0FBQ25lLEVBQUVzZSxNQUFNLENBQUM5ZCxLQUFJc0csSUFBRSxJQUFJLENBQUN3SyxDQUFDLENBQUNnTixNQUFNLENBQUN6a0IsRUFBRXlYLENBQUMsRUFBRWdOLE1BQU0sQ0FBQ25lO0lBQUcsT0FBTyxJQUFJLENBQUNpM0IsS0FBSyxDQUFDWCxNQUFNLENBQUM3dkIsR0FBRUMsR0FBRUM7QUFBRSxHQUFFOHlCLEdBQUc1OUIsU0FBUyxDQUFDMDZCLFFBQVEsR0FBQyxTQUFTNzhCLENBQUM7SUFBRSxJQUFHLElBQUksQ0FBQzQvQixVQUFVLElBQUcsT0FBTzUvQixFQUFFcTlCLEdBQUc7SUFBRyxJQUFHcjlCLEVBQUU0L0IsVUFBVSxJQUFHLE9BQU8sSUFBSTtJQUFDLElBQUkzL0IsSUFBRSxJQUFJLENBQUN3WCxDQUFDLENBQUNtTixNQUFNLElBQUdwa0IsSUFBRSxJQUFJLENBQUNtUCxDQUFDLEVBQUM5TyxJQUFFYixFQUFFMlAsQ0FBQyxDQUFDOFUsTUFBTSxDQUFDeGtCLElBQUdnRyxJQUFFLElBQUksQ0FBQ1UsQ0FBQyxFQUFDUixJQUFFbkcsRUFBRTJHLENBQUMsQ0FBQzhkLE1BQU0sQ0FBQ3hrQixHQUFHd2tCLE1BQU0sQ0FBQyxJQUFJLENBQUNoTixDQUFDLEdBQUVwUixJQUFFN0YsRUFBRTZqQixNQUFNLENBQUN4akIsSUFBR3lGLElBQUVMLEVBQUVvZSxNQUFNLENBQUNsZTtJQUFHLElBQUdFLEVBQUU0YyxJQUFJLENBQUMsT0FBSyxHQUFFLE9BQU8zYyxFQUFFMmMsSUFBSSxDQUFDLE9BQUssSUFBRSxJQUFJLENBQUNzYSxLQUFLLENBQUNYLE1BQU0sQ0FBQyxNQUFLLE1BQUssUUFBTSxJQUFJLENBQUN5QixHQUFHO0lBQUcsSUFBSTkzQixJQUFFRixFQUFFdWUsTUFBTSxJQUFHcGUsSUFBRUQsRUFBRWtlLE1BQU0sQ0FBQ3BlLElBQUdNLElBQUVuRyxFQUFFaWtCLE1BQU0sQ0FBQ2xlLElBQUd1RyxJQUFFeEcsRUFBRXNlLE1BQU0sR0FBR1IsT0FBTyxDQUFDNWQsR0FBRzhkLE9BQU8sQ0FBQzNkLEdBQUcyZCxPQUFPLENBQUMzZCxJQUFHb0csSUFBRXpHLEVBQUVtZSxNQUFNLENBQUM5ZCxFQUFFMmQsT0FBTyxDQUFDeFgsSUFBSXdYLE9BQU8sQ0FBQ3JlLEVBQUV3ZSxNQUFNLENBQUNqZSxLQUFJd0csSUFBRSxJQUFJLENBQUN5SyxDQUFDLENBQUNnTixNQUFNLENBQUNwZTtJQUFHLE9BQU8sSUFBSSxDQUFDazNCLEtBQUssQ0FBQ1gsTUFBTSxDQUFDOXZCLEdBQUVDLEdBQUVDO0FBQUUsR0FBRSt5QixHQUFHNTlCLFNBQVMsQ0FBQ2c3QixJQUFJLEdBQUMsU0FBU245QixDQUFDO0lBQUUsSUFBR0EsTUFBSSxHQUFFLE9BQU8sSUFBSTtJQUFDLElBQUcsSUFBSSxDQUFDNC9CLFVBQVUsSUFBRyxPQUFPLElBQUk7SUFBQyxJQUFHLENBQUM1L0IsR0FBRSxPQUFPLElBQUksQ0FBQ3ErQixHQUFHO0lBQUcsSUFBSXArQjtJQUFFLElBQUcsSUFBSSxDQUFDczlCLEtBQUssQ0FBQ21CLEtBQUssSUFBRSxJQUFJLENBQUNuQixLQUFLLENBQUNvQixNQUFNLEVBQUM7UUFBQyxJQUFJbitCLElBQUUsSUFBSTtRQUFDLElBQUlQLElBQUUsR0FBRUEsSUFBRUQsR0FBRUMsSUFBSU8sSUFBRUEsRUFBRTY5QixHQUFHO1FBQUcsT0FBTzc5QjtJQUFDO0lBQUMsSUFBSUssSUFBRSxJQUFJLENBQUMwOEIsS0FBSyxDQUFDaHVCLENBQUMsRUFBQ3RKLElBQUUsSUFBSSxDQUFDczNCLEtBQUssQ0FBQ2tCLElBQUksRUFBQ3Q0QixJQUFFLElBQUksQ0FBQ3dKLENBQUMsRUFBQ3RKLElBQUUsSUFBSSxDQUFDTSxDQUFDLEVBQUNMLElBQUUsSUFBSSxDQUFDbVIsQ0FBQyxFQUFDbFIsSUFBRUQsRUFBRXNlLE1BQU0sR0FBR0EsTUFBTSxJQUFHcGUsSUFBRUgsRUFBRThkLE1BQU0sQ0FBQzlkO0lBQUcsSUFBSXBHLElBQUUsR0FBRUEsSUFBRUQsR0FBRUMsSUFBSTtRQUFDLElBQUkwRyxJQUFFUixFQUFFeWUsTUFBTSxJQUFHOVgsSUFBRXRHLEVBQUVvZSxNQUFNLElBQUc3WCxJQUFFRCxFQUFFOFgsTUFBTSxJQUFHNVgsSUFBRXJHLEVBQUV3ZCxNQUFNLENBQUN4ZCxHQUFHeWQsT0FBTyxDQUFDemQsR0FBR3lkLE9BQU8sQ0FBQ3ZqQixFQUFFNGpCLE1BQU0sQ0FBQ2xlLEtBQUkwRyxJQUFFOUcsRUFBRXNlLE1BQU0sQ0FBQzNYLElBQUdJLElBQUVGLEVBQUU0WCxNQUFNLEdBQUdOLE9BQU8sQ0FBQ3JYLEVBQUVrWCxNQUFNLENBQUNsWCxLQUFJRSxJQUFFRixFQUFFcVgsT0FBTyxDQUFDcFgsSUFBR0UsSUFBRUosRUFBRXlYLE1BQU0sQ0FBQ3RYO1FBQUdDLElBQUVBLEVBQUVnWCxPQUFPLENBQUNoWCxHQUFHa1gsT0FBTyxDQUFDdlg7UUFBRyxJQUFJTSxLQUFHN0csRUFBRWllLE1BQU0sQ0FBQ25lO1FBQUdyRyxJQUFFLElBQUVELEtBQUl1RyxDQUFBQSxJQUFFQSxFQUFFa2UsTUFBTSxDQUFDMVgsRUFBQyxHQUFHNUcsSUFBRStHLEdBQUU1RyxJQUFFK0csSUFBRzdHLElBQUU0RztJQUFDO0lBQUMsT0FBTyxJQUFJLENBQUNtd0IsS0FBSyxDQUFDWCxNQUFNLENBQUN6MkIsR0FBRUssRUFBRWllLE1BQU0sQ0FBQ3hlLElBQUdLO0FBQUUsR0FBRXk1QixHQUFHNTlCLFNBQVMsQ0FBQ2s4QixHQUFHLEdBQUM7SUFBVyxPQUFPLElBQUksQ0FBQ3VCLFVBQVUsS0FBRyxJQUFJLEdBQUMsSUFBSSxDQUFDckMsS0FBSyxDQUFDbUIsS0FBSyxHQUFDLElBQUksQ0FBQ3VCLFFBQVEsS0FBRyxJQUFJLENBQUMxQyxLQUFLLENBQUNvQixNQUFNLEdBQUMsSUFBSSxDQUFDdUIsU0FBUyxLQUFHLElBQUksQ0FBQ0MsSUFBSTtBQUFFLEdBQUVKLEdBQUc1OUIsU0FBUyxDQUFDODlCLFFBQVEsR0FBQztJQUFXLElBQUlqZ0MsR0FBRUMsR0FBRU87SUFBRSxJQUFHLElBQUksQ0FBQ3cvQixJQUFJLEVBQUM7UUFBQyxJQUFJbi9CLElBQUUsSUFBSSxDQUFDOE8sQ0FBQyxDQUFDaVYsTUFBTSxJQUFHM2UsSUFBRSxJQUFJLENBQUNVLENBQUMsQ0FBQ2llLE1BQU0sSUFBR3plLElBQUVGLEVBQUUyZSxNQUFNLElBQUd2ZSxJQUFFLElBQUksQ0FBQ3NKLENBQUMsQ0FBQ3dVLE1BQU0sQ0FBQ2xlLEdBQUcyZSxNQUFNLEdBQUdOLE9BQU8sQ0FBQ3pqQixHQUFHeWpCLE9BQU8sQ0FBQ25lO1FBQUdFLElBQUVBLEVBQUUrZCxPQUFPLENBQUMvZDtRQUFHLElBQUlDLElBQUV6RixFQUFFc2pCLE1BQU0sQ0FBQ3RqQixHQUFHdWpCLE9BQU8sQ0FBQ3ZqQixJQUFHMEYsSUFBRUQsRUFBRXNlLE1BQU0sR0FBR04sT0FBTyxDQUFDamUsR0FBR2llLE9BQU8sQ0FBQ2plLElBQUdHLElBQUVMLEVBQUVpZSxPQUFPLENBQUNqZTtRQUFHSyxJQUFFQSxFQUFFNGQsT0FBTyxDQUFDNWQsSUFBR0EsSUFBRUEsRUFBRTRkLE9BQU8sQ0FBQzVkLElBQUd4RyxJQUFFdUcsR0FBRXRHLElBQUVxRyxFQUFFbWUsTUFBTSxDQUFDcGUsRUFBRWllLE9BQU8sQ0FBQy9kLElBQUkrZCxPQUFPLENBQUM5ZCxJQUFHaEcsSUFBRSxJQUFJLENBQUNtRyxDQUFDLENBQUN3ZCxNQUFNLENBQUMsSUFBSSxDQUFDeGQsQ0FBQztJQUFDLE9BQUs7UUFBQyxJQUFJQSxJQUFFLElBQUksQ0FBQ2dKLENBQUMsQ0FBQ2lWLE1BQU0sSUFBRzlYLElBQUUsSUFBSSxDQUFDbkcsQ0FBQyxDQUFDaWUsTUFBTSxJQUFHN1gsSUFBRUQsRUFBRThYLE1BQU0sSUFBRzVYLElBQUUsSUFBSSxDQUFDMkMsQ0FBQyxDQUFDd1UsTUFBTSxDQUFDclgsR0FBRzhYLE1BQU0sR0FBR04sT0FBTyxDQUFDM2QsR0FBRzJkLE9BQU8sQ0FBQ3ZYO1FBQUdDLElBQUVBLEVBQUVvWCxPQUFPLENBQUNwWDtRQUFHLElBQUlDLElBQUV0RyxFQUFFd2QsTUFBTSxDQUFDeGQsR0FBR3lkLE9BQU8sQ0FBQ3pkLElBQUd1RyxJQUFFRCxFQUFFMlgsTUFBTSxJQUFHelgsSUFBRUosRUFBRXFYLE9BQU8sQ0FBQ3JYO1FBQUdJLElBQUVBLEVBQUVpWCxPQUFPLENBQUNqWCxJQUFHQSxJQUFFQSxFQUFFaVgsT0FBTyxDQUFDalgsSUFBR25OLElBQUVrTixFQUFFb1gsT0FBTyxDQUFDdFgsR0FBR3NYLE9BQU8sQ0FBQ3RYLElBQUcvTSxJQUFFZ04sRUFBRXdYLE1BQU0sQ0FBQ3pYLEVBQUVzWCxPQUFPLENBQUN0a0IsSUFBSXNrQixPQUFPLENBQUNuWCxJQUFHM00sSUFBRSxJQUFJLENBQUNtRyxDQUFDLENBQUM4ZCxNQUFNLENBQUMsSUFBSSxDQUFDaE4sQ0FBQyxHQUFFalgsSUFBRUEsRUFBRTRqQixPQUFPLENBQUM1akI7SUFBRTtJQUFDLE9BQU8sSUFBSSxDQUFDKzhCLEtBQUssQ0FBQ1gsTUFBTSxDQUFDNThCLEdBQUVDLEdBQUVPO0FBQUUsR0FBRXUvQixHQUFHNTlCLFNBQVMsQ0FBQys5QixTQUFTLEdBQUM7SUFBVyxJQUFJbGdDLEdBQUVDLEdBQUVPO0lBQUUsSUFBRyxJQUFJLENBQUN3L0IsSUFBSSxFQUFDO1FBQUMsSUFBSW4vQixJQUFFLElBQUksQ0FBQzhPLENBQUMsQ0FBQ2lWLE1BQU0sSUFBRzNlLElBQUUsSUFBSSxDQUFDVSxDQUFDLENBQUNpZSxNQUFNLElBQUd6ZSxJQUFFRixFQUFFMmUsTUFBTSxJQUFHdmUsSUFBRSxJQUFJLENBQUNzSixDQUFDLENBQUN3VSxNQUFNLENBQUNsZSxHQUFHMmUsTUFBTSxHQUFHTixPQUFPLENBQUN6akIsR0FBR3lqQixPQUFPLENBQUNuZTtRQUFHRSxJQUFFQSxFQUFFK2QsT0FBTyxDQUFDL2Q7UUFBRyxJQUFJQyxJQUFFekYsRUFBRXNqQixNQUFNLENBQUN0akIsR0FBR3VqQixPQUFPLENBQUN2akIsR0FBR3VqQixPQUFPLENBQUMsSUFBSSxDQUFDbVosS0FBSyxDQUFDaHVCLENBQUMsR0FBRWhKLElBQUVELEVBQUVzZSxNQUFNLEdBQUdOLE9BQU8sQ0FBQ2plLEdBQUdpZSxPQUFPLENBQUNqZTtRQUFHckcsSUFBRXVHO1FBQUUsSUFBSUMsSUFBRUwsRUFBRWllLE9BQU8sQ0FBQ2plO1FBQUdLLElBQUVBLEVBQUU0ZCxPQUFPLENBQUM1ZCxJQUFHQSxJQUFFQSxFQUFFNGQsT0FBTyxDQUFDNWQsSUFBR3ZHLElBQUVxRyxFQUFFbWUsTUFBTSxDQUFDcGUsRUFBRWllLE9BQU8sQ0FBQy9kLElBQUkrZCxPQUFPLENBQUM5ZCxJQUFHaEcsSUFBRSxJQUFJLENBQUNtRyxDQUFDLENBQUN3ZCxNQUFNLENBQUMsSUFBSSxDQUFDeGQsQ0FBQztJQUFDLE9BQUs7UUFBQyxJQUFJQSxJQUFFLElBQUksQ0FBQzhRLENBQUMsQ0FBQ21OLE1BQU0sSUFBRzlYLElBQUUsSUFBSSxDQUFDbkcsQ0FBQyxDQUFDaWUsTUFBTSxJQUFHN1gsSUFBRSxJQUFJLENBQUM0QyxDQUFDLENBQUM4VSxNQUFNLENBQUMzWCxJQUFHRSxJQUFFLElBQUksQ0FBQzJDLENBQUMsQ0FBQzBVLE1BQU0sQ0FBQzFkLEdBQUc4ZCxNQUFNLENBQUMsSUFBSSxDQUFDOVUsQ0FBQyxDQUFDd1UsTUFBTSxDQUFDeGQ7UUFBSXFHLElBQUVBLEVBQUVtWCxNQUFNLENBQUNuWCxHQUFHb1gsT0FBTyxDQUFDcFg7UUFBRyxJQUFJQyxJQUFFRixFQUFFcVgsT0FBTyxDQUFDclg7UUFBR0UsSUFBRUEsRUFBRW1YLE9BQU8sQ0FBQ25YO1FBQUcsSUFBSUMsSUFBRUQsRUFBRWtYLE1BQU0sQ0FBQ2xYO1FBQUdqTixJQUFFZ04sRUFBRTRYLE1BQU0sR0FBR04sT0FBTyxDQUFDcFgsSUFBRzFNLElBQUUsSUFBSSxDQUFDbUcsQ0FBQyxDQUFDd2QsTUFBTSxDQUFDLElBQUksQ0FBQzFNLENBQUMsRUFBRW1OLE1BQU0sR0FBR04sT0FBTyxDQUFDeFgsR0FBR3dYLE9BQU8sQ0FBQzNkO1FBQUcsSUFBSXdHLElBQUVMLEVBQUU4WCxNQUFNO1FBQUd6WCxJQUFFQSxFQUFFaVgsT0FBTyxDQUFDalgsSUFBR0EsSUFBRUEsRUFBRWlYLE9BQU8sQ0FBQ2pYLElBQUdBLElBQUVBLEVBQUVpWCxPQUFPLENBQUNqWCxJQUFHbE4sSUFBRStNLEVBQUV5WCxNQUFNLENBQUN4WCxFQUFFcVgsT0FBTyxDQUFDdGtCLElBQUlza0IsT0FBTyxDQUFDblg7SUFBRTtJQUFDLE9BQU8sSUFBSSxDQUFDb3dCLEtBQUssQ0FBQ1gsTUFBTSxDQUFDNThCLEdBQUVDLEdBQUVPO0FBQUUsR0FBRXUvQixHQUFHNTlCLFNBQVMsQ0FBQ2crQixJQUFJLEdBQUM7SUFBVyxJQUFJbmdDLElBQUUsSUFBSSxDQUFDdTlCLEtBQUssQ0FBQ2h1QixDQUFDLEVBQUN0UCxJQUFFLElBQUksQ0FBQzBQLENBQUMsRUFBQ25QLElBQUUsSUFBSSxDQUFDbUcsQ0FBQyxFQUFDOUYsSUFBRSxJQUFJLENBQUM0VyxDQUFDLEVBQUN4UixJQUFFcEYsRUFBRStqQixNQUFNLEdBQUdBLE1BQU0sSUFBR3plLElBQUVsRyxFQUFFMmtCLE1BQU0sSUFBR3ZlLElBQUU3RixFQUFFb2tCLE1BQU0sSUFBR3RlLElBQUVILEVBQUVnZSxNQUFNLENBQUNoZSxHQUFHaWUsT0FBTyxDQUFDamUsR0FBR2llLE9BQU8sQ0FBQ3BrQixFQUFFeWtCLE1BQU0sQ0FBQ3hlLEtBQUlNLElBQUV0RyxFQUFFa2tCLE1BQU0sQ0FBQ2xrQjtJQUFHc0csSUFBRUEsRUFBRTZkLE9BQU8sQ0FBQzdkO0lBQUcsSUFBSUMsSUFBRUQsRUFBRWtlLE1BQU0sQ0FBQ3BlLElBQUdNLElBQUVMLEVBQUVzZSxNQUFNLEdBQUdOLE9BQU8sQ0FBQzlkLEVBQUUyZCxNQUFNLENBQUMzZCxLQUFJc0csSUFBRXRHLEVBQUU4ZCxPQUFPLENBQUMzZCxJQUFHb0csSUFBRTFHLEVBQUV1ZSxNQUFNO0lBQUc3WCxJQUFFQSxFQUFFcVgsT0FBTyxDQUFDclgsSUFBR0EsSUFBRUEsRUFBRXFYLE9BQU8sQ0FBQ3JYLElBQUdBLElBQUVBLEVBQUVxWCxPQUFPLENBQUNyWDtJQUFHLElBQUlDLElBQUUxRyxFQUFFbWUsTUFBTSxDQUFDM1gsR0FBR3dYLE9BQU8sQ0FBQ3ZYLElBQUdFLElBQUV6TSxFQUFFMmpCLE1BQU0sQ0FBQzNqQixHQUFHaWtCLE1BQU0sQ0FBQzVqQjtJQUFHLE9BQU8sSUFBSSxDQUFDMDhCLEtBQUssQ0FBQ1gsTUFBTSxDQUFDajJCLEdBQUVxRyxHQUFFQztBQUFFLEdBQUU4eUIsR0FBRzU5QixTQUFTLENBQUNpK0IsSUFBSSxHQUFDO0lBQVcsSUFBRyxDQUFDLElBQUksQ0FBQzdDLEtBQUssQ0FBQ21CLEtBQUssRUFBQyxPQUFPLElBQUksQ0FBQ0wsR0FBRyxHQUFHemUsR0FBRyxDQUFDLElBQUk7SUFBRSxJQUFJNWYsSUFBRSxJQUFJLENBQUMyUCxDQUFDLENBQUNpVixNQUFNLElBQUcza0IsSUFBRSxJQUFJLENBQUMwRyxDQUFDLENBQUNpZSxNQUFNLElBQUdwa0IsSUFBRSxJQUFJLENBQUNpWCxDQUFDLENBQUNtTixNQUFNLElBQUcvakIsSUFBRVosRUFBRTJrQixNQUFNLElBQUczZSxJQUFFakcsRUFBRW1rQixNQUFNLENBQUNua0IsR0FBR29rQixPQUFPLENBQUNwa0IsSUFBR21HLElBQUVGLEVBQUUyZSxNQUFNLElBQUd2ZSxJQUFFLElBQUksQ0FBQ3NKLENBQUMsQ0FBQ3dVLE1BQU0sQ0FBQ2xrQixHQUFHMmtCLE1BQU0sR0FBR04sT0FBTyxDQUFDdGtCLEdBQUdza0IsT0FBTyxDQUFDempCO0lBQUd3RixJQUFFQSxFQUFFK2QsT0FBTyxDQUFDL2QsSUFBR0EsSUFBRUEsRUFBRThkLE1BQU0sQ0FBQzlkLEdBQUcrZCxPQUFPLENBQUMvZCxJQUFHQSxJQUFFQSxFQUFFaWUsT0FBTyxDQUFDbmU7SUFBRyxJQUFJRyxJQUFFRCxFQUFFdWUsTUFBTSxJQUFHcmUsSUFBRTFGLEVBQUV1akIsT0FBTyxDQUFDdmpCO0lBQUcwRixJQUFFQSxFQUFFNmQsT0FBTyxDQUFDN2QsSUFBR0EsSUFBRUEsRUFBRTZkLE9BQU8sQ0FBQzdkLElBQUdBLElBQUVBLEVBQUU2ZCxPQUFPLENBQUM3ZDtJQUFHLElBQUlDLElBQUVQLEVBQUVtZSxPQUFPLENBQUMvZCxHQUFHdWUsTUFBTSxHQUFHTixPQUFPLENBQUNuZSxHQUFHbWUsT0FBTyxDQUFDaGUsR0FBR2dlLE9BQU8sQ0FBQy9kLElBQUdJLElBQUUxRyxFQUFFd2tCLE1BQU0sQ0FBQ2plO0lBQUdHLElBQUVBLEVBQUV5ZCxPQUFPLENBQUN6ZCxJQUFHQSxJQUFFQSxFQUFFeWQsT0FBTyxDQUFDemQ7SUFBRyxJQUFJbUcsSUFBRSxJQUFJLENBQUM2QyxDQUFDLENBQUM4VSxNQUFNLENBQUNuZSxHQUFHZ2UsT0FBTyxDQUFDM2Q7SUFBR21HLElBQUVBLEVBQUVzWCxPQUFPLENBQUN0WCxJQUFHQSxJQUFFQSxFQUFFc1gsT0FBTyxDQUFDdFg7SUFBRyxJQUFJQyxJQUFFLElBQUksQ0FBQ3BHLENBQUMsQ0FBQzhkLE1BQU0sQ0FBQ2plLEVBQUVpZSxNQUFNLENBQUNsZSxFQUFFK2QsT0FBTyxDQUFDOWQsSUFBSThkLE9BQU8sQ0FBQ2plLEVBQUVvZSxNQUFNLENBQUNuZTtJQUFLeUcsSUFBRUEsRUFBRXFYLE9BQU8sQ0FBQ3JYLElBQUdBLElBQUVBLEVBQUVxWCxPQUFPLENBQUNyWCxJQUFHQSxJQUFFQSxFQUFFcVgsT0FBTyxDQUFDclg7SUFBRyxJQUFJQyxJQUFFLElBQUksQ0FBQ3lLLENBQUMsQ0FBQzBNLE1BQU0sQ0FBQzlkLEdBQUd1ZSxNQUFNLEdBQUdOLE9BQU8sQ0FBQzlqQixHQUFHOGpCLE9BQU8sQ0FBQ2hlO0lBQUcsT0FBTyxJQUFJLENBQUNpM0IsS0FBSyxDQUFDWCxNQUFNLENBQUM5dkIsR0FBRUMsR0FBRUM7QUFBRSxHQUFFK3lCLEdBQUc1OUIsU0FBUyxDQUFDMmUsR0FBRyxHQUFDLFNBQVM5Z0IsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBT0QsSUFBRSxJQUFJcW1CLEVBQUVybUIsR0FBRUMsSUFBRyxJQUFJLENBQUNzOUIsS0FBSyxDQUFDUCxRQUFRLENBQUMsSUFBSSxFQUFDaDlCO0FBQUUsR0FBRSsvQixHQUFHNTlCLFNBQVMsQ0FBQ3loQixFQUFFLEdBQUMsU0FBUzVqQixDQUFDO0lBQUUsSUFBR0EsRUFBRXlGLElBQUksS0FBRyxVQUFTLE9BQU8sSUFBSSxDQUFDbWUsRUFBRSxDQUFDNWpCLEVBQUVxOUIsR0FBRztJQUFJLElBQUcsSUFBSSxLQUFHcjlCLEdBQUUsT0FBTSxDQUFDO0lBQUUsSUFBSUMsSUFBRSxJQUFJLENBQUN3WCxDQUFDLENBQUNtTixNQUFNLElBQUdwa0IsSUFBRVIsRUFBRXlYLENBQUMsQ0FBQ21OLE1BQU07SUFBRyxJQUFHLElBQUksQ0FBQ2pWLENBQUMsQ0FBQzhVLE1BQU0sQ0FBQ2prQixHQUFHOGpCLE9BQU8sQ0FBQ3RrQixFQUFFMlAsQ0FBQyxDQUFDOFUsTUFBTSxDQUFDeGtCLElBQUlnakIsSUFBSSxDQUFDLE9BQUssR0FBRSxPQUFNLENBQUM7SUFBRSxJQUFJcGlCLElBQUVaLEVBQUV3a0IsTUFBTSxDQUFDLElBQUksQ0FBQ2hOLENBQUMsR0FBRXhSLElBQUV6RixFQUFFaWtCLE1BQU0sQ0FBQ3prQixFQUFFeVgsQ0FBQztJQUFFLE9BQU8sSUFBSSxDQUFDOVEsQ0FBQyxDQUFDOGQsTUFBTSxDQUFDeGUsR0FBR3FlLE9BQU8sQ0FBQ3RrQixFQUFFMkcsQ0FBQyxDQUFDOGQsTUFBTSxDQUFDNWpCLElBQUlvaUIsSUFBSSxDQUFDLE9BQUs7QUFBQyxHQUFFOGMsR0FBRzU5QixTQUFTLENBQUNrK0IsTUFBTSxHQUFDLFNBQVNyZ0MsQ0FBQztJQUFFLElBQUlDLElBQUUsSUFBSSxDQUFDd1gsQ0FBQyxDQUFDbU4sTUFBTSxJQUFHcGtCLElBQUVSLEVBQUU2akIsS0FBSyxDQUFDLElBQUksQ0FBQzBaLEtBQUssQ0FBQzNoQixHQUFHLEVBQUU2SSxNQUFNLENBQUN4a0I7SUFBRyxJQUFHLElBQUksQ0FBQzBQLENBQUMsQ0FBQ3FNLEdBQUcsQ0FBQ3hiLE9BQUssR0FBRSxPQUFNLENBQUM7SUFBRSxJQUFJLElBQUlLLElBQUViLEVBQUU2YyxLQUFLLElBQUc1VyxJQUFFLElBQUksQ0FBQ3MzQixLQUFLLENBQUNwQixJQUFJLENBQUMxWCxNQUFNLENBQUN4a0IsS0FBSztRQUFDLElBQUdZLEVBQUU2ZSxJQUFJLENBQUMsSUFBSSxDQUFDNmQsS0FBSyxDQUFDMThCLENBQUMsR0FBRUEsRUFBRW1iLEdBQUcsQ0FBQyxJQUFJLENBQUN1aEIsS0FBSyxDQUFDbDNCLENBQUMsS0FBRyxHQUFFLE9BQU0sQ0FBQztRQUFFLElBQUc3RixFQUFFNGpCLE9BQU8sQ0FBQ25lLElBQUcsSUFBSSxDQUFDMEosQ0FBQyxDQUFDcU0sR0FBRyxDQUFDeGIsT0FBSyxHQUFFLE9BQU0sQ0FBQztJQUFDO0FBQUMsR0FBRXUvQixHQUFHNTlCLFNBQVMsQ0FBQythLE9BQU8sR0FBQztJQUFXLE9BQU8sSUFBSSxDQUFDMGlCLFVBQVUsS0FBRyx5QkFBdUIsbUJBQWlCLElBQUksQ0FBQ2p3QixDQUFDLENBQUMxUSxRQUFRLENBQUMsSUFBRyxLQUFHLFNBQU8sSUFBSSxDQUFDMEgsQ0FBQyxDQUFDMUgsUUFBUSxDQUFDLElBQUcsS0FBRyxTQUFPLElBQUksQ0FBQ3dZLENBQUMsQ0FBQ3hZLFFBQVEsQ0FBQyxJQUFHLEtBQUc7QUFBRyxHQUFFOGdDLEdBQUc1OUIsU0FBUyxDQUFDeTlCLFVBQVUsR0FBQztJQUFXLE9BQU8sSUFBSSxDQUFDbm9CLENBQUMsQ0FBQ3dMLElBQUksQ0FBQyxPQUFLO0FBQUM7QUFBRSxJQUFJcWQsS0FBRzlGLEdBQUcsU0FBU3o2QixDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFJQyxJQUFFRDtJQUFFQyxFQUFFc2dDLElBQUksR0FBQ2xFLElBQUdwOEIsRUFBRXVnQyxLQUFLLEdBQUN4QixJQUFHLytCLEVBQUUrbEIsSUFBSSxHQUFDLE1BQUsvbEIsRUFBRXdnQyxPQUFPLEdBQUM7QUFBSSxJQUFHQyxLQUFHbEcsR0FBRyxTQUFTejZCLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlDLElBQUVELEdBQUVRLElBQUV1NkIsR0FBRzNpQixNQUFNO0lBQUMsU0FBU3ZYLEVBQUV3RixDQUFDO1FBQUVBLEVBQUVaLElBQUksS0FBRyxVQUFRLElBQUksQ0FBQzgzQixLQUFLLEdBQUMsSUFBSStDLEdBQUdFLEtBQUssQ0FBQ242QixLQUFHQSxFQUFFWixJQUFJLEtBQUcsWUFBVSxJQUFJLENBQUM4M0IsS0FBSyxHQUFDLElBQUkrQyxHQUFHRyxPQUFPLENBQUNwNkIsS0FBRyxJQUFJLENBQUNrM0IsS0FBSyxHQUFDLElBQUkrQyxHQUFHdGEsSUFBSSxDQUFDM2YsSUFBRyxJQUFJLENBQUM2SSxDQUFDLEdBQUMsSUFBSSxDQUFDcXVCLEtBQUssQ0FBQ3J1QixDQUFDLEVBQUMsSUFBSSxDQUFDck8sQ0FBQyxHQUFDLElBQUksQ0FBQzA4QixLQUFLLENBQUMxOEIsQ0FBQyxFQUFDLElBQUksQ0FBQy9CLElBQUksR0FBQ3VILEVBQUV2SCxJQUFJLEVBQUMwQixFQUFFLElBQUksQ0FBQzBPLENBQUMsQ0FBQ3F0QixRQUFRLElBQUcsa0JBQWlCLzdCLEVBQUUsSUFBSSxDQUFDME8sQ0FBQyxDQUFDNFIsR0FBRyxDQUFDLElBQUksQ0FBQ2pnQixDQUFDLEVBQUUrK0IsVUFBVSxJQUFHO0lBQTBCO0lBQUMzL0IsRUFBRTBnQyxXQUFXLEdBQUM5L0I7SUFBRSxTQUFTb0YsRUFBRUksQ0FBQyxFQUFDQyxDQUFDO1FBQUVoRixPQUFPUyxjQUFjLENBQUM5QixHQUFFb0csR0FBRTtZQUFDNUQsY0FBYSxDQUFDO1lBQUVELFlBQVcsQ0FBQztZQUFFOEosS0FBSTtnQkFBVyxJQUFJL0YsSUFBRSxJQUFJMUYsRUFBRXlGO2dCQUFHLE9BQU9oRixPQUFPUyxjQUFjLENBQUM5QixHQUFFb0csR0FBRTtvQkFBQzVELGNBQWEsQ0FBQztvQkFBRUQsWUFBVyxDQUFDO29CQUFFRyxPQUFNNEQ7Z0JBQUMsSUFBR0E7WUFBQztRQUFDO0lBQUU7SUFBQ04sRUFBRSxRQUFPO1FBQUNSLE1BQUs7UUFBUXFnQixPQUFNO1FBQU96ZixHQUFFO1FBQXdEa0osR0FBRTtRQUF3REosR0FBRTtRQUF3RHRPLEdBQUU7UUFBd0QvQixNQUFLdXZCLEdBQUdtSyxNQUFNO1FBQUNxRCxNQUFLLENBQUM7UUFBRTNzQixHQUFFO1lBQUM7WUFBd0Q7U0FBd0Q7SUFBQSxJQUFHakosRUFBRSxRQUFPO1FBQUNSLE1BQUs7UUFBUXFnQixPQUFNO1FBQU96ZixHQUFFO1FBQWlFa0osR0FBRTtRQUFpRUosR0FBRTtRQUFpRXRPLEdBQUU7UUFBaUUvQixNQUFLdXZCLEdBQUdtSyxNQUFNO1FBQUNxRCxNQUFLLENBQUM7UUFBRTNzQixHQUFFO1lBQUM7WUFBaUU7U0FBaUU7SUFBQSxJQUFHakosRUFBRSxRQUFPO1FBQUNSLE1BQUs7UUFBUXFnQixPQUFNO1FBQUt6ZixHQUFFO1FBQTBFa0osR0FBRTtRQUEwRUosR0FBRTtRQUEwRXRPLEdBQUU7UUFBMEUvQixNQUFLdXZCLEdBQUdtSyxNQUFNO1FBQUNxRCxNQUFLLENBQUM7UUFBRTNzQixHQUFFO1lBQUM7WUFBMEU7U0FBMEU7SUFBQSxJQUFHakosRUFBRSxRQUFPO1FBQUNSLE1BQUs7UUFBUXFnQixPQUFNO1FBQUt6ZixHQUFFO1FBQThHa0osR0FBRTtRQUE4R0osR0FBRTtRQUE4R3RPLEdBQUU7UUFBOEcvQixNQUFLdXZCLEdBQUdvSyxNQUFNO1FBQUNvRCxNQUFLLENBQUM7UUFBRTNzQixHQUFFO1lBQUM7WUFBOEc7U0FBOEc7SUFBQSxJQUFHakosRUFBRSxRQUFPO1FBQUNSLE1BQUs7UUFBUXFnQixPQUFNO1FBQUt6ZixHQUFFO1FBQTJKa0osR0FBRTtRQUEySkosR0FBRTtRQUEySnRPLEdBQUU7UUFBMkovQixNQUFLdXZCLEdBQUdxSyxNQUFNO1FBQUNtRCxNQUFLLENBQUM7UUFBRTNzQixHQUFFO1lBQUM7WUFBMko7U0FBMko7SUFBQSxJQUFHakosRUFBRSxjQUFhO1FBQUNSLE1BQUs7UUFBT3FnQixPQUFNO1FBQVN6ZixHQUFFO1FBQXNFa0osR0FBRTtRQUFRSixHQUFFO1FBQUl0TyxHQUFFO1FBQXNFL0IsTUFBS3V2QixHQUFHbUssTUFBTTtRQUFDcUQsTUFBSyxDQUFDO1FBQUUzc0IsR0FBRTtZQUFDO1NBQUk7SUFBQSxJQUFHakosRUFBRSxXQUFVO1FBQUNSLE1BQUs7UUFBVXFnQixPQUFNO1FBQVN6ZixHQUFFO1FBQXNFa0osR0FBRTtRQUFLQyxHQUFFO1FBQUlDLEdBQUU7UUFBc0U1TyxHQUFFO1FBQXNFL0IsTUFBS3V2QixHQUFHbUssTUFBTTtRQUFDcUQsTUFBSyxDQUFDO1FBQUUzc0IsR0FBRTtZQUFDO1lBQW1FO1NBQW1FO0lBQUE7SUFBRyxJQUFJL0k7SUFBRSxJQUFHO1FBQUNBLElBQUUsS0FBS3k2QixLQUFLO0lBQUUsRUFBQyxPQUFLO1FBQUN6NkIsSUFBRSxLQUFLO0lBQUM7SUFBQ0YsRUFBRSxhQUFZO1FBQUNSLE1BQUs7UUFBUXFnQixPQUFNO1FBQU96ZixHQUFFO1FBQTBFa0osR0FBRTtRQUFJSixHQUFFO1FBQUl0TyxHQUFFO1FBQTBFc0YsR0FBRTtRQUFJckgsTUFBS3V2QixHQUFHbUssTUFBTTtRQUFDMEYsTUFBSztRQUFtRWdCLFFBQU87UUFBbUVDLE9BQU07WUFBQztnQkFBQzV2QixHQUFFO2dCQUFtQ0osR0FBRTtZQUFtQztZQUFFO2dCQUFDSSxHQUFFO2dCQUFvQ0osR0FBRTtZQUFrQztTQUFFO1FBQUMwc0IsTUFBSyxDQUFDO1FBQUUzc0IsR0FBRTtZQUFDO1lBQW1FO1lBQW1FL0k7U0FBRTtJQUFBO0FBQUU7QUFBRyxTQUFTMDZCLEdBQUc5Z0MsQ0FBQztJQUFFLElBQUcsQ0FBRSxLQUFJLFlBQVk4Z0MsRUFBQyxHQUFHLE9BQU8sSUFBSUEsR0FBRzlnQztJQUFHLElBQUksQ0FBQ2pCLElBQUksR0FBQ2lCLEVBQUVqQixJQUFJLEVBQUMsSUFBSSxDQUFDZ2lDLFVBQVUsR0FBQyxDQUFDLENBQUMvZ0MsRUFBRStnQyxVQUFVLEVBQUMsSUFBSSxDQUFDQyxNQUFNLEdBQUMsSUFBSSxDQUFDamlDLElBQUksQ0FBQ3d6QixPQUFPLEVBQUMsSUFBSSxDQUFDME8sVUFBVSxHQUFDamhDLEVBQUVpaEMsVUFBVSxJQUFFLElBQUksQ0FBQ2xpQyxJQUFJLENBQUN5ekIsWUFBWSxFQUFDLElBQUksQ0FBQzBPLE9BQU8sR0FBQyxNQUFLLElBQUksQ0FBQ0MsY0FBYyxHQUFDLE1BQUssSUFBSSxDQUFDN2EsQ0FBQyxHQUFDLE1BQUssSUFBSSxDQUFDTyxDQUFDLEdBQUM7SUFBSyxJQUFJNW1CLElBQUU4NkIsR0FBR3hlLE9BQU8sQ0FBQ3ZjLEVBQUVvaEMsT0FBTyxFQUFDcGhDLEVBQUVxaEMsVUFBVSxJQUFFLFFBQU9uaEMsSUFBRTY2QixHQUFHeGUsT0FBTyxDQUFDdmMsRUFBRXNoQyxLQUFLLEVBQUN0aEMsRUFBRXVoQyxRQUFRLElBQUUsUUFBTzlnQyxJQUFFczZCLEdBQUd4ZSxPQUFPLENBQUN2YyxFQUFFd2hDLElBQUksRUFBQ3hoQyxFQUFFeWhDLE9BQU8sSUFBRTtJQUFPNUcsR0FBRzU2QixFQUFFd0IsTUFBTSxJQUFFLElBQUksQ0FBQ3cvQixVQUFVLEdBQUMsR0FBRSxxQ0FBbUMsSUFBSSxDQUFDQSxVQUFVLEdBQUMsVUFBUyxJQUFJLENBQUNubEIsS0FBSyxDQUFDN2IsR0FBRUMsR0FBRU87QUFBRTtBQUFDLElBQUlpaEMsS0FBR1o7QUFBR0EsR0FBRzErQixTQUFTLENBQUMwWixLQUFLLEdBQUMsU0FBUzdiLENBQUMsRUFBQ0MsQ0FBQyxFQUFDTyxDQUFDO0lBQUUsSUFBSUssSUFBRWIsRUFBRVgsTUFBTSxDQUFDWSxHQUFHWixNQUFNLENBQUNtQjtJQUFHLElBQUksQ0FBQzZsQixDQUFDLEdBQUMsSUFBSS9ZLE1BQU0sSUFBSSxDQUFDeXpCLE1BQU0sR0FBQyxJQUFHLElBQUksQ0FBQ25hLENBQUMsR0FBQyxJQUFJdFosTUFBTSxJQUFJLENBQUN5ekIsTUFBTSxHQUFDO0lBQUcsSUFBSSxJQUFJOTZCLElBQUUsR0FBRUEsSUFBRSxJQUFJLENBQUMyZ0IsQ0FBQyxDQUFDcGxCLE1BQU0sRUFBQ3lFLElBQUksSUFBSSxDQUFDb2dCLENBQUMsQ0FBQ3BnQixFQUFFLEdBQUMsR0FBRSxJQUFJLENBQUMyZ0IsQ0FBQyxDQUFDM2dCLEVBQUUsR0FBQztJQUFFLElBQUksQ0FBQzRzQixPQUFPLENBQUNoeUIsSUFBRyxJQUFJLENBQUNvZ0MsT0FBTyxHQUFDLEdBQUUsSUFBSSxDQUFDQyxjQUFjLEdBQUM7QUFBZSxHQUFFTCxHQUFHMStCLFNBQVMsQ0FBQ3UvQixLQUFLLEdBQUM7SUFBVyxPQUFPLElBQUlyVCxHQUFHa00sSUFBSSxDQUFDLElBQUksQ0FBQ3o3QixJQUFJLEVBQUMsSUFBSSxDQUFDdW5CLENBQUM7QUFBQyxHQUFFd2EsR0FBRzErQixTQUFTLENBQUMwd0IsT0FBTyxHQUFDLFNBQVM3eUIsQ0FBQztJQUFFLElBQUlDLElBQUUsSUFBSSxDQUFDeWhDLEtBQUssR0FBR3h6QixNQUFNLENBQUMsSUFBSSxDQUFDMFksQ0FBQyxFQUFFMVksTUFBTSxDQUFDO1FBQUM7S0FBRTtJQUFFbE8sS0FBSUMsQ0FBQUEsSUFBRUEsRUFBRWlPLE1BQU0sQ0FBQ2xPLEVBQUMsR0FBRyxJQUFJLENBQUNxbUIsQ0FBQyxHQUFDcG1CLEVBQUVxUixNQUFNLElBQUcsSUFBSSxDQUFDc1YsQ0FBQyxHQUFDLElBQUksQ0FBQzhhLEtBQUssR0FBR3h6QixNQUFNLENBQUMsSUFBSSxDQUFDMFksQ0FBQyxFQUFFdFYsTUFBTSxJQUFHdFIsS0FBSSxLQUFJLENBQUNxbUIsQ0FBQyxHQUFDLElBQUksQ0FBQ3FiLEtBQUssR0FBR3h6QixNQUFNLENBQUMsSUFBSSxDQUFDMFksQ0FBQyxFQUFFMVksTUFBTSxDQUFDO1FBQUM7S0FBRSxFQUFFQSxNQUFNLENBQUNsTyxHQUFHc1IsTUFBTSxJQUFHLElBQUksQ0FBQ3NWLENBQUMsR0FBQyxJQUFJLENBQUM4YSxLQUFLLEdBQUd4ekIsTUFBTSxDQUFDLElBQUksQ0FBQzBZLENBQUMsRUFBRXRWLE1BQU0sRUFBQztBQUFFLEdBQUV1dkIsR0FBRzErQixTQUFTLENBQUN3L0IsTUFBTSxHQUFDLFNBQVMzaEMsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUMsRUFBQ0ssQ0FBQztJQUFFLE9BQU9aLEtBQUcsWUFBV1ksQ0FBQUEsSUFBRUwsR0FBRUEsSUFBRVAsR0FBRUEsSUFBRSxJQUFHLEdBQUdELElBQUU4NkIsR0FBR3hlLE9BQU8sQ0FBQ3RjLEdBQUVDLElBQUdPLElBQUVzNkIsR0FBR3hlLE9BQU8sQ0FBQzliLEdBQUVLLElBQUcrNUIsR0FBRzU2QixFQUFFd0IsTUFBTSxJQUFFLElBQUksQ0FBQ3cvQixVQUFVLEdBQUMsR0FBRSxxQ0FBbUMsSUFBSSxDQUFDQSxVQUFVLEdBQUMsVUFBUyxJQUFJLENBQUNuTyxPQUFPLENBQUM3eUIsRUFBRVgsTUFBTSxDQUFDbUIsS0FBRyxFQUFFLElBQUcsSUFBSSxDQUFDeWdDLE9BQU8sR0FBQztBQUFDLEdBQUVKLEdBQUcxK0IsU0FBUyxDQUFDeS9CLFFBQVEsR0FBQyxTQUFTNWhDLENBQUMsRUFBQ0MsQ0FBQyxFQUFDTyxDQUFDLEVBQUNLLENBQUM7SUFBRSxJQUFHLElBQUksQ0FBQ29nQyxPQUFPLEdBQUMsSUFBSSxDQUFDQyxjQUFjLEVBQUMsTUFBTSxJQUFJbjZCLE1BQU07SUFBc0IsT0FBTzlHLEtBQUcsWUFBV1ksQ0FBQUEsSUFBRUwsR0FBRUEsSUFBRVAsR0FBRUEsSUFBRSxJQUFHLEdBQUdPLEtBQUlBLENBQUFBLElBQUVzNkIsR0FBR3hlLE9BQU8sQ0FBQzliLEdBQUVLLEtBQUcsUUFBTyxJQUFJLENBQUNneUIsT0FBTyxDQUFDcnlCLEVBQUM7SUFBRyxJQUFJLElBQUl5RixJQUFFLEVBQUUsRUFBQ0EsRUFBRXpFLE1BQU0sR0FBQ3hCLEdBQUcsSUFBSSxDQUFDNG1CLENBQUMsR0FBQyxJQUFJLENBQUM4YSxLQUFLLEdBQUd4ekIsTUFBTSxDQUFDLElBQUksQ0FBQzBZLENBQUMsRUFBRXRWLE1BQU0sSUFBR3JMLElBQUVBLEVBQUU1RyxNQUFNLENBQUMsSUFBSSxDQUFDdW5CLENBQUM7SUFBRSxJQUFJemdCLElBQUVGLEVBQUVvQixLQUFLLENBQUMsR0FBRXJIO0lBQUcsT0FBTyxJQUFJLENBQUM2eUIsT0FBTyxDQUFDcnlCLElBQUcsSUFBSSxDQUFDeWdDLE9BQU8sSUFBR25HLEdBQUcvcEIsTUFBTSxDQUFDNUssR0FBRWxHO0FBQUU7QUFBRSxJQUFJNGhDLEtBQUc5RyxHQUFHM2lCLE1BQU07QUFBQyxTQUFTMHBCLEdBQUcvaEMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSSxDQUFDVCxFQUFFLEdBQUNRLEdBQUUsSUFBSSxDQUFDZ2lDLElBQUksR0FBQyxNQUFLLElBQUksQ0FBQ0MsR0FBRyxHQUFDLE1BQUtoaUMsRUFBRStoQyxJQUFJLElBQUUsSUFBSSxDQUFDRSxjQUFjLENBQUNqaUMsRUFBRStoQyxJQUFJLEVBQUMvaEMsRUFBRWtpQyxPQUFPLEdBQUVsaUMsRUFBRWdpQyxHQUFHLElBQUUsSUFBSSxDQUFDRyxhQUFhLENBQUNuaUMsRUFBRWdpQyxHQUFHLEVBQUNoaUMsRUFBRW9pQyxNQUFNO0FBQUM7QUFBQyxJQUFJQyxLQUFHUDtBQUFHQSxHQUFHUSxVQUFVLEdBQUMsU0FBU3RpQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFLE9BQU9QLGFBQWE2aEMsS0FBRzdoQyxJQUFFLElBQUk2aEMsR0FBRzloQyxHQUFFO1FBQUNnaUMsS0FBSS9oQztRQUFFbWlDLFFBQU81aEM7SUFBQztBQUFFLEdBQUVzaEMsR0FBR1MsV0FBVyxHQUFDLFNBQVN2aUMsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUM7SUFBRSxPQUFPUCxhQUFhNmhDLEtBQUc3aEMsSUFBRSxJQUFJNmhDLEdBQUc5aEMsR0FBRTtRQUFDK2hDLE1BQUs5aEM7UUFBRWlpQyxTQUFRMWhDO0lBQUM7QUFBRSxHQUFFc2hDLEdBQUczL0IsU0FBUyxDQUFDbzZCLFFBQVEsR0FBQztJQUFXLElBQUl2OEIsSUFBRSxJQUFJLENBQUN3aUMsU0FBUztJQUFHLE9BQU94aUMsRUFBRTQvQixVQUFVLEtBQUc7UUFBQzZDLFFBQU8sQ0FBQztRQUFFenFCLFFBQU87SUFBb0IsSUFBRWhZLEVBQUV1OEIsUUFBUSxLQUFHdjhCLEVBQUU4Z0IsR0FBRyxDQUFDLElBQUksQ0FBQ3ZoQixFQUFFLENBQUNnK0IsS0FBSyxDQUFDMThCLENBQUMsRUFBRSsrQixVQUFVLEtBQUc7UUFBQzZDLFFBQU8sQ0FBQztRQUFFenFCLFFBQU87SUFBSSxJQUFFO1FBQUN5cUIsUUFBTyxDQUFDO1FBQUV6cUIsUUFBTztJQUFxQixJQUFFO1FBQUN5cUIsUUFBTyxDQUFDO1FBQUV6cUIsUUFBTztJQUEyQjtBQUFDLEdBQUU4cEIsR0FBRzMvQixTQUFTLENBQUNxZ0MsU0FBUyxHQUFDLFNBQVN4aUMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBTyxPQUFPRCxLQUFHLFlBQVdDLENBQUFBLElBQUVELEdBQUVBLElBQUUsSUFBRyxHQUFHLElBQUksQ0FBQ2dpQyxHQUFHLElBQUcsS0FBSSxDQUFDQSxHQUFHLEdBQUMsSUFBSSxDQUFDemlDLEVBQUUsQ0FBQzJQLENBQUMsQ0FBQzRSLEdBQUcsQ0FBQyxJQUFJLENBQUNpaEIsSUFBSSxJQUFHOWhDLElBQUUsSUFBSSxDQUFDK2hDLEdBQUcsQ0FBQ2p4QixNQUFNLENBQUM5USxHQUFFRCxLQUFHLElBQUksQ0FBQ2dpQyxHQUFHO0FBQUEsR0FBRUYsR0FBRzMvQixTQUFTLENBQUN1Z0MsVUFBVSxHQUFDLFNBQVMxaUMsQ0FBQztJQUFFLE9BQU9BLE1BQUksUUFBTSxJQUFJLENBQUMraEMsSUFBSSxDQUFDOWlDLFFBQVEsQ0FBQyxJQUFHLEtBQUcsSUFBSSxDQUFDOGlDLElBQUk7QUFBQSxHQUFFRCxHQUFHMy9CLFNBQVMsQ0FBQzgvQixjQUFjLEdBQUMsU0FBU2ppQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFJLENBQUM4aEMsSUFBSSxHQUFDLElBQUkxYixFQUFFcm1CLEdBQUVDLEtBQUcsS0FBSSxJQUFJLENBQUM4aEMsSUFBSSxHQUFDLElBQUksQ0FBQ0EsSUFBSSxDQUFDdmYsSUFBSSxDQUFDLElBQUksQ0FBQ2pqQixFQUFFLENBQUNnK0IsS0FBSyxDQUFDMThCLENBQUM7QUFBQyxHQUFFaWhDLEdBQUczL0IsU0FBUyxDQUFDZ2dDLGFBQWEsR0FBQyxTQUFTbmlDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUdELEVBQUUyUCxDQUFDLElBQUUzUCxFQUFFMkcsQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDcEgsRUFBRSxDQUFDZytCLEtBQUssQ0FBQzkzQixJQUFJLEtBQUcsU0FBT284QixHQUFHN2hDLEVBQUUyUCxDQUFDLEVBQUMsdUJBQXFCLENBQUMsSUFBSSxDQUFDcFEsRUFBRSxDQUFDZytCLEtBQUssQ0FBQzkzQixJQUFJLEtBQUcsV0FBUyxJQUFJLENBQUNsRyxFQUFFLENBQUNnK0IsS0FBSyxDQUFDOTNCLElBQUksS0FBRyxTQUFRLEtBQUlvOEIsR0FBRzdoQyxFQUFFMlAsQ0FBQyxJQUFFM1AsRUFBRTJHLENBQUMsRUFBQyxpQ0FBZ0MsSUFBSSxDQUFDcTdCLEdBQUcsR0FBQyxJQUFJLENBQUN6aUMsRUFBRSxDQUFDZytCLEtBQUssQ0FBQ2pCLEtBQUssQ0FBQ3Q4QixFQUFFMlAsQ0FBQyxFQUFDM1AsRUFBRTJHLENBQUM7UUFBRTtJQUFNO0lBQUMsSUFBSSxDQUFDcTdCLEdBQUcsR0FBQyxJQUFJLENBQUN6aUMsRUFBRSxDQUFDZytCLEtBQUssQ0FBQ0UsV0FBVyxDQUFDejlCLEdBQUVDO0FBQUUsR0FBRTZoQyxHQUFHMy9CLFNBQVMsQ0FBQ3dnQyxNQUFNLEdBQUMsU0FBUzNpQyxDQUFDO0lBQUUsT0FBT0EsRUFBRXU4QixRQUFRLE1BQUlzRixHQUFHN2hDLEVBQUV1OEIsUUFBUSxJQUFHLCtCQUE4QnY4QixFQUFFOGdCLEdBQUcsQ0FBQyxJQUFJLENBQUNpaEIsSUFBSSxFQUFFbEUsSUFBSTtBQUFFLEdBQUVpRSxHQUFHMy9CLFNBQVMsQ0FBQ3lnQyxJQUFJLEdBQUMsU0FBUzVpQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFLE9BQU8sSUFBSSxDQUFDakIsRUFBRSxDQUFDcWpDLElBQUksQ0FBQzVpQyxHQUFFLElBQUksRUFBQ0MsR0FBRU87QUFBRSxHQUFFc2hDLEdBQUczL0IsU0FBUyxDQUFDMGdDLE1BQU0sR0FBQyxTQUFTN2lDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE9BQU8sSUFBSSxDQUFDVixFQUFFLENBQUNzakMsTUFBTSxDQUFDN2lDLEdBQUVDLEdBQUUsSUFBSTtBQUFDLEdBQUU2aEMsR0FBRzMvQixTQUFTLENBQUMrYSxPQUFPLEdBQUM7SUFBVyxPQUFNLGdCQUFlLEtBQUksQ0FBQzZrQixJQUFJLElBQUUsSUFBSSxDQUFDQSxJQUFJLENBQUM5aUMsUUFBUSxDQUFDLElBQUcsRUFBQyxJQUFHLFdBQVUsS0FBSSxDQUFDK2lDLEdBQUcsSUFBRSxJQUFJLENBQUNBLEdBQUcsQ0FBQzlrQixPQUFPLEVBQUMsSUFBRztBQUFJO0FBQUUsSUFBSTRsQixLQUFHL0gsR0FBRzNpQixNQUFNO0FBQUMsU0FBUzJxQixHQUFHaGpDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUdELGFBQWFnakMsSUFBRyxPQUFPaGpDO0lBQUUsSUFBSSxDQUFDaWpDLFVBQVUsQ0FBQ2pqQyxHQUFFQyxNQUFLOGlDLENBQUFBLEdBQUcvaUMsRUFBRUUsQ0FBQyxJQUFFRixFQUFFa08sQ0FBQyxFQUFDLDZCQUE0QixJQUFJLENBQUNoTyxDQUFDLEdBQUMsSUFBSW9tQixFQUFFdG1CLEVBQUVFLENBQUMsRUFBQyxLQUFJLElBQUksQ0FBQ2dPLENBQUMsR0FBQyxJQUFJb1ksRUFBRXRtQixFQUFFa08sQ0FBQyxFQUFDLEtBQUlsTyxFQUFFOGEsYUFBYSxLQUFHLEtBQUssSUFBRSxJQUFJLENBQUNBLGFBQWEsR0FBQyxPQUFLLElBQUksQ0FBQ0EsYUFBYSxHQUFDOWEsRUFBRThhLGFBQWE7QUFBQztBQUFDLElBQUlvb0IsS0FBR0Y7QUFBRyxTQUFTRztJQUFLLElBQUksQ0FBQ0MsS0FBSyxHQUFDO0FBQUM7QUFBQyxTQUFTQyxHQUFHcmpDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlDLElBQUVGLENBQUMsQ0FBQ0MsRUFBRW1qQyxLQUFLLEdBQUc7SUFBQyxJQUFHLENBQUVsakMsQ0FBQUEsSUFBRSxHQUFFLEdBQUcsT0FBT0E7SUFBRSxJQUFJTyxJQUFFUCxJQUFFO0lBQUcsSUFBR08sTUFBSSxLQUFHQSxJQUFFLEdBQUUsT0FBTSxDQUFDO0lBQUUsSUFBSSxJQUFJSyxJQUFFLEdBQUVvRixJQUFFLEdBQUVFLElBQUVuRyxFQUFFbWpDLEtBQUssRUFBQ2w5QixJQUFFekYsR0FBRXlGLEtBQUlFLElBQUl0RixNQUFJLEdBQUVBLEtBQUdkLENBQUMsQ0FBQ29HLEVBQUUsRUFBQ3RGLE9BQUs7SUFBRSxPQUFPQSxLQUFHLE1BQUksQ0FBQyxJQUFHYixDQUFBQSxFQUFFbWpDLEtBQUssR0FBQ2g5QixHQUFFdEYsQ0FBQUE7QUFBRTtBQUFDLFNBQVN3aUMsR0FBR3RqQyxDQUFDO0lBQUUsSUFBSSxJQUFJQyxJQUFFLEdBQUVDLElBQUVGLEVBQUV5QixNQUFNLEdBQUMsR0FBRSxDQUFDekIsQ0FBQyxDQUFDQyxFQUFFLElBQUUsQ0FBRUQsQ0FBQUEsQ0FBQyxDQUFDQyxJQUFFLEVBQUUsR0FBQyxHQUFFLEtBQUlBLElBQUVDLEdBQUdEO0lBQUksT0FBT0EsTUFBSSxJQUFFRCxJQUFFQSxFQUFFc0gsS0FBSyxDQUFDckg7QUFBRTtBQUFDK2lDLEdBQUc1Z0MsU0FBUyxDQUFDNmdDLFVBQVUsR0FBQyxTQUFTaGpDLENBQUMsRUFBQ0MsQ0FBQztJQUFFRCxJQUFFKzZCLEdBQUd6ZSxPQUFPLENBQUN0YyxHQUFFQztJQUFHLElBQUlPLElBQUUsSUFBSTBpQztJQUFHLElBQUdsakMsQ0FBQyxDQUFDUSxFQUFFMmlDLEtBQUssR0FBRyxLQUFHLElBQUcsT0FBTSxDQUFDO0lBQUUsSUFBSXRpQyxJQUFFdWlDLEdBQUdwakMsR0FBRVE7SUFBRyxJQUFHSyxNQUFJLENBQUMsS0FBR0EsSUFBRUwsRUFBRTJpQyxLQUFLLEtBQUduakMsRUFBRXdCLE1BQU0sSUFBRXhCLENBQUMsQ0FBQ1EsRUFBRTJpQyxLQUFLLEdBQUcsS0FBRyxHQUFFLE9BQU0sQ0FBQztJQUFFLElBQUlsOUIsSUFBRW05QixHQUFHcGpDLEdBQUVRO0lBQUcsSUFBR3lGLE1BQUksQ0FBQyxHQUFFLE9BQU0sQ0FBQztJQUFFLElBQUlFLElBQUVuRyxFQUFFcUgsS0FBSyxDQUFDN0csRUFBRTJpQyxLQUFLLEVBQUNsOUIsSUFBRXpGLEVBQUUyaUMsS0FBSztJQUFFLElBQUczaUMsRUFBRTJpQyxLQUFLLElBQUVsOUIsR0FBRWpHLENBQUMsQ0FBQ1EsRUFBRTJpQyxLQUFLLEdBQUcsS0FBRyxHQUFFLE9BQU0sQ0FBQztJQUFFLElBQUk5OEIsSUFBRSs4QixHQUFHcGpDLEdBQUVRO0lBQUcsSUFBRzZGLE1BQUksQ0FBQyxLQUFHckcsRUFBRXdCLE1BQU0sS0FBRzZFLElBQUU3RixFQUFFMmlDLEtBQUssRUFBQyxPQUFNLENBQUM7SUFBRSxJQUFJNzhCLElBQUV0RyxFQUFFcUgsS0FBSyxDQUFDN0csRUFBRTJpQyxLQUFLLEVBQUM5OEIsSUFBRTdGLEVBQUUyaUMsS0FBSztJQUFFLElBQUdoOUIsQ0FBQyxDQUFDLEVBQUUsS0FBRyxHQUFFLElBQUdBLENBQUMsQ0FBQyxFQUFFLEdBQUMsS0FBSUEsSUFBRUEsRUFBRWtCLEtBQUssQ0FBQztTQUFRLE9BQU0sQ0FBQztJQUFFLElBQUdmLENBQUMsQ0FBQyxFQUFFLEtBQUcsR0FBRSxJQUFHQSxDQUFDLENBQUMsRUFBRSxHQUFDLEtBQUlBLElBQUVBLEVBQUVlLEtBQUssQ0FBQztTQUFRLE9BQU0sQ0FBQztJQUFFLE9BQU8sSUFBSSxDQUFDcEgsQ0FBQyxHQUFDLElBQUlvbUIsRUFBRWxnQixJQUFHLElBQUksQ0FBQzhILENBQUMsR0FBQyxJQUFJb1ksRUFBRS9mLElBQUcsSUFBSSxDQUFDdVUsYUFBYSxHQUFDLE1BQUssQ0FBQztBQUFDO0FBQUUsU0FBU3lvQixHQUFHdmpDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUdBLElBQUUsS0FBSTtRQUFDRCxFQUFFZ0IsSUFBSSxDQUFDZjtRQUFHO0lBQU07SUFBQyxJQUFJQyxJQUFFLElBQUdxSCxDQUFBQSxLQUFLc1EsR0FBRyxDQUFDNVgsS0FBR3NILEtBQUtpOEIsR0FBRyxLQUFHO0lBQUcsSUFBSXhqQyxFQUFFZ0IsSUFBSSxDQUFDZCxJQUFFLE1BQUssRUFBRUEsR0FBR0YsRUFBRWdCLElBQUksQ0FBQ2YsTUFBS0MsQ0FBQUEsS0FBRyxLQUFHO0lBQUtGLEVBQUVnQixJQUFJLENBQUNmO0FBQUU7QUFBQytpQyxHQUFHNWdDLFNBQVMsQ0FBQ3FoQyxLQUFLLEdBQUMsU0FBU3hqQyxDQUFDO0lBQUUsSUFBSUMsSUFBRSxJQUFJLENBQUNBLENBQUMsQ0FBQ3FjLE9BQU8sSUFBRzliLElBQUUsSUFBSSxDQUFDeU4sQ0FBQyxDQUFDcU8sT0FBTztJQUFHLElBQUlyYyxDQUFDLENBQUMsRUFBRSxHQUFDLE9BQU1BLENBQUFBLElBQUU7UUFBQztLQUFFLENBQUNaLE1BQU0sQ0FBQ1ksRUFBQyxHQUFHTyxDQUFDLENBQUMsRUFBRSxHQUFDLE9BQU1BLENBQUFBLElBQUU7UUFBQztLQUFFLENBQUNuQixNQUFNLENBQUNtQixFQUFDLEdBQUdQLElBQUVvakMsR0FBR3BqQyxJQUFHTyxJQUFFNmlDLEdBQUc3aUMsSUFBRyxDQUFDQSxDQUFDLENBQUMsRUFBRSxJQUFFLENBQUVBLENBQUFBLENBQUMsQ0FBQyxFQUFFLEdBQUMsR0FBRSxHQUFJQSxJQUFFQSxFQUFFNkcsS0FBSyxDQUFDO0lBQUcsSUFBSXhHLElBQUU7UUFBQztLQUFFO0lBQUN5aUMsR0FBR3ppQyxHQUFFWixFQUFFdUIsTUFBTSxHQUFFWCxJQUFFQSxFQUFFeEIsTUFBTSxDQUFDWSxJQUFHWSxFQUFFRSxJQUFJLENBQUMsSUFBR3VpQyxHQUFHemlDLEdBQUVMLEVBQUVnQixNQUFNO0lBQUUsSUFBSXlFLElBQUVwRixFQUFFeEIsTUFBTSxDQUFDbUIsSUFBRzJGLElBQUU7UUFBQztLQUFHO0lBQUMsT0FBT205QixHQUFHbjlCLEdBQUVGLEVBQUV6RSxNQUFNLEdBQUUyRSxJQUFFQSxFQUFFOUcsTUFBTSxDQUFDNEcsSUFBRzgwQixHQUFHaHFCLE1BQU0sQ0FBQzVLLEdBQUVuRztBQUFFO0FBQUUsSUFBSXlqQyxLQUFHO0lBQVcsTUFBTSxJQUFJMThCLE1BQU07QUFBYyxHQUFFMjhCLEtBQUczSSxHQUFHM2lCLE1BQU07QUFBQyxTQUFTdXJCLEdBQUc1akMsQ0FBQztJQUFFLElBQUcsQ0FBRSxLQUFJLFlBQVk0akMsRUFBQyxHQUFHLE9BQU8sSUFBSUEsR0FBRzVqQztJQUFHLE9BQU9BLEtBQUcsWUFBVzJqQyxDQUFBQSxHQUFHcGlDLE9BQU9hLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDUyxJQUFJLENBQUM2OUIsSUFBRzNnQyxJQUFHLG1CQUFpQkEsSUFBR0EsSUFBRTJnQyxFQUFFLENBQUMzZ0MsRUFBRSxHQUFFQSxhQUFhMmdDLEdBQUdDLFdBQVcsSUFBRzVnQyxDQUFBQSxJQUFFO1FBQUN3OUIsT0FBTXg5QjtJQUFDLElBQUcsSUFBSSxDQUFDdzlCLEtBQUssR0FBQ3g5QixFQUFFdzlCLEtBQUssQ0FBQ0EsS0FBSyxFQUFDLElBQUksQ0FBQzE4QixDQUFDLEdBQUMsSUFBSSxDQUFDMDhCLEtBQUssQ0FBQzE4QixDQUFDLEVBQUMsSUFBSSxDQUFDK2lDLEVBQUUsR0FBQyxJQUFJLENBQUMvaUMsQ0FBQyxDQUFDOGdCLEtBQUssQ0FBQyxJQUFHLElBQUksQ0FBQ3pTLENBQUMsR0FBQyxJQUFJLENBQUNxdUIsS0FBSyxDQUFDcnVCLENBQUMsRUFBQyxJQUFJLENBQUNBLENBQUMsR0FBQ25QLEVBQUV3OUIsS0FBSyxDQUFDcnVCLENBQUMsRUFBQyxJQUFJLENBQUNBLENBQUMsQ0FBQzZ1QixVQUFVLENBQUNoK0IsRUFBRXc5QixLQUFLLENBQUMxOEIsQ0FBQyxDQUFDb2QsU0FBUyxLQUFHLElBQUcsSUFBSSxDQUFDbmYsSUFBSSxHQUFDaUIsRUFBRWpCLElBQUksSUFBRWlCLEVBQUV3OUIsS0FBSyxDQUFDeitCLElBQUk7QUFBQTtBQUFDLElBQUkra0MsS0FBR0Y7QUFBR0EsR0FBR3hoQyxTQUFTLENBQUMyaEMsT0FBTyxHQUFDLFNBQVM5akMsQ0FBQztJQUFFLE9BQU8sSUFBSXFpQyxHQUFHLElBQUksRUFBQ3JpQztBQUFFLEdBQUUyakMsR0FBR3hoQyxTQUFTLENBQUM0aEMsY0FBYyxHQUFDLFNBQVMvakMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBT29pQyxHQUFHRSxXQUFXLENBQUMsSUFBSSxFQUFDdmlDLEdBQUVDO0FBQUUsR0FBRTBqQyxHQUFHeGhDLFNBQVMsQ0FBQzZoQyxhQUFhLEdBQUMsU0FBU2hrQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxPQUFPb2lDLEdBQUdDLFVBQVUsQ0FBQyxJQUFJLEVBQUN0aUMsR0FBRUM7QUFBRSxHQUFFMGpDLEdBQUd4aEMsU0FBUyxDQUFDOGhDLFVBQVUsR0FBQyxTQUFTamtDLENBQUM7SUFBRUEsS0FBSUEsQ0FBQUEsSUFBRSxDQUFDO0lBQUcsSUFBSSxJQUFJQyxJQUFFLElBQUl3aEMsR0FBRztRQUFDM2lDLE1BQUssSUFBSSxDQUFDQSxJQUFJO1FBQUN5aUMsTUFBS3ZoQyxFQUFFdWhDLElBQUk7UUFBQ0MsU0FBUXhoQyxFQUFFd2hDLE9BQU8sSUFBRTtRQUFPTCxTQUFRbmhDLEVBQUVtaEMsT0FBTyxJQUFFc0MsR0FBRyxJQUFJLENBQUMza0MsSUFBSSxDQUFDeXpCLFlBQVk7UUFBRTZPLFlBQVdwaEMsRUFBRW1oQyxPQUFPLElBQUVuaEMsRUFBRW9oQyxVQUFVLElBQUU7UUFBT0MsT0FBTSxJQUFJLENBQUN4Z0MsQ0FBQyxDQUFDeWIsT0FBTztJQUFFLElBQUc5YixJQUFFLElBQUksQ0FBQ0ssQ0FBQyxDQUFDOGMsVUFBVSxJQUFHOWMsSUFBRSxJQUFJLENBQUNBLENBQUMsQ0FBQ2dmLEdBQUcsQ0FBQyxJQUFJd0csRUFBRSxNQUFNO1FBQUMsSUFBSXBnQixJQUFFLElBQUlvZ0IsRUFBRXBtQixFQUFFMmhDLFFBQVEsQ0FBQ3BoQztRQUFJLElBQUcsQ0FBRXlGLENBQUFBLEVBQUUrVixHQUFHLENBQUNuYixLQUFHLElBQUcsT0FBT29GLEVBQUVxWSxLQUFLLENBQUMsSUFBRyxJQUFJLENBQUN5bEIsY0FBYyxDQUFDOTlCO0lBQUU7QUFBQyxHQUFFMDlCLEdBQUd4aEMsU0FBUyxDQUFDK2hDLFlBQVksR0FBQyxTQUFTbGtDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlPLElBQUVSLEVBQUUyZCxVQUFVLEtBQUcsSUFBRSxJQUFJLENBQUM5YyxDQUFDLENBQUNvZCxTQUFTO0lBQUcsT0FBT3pkLElBQUUsS0FBSVIsQ0FBQUEsSUFBRUEsRUFBRTJoQixLQUFLLENBQUNuaEIsRUFBQyxHQUFHLENBQUNQLEtBQUdELEVBQUVnYyxHQUFHLENBQUMsSUFBSSxDQUFDbmIsQ0FBQyxLQUFHLElBQUViLEVBQUU2ZixHQUFHLENBQUMsSUFBSSxDQUFDaGYsQ0FBQyxJQUFFYjtBQUFDLEdBQUUyakMsR0FBR3hoQyxTQUFTLENBQUN5Z0MsSUFBSSxHQUFDLFNBQVM1aUMsQ0FBQyxFQUFDQyxDQUFDLEVBQUNPLENBQUMsRUFBQ0ssQ0FBQztJQUFFLE9BQU9MLEtBQUcsWUFBV0ssQ0FBQUEsSUFBRUwsR0FBRUEsSUFBRSxJQUFHLEdBQUdLLEtBQUlBLENBQUFBLElBQUUsQ0FBQyxJQUFHWixJQUFFLElBQUksQ0FBQzhqQyxjQUFjLENBQUM5akMsR0FBRU8sSUFBR1IsSUFBRSxJQUFJLENBQUNra0MsWUFBWSxDQUFDLElBQUk3ZCxFQUFFcm1CLEdBQUU7SUFBSyxJQUFJLElBQUlpRyxJQUFFLElBQUksQ0FBQ3BGLENBQUMsQ0FBQzhjLFVBQVUsSUFBR3hYLElBQUVsRyxFQUFFeWlDLFVBQVUsR0FBR3BtQixPQUFPLENBQUMsTUFBS3JXLElBQUdJLElBQUVyRyxFQUFFc2MsT0FBTyxDQUFDLE1BQUtyVyxJQUFHSyxJQUFFLElBQUltN0IsR0FBRztRQUFDM2lDLE1BQUssSUFBSSxDQUFDQSxJQUFJO1FBQUNxaUMsU0FBUWg3QjtRQUFFazdCLE9BQU1oN0I7UUFBRWs3QixNQUFLMWdDLEVBQUUwZ0MsSUFBSTtRQUFDQyxTQUFRM2dDLEVBQUUyZ0MsT0FBTyxJQUFFO0lBQU0sSUFBR2o3QixJQUFFLElBQUksQ0FBQzFGLENBQUMsQ0FBQ2dmLEdBQUcsQ0FBQyxJQUFJd0csRUFBRSxLQUFJN2YsSUFBRSxJQUFHQSxJQUFJO1FBQUMsSUFBSUcsSUFBRTlGLEVBQUVpUSxDQUFDLEdBQUNqUSxFQUFFaVEsQ0FBQyxDQUFDdEssS0FBRyxJQUFJNmYsRUFBRS9mLEVBQUVzN0IsUUFBUSxDQUFDLElBQUksQ0FBQy9nQyxDQUFDLENBQUM4YyxVQUFVO1FBQUssSUFBR2hYLElBQUUsSUFBSSxDQUFDdTlCLFlBQVksQ0FBQ3Y5QixHQUFFLENBQUMsSUFBRyxDQUFFQSxDQUFBQSxFQUFFc2MsSUFBSSxDQUFDLE1BQUksS0FBR3RjLEVBQUVxVixHQUFHLENBQUN6VixNQUFJLElBQUc7WUFBQyxJQUFJdUcsSUFBRSxJQUFJLENBQUNvQyxDQUFDLENBQUM0UixHQUFHLENBQUNuYTtZQUFHLElBQUcsQ0FBQ21HLEVBQUU4eUIsVUFBVSxJQUFHO2dCQUFDLElBQUk3eUIsSUFBRUQsRUFBRSt3QixJQUFJLElBQUc3d0IsSUFBRUQsRUFBRXlWLElBQUksQ0FBQyxJQUFJLENBQUMzaEIsQ0FBQztnQkFBRSxJQUFHbU0sRUFBRWlXLElBQUksQ0FBQyxPQUFLLEdBQUU7b0JBQUMsSUFBSWhXLElBQUV0RyxFQUFFdWMsSUFBSSxDQUFDLElBQUksQ0FBQ3JpQixDQUFDLEVBQUVpZ0IsR0FBRyxDQUFDOVQsRUFBRThULEdBQUcsQ0FBQzdnQixFQUFFeWlDLFVBQVUsSUFBSWhqQixJQUFJLENBQUMxZjtvQkFBSSxJQUFHaU4sSUFBRUEsRUFBRXVWLElBQUksQ0FBQyxJQUFJLENBQUMzaEIsQ0FBQyxHQUFFb00sRUFBRWdXLElBQUksQ0FBQyxPQUFLLEdBQUU7d0JBQUMsSUFBSS9WLElBQUUsQ0FBQ0osRUFBRWd4QixJQUFJLEdBQUdoYixLQUFLLEtBQUcsSUFBRSxLQUFJL1YsQ0FBQUEsRUFBRWlQLEdBQUcsQ0FBQ2hQLE9BQUssSUFBRSxJQUFFO3dCQUFHLE9BQU9uTSxFQUFFc2pDLFNBQVMsSUFBRWwzQixFQUFFK08sR0FBRyxDQUFDLElBQUksQ0FBQzRuQixFQUFFLElBQUUsS0FBSTMyQixDQUFBQSxJQUFFLElBQUksQ0FBQ3BNLENBQUMsQ0FBQ2dmLEdBQUcsQ0FBQzVTLElBQUdDLEtBQUcsSUFBRyxJQUFJKzFCLEdBQUc7NEJBQUNoakMsR0FBRStNOzRCQUFFaUIsR0FBRWhCOzRCQUFFNE4sZUFBYzNOO3dCQUFDO29CQUFFO2dCQUFDO1lBQUM7UUFBQztJQUFDO0FBQUMsR0FBRXkyQixHQUFHeGhDLFNBQVMsQ0FBQzBnQyxNQUFNLEdBQUMsU0FBUzdpQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQyxFQUFDSyxDQUFDO0lBQUViLElBQUUsSUFBSSxDQUFDa2tDLFlBQVksQ0FBQyxJQUFJN2QsRUFBRXJtQixHQUFFLE1BQUtRLElBQUUsSUFBSSxDQUFDd2pDLGFBQWEsQ0FBQ3hqQyxHQUFFSyxJQUFHWixJQUFFLElBQUlnakMsR0FBR2hqQyxHQUFFO0lBQU8sSUFBSWdHLElBQUVoRyxFQUFFQSxDQUFDLEVBQUNrRyxJQUFFbEcsRUFBRWdPLENBQUM7SUFBQyxJQUFHaEksRUFBRWdkLElBQUksQ0FBQyxLQUFHLEtBQUdoZCxFQUFFK1YsR0FBRyxDQUFDLElBQUksQ0FBQ25iLENBQUMsS0FBRyxLQUFHc0YsRUFBRThjLElBQUksQ0FBQyxLQUFHLEtBQUc5YyxFQUFFNlYsR0FBRyxDQUFDLElBQUksQ0FBQ25iLENBQUMsS0FBRyxHQUFFLE9BQU0sQ0FBQztJQUFFLElBQUl3RixJQUFFRixFQUFFK2MsSUFBSSxDQUFDLElBQUksQ0FBQ3JpQixDQUFDLEdBQUV5RixJQUFFRCxFQUFFeWEsR0FBRyxDQUFDOWdCLEdBQUd3aUIsSUFBSSxDQUFDLElBQUksQ0FBQzNoQixDQUFDLEdBQUUwRixJQUFFRixFQUFFeWEsR0FBRyxDQUFDN2EsR0FBR3VjLElBQUksQ0FBQyxJQUFJLENBQUMzaEIsQ0FBQyxHQUFFMkY7SUFBRSxPQUFPLElBQUksQ0FBQysyQixLQUFLLENBQUNuQixhQUFhLEdBQUU1MUIsQ0FBQUEsSUFBRSxJQUFJLENBQUMwSSxDQUFDLENBQUM0d0IsT0FBTyxDQUFDeDVCLEdBQUU5RixFQUFFZ2lDLFNBQVMsSUFBR2o4QixJQUFHQyxFQUFFbzVCLFVBQVUsS0FBRyxDQUFDLElBQUVwNUIsRUFBRTY1QixNQUFNLENBQUNwNkIsRUFBQyxJQUFJTyxDQUFBQSxJQUFFLElBQUksQ0FBQzBJLENBQUMsQ0FBQzJ3QixNQUFNLENBQUN2NUIsR0FBRTlGLEVBQUVnaUMsU0FBUyxJQUFHajhCLElBQUdDLEVBQUVvNUIsVUFBVSxLQUFHLENBQUMsSUFBRXA1QixFQUFFcTNCLElBQUksR0FBR3JiLElBQUksQ0FBQyxJQUFJLENBQUMzaEIsQ0FBQyxFQUFFbWIsR0FBRyxDQUFDL1YsT0FBSztBQUFFLEdBQUUwOUIsR0FBR3hoQyxTQUFTLENBQUNpaUMsYUFBYSxHQUFDLFNBQVNya0MsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFa2pDLEdBQUcsQ0FBQyxJQUFFempDLENBQUFBLE1BQUtBLEdBQUUsNkNBQTRDRCxJQUFFLElBQUlpakMsR0FBR2pqQyxHQUFFUTtJQUFHLElBQUlLLElBQUUsSUFBSSxDQUFDQSxDQUFDLEVBQUNvRixJQUFFLElBQUlvZ0IsRUFBRXRtQixJQUFHb0csSUFBRW5HLEVBQUVDLENBQUMsRUFBQ29HLElBQUVyRyxFQUFFaU8sQ0FBQyxFQUFDM0gsSUFBRXJHLElBQUUsR0FBRXNHLElBQUV0RyxLQUFHO0lBQUUsSUFBR2tHLEVBQUU2VixHQUFHLENBQUMsSUFBSSxDQUFDdWhCLEtBQUssQ0FBQ2wzQixDQUFDLENBQUNtYyxJQUFJLENBQUMsSUFBSSxDQUFDK2EsS0FBSyxDQUFDMThCLENBQUMsTUFBSSxLQUFHMEYsR0FBRSxNQUFNLElBQUlRLE1BQU07SUFBd0NSLElBQUVKLElBQUUsSUFBSSxDQUFDbzNCLEtBQUssQ0FBQ0csVUFBVSxDQUFDdjNCLEVBQUV5WixHQUFHLENBQUMsSUFBSSxDQUFDMmQsS0FBSyxDQUFDMThCLENBQUMsR0FBRXlGLEtBQUdILElBQUUsSUFBSSxDQUFDbzNCLEtBQUssQ0FBQ0csVUFBVSxDQUFDdjNCLEdBQUVHO0lBQUcsSUFBSUUsSUFBRXhHLEVBQUVDLENBQUMsQ0FBQ2lqQixJQUFJLENBQUNyaUIsSUFBRzhGLElBQUU5RixFQUFFZ2YsR0FBRyxDQUFDNVosR0FBRzZhLEdBQUcsQ0FBQ3RhLEdBQUdnYyxJQUFJLENBQUMzaEIsSUFBR2lNLElBQUV6RyxFQUFFeWEsR0FBRyxDQUFDdGEsR0FBR2djLElBQUksQ0FBQzNoQjtJQUFHLE9BQU8sSUFBSSxDQUFDcU8sQ0FBQyxDQUFDMndCLE1BQU0sQ0FBQ2w1QixHQUFFUixHQUFFMkc7QUFBRSxHQUFFNjJCLEdBQUd4aEMsU0FBUyxDQUFDa2lDLG1CQUFtQixHQUFDLFNBQVN0a0MsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQztJQUFFLElBQUdSLElBQUUsSUFBSWlqQyxHQUFHampDLEdBQUVRLElBQUdSLEVBQUU2YSxhQUFhLEtBQUcsTUFBSyxPQUFPN2EsRUFBRTZhLGFBQWE7SUFBQyxJQUFJLElBQUloYSxJQUFFLEdBQUVBLElBQUUsR0FBRUEsSUFBSTtRQUFDLElBQUlvRjtRQUFFLElBQUc7WUFBQ0EsSUFBRSxJQUFJLENBQUNtK0IsYUFBYSxDQUFDcmtDLEdBQUVDLEdBQUVhO1FBQUUsRUFBQyxPQUFLO1lBQUM7UUFBUTtRQUFDLElBQUdvRixFQUFFMmQsRUFBRSxDQUFDM2pCLElBQUcsT0FBT1k7SUFBQztJQUFDLE1BQU0sSUFBSWtHLE1BQU07QUFBdUM7QUFBRSxJQUFJdTlCLEtBQUc5SixHQUFHLFNBQVN6NkIsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSUMsSUFBRUQ7SUFBRUMsRUFBRStFLE9BQU8sR0FBQyxTQUFRL0UsRUFBRWs2QixLQUFLLEdBQUNZLElBQUc5NkIsRUFBRXNrQyxJQUFJLEdBQUM7UUFBVyxNQUFNLElBQUl4OUIsTUFBTTtJQUFjLEdBQUU5RyxFQUFFczlCLEtBQUssR0FBQytDLElBQUdyZ0MsRUFBRXVrQyxNQUFNLEdBQUM5RCxJQUFHemdDLEVBQUVWLEVBQUUsR0FBQ3NrQyxJQUFHNWpDLEVBQUV3a0MsS0FBSyxHQUFDO0FBQUksSUFBR0MsS0FBR0osR0FBRy9rQyxFQUFFO0FBQUMsTUFBTW9sQyxLQUFHLHFCQUFvQkMsS0FBRyxJQUFJbnRCLEVBQUVrdEI7QUFBSSxJQUFJRSxLQUFHO0FBQUssU0FBU0M7SUFBSyxPQUFPRCxNQUFLQSxDQUFBQSxLQUFHLElBQUlILEdBQUcsWUFBVyxHQUFHRztBQUFFO0FBQUMsTUFBTUU7SUFBR24zQixZQUFZNU4sQ0FBQyxDQUFDO1FBQUNpdUIsR0FBRyxJQUFJLEVBQUMsU0FBUSxjQUFhQSxHQUFHLElBQUksRUFBQyxjQUFhM1QsR0FBR3RhLEtBQUl3YSxHQUFHLElBQUksQ0FBQ3dxQixVQUFVLE1BQUksTUFBSUosR0FBR2p0QixrQkFBa0IsQ0FBQyx1QkFBc0IsY0FBYTtRQUFrQixNQUFNMVgsSUFBRTZrQyxLQUFLZixjQUFjLENBQUNucUIsR0FBRyxJQUFJLENBQUNvckIsVUFBVTtRQUFHL1csR0FBRyxJQUFJLEVBQUMsYUFBWSxPQUFLaHVCLEVBQUV1aUMsU0FBUyxDQUFDLENBQUMsR0FBRSxTQUFRdlUsR0FBRyxJQUFJLEVBQUMsdUJBQXNCLE9BQUtodUIsRUFBRXVpQyxTQUFTLENBQUMsQ0FBQyxHQUFFLFNBQVF2VSxHQUFHLElBQUksRUFBQyxpQkFBZ0IsQ0FBQztJQUFFO0lBQUNnWCxVQUFVamxDLENBQUMsRUFBQztRQUFDLE1BQU1DLElBQUU2a0MsS0FBS2QsYUFBYSxDQUFDcHFCLEdBQUcsSUFBSSxDQUFDc3JCLFNBQVMsSUFBRzFrQyxJQUFFc2tDLEtBQUtkLGFBQWEsQ0FBQ3BxQixHQUFHNVo7UUFBSSxPQUFNLE9BQUtDLEVBQUUraEMsR0FBRyxDQUFDcGlCLEdBQUcsQ0FBQ3BmLEVBQUV3aEMsR0FBRyxFQUFFckUsZ0JBQWdCLENBQUM7SUFBTTtJQUFDd0gsV0FBV25sQyxDQUFDLEVBQUM7UUFBQyxNQUFNQyxJQUFFNmtDLEtBQUtmLGNBQWMsQ0FBQ25xQixHQUFHLElBQUksQ0FBQ29yQixVQUFVLElBQUd4a0MsSUFBRW9aLEdBQUc1WjtRQUFHUSxFQUFFZ0IsTUFBTSxLQUFHLE1BQUlvakMsR0FBR2p0QixrQkFBa0IsQ0FBQyxxQkFBb0IsVUFBUzNYO1FBQUcsTUFBTWEsSUFBRVosRUFBRTJpQyxJQUFJLENBQUNwaUMsR0FBRTtZQUFDMmpDLFdBQVUsQ0FBQztRQUFDO1FBQUcsT0FBT3hwQixHQUFHO1lBQUNFLGVBQWNoYSxFQUFFZ2EsYUFBYTtZQUFDNWEsR0FBRXlhLEdBQUcsT0FBSzdaLEVBQUVaLENBQUMsQ0FBQ2hCLFFBQVEsQ0FBQyxLQUFJO1lBQUlnUCxHQUFFeU0sR0FBRyxPQUFLN1osRUFBRW9OLENBQUMsQ0FBQ2hQLFFBQVEsQ0FBQyxLQUFJO1FBQUc7SUFBRTtJQUFDbW1DLG9CQUFvQnBsQyxDQUFDLEVBQUM7UUFBQyxNQUFNQyxJQUFFNmtDLEtBQUtmLGNBQWMsQ0FBQ25xQixHQUFHLElBQUksQ0FBQ29yQixVQUFVLElBQUd4a0MsSUFBRXNrQyxLQUFLZCxhQUFhLENBQUNwcUIsR0FBR3lyQixHQUFHcmxDO1FBQUssT0FBTzBhLEdBQUcsT0FBS3phLEVBQUUwaUMsTUFBTSxDQUFDbmlDLEVBQUVnaUMsU0FBUyxJQUFJdmpDLFFBQVEsQ0FBQyxLQUFJO0lBQUc7SUFBQyxPQUFPcW1DLGFBQWF0bEMsQ0FBQyxFQUFDO1FBQUMsT0FBTSxDQUFDLENBQUVBLENBQUFBLEtBQUdBLEVBQUV1bEMsYUFBYTtJQUFDO0FBQUM7QUFBQyxTQUFTQyxHQUFHemxDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE1BQU1DLElBQUUwYSxHQUFHM2EsSUFBR1EsSUFBRTtRQUFDUCxHQUFFMlosR0FBRzNaLEVBQUVBLENBQUM7UUFBRWdPLEdBQUUyTCxHQUFHM1osRUFBRWdPLENBQUM7SUFBQztJQUFFLE9BQU0sT0FBSzYyQixLQUFLVixhQUFhLENBQUN4cUIsR0FBRzdaLElBQUdTLEdBQUVQLEVBQUU0YSxhQUFhLEVBQUU5SixNQUFNLENBQUMsT0FBTSxDQUFDO0FBQUU7QUFBQyxTQUFTczBCLEdBQUd0bEMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsTUFBTUMsSUFBRTJaLEdBQUc3WjtJQUFHLElBQUdFLEVBQUV1QixNQUFNLEtBQUcsSUFBRztRQUFDLE1BQU1oQixJQUFFLElBQUl1a0MsR0FBRzlrQztRQUFHLE9BQU9ELElBQUUsT0FBSzhrQyxLQUFLZixjQUFjLENBQUM5akMsR0FBR3VpQyxTQUFTLENBQUMsQ0FBQyxHQUFFLFNBQU9oaUMsRUFBRTBrQyxTQUFTO0lBQUEsT0FBSztRQUFDLElBQUdqbEMsRUFBRXVCLE1BQU0sS0FBRyxJQUFHLE9BQU94QixJQUFFc2EsR0FBR3JhLEtBQUcsT0FBSzZrQyxLQUFLZCxhQUFhLENBQUMvakMsR0FBR3VpQyxTQUFTLENBQUMsQ0FBQyxHQUFFO1FBQU8sSUFBR3ZpQyxFQUFFdUIsTUFBTSxLQUFHLElBQUcsT0FBT3hCLElBQUUsT0FBSzhrQyxLQUFLZCxhQUFhLENBQUMvakMsR0FBR3VpQyxTQUFTLENBQUMsQ0FBQyxHQUFFLFNBQU9sb0IsR0FBR3JhO0lBQUU7SUFBQyxPQUFPMmtDLEdBQUdqdEIsa0JBQWtCLENBQUMsaUNBQWdDLE9BQU07QUFBYTtBQUFDLE1BQU04dEIsS0FBRztBQUFxQixJQUFJaHVCLEVBQUVndUI7QUFBSSxJQUFJQztBQUFJLFVBQVMzbEMsQ0FBQztJQUFFQSxDQUFDLENBQUNBLEVBQUU0bEMsTUFBTSxHQUFDLEVBQUUsR0FBQyxVQUFTNWxDLENBQUMsQ0FBQ0EsRUFBRTZsQyxPQUFPLEdBQUMsRUFBRSxHQUFDLFdBQVU3bEMsQ0FBQyxDQUFDQSxFQUFFOGxDLE9BQU8sR0FBQyxFQUFFLEdBQUM7QUFBUyxHQUFHSCxNQUFLQSxDQUFBQSxLQUFHLENBQUM7QUFBSSxTQUFTSSxHQUFHL2xDLENBQUM7SUFBRSxNQUFNQyxJQUFFcWxDLEdBQUd0bEM7SUFBRyxPQUFPZ3VCLEdBQUd0VCxHQUFHTyxHQUFHUCxHQUFHemEsR0FBRSxLQUFJO0FBQUk7QUFBQyxTQUFTK2xDLEdBQUdobUMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBTzhsQyxHQUFHTixHQUFHNXJCLEdBQUc3WixJQUFHQztBQUFHO0FBQUMsTUFBTWdtQyxLQUFHO0FBQW1DLGVBQWVDLEdBQUdsbUMsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sQ0FBQyxFQUFDSyxDQUFDLEVBQUNvRixDQUFDO0lBQUUsT0FBT2hHLEVBQUVELENBQUM7UUFBRSxLQUFJO1lBQVMsT0FBT2ttQyxHQUFHbm1DLEdBQUVDLEdBQUVDLEVBQUVnTyxDQUFDO1FBQUUsS0FBSTtZQUFVLE9BQU8sTUFBTWs0QixHQUFHcG1DLEdBQUVDLEdBQUVDLEVBQUVnTyxDQUFDLEVBQUN6TixHQUFFSyxHQUFFb0Y7UUFBRztZQUFRLE1BQU0sSUFBSWMsTUFBTSxDQUFDLDhFQUE4RSxFQUFFOUcsRUFBRUQsQ0FBQyxDQUFDLENBQUM7SUFBQztBQUFDO0FBQUMsU0FBU2ttQyxHQUFHbm1DLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBTzhsQyxHQUFHNVksR0FBR250QixJQUFHQyxHQUFHdUYsV0FBVyxPQUFLekYsRUFBRXlGLFdBQVc7QUFBRTtBQUFDLGVBQWUyZ0MsR0FBR3BtQyxDQUFDLEVBQUNDLENBQUMsRUFBQ0MsQ0FBQyxFQUFDTyxDQUFDLEVBQUNLLENBQUMsRUFBQ29GLENBQUM7SUFBRSxJQUFHO1FBQUMsTUFBTUUsSUFBRSxjQUFhRSxJQUFFLG9FQUFtRUMsSUFBRSxvRUFBbUVDLElBQUV0RyxFQUFFOFosU0FBUyxDQUFDLElBQUd2VCxJQUFFMm1CLEdBQUdudEIsR0FBRytaLFNBQVMsQ0FBQyxJQUFHcFQsSUFBRVIsSUFBRUssSUFBRUgsSUFBRUMsSUFBRUMsR0FBRXVHLElBQUUsTUFBTXM1QixNQUFNLENBQUMsRUFBRW5nQyxLQUFHKy9CLEdBQUcsVUFBVSxFQUFFeGxDLEVBQUUsV0FBVyxFQUFFSyxFQUFFLENBQUMsRUFBQztZQUFDd2xDLFFBQU87WUFBT0MsTUFBS3g4QixLQUFLdEYsU0FBUyxDQUFDO2dCQUFDeUUsSUFBR3M5QjtnQkFBS0MsU0FBUTtnQkFBTUgsUUFBTztnQkFBV0ksUUFBTztvQkFBQzt3QkFBQ0MsSUFBRzNtQzt3QkFBRTRtQyxNQUFLaGdDO29CQUFDO29CQUFFO2lCQUFTO1lBQUE7UUFBRSxJQUFHLEVBQUM4N0IsUUFBTzExQixDQUFDLEVBQUMsR0FBQyxNQUFNRCxFQUFFODVCLElBQUk7UUFBRyxPQUFPNzVCLElBQUVBLEVBQUUxRixLQUFLLENBQUMsR0FBRWxCLEVBQUUzRSxNQUFNLEVBQUVnRSxXQUFXLE9BQUtXLEVBQUVYLFdBQVcsS0FBRyxDQUFDO0lBQUMsRUFBQyxPQUFNVyxHQUFFO1FBQUMsT0FBTytELFFBQVFPLEtBQUssQ0FBQyw2QkFBNEJ0RSxJQUFHLENBQUM7SUFBQztBQUFDO0FBQUMsU0FBU29nQztJQUFLLE9BQU9qOUIsS0FBS0MsR0FBRyxLQUFHakMsS0FBS2lULEtBQUssQ0FBQ2pULEtBQUsrRCxNQUFNLEtBQUc7QUFBSTtBQUFDLElBQUl3N0IsS0FBR3ZsQyxPQUFPUyxjQUFjLEVBQUMra0MsS0FBR3hsQyxPQUFPeWxDLGdCQUFnQixFQUFDQyxLQUFHMWxDLE9BQU8ybEMseUJBQXlCLEVBQUNDLEtBQUc1bEMsT0FBT1cscUJBQXFCLEVBQUNrbEMsS0FBRzdsQyxPQUFPYSxTQUFTLENBQUNDLGNBQWMsRUFBQ2dsQyxLQUFHOWxDLE9BQU9hLFNBQVMsQ0FBQ0csb0JBQW9CLEVBQUMra0MsS0FBRyxDQUFDdG5DLEdBQUVDLEdBQUVDLElBQUlELEtBQUtELElBQUU4bUMsR0FBRzltQyxHQUFFQyxHQUFFO1FBQUN3QyxZQUFXLENBQUM7UUFBRUMsY0FBYSxDQUFDO1FBQUVDLFVBQVMsQ0FBQztRQUFFQyxPQUFNMUM7SUFBQyxLQUFHRixDQUFDLENBQUNDLEVBQUUsR0FBQ0MsR0FBRXFuQyxLQUFHLENBQUN2bkMsR0FBRUM7SUFBSyxJQUFJLElBQUlDLEtBQUtELEtBQUlBLENBQUFBLElBQUUsQ0FBQyxHQUFHbW5DLEdBQUd0a0MsSUFBSSxDQUFDN0MsR0FBRUMsTUFBSW9uQyxHQUFHdG5DLEdBQUVFLEdBQUVELENBQUMsQ0FBQ0MsRUFBRTtJQUFFLElBQUdpbkMsSUFBRyxLQUFJLElBQUlqbkMsS0FBS2luQyxHQUFHbG5DLEdBQUdvbkMsR0FBR3ZrQyxJQUFJLENBQUM3QyxHQUFFQyxNQUFJb25DLEdBQUd0bkMsR0FBRUUsR0FBRUQsQ0FBQyxDQUFDQyxFQUFFO0lBQUUsT0FBT0Y7QUFBQyxHQUFFd25DLEtBQUcsQ0FBQ3huQyxHQUFFQyxJQUFJOG1DLEdBQUcvbUMsR0FBRWluQyxHQUFHaG5DO0FBQUksTUFBTXduQyxLQUFHLFlBQVdDLEtBQUcxbkMsQ0FBQUEsSUFBR0EsR0FBR0csTUFBTSxNQUFLd25DLEtBQUczbkMsQ0FBQUE7SUFBSSxNQUFNQyxJQUFFRCxLQUFHMG5DLEdBQUcxbkM7SUFBRyxJQUFHQyxHQUFFLE9BQU9ELEVBQUVlLFFBQVEsQ0FBQzBtQyxNQUFJeG5DLENBQUMsQ0FBQyxFQUFFLEdBQUNBLENBQUMsQ0FBQyxFQUFFO0FBQUEsR0FBRTJuQyxLQUFHNW5DLENBQUFBO0lBQUksTUFBTUMsSUFBRUQsS0FBRzBuQyxHQUFHMW5DO0lBQUcsSUFBR0MsR0FBRSxPQUFPQSxDQUFDLENBQUMsRUFBRSxHQUFDLE1BQUlBLENBQUMsQ0FBQyxFQUFFO0FBQUEsR0FBRTRuQyxLQUFHN25DLENBQUFBO0lBQUksTUFBTUMsSUFBRUQsS0FBRzBuQyxHQUFHMW5DO0lBQUcsSUFBR0MsR0FBRSxPQUFPQSxFQUFFNm5DLEdBQUc7QUFBRTtBQUFFLGVBQWVDLEdBQUcvbkMsQ0FBQztJQUFFLE1BQUssRUFBQ2dvQyxPQUFNL25DLENBQUMsRUFBQ2dHLFdBQVUvRixDQUFDLEVBQUMsR0FBQ0YsR0FBRSxFQUFDa08sR0FBRXpOLENBQUMsRUFBQzZGLEdBQUV4RixDQUFDLEVBQUMsR0FBQ2IsR0FBRWlHLElBQUUraEMsR0FBR25uQyxHQUFFQSxFQUFFb25DLEdBQUcsR0FBRTloQyxJQUFFeWhDLEdBQUcvbUMsRUFBRW9uQyxHQUFHO0lBQUUsT0FBTyxNQUFNaEMsR0FBRzkvQixHQUFFRixHQUFFekYsR0FBRWtuQyxHQUFHN21DLEVBQUVvbkMsR0FBRyxHQUFFaG9DO0FBQUU7QUFBQyxNQUFNK25DLEtBQUcsQ0FBQ2pvQyxHQUFFQztJQUFLLE1BQU1DLElBQUUsQ0FBQyxFQUFFRixFQUFFbW9DLE1BQU0sQ0FBQyxpREFBaUQsQ0FBQyxFQUFDMW5DLElBQUVvbkMsR0FBRzVuQztJQUFHLElBQUcsQ0FBQ0QsRUFBRW9vQyxHQUFHLElBQUUsQ0FBQ3BvQyxFQUFFcW9DLEdBQUcsRUFBQyxNQUFNLElBQUlyaEMsTUFBTTtJQUE4RCxJQUFJbEcsSUFBRWQsRUFBRXNvQyxTQUFTLElBQUUsS0FBSztJQUFFLE1BQU1waUMsSUFBRSxDQUFDLEtBQUssRUFBRWxHLEVBQUVvb0MsR0FBRyxJQUFFcG9DLEVBQUVxb0MsR0FBRyxDQUFDLENBQUMsRUFBQ2ppQyxJQUFFLENBQUMsU0FBUyxFQUFFcEcsRUFBRWlGLE9BQU8sQ0FBQyxDQUFDLEVBQUNxQixJQUFFLENBQUMsVUFBVSxFQUFFcWhDLEdBQUcxbkMsR0FBRyxDQUFDLEVBQUNzRyxJQUFFLENBQUMsT0FBTyxFQUFFdkcsRUFBRXNoQyxLQUFLLENBQUMsQ0FBQyxFQUFDOTZCLElBQUUsQ0FBQyxXQUFXLEVBQUV4RyxFQUFFdW9DLEdBQUcsQ0FBQyxDQUFDLEVBQUM5aEMsSUFBRXpHLEVBQUV3b0MsR0FBRyxHQUFDLENBQUMsaUJBQWlCLEVBQUV4b0MsRUFBRXdvQyxHQUFHLENBQUMsQ0FBQyxHQUFDLEtBQUssR0FBRTVoQyxJQUFFNUcsRUFBRXlvQyxHQUFHLEdBQUMsQ0FBQyxZQUFZLEVBQUV6b0MsRUFBRXlvQyxHQUFHLENBQUMsQ0FBQyxHQUFDLEtBQUssR0FBRTE3QixJQUFFL00sRUFBRTBvQyxTQUFTLEdBQUMsQ0FBQyxZQUFZLEVBQUUxb0MsRUFBRTBvQyxTQUFTLENBQUMsQ0FBQyxHQUFDLEtBQUssR0FBRTE3QixJQUFFaE4sRUFBRTJvQyxTQUFTLEdBQUMsQ0FBQyxVQUFVLEVBQUUzb0MsRUFBRTJvQyxTQUFTLENBQUN2Z0MsR0FBRyxDQUFDOEUsQ0FBQUEsSUFBRyxDQUFDO0VBQzczc0QsRUFBRUEsRUFBRSxDQUFDLEVBQUUzTSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUMsS0FBSyxHQUFFME0sSUFBRTI3QixHQUFHNW9DLEVBQUUyb0MsU0FBUztJQUFFLElBQUcxN0IsR0FBRTtRQUFDLE1BQU1DLElBQUUyN0IsR0FBRzU3QjtRQUFHbk0sSUFBRWdvQyxHQUFHaG9DLEdBQUVvTTtJQUFFO0lBQUMsT0FBTTtRQUFDaE47UUFBRU87UUFBRTtRQUFHSztRQUFFO1FBQUdvRjtRQUFFRTtRQUFFRTtRQUFFQztRQUFFQztRQUFFQztRQUFFRztRQUFFbUc7UUFBRUM7S0FBRSxDQUFDM0YsTUFBTSxDQUFDNkYsQ0FBQUEsSUFBR0EsS0FBRyxNQUFNM00sSUFBSSxDQUFDLENBQUM7QUFDMUksQ0FBQztBQUFDO0FBQUUsU0FBU3dvQyxHQUFHL29DLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBT0EsRUFBRWEsUUFBUSxDQUFDLGVBQWNiLENBQUFBLElBQUUsQ0FBQyxRQUFRLEVBQUVBLEVBQUUsQ0FBQyxHQUFFO1FBQUNrRyxHQUFFO1lBQUNuRyxHQUFFO1FBQVM7UUFBRXFHLEdBQUU7WUFBQzRoQyxLQUFJaG9DO1lBQUVpb0MsUUFBT25vQyxFQUFFbW9DLE1BQU07WUFBQ0MsS0FBSXBvQyxFQUFFb29DLEdBQUc7WUFBQ25qQyxTQUFRakYsRUFBRWlGLE9BQU87WUFBQ3E4QixPQUFNdGhDLEVBQUVzaEMsS0FBSztZQUFDaUgsS0FBSXZvQyxFQUFFdW9DLEdBQUc7WUFBQ0QsV0FBVXRvQyxFQUFFc29DLFNBQVM7WUFBQ0ksV0FBVTFvQyxFQUFFMG9DLFNBQVM7WUFBQ0MsV0FBVTNvQyxFQUFFMm9DLFNBQVM7WUFBQ0YsS0FBSXpvQyxFQUFFeW9DLEdBQUc7WUFBQ0QsS0FBSXhvQyxFQUFFd29DLEdBQUc7UUFBQTtRQUFFdDZCLEdBQUVqTztJQUFDO0FBQUM7QUFBQyxTQUFTK29DLEdBQUdocEMsQ0FBQztJQUFFLElBQUlDO0lBQUUsTUFBSyxFQUFDZ3BDLGFBQVkvb0MsQ0FBQyxFQUFDNEIsUUFBT3JCLENBQUMsRUFBQ3lvQyxTQUFRcG9DLENBQUMsRUFBQyxHQUFDZCxHQUFFa0csSUFBRWhHLEVBQUVvb0MsU0FBUyxJQUFFO0lBQUcsSUFBRyxDQUFFN25DLENBQUFBLEtBQUcsUUFBTUEsRUFBRWdCLE1BQU0sR0FBRSxPQUFPdkI7SUFBRSxNQUFNa0csSUFBRWxHLEVBQUU0QixNQUFNLEVBQUN3RSxJQUFFMEUsR0FBRzVFLEdBQUUzRjtJQUFHLElBQUcsQ0FBRTZGLENBQUFBLEtBQUcsUUFBTUEsRUFBRTdFLE1BQU0sR0FBRSxNQUFNLElBQUl1RixNQUFNO0lBQXVCLE1BQU1ULElBQUU0aUMsR0FBR2pwQyxFQUFFeW9DLFNBQVM7SUFBRSxJQUFHLENBQUNwaUMsR0FBRSxPQUFPckc7SUFBRWtwQyxHQUFHN2lDO0lBQUcsTUFBTUMsSUFBRTZpQyxHQUFHOWlDLEdBQUU7SUFBVSxJQUFJRSxJQUFFdkcsR0FBR3lvQyxhQUFXLEVBQUU7SUFBQyxJQUFHbmlDLEtBQUcsUUFBTUEsRUFBRS9FLE1BQU0sRUFBQztRQUFDLE1BQU1tRixJQUFFMGlDLEdBQUc5aUMsSUFBR3VHLElBQUUvQixHQUFHcEUsR0FBRTlGO1FBQUcsSUFBRyxDQUFFaU0sQ0FBQUEsS0FBRyxRQUFNQSxFQUFFdEwsTUFBTSxHQUFFLE1BQU0sSUFBSXVGLE1BQU0sQ0FBQywrQ0FBK0MsRUFBRStDLEtBQUt0RixTQUFTLENBQUNtQyxHQUFHLGFBQWEsRUFBRW1ELEtBQUt0RixTQUFTLENBQUMzRCxHQUFHLENBQUM7UUFBRSxNQUFNa00sSUFBRXU4QixHQUFHLFdBQVV4OEIsR0FBRTtZQUFDakwsUUFBT3dFO1FBQUMsSUFBRzJHLElBQUV1OEIsR0FBR2pqQyxHQUFFLFVBQVN5RztRQUFHdkcsSUFBRSxDQUFDLENBQUN4RyxJQUFFQyxHQUFHeW9DLFNBQVEsS0FBSSxPQUFLLEtBQUssSUFBRTFvQyxFQUFFcUgsS0FBSyxDQUFDLEdBQUUsQ0FBQyxFQUFDLEtBQUksRUFBRSxFQUFDYixFQUFFekYsSUFBSSxDQUFDeW9DLEdBQUd4OEI7SUFBRztJQUFDLE9BQU91NkIsR0FBR0QsR0FBRyxDQUFDLEdBQUVybkMsSUFBRztRQUFDb29DLFdBQVVvQixHQUFHeGpDLEdBQUUwaUMsR0FBR25pQztRQUFJM0UsUUFBT3dFO1FBQUVxaUMsV0FBVXpvQyxLQUFHLFFBQU1BLEVBQUV5b0MsU0FBUyxJQUFFbGlDLEVBQUVoRixNQUFNLEdBQUMsSUFBRWdGLElBQUUsS0FBSztJQUFDO0FBQUU7QUFBQyxTQUFTMGlDLEdBQUducEMsQ0FBQztJQUFFLE1BQU1DLElBQUUyb0MsR0FBRzVvQztJQUFHLElBQUdDLEtBQUcwcEMsR0FBRzFwQyxJQUFHLE9BQU80b0MsR0FBRzVvQztBQUFFO0FBQUMsU0FBUzJwQyxHQUFHNXBDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlDO0lBQUUsT0FBTSxDQUFDQSxJQUFFRixHQUFHNnBDLEdBQUUsS0FBSSxPQUFLLEtBQUssSUFBRTNwQyxFQUFFbUMsY0FBYyxDQUFDcEM7QUFBRTtBQUFDLFNBQVNvcEMsR0FBR3JwQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFJQyxHQUFFTztJQUFFLE9BQU0sQ0FBQ1AsSUFBRUYsR0FBRzZwQyxHQUFFLEtBQUksUUFBTTNwQyxDQUFDLENBQUNELEVBQUUsR0FBQ3NCLE9BQU9DLElBQUksQ0FBQyxDQUFDZixJQUFFVCxHQUFHNnBDLEdBQUUsS0FBSSxPQUFLLEtBQUssSUFBRXBwQyxDQUFDLENBQUNSLEVBQUUsSUFBRSxFQUFFO0FBQUE7QUFBQyxTQUFTNnBDLEdBQUc5cEMsQ0FBQztJQUFFLE9BQU9BLEdBQUdvSSxJQUFJbkksQ0FBQUEsSUFBR3NCLE9BQU9DLElBQUksQ0FBQ3ZCLE9BQUssRUFBRTtBQUFBO0FBQUMsU0FBU3FwQyxHQUFHdHBDLENBQUM7SUFBRSxPQUFPQSxHQUFHb0ksSUFBSW5JLENBQUFBO1FBQUksSUFBSUM7UUFBRSxPQUFNLENBQUNBLElBQUVELEVBQUVFLEtBQUssQ0FBQyxJQUFHLEtBQUksT0FBSyxLQUFLLElBQUVELENBQUMsQ0FBQyxFQUFFO0lBQUEsTUFBSSxFQUFFO0FBQUE7QUFBQyxTQUFTeW1DLEdBQUczbUMsQ0FBQztJQUFFLE9BQU80TCxPQUFPQyxJQUFJLENBQUM5QixLQUFLdEYsU0FBUyxDQUFDekUsSUFBSWQsUUFBUSxDQUFDO0FBQVM7QUFBQyxTQUFTNnFDLEdBQUcvcEMsQ0FBQztJQUFFLE9BQU8rSixLQUFLdkYsS0FBSyxDQUFDb0gsT0FBT0MsSUFBSSxDQUFDN0wsR0FBRSxVQUFVZCxRQUFRLENBQUM7QUFBUztBQUFDLFNBQVNrcUMsR0FBR3BwQyxDQUFDO0lBQUUsSUFBRyxDQUFDQSxHQUFFLE1BQU0sSUFBSWdILE1BQU07SUFBeUMsSUFBRyxDQUFDaEgsRUFBRTZwQyxHQUFHLEVBQUMsTUFBTSxJQUFJN2lDLE1BQU07SUFBMkIsTUFBTS9HLElBQUVzQixPQUFPQyxJQUFJLENBQUN4QixFQUFFNnBDLEdBQUc7SUFBRSxJQUFHLENBQUU1cEMsQ0FBQUEsS0FBRyxRQUFNQSxFQUFFd0IsTUFBTSxHQUFFLE1BQU0sSUFBSXVGLE1BQU07SUFBd0MvRyxFQUFFWSxPQUFPLENBQUNYLENBQUFBO1FBQUksTUFBTU8sSUFBRVQsRUFBRTZwQyxHQUFHLENBQUMzcEMsRUFBRTtRQUFDLElBQUdxTixNQUFNQyxPQUFPLENBQUMvTSxJQUFHLE1BQU0sSUFBSXVHLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRTlHLEVBQUUsQ0FBQztRQUFFLElBQUcsT0FBT08sS0FBRyxVQUFTLE1BQU0sSUFBSXVHLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRTlHLEVBQUUsQ0FBQztRQUFFLElBQUcsQ0FBQ3FCLE9BQU9DLElBQUksQ0FBQ2YsR0FBR2dCLE1BQU0sRUFBQyxNQUFNLElBQUl1RixNQUFNLENBQUMsMEJBQTBCLEVBQUU5RyxFQUFFLENBQUM7UUFBRXFCLE9BQU9DLElBQUksQ0FBQ2YsR0FBR0ksT0FBTyxDQUFDQyxDQUFBQTtZQUFJLE1BQU1vRixJQUFFekYsQ0FBQyxDQUFDSyxFQUFFO1lBQUMsSUFBRyxDQUFDeU0sTUFBTUMsT0FBTyxDQUFDdEgsSUFBRyxNQUFNLElBQUljLE1BQU0sQ0FBQyxlQUFlLEVBQUVsRyxFQUFFLHFDQUFxQyxFQUFFb0YsRUFBRSxDQUFDO1lBQUUsSUFBRyxDQUFDQSxFQUFFekUsTUFBTSxFQUFDLE1BQU0sSUFBSXVGLE1BQU0sQ0FBQyxTQUFTLEVBQUVsRyxFQUFFLDhDQUE4QyxDQUFDO1lBQUVvRixFQUFFckYsT0FBTyxDQUFDdUYsQ0FBQUE7Z0JBQUksSUFBRyxPQUFPQSxLQUFHLFVBQVMsTUFBTSxJQUFJWSxNQUFNLENBQUMsZ0JBQWdCLEVBQUVsRyxFQUFFLHNDQUFzQyxFQUFFc0YsRUFBRSxDQUFDO1lBQUM7UUFBRTtJQUFFO0FBQUU7QUFBQyxTQUFTNGpDLEdBQUdocUMsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUMsRUFBQ08sSUFBRSxDQUFDLENBQUM7SUFBRSxPQUFPUCxHQUFHdXNCLEtBQUssQ0FBQzNyQixHQUFFb0YsSUFBSXBGLEVBQUVtcEMsYUFBYSxDQUFDL2pDLEtBQUk7UUFBQzJqQyxLQUFJO1lBQUMsQ0FBQzdwQyxFQUFFLEVBQUN1cEMsR0FBR3RwQyxHQUFFQyxHQUFFTztRQUFFO0lBQUM7QUFBQztBQUFDLFNBQVMrb0MsR0FBR3hwQyxDQUFDLEVBQUNDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlPO0lBQUUsT0FBT1QsRUFBRTZwQyxHQUFHLENBQUM1cEMsRUFBRSxHQUFDc25DLEdBQUcsQ0FBQyxHQUFFcm5DLElBQUcsQ0FBQyxDQUFDTyxJQUFFYyxPQUFPQyxJQUFJLENBQUN4QixFQUFFNnBDLEdBQUcsTUFBSSxPQUFLLEtBQUssSUFBRXBwQyxFQUFFZ3NCLElBQUksQ0FBQyxDQUFDM3JCLEdBQUVvRixJQUFJcEYsRUFBRW1wQyxhQUFhLENBQUMvakMsR0FBRSxFQUFHaVUsTUFBTSxDQUFDLENBQUNyWixHQUFFb0YsSUFBS3BGLENBQUFBLEVBQUUrb0MsR0FBRyxDQUFDM2pDLEVBQUUsR0FBQ2xHLEVBQUU2cEMsR0FBRyxDQUFDM2pDLEVBQUUsRUFBQ3BGLENBQUFBLEdBQUc7UUFBQytvQyxLQUFJLENBQUM7SUFBQztBQUFFO0FBQUMsU0FBU04sR0FBR3ZwQyxDQUFDLEVBQUNDLENBQUMsRUFBQ0MsSUFBRSxDQUFDLENBQUM7SUFBRUQsSUFBRUEsR0FBR3dzQixLQUFLLENBQUMzckIsR0FBRW9GLElBQUlwRixFQUFFbXBDLGFBQWEsQ0FBQy9qQztJQUFJLE1BQU16RixJQUFFUixFQUFFbUksR0FBRyxDQUFDdEgsQ0FBQUEsSUFBSTtZQUFDLENBQUMsQ0FBQyxFQUFFZCxFQUFFLENBQUMsRUFBRWMsRUFBRSxDQUFDLENBQUMsRUFBQztnQkFBQ1o7YUFBRTtRQUFBO0lBQUksT0FBT3FCLE9BQU8yb0MsTUFBTSxDQUFDLENBQUMsTUFBS3pwQztBQUFFO0FBQUMsU0FBU2dwQyxHQUFHenBDLENBQUM7SUFBRSxPQUFPb3BDLEdBQUdwcEMsSUFBRyxDQUFDLFVBQVUsRUFBRTJtQyxHQUFHM21DLEdBQUd3RixPQUFPLENBQUMsTUFBSyxJQUFJLENBQUM7QUFBQTtBQUFDLFNBQVNxakMsR0FBRzdvQyxDQUFDO0lBQUUsTUFBTUMsSUFBRThwQyxHQUFHL3BDLEVBQUV3RixPQUFPLENBQUMsY0FBYTtJQUFLLE9BQU80akMsR0FBR25wQyxJQUFHQTtBQUFDO0FBQUMsU0FBU2txQyxHQUFHbnFDLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsTUFBTU8sSUFBRXVwQyxHQUFHaHFDLEdBQUVDLEdBQUVDO0lBQUcsT0FBT3VwQyxHQUFHaHBDO0FBQUU7QUFBQyxTQUFTa3BDLEdBQUczcEMsQ0FBQztJQUFFLE9BQU9BLEtBQUdBLEVBQUVlLFFBQVEsQ0FBQztBQUFhO0FBQUMsU0FBU3FwQyxHQUFHcHFDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE1BQU1DLElBQUUyb0MsR0FBRzdvQyxJQUFHUyxJQUFFb29DLEdBQUc1b0MsSUFBR2EsSUFBRXVwQyxHQUFHbnFDLEdBQUVPO0lBQUcsT0FBT2dwQyxHQUFHM29DO0FBQUU7QUFBQyxTQUFTdXBDLEdBQUdycUMsQ0FBQyxFQUFDQyxDQUFDO0lBQUVtcEMsR0FBR3BwQyxJQUFHb3BDLEdBQUducEM7SUFBRyxNQUFNQyxJQUFFcUIsT0FBT0MsSUFBSSxDQUFDeEIsRUFBRTZwQyxHQUFHLEVBQUV2cUMsTUFBTSxDQUFDaUMsT0FBT0MsSUFBSSxDQUFDdkIsRUFBRTRwQyxHQUFHLEdBQUdwZCxJQUFJLENBQUMsQ0FBQzNyQixHQUFFb0YsSUFBSXBGLEVBQUVtcEMsYUFBYSxDQUFDL2pDLEtBQUl6RixJQUFFO1FBQUNvcEMsS0FBSSxDQUFDO0lBQUM7SUFBRSxPQUFPM3BDLEVBQUVXLE9BQU8sQ0FBQ0MsQ0FBQUE7UUFBSSxJQUFJb0YsR0FBRUU7UUFBRTdFLE9BQU9DLElBQUksQ0FBQyxDQUFDLENBQUMwRSxJQUFFbEcsRUFBRTZwQyxHQUFHLEtBQUcsT0FBSyxLQUFLLElBQUUzakMsQ0FBQyxDQUFDcEYsRUFBRSxLQUFHLENBQUMsR0FBR3hCLE1BQU0sQ0FBQ2lDLE9BQU9DLElBQUksQ0FBQyxDQUFDLENBQUM0RSxJQUFFbkcsRUFBRTRwQyxHQUFHLEtBQUcsT0FBSyxLQUFLLElBQUV6akMsQ0FBQyxDQUFDdEYsRUFBRSxLQUFHLENBQUMsSUFBSTJyQixJQUFJLENBQUMsQ0FBQ25tQixHQUFFQyxJQUFJRCxFQUFFMmpDLGFBQWEsQ0FBQzFqQyxJQUFJMUYsT0FBTyxDQUFDeUYsQ0FBQUE7WUFBSSxJQUFJQyxHQUFFQztZQUFFL0YsRUFBRW9wQyxHQUFHLENBQUMvb0MsRUFBRSxHQUFDMG1DLEdBQUdELEdBQUcsQ0FBQyxHQUFFOW1DLEVBQUVvcEMsR0FBRyxDQUFDL29DLEVBQUUsR0FBRTtnQkFBQyxDQUFDd0YsRUFBRSxFQUFDLENBQUMsQ0FBQ0MsSUFBRXZHLEVBQUU2cEMsR0FBRyxDQUFDL29DLEVBQUUsS0FBRyxPQUFLLEtBQUssSUFBRXlGLENBQUMsQ0FBQ0QsRUFBRSxLQUFJLEVBQUNFLElBQUV2RyxFQUFFNHBDLEdBQUcsQ0FBQy9vQyxFQUFFLEtBQUcsT0FBSyxLQUFLLElBQUUwRixDQUFDLENBQUNGLEVBQUU7WUFBQztRQUFFO0lBQUUsSUFBRzdGO0FBQUM7QUFBQyxTQUFTcW9DLEdBQUc5b0MsSUFBRSxFQUFFLEVBQUNDLENBQUM7SUFBRW1wQyxHQUFHbnBDO0lBQUcsTUFBTUMsSUFBRTtJQUFxRixJQUFHRixFQUFFZSxRQUFRLENBQUNiLElBQUcsT0FBT0Y7SUFBRSxNQUFNUyxJQUFFLEVBQUU7SUFBQyxJQUFJSyxJQUFFO0lBQUVTLE9BQU9DLElBQUksQ0FBQ3ZCLEVBQUU0cEMsR0FBRyxFQUFFaHBDLE9BQU8sQ0FBQ3lGLENBQUFBO1FBQUksTUFBTUMsSUFBRWhGLE9BQU9DLElBQUksQ0FBQ3ZCLEVBQUU0cEMsR0FBRyxDQUFDdmpDLEVBQUUsRUFBRThCLEdBQUcsQ0FBQ3hCLENBQUFBLElBQUk7Z0JBQUMwakMsU0FBUTFqQyxFQUFFekcsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUFDb3FDLFFBQU8zakMsRUFBRXpHLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUFBO1FBQUlvRyxFQUFFa21CLElBQUksQ0FBQyxDQUFDN2xCLEdBQUVtRyxJQUFJbkcsRUFBRTJqQyxNQUFNLENBQUNOLGFBQWEsQ0FBQ2w5QixFQUFFdzlCLE1BQU07UUFBRyxNQUFNL2pDLElBQUUsQ0FBQztRQUFFRCxFQUFFMUYsT0FBTyxDQUFDK0YsQ0FBQUE7WUFBSUosQ0FBQyxDQUFDSSxFQUFFMGpDLE9BQU8sQ0FBQyxJQUFHOWpDLENBQUFBLENBQUMsQ0FBQ0ksRUFBRTBqQyxPQUFPLENBQUMsR0FBQyxFQUFFLEdBQUU5akMsQ0FBQyxDQUFDSSxFQUFFMGpDLE9BQU8sQ0FBQyxDQUFDdHBDLElBQUksQ0FBQzRGLEVBQUUyakMsTUFBTTtRQUFDO1FBQUcsTUFBTTlqQyxJQUFFbEYsT0FBT0MsSUFBSSxDQUFDZ0YsR0FBRzRCLEdBQUcsQ0FBQ3hCLENBQUFBLElBQUk5RixDQUFBQSxLQUFJLENBQUMsQ0FBQyxFQUFFQSxFQUFFLEdBQUcsRUFBRThGLEVBQUUsSUFBSSxFQUFFSixDQUFDLENBQUNJLEVBQUUsQ0FBQ3JHLElBQUksQ0FBQyxRQUFRLE9BQU8sRUFBRStGLEVBQUUsRUFBRSxDQUFDO1FBQUc3RixFQUFFTyxJQUFJLENBQUN5RixFQUFFbEcsSUFBSSxDQUFDLE1BQU1pRixPQUFPLENBQUMsTUFBSztJQUFLO0lBQUcsTUFBTVUsSUFBRXpGLEVBQUVGLElBQUksQ0FBQyxNQUFLNkYsSUFBRSxDQUFDLEVBQUVsRyxFQUFFLEVBQUVnRyxFQUFFLENBQUM7SUFBQyxPQUFNLENBQUMsRUFBRWxHLElBQUVBLElBQUUsTUFBSSxHQUFHLEVBQUVvRyxFQUFFLENBQUM7QUFBQTtBQUFDLFNBQVNva0MsR0FBR3hxQyxDQUFDO0lBQUUsSUFBSUM7SUFBRSxNQUFNQyxJQUFFMm9DLEdBQUc3b0M7SUFBR29wQyxHQUFHbHBDO0lBQUcsTUFBTU8sSUFBRSxDQUFDUixJQUFFQyxFQUFFMnBDLEdBQUcsS0FBRyxPQUFLLEtBQUssSUFBRTVwQyxFQUFFd3FDLE1BQU07SUFBQyxPQUFPaHFDLElBQUVjLE9BQU9DLElBQUksQ0FBQ2YsR0FBRzJILEdBQUcsQ0FBQ3RILENBQUFBLElBQUdBLEVBQUVYLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFFLEVBQUU7QUFBQTtBQUFDLFNBQVN1cUMsR0FBRzFxQyxDQUFDO0lBQUUsTUFBTUMsSUFBRTRvQyxHQUFHN29DO0lBQUdvcEMsR0FBR25wQztJQUFHLE1BQU1DLElBQUUsRUFBRTtJQUFDLE9BQU9xQixPQUFPb3BDLE1BQU0sQ0FBQzFxQyxFQUFFNHBDLEdBQUcsRUFBRWhwQyxPQUFPLENBQUNKLENBQUFBO1FBQUljLE9BQU9vcEMsTUFBTSxDQUFDbHFDLEdBQUdJLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFBSSxJQUFJb0Y7WUFBR0EsQ0FBQUEsSUFBRXBGLEdBQUcsQ0FBQyxFQUFFLEtBQUcsUUFBTW9GLEVBQUVwRSxNQUFNLElBQUU1QixFQUFFYyxJQUFJLENBQUNGLENBQUMsQ0FBQyxFQUFFLENBQUNnQixNQUFNO1FBQUM7SUFBRSxJQUFHO1dBQUksSUFBSThILElBQUkxSixFQUFFMHFDLElBQUk7S0FBSTtBQUFBO0FBQUMsU0FBU2xCLEdBQUcxcEMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBRyxDQUFDQSxHQUFFLE9BQU9EO0lBQUUsTUFBTUUsSUFBRTJvQyxHQUFHNW9DO0lBQUcsT0FBT21wQyxHQUFHbHBDLElBQUc0b0MsR0FBRzlvQyxHQUFFRTtBQUFFO0FBQUMsU0FBUzBvQyxHQUFHNW9DLENBQUM7SUFBRSxJQUFHLENBQUNBLEdBQUU7SUFBTyxNQUFNQyxJQUFFRCxHQUFHLENBQUNBLEVBQUV5QixNQUFNLEdBQUMsRUFBRTtJQUFDLE9BQU9rb0MsR0FBRzFwQyxLQUFHQSxJQUFFLEtBQUs7QUFBQztBQUFDLE1BQU00cUMsS0FBRyxVQUFTQyxLQUFHLFVBQVNDLEtBQUcsYUFBWUMsS0FBRyxhQUFZQyxLQUFHLFFBQU9DLEtBQUcsR0FBRUMsS0FBRyxHQUFFQyxLQUFHLEdBQUVDLEtBQUcsR0FBRUMsS0FBRyxHQUFFQyxLQUFHLElBQUdDLEtBQUc7QUFBRyxTQUFTQztJQUFLLE1BQU16ckMsSUFBRWYsOERBQWtCO0lBQUcsT0FBTTtRQUFDZ21DLFlBQVc5bEMscURBQUVBLENBQUNhLEVBQUUyckMsU0FBUyxFQUFDYjtRQUFJM0YsV0FBVWhtQyxxREFBRUEsQ0FBQ2EsRUFBRW1sQyxTQUFTLEVBQUMyRjtJQUFHO0FBQUM7QUFBQyxTQUFTYztJQUFLLE1BQU01ckMsSUFBRXBCLDhEQUFFQSxDQUFDNHNDO0lBQUksT0FBT3JzQyxxREFBRUEsQ0FBQ2EsR0FBRThxQztBQUFHO0FBQUMsU0FBU2UsR0FBRzdyQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxNQUFNQyxJQUFFakIsd0RBQVksQ0FBQ0ksdURBQUVBLENBQUNXLEdBQUU4cUMsS0FBSXpyQyx1REFBRUEsQ0FBQ1ksR0FBRTZxQyxLQUFJLENBQUMsSUFBR3JxQyxJQUFFLElBQUkvQixpREFBRUEsQ0FBQ0kscURBQUVBLEVBQUNvQixHQUFHNnJDLE1BQU0sQ0FBQ1A7SUFBSSxPQUFPcnNDLHFEQUFFQSxDQUFDc0IsR0FBRXFxQztBQUFHO0FBQUMsU0FBU2tCLEdBQUdoc0MsQ0FBQztJQUFFLE1BQU1DLElBQUVqQix1REFBRUEsQ0FBQ0ssdURBQUVBLENBQUNXLEdBQUU4cUM7SUFBSyxPQUFPM3JDLHFEQUFFQSxDQUFDYyxHQUFFNnFDO0FBQUc7QUFBQyxTQUFTbUIsR0FBR2pzQyxDQUFDO0lBQUUsTUFBTUMsSUFBRWpCLHVEQUFFQSxDQUFDSyx1REFBRUEsQ0FBQ1csR0FBRWlyQztJQUFLLE9BQU85ckMscURBQUVBLENBQUNjLEdBQUU2cUM7QUFBRztBQUFDLFNBQVNvQixHQUFHbHNDLENBQUM7SUFBRSxPQUFPWCx1REFBRUEsQ0FBQyxDQUFDLEVBQUVXLEVBQUUsQ0FBQyxFQUFDNnFDO0FBQUc7QUFBQyxTQUFTc0IsR0FBR25zQyxDQUFDO0lBQUUsT0FBT29KLE9BQU9qSyxxREFBRUEsQ0FBQ2EsR0FBRTZxQztBQUFJO0FBQUMsU0FBU3VCLEdBQUdwc0MsQ0FBQztJQUFFLE1BQU1DLElBQUVpc0MsR0FBRyxPQUFPbHNDLEVBQUUwRixJQUFJLEdBQUMsTUFBSTFGLEVBQUUwRixJQUFJLEdBQUN3bEM7SUFBSSxJQUFHaUIsR0FBR2xzQyxPQUFLa3JDLE1BQUksT0FBT25yQyxFQUFFcXNDLGVBQWUsR0FBQyxLQUFJLE1BQU0sSUFBSXJsQyxNQUFNO0lBQWlELE1BQU05RyxJQUFFLE9BQU9GLEVBQUVxc0MsZUFBZSxHQUFDLE1BQUlodEMsdURBQUVBLENBQUNXLEVBQUVxc0MsZUFBZSxFQUFDdkIsTUFBSSxLQUFLLEdBQUVycUMsSUFBRSxPQUFPVCxFQUFFc3NDLEVBQUUsR0FBQyxNQUFJanRDLHVEQUFFQSxDQUFDVyxFQUFFc3NDLEVBQUUsRUFBQ3hCLE1BQUlsc0MsOERBQUVBLENBQUMyc0MsS0FBSXpxQyxJQUFFLElBQUl0Qyx5RUFBRUEsQ0FBQ2EsdURBQUVBLENBQUNXLEVBQUV1c0MsTUFBTSxFQUFDekIsS0FBSzBCLElBQUksQ0FBQy9yQyxHQUFFcEIsdURBQUVBLENBQUNXLEVBQUU2VixPQUFPLEVBQUNvMUI7SUFBSyxPQUFPd0IsR0FBRztRQUFDL21DLE1BQUt6RjtRQUFFeXNDLFFBQU81ckM7UUFBRXdyQyxJQUFHN3JDO1FBQUU0ckMsaUJBQWdCbnNDO1FBQUV5c0MsVUFBUzNzQyxFQUFFMnNDLFFBQVE7SUFBQTtBQUFFO0FBQUMsU0FBU0MsR0FBRzVzQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxNQUFNQyxJQUFFZ3NDLEdBQUdkLEtBQUkzcUMsSUFBRTdCLDhEQUFFQSxDQUFDMnNDLEtBQUl6cUMsSUFBRXpCLHVEQUFFQSxDQUFDVyxHQUFFaXJDO0lBQUksT0FBT3dCLEdBQUc7UUFBQy9tQyxNQUFLeEY7UUFBRXdzQyxRQUFPNXJDO1FBQUV3ckMsSUFBRzdyQztRQUFFa3NDLFVBQVMxc0M7SUFBQztBQUFFO0FBQUMsU0FBUzRzQyxHQUFHN3NDLENBQUM7SUFBRSxNQUFNQyxJQUFFLElBQUl6Qix5RUFBRUEsQ0FBQ2EsdURBQUVBLENBQUNXLEVBQUV1c0MsTUFBTSxFQUFDekIsTUFBSyxFQUFDNEIsUUFBT3hzQyxDQUFDLEVBQUNvc0MsSUFBRzdyQyxDQUFDLEVBQUMsR0FBQ3FzQyxHQUFHO1FBQUNDLFNBQVEvc0MsRUFBRStzQyxPQUFPO1FBQUNKLFVBQVMzc0MsR0FBRzJzQztJQUFRLElBQUc3ckMsSUFBRWIsRUFBRXFLLElBQUksQ0FBQzdKLEdBQUVQO0lBQUcsSUFBR1ksTUFBSSxNQUFLLE1BQU0sSUFBSWtHLE1BQU07SUFBcUIsT0FBTzdILHFEQUFFQSxDQUFDMkIsR0FBRW1xQztBQUFHO0FBQUMsU0FBUytCLEdBQUdodEMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsTUFBSyxFQUFDeXNDLFFBQU94c0MsQ0FBQyxFQUFDLEdBQUM0c0MsR0FBRztRQUFDQyxTQUFRL3NDO1FBQUUyc0MsVUFBUzFzQztJQUFDO0lBQUcsT0FBT2QscURBQUVBLENBQUNlLEdBQUUrcUM7QUFBRztBQUFDLFNBQVN3QixHQUFHenNDLENBQUM7SUFBRSxNQUFLLEVBQUMyc0MsVUFBUzFzQyxJQUFFOHFDLEVBQUUsRUFBQyxHQUFDL3FDO0lBQUUsSUFBR21zQyxHQUFHbnNDLEVBQUUwRixJQUFJLE1BQUkwbEMsSUFBRyxPQUFPanNDLHFEQUFFQSxDQUFDSSxtREFBRUEsQ0FBQztRQUFDUyxFQUFFMEYsSUFBSTtRQUFDMUYsRUFBRTBzQyxNQUFNO0tBQUMsR0FBRXpzQztJQUFHLElBQUdrc0MsR0FBR25zQyxFQUFFMEYsSUFBSSxNQUFJeWxDLElBQUc7UUFBQyxJQUFHLE9BQU9uckMsRUFBRXFzQyxlQUFlLEdBQUMsS0FBSSxNQUFNLElBQUlybEMsTUFBTTtRQUFpRCxPQUFPN0gscURBQUVBLENBQUNJLG1EQUFFQSxDQUFDO1lBQUNTLEVBQUUwRixJQUFJO1lBQUMxRixFQUFFcXNDLGVBQWU7WUFBQ3JzQyxFQUFFc3NDLEVBQUU7WUFBQ3RzQyxFQUFFMHNDLE1BQU07U0FBQyxHQUFFenNDO0lBQUU7SUFBQyxPQUFPZCxxREFBRUEsQ0FBQ0ksbURBQUVBLENBQUM7UUFBQ1MsRUFBRTBGLElBQUk7UUFBQzFGLEVBQUVzc0MsRUFBRTtRQUFDdHNDLEVBQUUwc0MsTUFBTTtLQUFDLEdBQUV6c0M7QUFBRTtBQUFDLFNBQVM2c0MsR0FBRzlzQyxDQUFDO0lBQUUsTUFBSyxFQUFDK3NDLFNBQVE5c0MsQ0FBQyxFQUFDMHNDLFVBQVN6c0MsSUFBRTZxQyxFQUFFLEVBQUMsR0FBQy9xQyxHQUFFUyxJQUFFcEIsdURBQUVBLENBQUNZLEdBQUVDLElBQUdZLElBQUVMLEVBQUU2RyxLQUFLLENBQUMrakMsSUFBR0MsS0FBSXBsQyxJQUFFb2xDO0lBQUcsSUFBR2EsR0FBR3JyQyxPQUFLcXFDLElBQUc7UUFBQyxNQUFNM2tDLElBQUVOLElBQUVzbEMsSUFBRy9rQyxJQUFFRCxJQUFFK2tDLElBQUcza0MsSUFBRW5HLEVBQUU2RyxLQUFLLENBQUNwQixHQUFFTSxJQUFHdUcsSUFBRXRNLEVBQUU2RyxLQUFLLENBQUNkLEdBQUVDLElBQUd1RyxJQUFFdk0sRUFBRTZHLEtBQUssQ0FBQ2I7UUFBRyxPQUFNO1lBQUNmLE1BQUs1RTtZQUFFNHJDLFFBQU8xL0I7WUFBRXMvQixJQUFHdi9CO1lBQUVzL0IsaUJBQWdCemxDO1FBQUM7SUFBQztJQUFDLElBQUd1bEMsR0FBR3JyQyxPQUFLc3FDLElBQUc7UUFBQyxNQUFNNWtDLElBQUUvRixFQUFFNkcsS0FBSyxDQUFDcEIsSUFBR08sSUFBRTdILDhEQUFFQSxDQUFDMnNDO1FBQUksT0FBTTtZQUFDN2xDLE1BQUs1RTtZQUFFNHJDLFFBQU9sbUM7WUFBRThsQyxJQUFHN2xDO1FBQUM7SUFBQztJQUFDLE1BQU1MLElBQUVGLElBQUVxbEMsSUFBR2psQyxJQUFFN0YsRUFBRTZHLEtBQUssQ0FBQ3BCLEdBQUVFLElBQUdHLElBQUU5RixFQUFFNkcsS0FBSyxDQUFDbEI7SUFBRyxPQUFNO1FBQUNWLE1BQUs1RTtRQUFFNHJDLFFBQU9ubUM7UUFBRStsQyxJQUFHaG1DO0lBQUM7QUFBQztBQUFDLFNBQVMybUMsR0FBR2p0QyxDQUFDLEVBQUNDLENBQUM7SUFBRSxNQUFNQyxJQUFFNHNDLEdBQUc7UUFBQ0MsU0FBUS9zQztRQUFFMnNDLFVBQVMxc0MsR0FBRzBzQztJQUFRO0lBQUcsT0FBT08sR0FBRztRQUFDeG5DLE1BQUt5bUMsR0FBR2pzQyxFQUFFd0YsSUFBSTtRQUFFMm1DLGlCQUFnQixPQUFPbnNDLEVBQUVtc0MsZUFBZSxHQUFDLE1BQUlsdEMscURBQUVBLENBQUNlLEVBQUVtc0MsZUFBZSxFQUFDdkIsTUFBSSxLQUFLO1FBQUVxQyxtQkFBa0JsdEMsR0FBR2t0QztJQUFpQjtBQUFFO0FBQUMsU0FBU0QsR0FBR2x0QyxDQUFDO0lBQUUsTUFBTUMsSUFBRUQsR0FBRzBGLFFBQU13bEM7SUFBRyxJQUFHanJDLE1BQUlrckMsSUFBRztRQUFDLElBQUcsT0FBT25yQyxHQUFHcXNDLGtCQUFnQixLQUFJLE1BQU0sSUFBSXJsQyxNQUFNO1FBQTZCLElBQUcsT0FBT2hILEdBQUdtdEMsb0JBQWtCLEtBQUksTUFBTSxJQUFJbm1DLE1BQU07SUFBOEI7SUFBQyxPQUFNO1FBQUN0QixNQUFLekY7UUFBRW9zQyxpQkFBZ0Jyc0MsR0FBR3FzQztRQUFnQmMsbUJBQWtCbnRDLEdBQUdtdEM7SUFBaUI7QUFBQztBQUFDLFNBQVNDLEdBQUdwdEMsQ0FBQztJQUFFLE9BQU9BLEVBQUUwRixJQUFJLEtBQUd5bEMsTUFBSSxPQUFPbnJDLEVBQUVxc0MsZUFBZSxJQUFFLFlBQVUsT0FBT3JzQyxFQUFFbXRDLGlCQUFpQixJQUFFO0FBQVE7QUFBQyxTQUFTRSxHQUFHcnRDLENBQUM7SUFBRSxPQUFPQSxFQUFFMEYsSUFBSSxLQUFHMGxDO0FBQUU7QUFBQyxTQUFTa0MsR0FBR3R0QyxDQUFDO0lBQUUsT0FBTyxJQUFJUCx5Q0FBRUEsQ0FBQyxRQUFRd2tDLGFBQWEsQ0FBQztRQUFDcjBCLEdBQUVoRSxPQUFPQyxJQUFJLENBQUM3TCxFQUFFNFAsQ0FBQyxFQUFDLFVBQVUxUSxRQUFRLENBQUM7UUFBTzBILEdBQUVnRixPQUFPQyxJQUFJLENBQUM3TCxFQUFFNEcsQ0FBQyxFQUFDLFVBQVUxSCxRQUFRLENBQUM7SUFBTSxHQUFFO0FBQU07QUFBQyxTQUFTcXVDLEdBQUd2dEMsQ0FBQztJQUFFLElBQUlDLElBQUVELEVBQUV3RixPQUFPLENBQUMsTUFBSyxLQUFLQSxPQUFPLENBQUMsTUFBSztJQUFLLE1BQU10RixJQUFFRCxFQUFFd0IsTUFBTSxHQUFDO0lBQUUsT0FBT3ZCLElBQUUsS0FBSUQsQ0FBQUEsS0FBRyxJQUFJdXRDLE1BQU0sQ0FBQyxJQUFFdHRDLEVBQUMsR0FBR0Q7QUFBQztBQUFDLFNBQVN3dEMsR0FBR3p0QyxDQUFDO0lBQUUsT0FBTzRMLE9BQU9DLElBQUksQ0FBQzBoQyxHQUFHdnRDLElBQUc7QUFBUztBQUFDLFNBQVMwdEMsR0FBRzF0QyxDQUFDLEVBQUNDLENBQUM7SUFBRSxNQUFLLENBQUNDLEdBQUVPLEdBQUVLLEVBQUUsR0FBQ2QsRUFBRUcsS0FBSyxDQUFDLE1BQUsrRixJQUFFdW5DLEdBQUczc0M7SUFBRyxJQUFHb0YsRUFBRXpFLE1BQU0sS0FBRyxJQUFHLE1BQU0sSUFBSXVGLE1BQU07SUFBNEIsTUFBTVosSUFBRUYsRUFBRW9CLEtBQUssQ0FBQyxHQUFFLElBQUlwSSxRQUFRLENBQUMsUUFBT29ILElBQUVKLEVBQUVvQixLQUFLLENBQUMsSUFBRyxJQUFJcEksUUFBUSxDQUFDLFFBQU9xSCxJQUFFLENBQUMsRUFBRXJHLEVBQUUsQ0FBQyxFQUFFTyxFQUFFLENBQUMsRUFBQytGLElBQUUsSUFBSTFILHFEQUFFQSxHQUFHcVAsTUFBTSxDQUFDdkMsT0FBT0MsSUFBSSxDQUFDdEYsSUFBSWdMLE1BQU0sSUFBRzlLLElBQUU2bUMsR0FBR3J0QyxJQUFHMkcsSUFBRWdGLE9BQU9DLElBQUksQ0FBQ3JGLEdBQUd0SCxRQUFRLENBQUM7SUFBTyxJQUFHLENBQUN1SCxFQUFFcThCLE1BQU0sQ0FBQ2w4QixHQUFFO1FBQUMxRyxHQUFFa0c7UUFBRThILEdBQUU1SDtJQUFDLElBQUcsTUFBTSxJQUFJVSxNQUFNO0lBQXFCLE9BQU9ySCxxRUFBRUEsQ0FBQ0ssR0FBRzJ0QyxPQUFPO0FBQUE7QUFBQyxNQUFNQyxLQUFHO0FBQU0sU0FBU0MsR0FBRzd0QyxDQUFDO0lBQUUsT0FBT0EsR0FBRzh0QyxTQUFPO1FBQUM5b0MsVUFBUzRvQztJQUFFO0FBQUM7QUFBQyxTQUFTRyxHQUFHL3RDLENBQUM7SUFBRSxNQUFNQyxJQUFFSixvRUFBRSxDQUFDRyxFQUFFO0lBQUMsSUFBRyxPQUFPQyxJQUFFLEtBQUksTUFBTSxJQUFJK0csTUFBTSxDQUFDLDhCQUE4QixFQUFFaEgsRUFBRSxDQUFDO0lBQUUsT0FBT0M7QUFBQztBQUFDLElBQUkrdEMsS0FBR3pzQyxPQUFPUyxjQUFjLEVBQUNpc0MsS0FBRzFzQyxPQUFPeWxDLGdCQUFnQixFQUFDa0gsS0FBRzNzQyxPQUFPMmxDLHlCQUF5QixFQUFDaUgsS0FBRzVzQyxPQUFPVyxxQkFBcUIsRUFBQ2tzQyxLQUFHN3NDLE9BQU9hLFNBQVMsQ0FBQ0MsY0FBYyxFQUFDZ3NDLEtBQUc5c0MsT0FBT2EsU0FBUyxDQUFDRyxvQkFBb0IsRUFBQytyQyxLQUFHLENBQUN0dUMsR0FBRUMsR0FBRUMsSUFBSUQsS0FBS0QsSUFBRWd1QyxHQUFHaHVDLEdBQUVDLEdBQUU7UUFBQ3dDLFlBQVcsQ0FBQztRQUFFQyxjQUFhLENBQUM7UUFBRUMsVUFBUyxDQUFDO1FBQUVDLE9BQU0xQztJQUFDLEtBQUdGLENBQUMsQ0FBQ0MsRUFBRSxHQUFDQyxHQUFFcXVDLEtBQUcsQ0FBQ3Z1QyxHQUFFQztJQUFLLElBQUksSUFBSUMsS0FBS0QsS0FBSUEsQ0FBQUEsSUFBRSxDQUFDLEdBQUdtdUMsR0FBR3RyQyxJQUFJLENBQUM3QyxHQUFFQyxNQUFJb3VDLEdBQUd0dUMsR0FBRUUsR0FBRUQsQ0FBQyxDQUFDQyxFQUFFO0lBQUUsSUFBR2l1QyxJQUFHLEtBQUksSUFBSWp1QyxLQUFLaXVDLEdBQUdsdUMsR0FBR291QyxHQUFHdnJDLElBQUksQ0FBQzdDLEdBQUVDLE1BQUlvdUMsR0FBR3R1QyxHQUFFRSxHQUFFRCxDQUFDLENBQUNDLEVBQUU7SUFBRSxPQUFPRjtBQUFDLEdBQUV3dUMsS0FBRyxDQUFDeHVDLEdBQUVDLElBQUlndUMsR0FBR2p1QyxHQUFFa3VDLEdBQUdqdUM7QUFBSSxTQUFTd3VDLEdBQUd6dUMsQ0FBQyxFQUFDQyxJQUFFLEdBQUc7SUFBRSxNQUFNQyxJQUFFLENBQUMsR0FBRU8sSUFBRSxVQUFRUjtJQUFFLE9BQU9zQixPQUFPQyxJQUFJLENBQUN4QixHQUFHYSxPQUFPLENBQUNDLENBQUFBO1FBQUksSUFBR0EsRUFBRWdJLFVBQVUsQ0FBQ3JJLElBQUc7WUFBQyxNQUFNeUYsSUFBRXBGLEVBQUUwRSxPQUFPLENBQUMvRSxHQUFFLEtBQUkyRixJQUFFcEcsQ0FBQyxDQUFDYyxFQUFFO1lBQUNaLENBQUMsQ0FBQ2dHLEVBQUUsR0FBQ0U7UUFBQztJQUFDLElBQUdsRztBQUFDO0FBQUMsU0FBU3d1QyxHQUFHMXVDLENBQUM7SUFBRSxJQUFHLENBQUNBLEVBQUVlLFFBQVEsQ0FBQyxRQUFPO1FBQUMsTUFBTXdGLElBQUV1RixHQUFHOUw7UUFBR3VHLEtBQUcsUUFBTUEsRUFBRXhGLFFBQVEsQ0FBQyxVQUFTZixDQUFBQSxJQUFFdUcsQ0FBQUE7SUFBRTtJQUFDdkcsSUFBRUEsRUFBRWUsUUFBUSxDQUFDLFdBQVNmLEVBQUV3RixPQUFPLENBQUMsU0FBUSxNQUFJeEYsR0FBRUEsSUFBRUEsRUFBRWUsUUFBUSxDQUFDLFNBQU9mLEVBQUV3RixPQUFPLENBQUMsT0FBTSxNQUFJeEY7SUFBRSxNQUFNQyxJQUFFRCxFQUFFa0wsT0FBTyxDQUFDLE1BQUtoTCxJQUFFRixFQUFFa0wsT0FBTyxDQUFDLFNBQU8sQ0FBQyxJQUFFbEwsRUFBRWtMLE9BQU8sQ0FBQyxPQUFLLEtBQUssR0FBRXpLLElBQUVULEVBQUVnYSxTQUFTLENBQUMsR0FBRS9aLElBQUdhLElBQUVkLEVBQUVnYSxTQUFTLENBQUMvWixJQUFFLEdBQUVDLEdBQUdDLEtBQUssQ0FBQyxNQUFLK0YsSUFBRSxPQUFPaEcsSUFBRSxNQUFJRixFQUFFZ2EsU0FBUyxDQUFDOVosS0FBRyxJQUFHa0csSUFBRTlILCtDQUFRLENBQUM0SCxJQUFHSSxJQUFFLE9BQU9GLEVBQUU4aUMsT0FBTyxJQUFFLFdBQVM5aUMsRUFBRThpQyxPQUFPLENBQUMvb0MsS0FBSyxDQUFDLE9BQUssS0FBSztJQUFFLE9BQU07UUFBQzZFLFVBQVN2RTtRQUFFMEksT0FBTXdsQyxHQUFHN3RDLENBQUMsQ0FBQyxFQUFFO1FBQUVtRSxTQUFRNlUsU0FBU2haLENBQUMsQ0FBQyxFQUFFLEVBQUM7UUFBSXlyQyxRQUFPbm1DLEVBQUVtbUMsTUFBTTtRQUFDdUIsT0FBTVcsR0FBR3JvQztRQUFHOGlDLFNBQVE1aUM7UUFBRXNvQyxpQkFBZ0J4b0MsRUFBRXdvQyxlQUFlLEdBQUM5MEIsU0FBUzFULEVBQUV3b0MsZUFBZSxFQUFDLE1BQUksS0FBSztJQUFDO0FBQUM7QUFBQyxTQUFTRCxHQUFHM3VDLENBQUM7SUFBRSxPQUFPQSxFQUFFOEksVUFBVSxDQUFDLFFBQU05SSxFQUFFZ2EsU0FBUyxDQUFDLEtBQUdoYTtBQUFDO0FBQUMsU0FBUzZ1QyxHQUFHN3VDLENBQUMsRUFBQ0MsSUFBRSxHQUFHO0lBQUUsTUFBTUMsSUFBRSxTQUFRTyxJQUFFLENBQUM7SUFBRSxPQUFPYyxPQUFPQyxJQUFJLENBQUN4QixHQUFHYSxPQUFPLENBQUNDLENBQUFBO1FBQUksTUFBTW9GLElBQUVoRyxJQUFFRCxJQUFFYTtRQUFFZCxDQUFDLENBQUNjLEVBQUUsSUFBR0wsQ0FBQUEsQ0FBQyxDQUFDeUYsRUFBRSxHQUFDbEcsQ0FBQyxDQUFDYyxFQUFFO0lBQUMsSUFBR0w7QUFBQztBQUFDLFNBQVNxdUMsR0FBRzl1QyxDQUFDO0lBQUUsT0FBTSxDQUFDLEVBQUVBLEVBQUVnRixRQUFRLENBQUMsQ0FBQyxFQUFFaEYsRUFBRW1KLEtBQUssQ0FBQyxDQUFDLEVBQUVuSixFQUFFaUYsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFDM0csbURBQVksQ0FBQ2l3QyxHQUFHQyxHQUFHRCxHQUFHO1FBQUNoQyxRQUFPdnNDLEVBQUV1c0MsTUFBTTtJQUFBLEdBQUVzQyxHQUFHN3VDLEVBQUU4dEMsS0FBSyxJQUFHO1FBQUNjLGlCQUFnQjV1QyxFQUFFNHVDLGVBQWU7SUFBQSxJQUFHNXVDLEVBQUVrcEMsT0FBTyxHQUFDO1FBQUNBLFNBQVFscEMsRUFBRWtwQyxPQUFPLENBQUMzb0MsSUFBSSxDQUFDO0lBQUksSUFBRSxDQUFDO0FBQUc7QUFBQyxTQUFTd3VDLEdBQUcvdUMsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxPQUFNLENBQUMsRUFBRUYsRUFBRSxPQUFPLEVBQUVFLEVBQUUsT0FBTyxFQUFFRCxFQUFFLENBQUM7QUFBQTtBQUFDLElBQUkrdUMsS0FBR3p0QyxPQUFPUyxjQUFjLEVBQUNpdEMsS0FBRzF0QyxPQUFPeWxDLGdCQUFnQixFQUFDa0ksS0FBRzN0QyxPQUFPMmxDLHlCQUF5QixFQUFDaUksS0FBRzV0QyxPQUFPVyxxQkFBcUIsRUFBQ2t0QyxLQUFHN3RDLE9BQU9hLFNBQVMsQ0FBQ0MsY0FBYyxFQUFDd2hDLEtBQUd0aUMsT0FBT2EsU0FBUyxDQUFDRyxvQkFBb0IsRUFBQzhzQyxLQUFHLENBQUNydkMsR0FBRUMsR0FBRUMsSUFBSUQsS0FBS0QsSUFBRWd2QyxHQUFHaHZDLEdBQUVDLEdBQUU7UUFBQ3dDLFlBQVcsQ0FBQztRQUFFQyxjQUFhLENBQUM7UUFBRUMsVUFBUyxDQUFDO1FBQUVDLE9BQU0xQztJQUFDLEtBQUdGLENBQUMsQ0FBQ0MsRUFBRSxHQUFDQyxHQUFFb3ZDLEtBQUcsQ0FBQ3R2QyxHQUFFQztJQUFLLElBQUksSUFBSUMsS0FBS0QsS0FBSUEsQ0FBQUEsSUFBRSxDQUFDLEdBQUdtdkMsR0FBR3RzQyxJQUFJLENBQUM3QyxHQUFFQyxNQUFJbXZDLEdBQUdydkMsR0FBRUUsR0FBRUQsQ0FBQyxDQUFDQyxFQUFFO0lBQUUsSUFBR2l2QyxJQUFHLEtBQUksSUFBSWp2QyxLQUFLaXZDLEdBQUdsdkMsR0FBRzRqQyxHQUFHL2dDLElBQUksQ0FBQzdDLEdBQUVDLE1BQUltdkMsR0FBR3J2QyxHQUFFRSxHQUFFRCxDQUFDLENBQUNDLEVBQUU7SUFBRSxPQUFPRjtBQUFDLEdBQUV1dkMsS0FBRyxDQUFDdnZDLEdBQUVDLElBQUlndkMsR0FBR2p2QyxHQUFFa3ZDLEdBQUdqdkM7QUFBSSxTQUFTdXZDLEdBQUd4dkMsQ0FBQztJQUFFLE1BQU1DLElBQUUsRUFBRTtJQUFDLE9BQU9ELEVBQUVhLE9BQU8sQ0FBQ1gsQ0FBQUE7UUFBSSxNQUFLLENBQUNPLEdBQUVLLEVBQUUsR0FBQ1osRUFBRUMsS0FBSyxDQUFDO1FBQUtGLEVBQUVlLElBQUksQ0FBQyxDQUFDLEVBQUVQLEVBQUUsQ0FBQyxFQUFFSyxFQUFFLENBQUM7SUFBQyxJQUFHYjtBQUFDO0FBQUMsU0FBU3d2QyxHQUFHenZDLENBQUM7SUFBRSxNQUFNQyxJQUFFLEVBQUU7SUFBQyxPQUFPc0IsT0FBT29wQyxNQUFNLENBQUMzcUMsR0FBR2EsT0FBTyxDQUFDWCxDQUFBQTtRQUFJRCxFQUFFZSxJQUFJLElBQUl3dUMsR0FBR3R2QyxFQUFFd0IsUUFBUTtJQUFFLElBQUd6QjtBQUFDO0FBQUMsU0FBU3l2QyxHQUFHMXZDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE1BQU1DLElBQUUsRUFBRTtJQUFDLE9BQU9xQixPQUFPb3BDLE1BQU0sQ0FBQzNxQyxHQUFHYSxPQUFPLENBQUNKLENBQUFBO1FBQUkrdUMsR0FBRy91QyxFQUFFaUIsUUFBUSxFQUFFWCxRQUFRLENBQUNkLE1BQUlDLEVBQUVjLElBQUksSUFBSVAsRUFBRXlvQyxPQUFPO0lBQUMsSUFBR2hwQztBQUFDO0FBQUMsU0FBU3l2QyxHQUFHM3ZDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE1BQU1DLElBQUUsRUFBRTtJQUFDLE9BQU9xQixPQUFPb3BDLE1BQU0sQ0FBQzNxQyxHQUFHYSxPQUFPLENBQUNKLENBQUFBO1FBQUkrdUMsR0FBRy91QyxFQUFFaUIsUUFBUSxFQUFFWCxRQUFRLENBQUNkLE1BQUlDLEVBQUVjLElBQUksSUFBSVAsRUFBRW12QyxNQUFNO0lBQUMsSUFBRzF2QztBQUFDO0FBQUMsU0FBUzJ2QyxHQUFHN3ZDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE1BQU1DLElBQUU0dkMsR0FBRzl2QyxHQUFFQztJQUFHLElBQUdDLEdBQUUsTUFBTSxJQUFJOEcsTUFBTTlHLEVBQUUyVixPQUFPO0lBQUUsTUFBTXBWLElBQUUsQ0FBQztJQUFFLEtBQUksTUFBSyxDQUFDSyxHQUFFb0YsRUFBRSxJQUFHM0UsT0FBT29HLE9BQU8sQ0FBQzNILEdBQUdTLENBQUMsQ0FBQ0ssRUFBRSxHQUFDO1FBQUNvb0MsU0FBUWhqQyxFQUFFZ2pDLE9BQU87UUFBQzBHLFFBQU8xcEMsRUFBRTBwQyxNQUFNO1FBQUM5dEMsUUFBT29FLEVBQUV4RSxRQUFRLENBQUMwRyxHQUFHLENBQUNoQyxDQUFBQSxJQUFHLENBQUMsRUFBRUEsRUFBRWpHLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRWlHLEVBQUVqRyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQUM7SUFBRSxPQUFPTTtBQUFDO0FBQUMsU0FBU3N2QyxHQUFHL3ZDLENBQUM7SUFBRSxNQUFLLEVBQUNnd0MsVUFBUyxFQUFDQyxvQkFBbUJod0MsQ0FBQyxFQUFDaXdDLG9CQUFtQmh3QyxJQUFFLENBQUMsQ0FBQyxFQUFDLEVBQUNpd0MscUJBQW9CMXZDLENBQUMsRUFBQyxHQUFDVCxHQUFFYyxJQUFFc3ZDLEdBQUdud0MsSUFBR2lHLElBQUVrcUMsR0FBR2x3QyxJQUFHa0csSUFBRSxDQUFDO0lBQUU3RSxPQUFPQyxJQUFJLENBQUNmLEdBQUdJLE9BQU8sQ0FBQzJGLENBQUFBO1FBQUksTUFBTUMsSUFBRWhHLENBQUMsQ0FBQytGLEVBQUUsQ0FBQzFFLE1BQU0sRUFBQzhFLElBQUVuRyxDQUFDLENBQUMrRixFQUFFLENBQUMwaUMsT0FBTyxFQUFDbjhCLElBQUV0TSxDQUFDLENBQUMrRixFQUFFLENBQUNvcEMsTUFBTSxFQUFDNWlDLElBQUV2TSxDQUFDLENBQUMrRixFQUFFLENBQUM5RSxRQUFRO1FBQUMrRSxFQUFFNUYsT0FBTyxDQUFDb00sQ0FBQUE7WUFBSSxJQUFHLENBQUNELEVBQUVxakMsSUFBSSxDQUFDbmpDLENBQUFBLElBQUdBLEVBQUVuTSxRQUFRLENBQUNrTSxLQUFJLE1BQU0sSUFBSWpHLE1BQU0sQ0FBQywrQkFBK0IsRUFBRWlHLEVBQUUsY0FBYyxFQUFFekcsRUFBRSxDQUFDO1FBQUMsSUFBR0osQ0FBQyxDQUFDSSxFQUFFLEdBQUM7WUFBQzFFLFFBQU8yRTtZQUFFeWlDLFNBQVF0aUM7WUFBRWdwQyxRQUFPN2lDO1lBQUVyTCxVQUFTc0w7UUFBQztJQUFDO0lBQUcsTUFBTTFHLElBQUVncUMsR0FBR3J3QyxHQUFFbUcsR0FBRTtJQUFhLElBQUdFLEdBQUUsTUFBTSxJQUFJVSxNQUFNVixFQUFFdVAsT0FBTztJQUFFLE1BQU10UCxJQUFFLENBQUM7SUFBRSxPQUFNLENBQUNoRixPQUFPQyxJQUFJLENBQUN2QixHQUFHd0IsTUFBTSxJQUFFLENBQUNGLE9BQU9DLElBQUksQ0FBQ3RCLEdBQUd1QixNQUFNLEdBQUMyRSxJQUFHN0UsQ0FBQUEsT0FBT0MsSUFBSSxDQUFDVixHQUFHRCxPQUFPLENBQUMyRixDQUFBQTtRQUFJLE1BQU1DLElBQUVoRyxDQUFDLENBQUMrRixFQUFFLENBQUMxRSxNQUFNLENBQUN1RixNQUFNLENBQUM0RixDQUFBQTtZQUFJLElBQUlDLEdBQUVDO1lBQUUsT0FBTSxDQUFDQSxJQUFFLENBQUNELElBQUVwTSxDQUFDLENBQUMwRixFQUFFLEtBQUcsT0FBSyxLQUFLLElBQUUwRyxFQUFFcEwsTUFBTSxLQUFHLE9BQUssS0FBSyxJQUFFcUwsRUFBRXBNLFFBQVEsQ0FBQ2tNO1FBQUUsSUFBR3JHLElBQUVuRyxDQUFDLENBQUMrRixFQUFFLENBQUMwaUMsT0FBTyxDQUFDN2hDLE1BQU0sQ0FBQzRGLENBQUFBO1lBQUksSUFBSUMsR0FBRUM7WUFBRSxPQUFNLENBQUNBLElBQUUsQ0FBQ0QsSUFBRXBNLENBQUMsQ0FBQzBGLEVBQUUsS0FBRyxPQUFLLEtBQUssSUFBRTBHLEVBQUVnOEIsT0FBTyxLQUFHLE9BQUssS0FBSyxJQUFFLzdCLEVBQUVwTSxRQUFRLENBQUNrTTtRQUFFLElBQUdGLElBQUV0TSxDQUFDLENBQUMrRixFQUFFLENBQUNvcEMsTUFBTSxDQUFDdm9DLE1BQU0sQ0FBQzRGLENBQUFBO1lBQUksSUFBSUMsR0FBRUM7WUFBRSxPQUFNLENBQUNBLElBQUUsQ0FBQ0QsSUFBRXBNLENBQUMsQ0FBQzBGLEVBQUUsS0FBRyxPQUFLLEtBQUssSUFBRTBHLEVBQUUwaUMsTUFBTSxLQUFHLE9BQUssS0FBSyxJQUFFemlDLEVBQUVwTSxRQUFRLENBQUNrTTtRQUFFLElBQUdELElBQUV2RyxFQUFFMkIsR0FBRyxDQUFDNkUsQ0FBQUEsSUFBR3hNLENBQUMsQ0FBQytGLEVBQUUsQ0FBQzlFLFFBQVEsQ0FBQzJGLE1BQU0sQ0FBQzZGLENBQUFBLElBQUdBLEVBQUVuTSxRQUFRLENBQUMsQ0FBQyxFQUFFa00sRUFBRSxDQUFDLENBQUMsSUFBSTI5QixJQUFJO1FBQUdya0MsQ0FBQyxDQUFDQyxFQUFFLEdBQUM7WUFBQzFFLFFBQU8yRTtZQUFFeWlDLFNBQVF0aUM7WUFBRWdwQyxRQUFPN2lDO1lBQUVyTCxVQUFTc0w7UUFBQztJQUFDLElBQUd6TCxPQUFPQyxJQUFJLENBQUMwRSxHQUFHckYsT0FBTyxDQUFDMkYsQ0FBQUE7UUFBSSxJQUFJQyxHQUFFRyxHQUFFbUcsR0FBRUMsR0FBRUMsR0FBRUM7UUFBRSxJQUFHLENBQUN6TSxDQUFDLENBQUMrRixFQUFFLEVBQUM7UUFBTyxNQUFNMkcsSUFBRSxDQUFDdkcsSUFBRSxDQUFDSCxJQUFFUCxDQUFDLENBQUNNLEVBQUUsS0FBRyxPQUFLLEtBQUssSUFBRUMsRUFBRTNFLE1BQU0sS0FBRyxPQUFLLEtBQUssSUFBRThFLEVBQUVTLE1BQU0sQ0FBQ3lHLENBQUFBLElBQUdyTixDQUFDLENBQUMrRixFQUFFLENBQUMxRSxNQUFNLENBQUNmLFFBQVEsQ0FBQytNLEtBQUlWLElBQUUzTSxDQUFDLENBQUMrRixFQUFFLENBQUMwaUMsT0FBTyxDQUFDN2hDLE1BQU0sQ0FBQ3lHLENBQUFBO1lBQUksSUFBSU0sR0FBRUU7WUFBRSxPQUFNLENBQUNBLElBQUUsQ0FBQ0YsSUFBRWxJLENBQUMsQ0FBQ00sRUFBRSxLQUFHLE9BQUssS0FBSyxJQUFFNEgsRUFBRTg2QixPQUFPLEtBQUcsT0FBSyxLQUFLLElBQUU1NkIsRUFBRXZOLFFBQVEsQ0FBQytNO1FBQUUsSUFBR1QsSUFBRTVNLENBQUMsQ0FBQytGLEVBQUUsQ0FBQ29wQyxNQUFNLENBQUN2b0MsTUFBTSxDQUFDeUcsQ0FBQUE7WUFBSSxJQUFJTSxHQUFFRTtZQUFFLE9BQU0sQ0FBQ0EsSUFBRSxDQUFDRixJQUFFbEksQ0FBQyxDQUFDTSxFQUFFLEtBQUcsT0FBSyxLQUFLLElBQUU0SCxFQUFFd2hDLE1BQU0sS0FBRyxPQUFLLEtBQUssSUFBRXRoQyxFQUFFdk4sUUFBUSxDQUFDK007UUFBRSxJQUFHUixLQUFHSCxHQUFHL0UsSUFBSTBGLENBQUFBLElBQUdyTixDQUFDLENBQUMrRixFQUFFLENBQUM5RSxRQUFRLENBQUMyRixNQUFNLENBQUMrRyxDQUFBQSxJQUFHQSxFQUFFck4sUUFBUSxDQUFDLENBQUMsRUFBRStNLEVBQUUsQ0FBQyxDQUFDLElBQUk4OEI7UUFBT3JrQyxDQUFDLENBQUNDLEVBQUUsR0FBQztZQUFDMUUsUUFBTzZILEdBQUcsQ0FBQ29ELElBQUV4RyxDQUFDLENBQUNDLEVBQUUsS0FBRyxPQUFLLEtBQUssSUFBRXVHLEVBQUVqTCxNQUFNLEVBQUNxTDtZQUFHKzdCLFNBQVF2L0IsR0FBRyxDQUFDcUQsSUFBRXpHLENBQUMsQ0FBQ0MsRUFBRSxLQUFHLE9BQUssS0FBSyxJQUFFd0csRUFBRWs4QixPQUFPLEVBQUM5N0I7WUFBR3dpQyxRQUFPam1DLEdBQUcsQ0FBQ3NELElBQUUxRyxDQUFDLENBQUNDLEVBQUUsS0FBRyxPQUFLLEtBQUssSUFBRXlHLEVBQUUyaUMsTUFBTSxFQUFDdmlDO1lBQUczTCxVQUFTaUksR0FBRyxDQUFDdUQsSUFBRTNHLENBQUMsQ0FBQ0MsRUFBRSxLQUFHLE9BQUssS0FBSyxJQUFFMEcsRUFBRXhMLFFBQVEsRUFBQzRMO1FBQUc7SUFBQyxJQUFHL0csQ0FBQUE7QUFBRTtBQUFDLFNBQVNncUMsR0FBR3Z3QyxDQUFDO0lBQUUsT0FBT0EsRUFBRWUsUUFBUSxDQUFDO0FBQUk7QUFBQyxTQUFTeXZDLEdBQUd4d0MsQ0FBQztJQUFFLE9BQU91d0MsR0FBR3Z3QyxLQUFHQSxFQUFFRyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBQ0g7QUFBQztBQUFDLFNBQVNvd0MsR0FBR3B3QyxDQUFDO0lBQUUsSUFBSUMsR0FBRUMsR0FBRU87SUFBRSxNQUFNSyxJQUFFLENBQUM7SUFBRSxJQUFHLENBQUMydkMsR0FBR3p3QyxJQUFHLE9BQU9jO0lBQUUsS0FBSSxNQUFLLENBQUNvRixHQUFFRSxFQUFFLElBQUc3RSxPQUFPb0csT0FBTyxDQUFDM0gsR0FBRztRQUFDLE1BQU1zRyxJQUFFaXFDLEdBQUdycUMsS0FBRztZQUFDQTtTQUFFLEdBQUNFLEVBQUV0RSxNQUFNLEVBQUN5RSxJQUFFSCxFQUFFOGlDLE9BQU8sSUFBRSxFQUFFLEVBQUMxaUMsSUFBRUosRUFBRXdwQyxNQUFNLElBQUUsRUFBRSxFQUFDbnBDLElBQUUrcEMsR0FBR3RxQztRQUFHcEYsQ0FBQyxDQUFDMkYsRUFBRSxHQUFDOG9DLEdBQUdELEdBQUcsQ0FBQyxHQUFFeHVDLENBQUMsQ0FBQzJGLEVBQUUsR0FBRTtZQUFDM0UsUUFBTzZILEdBQUdyRCxHQUFFLENBQUNyRyxJQUFFYSxDQUFDLENBQUMyRixFQUFFLEtBQUcsT0FBSyxLQUFLLElBQUV4RyxFQUFFNkIsTUFBTTtZQUFFb25DLFNBQVF2L0IsR0FBR3BELEdBQUUsQ0FBQ3JHLElBQUVZLENBQUMsQ0FBQzJGLEVBQUUsS0FBRyxPQUFLLEtBQUssSUFBRXZHLEVBQUVncEMsT0FBTztZQUFFMEcsUUFBT2ptQyxHQUFHbkQsR0FBRSxDQUFDL0YsSUFBRUssQ0FBQyxDQUFDMkYsRUFBRSxLQUFHLE9BQUssS0FBSyxJQUFFaEcsRUFBRW12QyxNQUFNO1FBQUM7SUFBRTtJQUFDLE9BQU85dUM7QUFBQztBQUFDLFNBQVM0dkMsR0FBRzF3QyxDQUFDO0lBQUUsTUFBTUMsSUFBRSxDQUFDO0lBQUUsT0FBT0QsR0FBR2EsUUFBUVgsQ0FBQUE7UUFBSSxNQUFLLENBQUNPLEdBQUVLLEVBQUUsR0FBQ1osRUFBRUMsS0FBSyxDQUFDO1FBQUtGLENBQUMsQ0FBQ1EsRUFBRSxJQUFHUixDQUFBQSxDQUFDLENBQUNRLEVBQUUsR0FBQztZQUFDaUIsVUFBUyxFQUFFO1lBQUNJLFFBQU8sRUFBRTtZQUFDOHRDLFFBQU8sRUFBRTtRQUFBLElBQUczdkMsQ0FBQyxDQUFDUSxFQUFFLENBQUNpQixRQUFRLENBQUNWLElBQUksQ0FBQ2QsSUFBR0QsQ0FBQyxDQUFDUSxFQUFFLENBQUNxQixNQUFNLENBQUNkLElBQUksQ0FBQyxDQUFDLEVBQUVQLEVBQUUsQ0FBQyxFQUFFSyxFQUFFLENBQUM7SUFBQyxJQUFHYjtBQUFDO0FBQUMsU0FBUzB3QyxHQUFHM3dDLENBQUMsRUFBQ0MsQ0FBQztJQUFFQSxJQUFFQSxFQUFFbUksR0FBRyxDQUFDM0gsQ0FBQUEsSUFBR0EsRUFBRStFLE9BQU8sQ0FBQyxZQUFXO0lBQUssTUFBTXRGLElBQUV3d0MsR0FBR3p3QztJQUFHLEtBQUksTUFBSyxDQUFDUSxHQUFFSyxFQUFFLElBQUdTLE9BQU9vRyxPQUFPLENBQUN6SCxHQUFHWSxFQUFFb29DLE9BQU8sR0FBQ3BvQyxFQUFFb29DLE9BQU8sR0FBQ3YvQixHQUFHN0ksRUFBRW9vQyxPQUFPLEVBQUNscEMsS0FBR2MsRUFBRW9vQyxPQUFPLEdBQUNscEMsR0FBRWMsRUFBRTh1QyxNQUFNLEdBQUM7UUFBQztRQUFlO0tBQWtCO0lBQUMsT0FBTzF2QztBQUFDO0FBQUMsTUFBTTB3QyxLQUFHO0lBQUNDLGdCQUFlO1FBQUNoN0IsU0FBUTtRQUFrQnFDLE1BQUs7SUFBSTtJQUFFNDRCLGVBQWM7UUFBQ2o3QixTQUFRO1FBQWlCcUMsTUFBSztJQUFJO0lBQUU2NEIsd0JBQXVCO1FBQUNsN0IsU0FBUTtRQUEwQnFDLE1BQUs7SUFBSTtJQUFFODRCLHdCQUF1QjtRQUFDbjdCLFNBQVE7UUFBMEJxQyxNQUFLO0lBQUk7SUFBRSs0QixnQ0FBK0I7UUFBQ3A3QixTQUFRO1FBQWtDcUMsTUFBSztJQUFJO0lBQUVnNUIscUJBQW9CO1FBQUNyN0IsU0FBUTtRQUF1QnFDLE1BQUs7SUFBSTtJQUFFaTVCLG9CQUFtQjtRQUFDdDdCLFNBQVE7UUFBc0JxQyxNQUFLO0lBQUk7SUFBRWs1Qiw2QkFBNEI7UUFBQ3Y3QixTQUFRO1FBQStCcUMsTUFBSztJQUFJO0lBQUVtNUIsNkJBQTRCO1FBQUN4N0IsU0FBUTtRQUErQnFDLE1BQUs7SUFBSTtJQUFFbzVCLGVBQWM7UUFBQ3o3QixTQUFRO1FBQWlCcUMsTUFBSztJQUFHO0lBQUVxNUIsc0JBQXFCO1FBQUMxN0IsU0FBUTtRQUF3QnFDLE1BQUs7SUFBSTtJQUFFczVCLHVCQUFzQjtRQUFDMzdCLFNBQVE7UUFBeUJxQyxNQUFLO0lBQUk7SUFBRXU1QixzQkFBcUI7UUFBQzU3QixTQUFRO1FBQXdCcUMsTUFBSztJQUFJO0lBQUV3NUIsb0JBQW1CO1FBQUM3N0IsU0FBUTtRQUFzQnFDLE1BQUs7SUFBSTtJQUFFeTVCLHFCQUFvQjtRQUFDOTdCLFNBQVE7UUFBdUJxQyxNQUFLO0lBQUk7SUFBRTA1QixvQkFBbUI7UUFBQy83QixTQUFRO1FBQXNCcUMsTUFBSztJQUFJO0lBQUUyNUIsc0JBQXFCO1FBQUNoOEIsU0FBUTtRQUF3QnFDLE1BQUs7SUFBSTtJQUFFNDVCLDJCQUEwQjtRQUFDajhCLFNBQVE7UUFBNkJxQyxNQUFLO0lBQUk7SUFBRTY1QixtQkFBa0I7UUFBQ2w4QixTQUFRO1FBQXFCcUMsTUFBSztJQUFHO0lBQUU4NUIsMkJBQTBCO1FBQUNuOEIsU0FBUTtRQUE2QnFDLE1BQUs7SUFBRztJQUFFKzVCLHVCQUFzQjtRQUFDcDhCLFNBQVE7UUFBMEJxQyxNQUFLO0lBQUs7QUFBQyxHQUFFZzZCLEtBQUc7SUFBQ0MsaUJBQWdCO1FBQUN0OEIsU0FBUTtRQUFtQnFDLE1BQUs7SUFBQztJQUFFazZCLGlCQUFnQjtRQUFDdjhCLFNBQVE7UUFBbUJxQyxNQUFLO0lBQUM7SUFBRW02Qix1QkFBc0I7UUFBQ3g4QixTQUFRO1FBQXlCcUMsTUFBSztJQUFDO0lBQUVvNkIsY0FBYTtRQUFDejhCLFNBQVE7UUFBZ0JxQyxNQUFLO0lBQUM7SUFBRXE2QixvQkFBbUI7UUFBQzE4QixTQUFRO1FBQXNCcUMsTUFBSztJQUFDO0lBQUVzNkIsU0FBUTtRQUFDMzhCLFNBQVE7UUFBV3FDLE1BQUs7SUFBQztJQUFFdTZCLGNBQWE7UUFBQzU4QixTQUFRO1FBQWdCcUMsTUFBSztJQUFDO0lBQUV3NkIsa0JBQWlCO1FBQUM3OEIsU0FBUTtRQUFvQnFDLE1BQUs7SUFBQztJQUFFeTZCLDJCQUEwQjtRQUFDOThCLFNBQVE7UUFBNkJxQyxNQUFLO0lBQUM7QUFBQztBQUFFLFNBQVMwNkIsR0FBRzV5QyxDQUFDLEVBQUNDLENBQUM7SUFBRSxNQUFLLEVBQUM0VixTQUFRM1YsQ0FBQyxFQUFDZ1ksTUFBS3pYLENBQUMsRUFBQyxHQUFDeXhDLEVBQUUsQ0FBQ2x5QyxFQUFFO0lBQUMsT0FBTTtRQUFDNlYsU0FBUTVWLElBQUUsQ0FBQyxFQUFFQyxFQUFFLENBQUMsRUFBRUQsRUFBRSxDQUFDLEdBQUNDO1FBQUVnWSxNQUFLelg7SUFBQztBQUFDO0FBQUMsU0FBU295QyxHQUFHN3lDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE1BQUssRUFBQzRWLFNBQVEzVixDQUFDLEVBQUNnWSxNQUFLelgsQ0FBQyxFQUFDLEdBQUNtd0MsRUFBRSxDQUFDNXdDLEVBQUU7SUFBQyxPQUFNO1FBQUM2VixTQUFRNVYsSUFBRSxDQUFDLEVBQUVDLEVBQUUsQ0FBQyxFQUFFRCxFQUFFLENBQUMsR0FBQ0M7UUFBRWdZLE1BQUt6WDtJQUFDO0FBQUM7QUFBQyxTQUFTcXlDLEdBQUc5eUMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBT3NOLE1BQU1DLE9BQU8sQ0FBQ3hOLEtBQUcsT0FBT0MsSUFBRSxPQUFLRCxFQUFFeUIsTUFBTSxHQUFDekIsRUFBRSt5QyxLQUFLLENBQUM5eUMsS0FBRyxDQUFDLElBQUUsQ0FBQztBQUFDO0FBQUMsU0FBU3d3QyxHQUFHendDLENBQUM7SUFBRSxPQUFPdUIsT0FBT3l4QyxjQUFjLENBQUNoekMsT0FBS3VCLE9BQU9hLFNBQVMsSUFBRWIsT0FBT0MsSUFBSSxDQUFDeEIsR0FBR3lCLE1BQU07QUFBQTtBQUFDLFNBQVN3eEMsR0FBR2p6QyxDQUFDO0lBQUUsT0FBTyxPQUFPQSxJQUFFO0FBQUc7QUFBQyxTQUFTa3pDLEdBQUdsekMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBT0EsS0FBR2d6QyxHQUFHanpDLEtBQUcsQ0FBQyxJQUFFLE9BQU9BLEtBQUcsWUFBVSxDQUFDLENBQUNBLEVBQUVpSSxJQUFJLEdBQUd4RyxNQUFNO0FBQUE7QUFBQyxTQUFTMHhDLEdBQUduekMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBT0EsS0FBR2d6QyxHQUFHanpDLEtBQUcsQ0FBQyxJQUFFLE9BQU9BLEtBQUcsWUFBVSxDQUFDb3pDLE1BQU1wekM7QUFBRTtBQUFDLFNBQVNxekMsR0FBR3J6QyxDQUFDLEVBQUNDLENBQUM7SUFBRSxNQUFLLEVBQUNnd0Msb0JBQW1CL3ZDLENBQUMsRUFBQyxHQUFDRCxHQUFFUSxJQUFFYyxPQUFPQyxJQUFJLENBQUN4QixFQUFFc3pDLFVBQVUsR0FBRXh5QyxJQUFFUyxPQUFPQyxJQUFJLENBQUN0QjtJQUFHLElBQUlnRyxJQUFFLENBQUM7SUFBRSxPQUFPa0IsR0FBR3RHLEdBQUVMLEtBQUlBLENBQUFBLEVBQUVJLE9BQU8sQ0FBQ3VGLENBQUFBO1FBQUksTUFBSyxFQUFDMUUsVUFBUzRFLENBQUMsRUFBQzRpQyxTQUFRM2lDLENBQUMsRUFBQ3FwQyxRQUFPcHBDLENBQUMsRUFBQyxHQUFDeEcsRUFBRXN6QyxVQUFVLENBQUNsdEMsRUFBRSxFQUFDSyxJQUFFK29DLEdBQUdscEMsSUFBR00sSUFBRTFHLENBQUMsQ0FBQ2tHLEVBQUU7UUFBRSxFQUFDZ0IsR0FBR3ZGLEdBQUd1RSxHQUFFUSxJQUFHSCxNQUFJLENBQUNXLEdBQUdSLEVBQUVzaUMsT0FBTyxFQUFDM2lDLE1BQUksQ0FBQ2EsR0FBR1IsRUFBRWdwQyxNQUFNLEVBQUNwcEMsRUFBQyxLQUFLTixDQUFBQSxJQUFFLENBQUM7SUFBRSxJQUFHQSxDQUFBQSxJQUFHLENBQUM7QUFBQztBQUFDLFNBQVNxdEMsR0FBR3Z6QyxDQUFDO0lBQUUsT0FBT2t6QyxHQUFHbHpDLEdBQUUsQ0FBQyxNQUFJQSxFQUFFZSxRQUFRLENBQUMsT0FBS2YsRUFBRUcsS0FBSyxDQUFDLEtBQUtzQixNQUFNLEtBQUcsSUFBRSxDQUFDO0FBQUM7QUFBQyxTQUFTK3hDLEdBQUd4ekMsQ0FBQztJQUFFLElBQUdrekMsR0FBR2x6QyxHQUFFLENBQUMsTUFBSUEsRUFBRWUsUUFBUSxDQUFDLE1BQUs7UUFBQyxNQUFNZCxJQUFFRCxFQUFFRyxLQUFLLENBQUM7UUFBSyxJQUFHRixFQUFFd0IsTUFBTSxLQUFHLEdBQUU7WUFBQyxNQUFNdkIsSUFBRUQsQ0FBQyxDQUFDLEVBQUUsR0FBQyxNQUFJQSxDQUFDLENBQUMsRUFBRTtZQUFDLE9BQU0sQ0FBQyxDQUFDQSxDQUFDLENBQUMsRUFBRSxJQUFFc3pDLEdBQUdyekM7UUFBRTtJQUFDO0lBQUMsT0FBTSxDQUFDO0FBQUM7QUFBQyxTQUFTdXpDLEdBQUd6ekMsQ0FBQztJQUFFLFNBQVNDLEVBQUVDLENBQUM7UUFBRSxJQUFHO1lBQUMsT0FBTyxPQUFPLElBQUl3ekMsSUFBSXh6QyxLQUFHO1FBQUcsRUFBQyxPQUFLO1lBQUMsT0FBTSxDQUFDO1FBQUM7SUFBQztJQUFDLElBQUc7UUFBQyxJQUFHZ3pDLEdBQUdsekMsR0FBRSxDQUFDLElBQUc7WUFBQyxJQUFHQyxFQUFFRCxJQUFHLE9BQU0sQ0FBQztZQUFFLE1BQU1FLElBQUU0TCxHQUFHOUw7WUFBRyxPQUFPQyxFQUFFQztRQUFFO0lBQUMsRUFBQyxPQUFLLENBQUM7SUFBQyxPQUFNLENBQUM7QUFBQztBQUFDLFNBQVN5ekMsR0FBRzN6QyxDQUFDO0lBQUUsSUFBSUM7SUFBRSxPQUFNLENBQUNBLElBQUVELEdBQUc0ekMsUUFBTyxLQUFJLE9BQUssS0FBSyxJQUFFM3pDLEVBQUVrbEMsU0FBUztBQUFBO0FBQUMsU0FBUzBPLEdBQUc3ekMsQ0FBQztJQUFFLE9BQU9BLEdBQUdtSjtBQUFLO0FBQUMsU0FBUzJxQyxHQUFHOXpDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlDLElBQUU7SUFBSyxPQUFPZ3pDLEdBQUdsekMsR0FBR21sQyxXQUFVLENBQUMsTUFBS2psQyxDQUFBQSxJQUFFMHlDLEdBQUcsc0JBQXFCLENBQUMsRUFBRTN5QyxFQUFFLHlDQUF5QyxDQUFDLElBQUdDO0FBQUM7QUFBQyxTQUFTNnpDLEdBQUcvekMsQ0FBQztJQUFFLElBQUlDLElBQUUsQ0FBQztJQUFFLE9BQU82eUMsR0FBRzl5QyxLQUFHQSxFQUFFeUIsTUFBTSxJQUFHeEIsQ0FBQUEsSUFBRUQsRUFBRSt5QyxLQUFLLENBQUM3eUMsQ0FBQUEsSUFBR2d6QyxHQUFHaHpDLEdBQUUsQ0FBQyxHQUFFLElBQUdELElBQUUsQ0FBQyxHQUFFQTtBQUFDO0FBQUMsU0FBUyt6QyxHQUFHaDBDLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSU8sSUFBRTtJQUFLLE9BQU9xeUMsR0FBRzd5QyxNQUFJQSxFQUFFd0IsTUFBTSxHQUFDeEIsRUFBRVksT0FBTyxDQUFDQyxDQUFBQTtRQUFJTCxLQUFHOHlDLEdBQUd6eUMsTUFBS0wsQ0FBQUEsSUFBRW95QyxHQUFHLHNCQUFxQixDQUFDLEVBQUUzeUMsRUFBRSxRQUFRLEVBQUVZLEVBQUUsNkRBQTZELENBQUM7SUFBRSxLQUFHeXlDLEdBQUd2ekMsTUFBS1MsQ0FBQUEsSUFBRW95QyxHQUFHLHNCQUFxQixDQUFDLEVBQUUzeUMsRUFBRSwrS0FBK0ssQ0FBQyxJQUFHTztBQUFDO0FBQUMsU0FBU3d6QyxHQUFHajBDLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSU8sSUFBRTtJQUFLLE9BQU9jLE9BQU9vRyxPQUFPLENBQUMzSCxHQUFHYSxPQUFPLENBQUMsQ0FBQyxDQUFDQyxHQUFFb0YsRUFBRTtRQUFJLElBQUd6RixHQUFFO1FBQU8sTUFBTTJGLElBQUU0dEMsR0FBR2x6QyxHQUFFZSxHQUFHZixHQUFFb0YsSUFBRyxDQUFDLEVBQUVqRyxFQUFFLENBQUMsRUFBRUMsRUFBRSxDQUFDO1FBQUVrRyxLQUFJM0YsQ0FBQUEsSUFBRTJGLENBQUFBO0lBQUUsSUFBRzNGO0FBQUM7QUFBQyxTQUFTeXpDLEdBQUdsMEMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSUMsSUFBRTtJQUFLLE9BQU80eUMsR0FBRzl5QyxLQUFHQSxFQUFFYSxPQUFPLENBQUNKLENBQUFBO1FBQUlQLEtBQUdzekMsR0FBRy95QyxNQUFLUCxDQUFBQSxJQUFFMnlDLEdBQUcsd0JBQXVCLENBQUMsRUFBRTV5QyxFQUFFLFVBQVUsRUFBRVEsRUFBRSxxRUFBcUUsQ0FBQztJQUFFLEtBQUdQLElBQUUyeUMsR0FBRyx3QkFBdUIsQ0FBQyxFQUFFNXlDLEVBQUUseUZBQXlGLENBQUMsR0FBRUM7QUFBQztBQUFDLFNBQVNpMEMsR0FBR24wQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFJQyxJQUFFO0lBQUssT0FBT3FCLE9BQU9vcEMsTUFBTSxDQUFDM3FDLEdBQUdhLE9BQU8sQ0FBQ0osQ0FBQUE7UUFBSSxJQUFHUCxHQUFFO1FBQU8sTUFBTVksSUFBRW96QyxHQUFHenpDLEdBQUdpQixVQUFTLENBQUMsRUFBRXpCLEVBQUUsVUFBVSxDQUFDO1FBQUVhLEtBQUlaLENBQUFBLElBQUVZLENBQUFBO0lBQUUsSUFBR1o7QUFBQztBQUFDLFNBQVNrMEMsR0FBR3AwQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFJQyxJQUFFO0lBQUssT0FBTzZ6QyxHQUFHL3pDLEdBQUdrcEMsV0FBUzZLLEdBQUcvekMsR0FBRzR2QyxXQUFVMXZDLENBQUFBLElBQUUyeUMsR0FBRyxzQkFBcUIsQ0FBQyxFQUFFNXlDLEVBQUUsbUVBQW1FLENBQUMsS0FBR0MsSUFBRTJ5QyxHQUFHLHVCQUFzQixDQUFDLEVBQUU1eUMsRUFBRSxxRUFBcUUsQ0FBQyxHQUFFQztBQUFDO0FBQUMsU0FBU20wQyxHQUFHcjBDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlDLElBQUU7SUFBSyxPQUFPcUIsT0FBT29wQyxNQUFNLENBQUMzcUMsR0FBR2EsT0FBTyxDQUFDSixDQUFBQTtRQUFJLElBQUdQLEdBQUU7UUFBTyxNQUFNWSxJQUFFc3pDLEdBQUczekMsR0FBRSxDQUFDLEVBQUVSLEVBQUUsV0FBVyxDQUFDO1FBQUVhLEtBQUlaLENBQUFBLElBQUVZLENBQUFBO0lBQUUsSUFBR1o7QUFBQztBQUFDLFNBQVNvMEMsR0FBR3QwQyxDQUFDLEVBQUNDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlPLElBQUU7SUFBSyxJQUFHVCxLQUFHeXdDLEdBQUd6d0MsSUFBRztRQUFDLE1BQU1jLElBQUV1ekMsR0FBR3IwQyxHQUFFQztRQUFHYSxLQUFJTCxDQUFBQSxJQUFFSyxDQUFBQTtRQUFHLE1BQU1vRixJQUFFK3RDLEdBQUdqMEMsR0FBRUMsR0FBRUM7UUFBR2dHLEtBQUl6RixDQUFBQSxJQUFFeUYsQ0FBQUE7SUFBRSxPQUFNekYsSUFBRW15QyxHQUFHLHNCQUFxQixDQUFDLEVBQUUzeUMsRUFBRSxFQUFFLEVBQUVDLEVBQUUsOEJBQThCLENBQUM7SUFBRSxPQUFPTztBQUFDO0FBQUMsU0FBU3F2QyxHQUFHOXZDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLElBQUlDLElBQUU7SUFBSyxJQUFHRixLQUFHeXdDLEdBQUd6d0MsSUFBRztRQUFDLE1BQU1TLElBQUU0ekMsR0FBR3IwQyxHQUFFQztRQUFHUSxLQUFJUCxDQUFBQSxJQUFFTyxDQUFBQTtRQUFHLE1BQU1LLElBQUVxekMsR0FBR24wQyxHQUFFQztRQUFHYSxLQUFJWixDQUFBQSxJQUFFWSxDQUFBQTtJQUFFLE9BQU1aLElBQUUweUMsR0FBRyxzQkFBcUIsQ0FBQyxFQUFFM3lDLEVBQUUsMENBQTBDLENBQUM7SUFBRSxPQUFPQztBQUFDO0FBQUMsU0FBU3EwQyxHQUFHdjBDLENBQUM7SUFBRSxPQUFPa3pDLEdBQUdsekMsRUFBRWdGLFFBQVEsRUFBQyxDQUFDO0FBQUU7QUFBQyxTQUFTd3ZDLEdBQUd4MEMsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsSUFBSUMsSUFBRSxDQUFDO0lBQUUsT0FBT0QsS0FBRyxDQUFDRCxJQUFFRSxJQUFFLENBQUMsSUFBRUYsS0FBRzh5QyxHQUFHOXlDLE1BQUlBLEVBQUV5QixNQUFNLElBQUV6QixFQUFFYSxPQUFPLENBQUNKLENBQUFBO1FBQUlQLElBQUVxMEMsR0FBRzl6QztJQUFFLElBQUdQO0FBQUM7QUFBQyxTQUFTdTBDLEdBQUd6MEMsQ0FBQztJQUFFLE9BQU8sT0FBT0EsS0FBRztBQUFRO0FBQUMsU0FBUzAwQyxHQUFHMTBDLENBQUM7SUFBRSxPQUFPLE9BQU9BLElBQUUsT0FBSyxPQUFPQSxNQUFJO0FBQUk7QUFBQyxTQUFTMjBDLEdBQUczMEMsQ0FBQztJQUFFLE9BQU0sQ0FBRSxFQUFDQSxLQUFHLE9BQU9BLEtBQUcsWUFBVSxDQUFDQSxFQUFFa1ksSUFBSSxJQUFFLENBQUNpN0IsR0FBR256QyxFQUFFa1ksSUFBSSxFQUFDLENBQUMsTUFBSSxDQUFDbFksRUFBRTZWLE9BQU8sSUFBRSxDQUFDcTlCLEdBQUdsekMsRUFBRTZWLE9BQU8sRUFBQyxDQUFDLEVBQUM7QUFBRTtBQUFDLFNBQVMrK0IsR0FBRzUwQyxDQUFDO0lBQUUsT0FBTSxDQUFFaXpDLENBQUFBLEdBQUdqekMsTUFBSSxDQUFDa3pDLEdBQUdsekMsRUFBRXNtQyxNQUFNLEVBQUMsQ0FBQyxFQUFDO0FBQUU7QUFBQyxTQUFTdU8sR0FBRzcwQyxDQUFDO0lBQUUsT0FBTSxDQUFFaXpDLENBQUFBLEdBQUdqekMsTUFBSWl6QyxHQUFHanpDLEVBQUUwaUMsTUFBTSxLQUFHdVEsR0FBR2p6QyxFQUFFMEssS0FBSyxLQUFHLENBQUN5b0MsR0FBR256QyxFQUFFa0osRUFBRSxFQUFDLENBQUMsTUFBSSxDQUFDZ3FDLEdBQUdsekMsRUFBRXltQyxPQUFPLEVBQUMsQ0FBQyxFQUFDO0FBQUU7QUFBQyxTQUFTcU8sR0FBRzkwQyxDQUFDO0lBQUUsT0FBTSxDQUFFaXpDLENBQUFBLEdBQUdqekMsTUFBSSxDQUFDa3pDLEdBQUdsekMsRUFBRTJFLElBQUksRUFBQyxDQUFDLEVBQUM7QUFBRTtBQUFDLFNBQVNvd0MsR0FBRy8wQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxPQUFNLENBQUUsRUFBQ3N6QyxHQUFHdHpDLE1BQUksQ0FBQ3d2QyxHQUFHenZDLEdBQUdlLFFBQVEsQ0FBQ2QsRUFBQztBQUFFO0FBQUMsU0FBUyswQyxHQUFHaDFDLENBQUMsRUFBQ0MsQ0FBQyxFQUFDQyxDQUFDO0lBQUUsT0FBT2d6QyxHQUFHaHpDLEdBQUUsQ0FBQyxLQUFHd3ZDLEdBQUcxdkMsR0FBRUMsR0FBR2MsUUFBUSxDQUFDYixLQUFHLENBQUM7QUFBQztBQUFDLFNBQVMrMEMsR0FBR2oxQyxDQUFDLEVBQUNDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE9BQU9nekMsR0FBR2h6QyxHQUFFLENBQUMsS0FBR3l2QyxHQUFHM3ZDLEdBQUVDLEdBQUdjLFFBQVEsQ0FBQ2IsS0FBRyxDQUFDO0FBQUM7QUFBQyxTQUFTb3dDLEdBQUd0d0MsQ0FBQyxFQUFDQyxDQUFDLEVBQUNDLENBQUM7SUFBRSxJQUFJTyxJQUFFO0lBQUssTUFBTUssSUFBRW8wQyxHQUFHbDFDLElBQUdrRyxJQUFFaXZDLEdBQUdsMUMsSUFBR21HLElBQUU3RSxPQUFPQyxJQUFJLENBQUNWLElBQUd3RixJQUFFL0UsT0FBT0MsSUFBSSxDQUFDMEUsSUFBR0ssSUFBRTZ1QyxHQUFHN3pDLE9BQU9DLElBQUksQ0FBQ3hCLEtBQUl3RyxJQUFFNHVDLEdBQUc3ekMsT0FBT0MsSUFBSSxDQUFDdkIsS0FBSXdHLElBQUVGLEVBQUVjLE1BQU0sQ0FBQ1QsQ0FBQUEsSUFBRyxDQUFDSixFQUFFekYsUUFBUSxDQUFDNkY7SUFBSSxPQUFPSCxFQUFFaEYsTUFBTSxJQUFHaEIsQ0FBQUEsSUFBRW15QyxHQUFHLDZCQUE0QixDQUFDLEVBQUUxeUMsRUFBRTtnQkFDNzlrQixFQUFFdUcsRUFBRXZILFFBQVEsR0FBRztnQkFDZixFQUFFcUMsT0FBT0MsSUFBSSxDQUFDdkIsR0FBR2YsUUFBUSxHQUFHLENBQUMsSUFBR2tJLEdBQUdoQixHQUFFRSxNQUFLN0YsQ0FBQUEsSUFBRW15QyxHQUFHLDZCQUE0QixDQUFDLEVBQUUxeUMsRUFBRTtnQkFDaEYsRUFBRWtHLEVBQUVsSCxRQUFRLEdBQUc7Z0JBQ2YsRUFBRW9ILEVBQUVwSCxRQUFRLEdBQUcsQ0FBQyxJQUFHcUMsT0FBT0MsSUFBSSxDQUFDdkIsR0FBR1ksT0FBTyxDQUFDK0YsQ0FBQUE7UUFBSSxJQUFHLENBQUNBLEVBQUU3RixRQUFRLENBQUMsUUFBTU4sR0FBRTtRQUFPLE1BQU1zTSxJQUFFeWlDLEdBQUd2dkMsQ0FBQyxDQUFDMkcsRUFBRSxDQUFDbEYsUUFBUTtRQUFFcUwsRUFBRWhNLFFBQVEsQ0FBQzZGLE1BQUtuRyxDQUFBQSxJQUFFbXlDLEdBQUcsNkJBQTRCLENBQUMsRUFBRTF5QyxFQUFFLDBEQUEwRCxFQUFFMEcsRUFBRTtrQkFDeE4sRUFBRUEsRUFBRTtrQkFDSixFQUFFbUcsRUFBRTdOLFFBQVEsR0FBRyxDQUFDO0lBQUUsSUFBR2tILEVBQUV2RixPQUFPLENBQUMrRixDQUFBQTtRQUFJbkcsS0FBSTJHLENBQUFBLEdBQUd0RyxDQUFDLENBQUM4RixFQUFFLENBQUNzaUMsT0FBTyxFQUFDaGpDLENBQUMsQ0FBQ1UsRUFBRSxDQUFDc2lDLE9BQU8sSUFBRTloQyxHQUFHdEcsQ0FBQyxDQUFDOEYsRUFBRSxDQUFDZ3BDLE1BQU0sRUFBQzFwQyxDQUFDLENBQUNVLEVBQUUsQ0FBQ2dwQyxNQUFNLEtBQUludkMsQ0FBQUEsSUFBRW15QyxHQUFHLDZCQUE0QixDQUFDLEVBQUUxeUMsRUFBRSxzREFBc0QsRUFBRTBHLEVBQUUsQ0FBQyxLQUFHbkcsSUFBRW15QyxHQUFHLDZCQUE0QixDQUFDLEVBQUUxeUMsRUFBRSx3REFBd0QsRUFBRTBHLEVBQUUsQ0FBQztJQUFFLElBQUduRztBQUFDO0FBQUMsU0FBU3kwQyxHQUFHbDFDLENBQUM7SUFBRSxNQUFNQyxJQUFFLENBQUM7SUFBRSxPQUFPc0IsT0FBT0MsSUFBSSxDQUFDeEIsR0FBR2EsT0FBTyxDQUFDWCxDQUFBQTtRQUFJLElBQUlPO1FBQUVQLEVBQUVhLFFBQVEsQ0FBQyxPQUFLZCxDQUFDLENBQUNDLEVBQUUsR0FBQ0YsQ0FBQyxDQUFDRSxFQUFFLEdBQUMsQ0FBQ08sSUFBRVQsQ0FBQyxDQUFDRSxFQUFFLENBQUM0QixNQUFNLEtBQUcsUUFBTXJCLEVBQUVJLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFBSWIsQ0FBQyxDQUFDYSxFQUFFLEdBQUM7Z0JBQUNvb0MsU0FBUWxwQyxDQUFDLENBQUNFLEVBQUUsQ0FBQ2dwQyxPQUFPO2dCQUFDMEcsUUFBTzV2QyxDQUFDLENBQUNFLEVBQUUsQ0FBQzB2QyxNQUFNO1lBQUE7UUFBQztJQUFFLElBQUczdkM7QUFBQztBQUFDLFNBQVNtMUMsR0FBR3AxQyxDQUFDO0lBQUUsT0FBTTtXQUFJLElBQUk0SixJQUFJNUosRUFBRW9JLEdBQUcsQ0FBQ25JLENBQUFBLElBQUdBLEVBQUVjLFFBQVEsQ0FBQyxPQUFLZCxFQUFFRSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBQ0Y7S0FBSTtBQUFBO0FBQUMsU0FBU2sxQyxHQUFHbjFDLENBQUM7SUFBRSxNQUFNQyxJQUFFLENBQUM7SUFBRSxPQUFPc0IsT0FBT0MsSUFBSSxDQUFDeEIsR0FBR2EsT0FBTyxDQUFDWCxDQUFBQTtRQUFJLElBQUdBLEVBQUVhLFFBQVEsQ0FBQyxNQUFLZCxDQUFDLENBQUNDLEVBQUUsR0FBQ0YsQ0FBQyxDQUFDRSxFQUFFO2FBQUs7WUFBQyxNQUFNTyxJQUFFK3VDLEdBQUd4dkMsQ0FBQyxDQUFDRSxFQUFFLENBQUN3QixRQUFRO1lBQUVqQixHQUFHSSxRQUFRQyxDQUFBQTtnQkFBSWIsQ0FBQyxDQUFDYSxFQUFFLEdBQUM7b0JBQUNZLFVBQVMxQixDQUFDLENBQUNFLEVBQUUsQ0FBQ3dCLFFBQVEsQ0FBQzJGLE1BQU0sQ0FBQ25CLENBQUFBLElBQUdBLEVBQUVuRixRQUFRLENBQUMsQ0FBQyxFQUFFRCxFQUFFLENBQUMsQ0FBQztvQkFBR29vQyxTQUFRbHBDLENBQUMsQ0FBQ0UsRUFBRSxDQUFDZ3BDLE9BQU87b0JBQUMwRyxRQUFPNXZDLENBQUMsQ0FBQ0UsRUFBRSxDQUFDMHZDLE1BQU07Z0JBQUE7WUFBQztRQUFFO0lBQUMsSUFBRzN2QztBQUFDO0FBQUMsU0FBU28xQyxHQUFHcjFDLENBQUMsRUFBQ0MsQ0FBQztJQUFFLE9BQU9rekMsR0FBR256QyxHQUFFLENBQUMsTUFBSUEsS0FBR0MsRUFBRXVILEdBQUcsSUFBRXhILEtBQUdDLEVBQUVpYyxHQUFHO0FBQUE7QUFBQyxTQUFTbzVCO0lBQUssTUFBTXQxQyxJQUFFa0U7SUFBSyxPQUFPLElBQUl3RSxRQUFRekksQ0FBQUE7UUFBSSxPQUFPRDtZQUFHLEtBQUtnRCxHQUFHRyxPQUFPO2dCQUFDbEQsRUFBRXMxQztnQkFBTTtZQUFNLEtBQUt2eUMsR0FBR0MsV0FBVztnQkFBQ2hELEVBQUV1MUM7Z0JBQU07WUFBTSxLQUFLeHlDLEdBQUdFLElBQUk7Z0JBQUNqRCxFQUFFdzFDO2dCQUFNO1lBQU07Z0JBQVF4MUMsRUFBRSxDQUFDO1FBQUU7SUFBQztBQUFFO0FBQUMsU0FBU3MxQztJQUFLLE9BQU90eEMsUUFBTUYsV0FBVzJ4QztBQUFNO0FBQUMsZUFBZUY7SUFBSyxJQUFHMXhDLFFBQU0sT0FBT00sU0FBTyxPQUFLQSxVQUFRLFFBQU1BLE9BQU91eEMsT0FBTyxFQUFDO1FBQUMsTUFBTTMxQyxJQUFFLE1BQU1vRSxDQUFBQSxVQUFRLE9BQUssS0FBSyxJQUFFQSxPQUFPdXhDLE9BQU8sQ0FBQ3RQLEtBQUssRUFBQztRQUFHLE9BQU9ybUMsR0FBRzQxQztJQUFXO0lBQUMsT0FBTSxDQUFDO0FBQUM7QUFBQyxTQUFTSDtJQUFLLE9BQU0sQ0FBQztBQUFDO0FBQUMsU0FBU0ksR0FBRzcxQyxDQUFDO0lBQUUsT0FBT2tFO1FBQU0sS0FBS2xCLEdBQUdHLE9BQU87WUFBQzJ5QyxHQUFHOTFDO1lBQUc7UUFBTSxLQUFLZ0QsR0FBR0MsV0FBVztZQUFDOHlDLEdBQUcvMUM7WUFBRztRQUFNLEtBQUtnRCxHQUFHRSxJQUFJO1lBQUM7SUFBSztBQUFDO0FBQUMsU0FBUzR5QyxHQUFHOTFDLENBQUM7SUFBRSxDQUFDOEQsUUFBTUcsUUFBT29HLENBQUFBLE9BQU8yckMsZ0JBQWdCLENBQUMsVUFBUyxJQUFJaDJDLEVBQUUsQ0FBQyxLQUFJcUssT0FBTzJyQyxnQkFBZ0IsQ0FBQyxXQUFVLElBQUloMkMsRUFBRSxDQUFDLEdBQUU7QUFBRTtBQUFDLFNBQVMrMUMsR0FBRy8xQyxDQUFDO0lBQUU4RCxRQUFNLE9BQU9NLFNBQU8sT0FBS0EsVUFBUSxRQUFNQSxPQUFPdXhDLE9BQU8sSUFBRXZ4QyxRQUFRdXhDLFFBQVFLLGlCQUFpQi8xQyxDQUFBQSxJQUFHRCxFQUFFQyxHQUFHMjFDO0FBQWE7QUFBQyxNQUFNSyxLQUFHLENBQUM7QUFBRSxNQUFNQztJQUFHLE9BQU8zcEMsSUFBSXRNLENBQUMsRUFBQztRQUFDLE9BQU9nMkMsRUFBRSxDQUFDaDJDLEVBQUU7SUFBQTtJQUFDLE9BQU9tYSxJQUFJbmEsQ0FBQyxFQUFDQyxDQUFDLEVBQUM7UUFBQysxQyxFQUFFLENBQUNoMkMsRUFBRSxHQUFDQztJQUFDO0lBQUMsT0FBT2kyQyxPQUFPbDJDLENBQUMsRUFBQztRQUFDLE9BQU9nMkMsRUFBRSxDQUFDaDJDLEVBQUU7SUFBQTtBQUFDO0FBQWt4SSxDQUMzOUwsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3V0aWxzL2Rpc3QvaW5kZXguZXMuanM/NjA4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7ZGV0ZWN0IGFzIEhvfWZyb21cImRldGVjdC1icm93c2VyXCI7aW1wb3J0e3RvTWlsaXNlY29uZHMgYXMgZGksRklWRV9NSU5VVEVTIGFzIGNuLGZyb21NaWxpc2Vjb25kcyBhcyBMb31mcm9tXCJAd2FsbGV0Y29ubmVjdC90aW1lXCI7aW1wb3J0e2dldERvY3VtZW50IGFzIHBpLGdldE5hdmlnYXRvciBhcyBsbixnZXRMb2NhdGlvbiBhcyBkbn1mcm9tXCJAd2FsbGV0Y29ubmVjdC93aW5kb3ctZ2V0dGVyc1wiO2ltcG9ydHtnZXRXaW5kb3dNZXRhZGF0YSBhcyB6b31mcm9tXCJAd2FsbGV0Y29ubmVjdC93aW5kb3ctbWV0YWRhdGFcIjtpbXBvcnQqYXMgQnIgZnJvbVwicXVlcnktc3RyaW5nXCI7aW1wb3J0e0NoYUNoYTIwUG9seTEzMDUgYXMgcG59ZnJvbVwiQHN0YWJsZWxpYi9jaGFjaGEyMHBvbHkxMzA1XCI7aW1wb3J0e0hLREYgYXMgam99ZnJvbVwiQHN0YWJsZWxpYi9oa2RmXCI7aW1wb3J0e3JhbmRvbUJ5dGVzIGFzIENyfWZyb21cIkBzdGFibGVsaWIvcmFuZG9tXCI7aW1wb3J0e1NIQTI1NiBhcyB2bixoYXNoIGFzIGdufWZyb21cIkBzdGFibGVsaWIvc2hhMjU2XCI7aW1wb3J0KmFzIG1uIGZyb21cIkBzdGFibGVsaWIveDI1NTE5XCI7aW1wb3J0e3RvU3RyaW5nIGFzIFF0LGZyb21TdHJpbmcgYXMgWHQsY29uY2F0IGFzIHZpfWZyb21cInVpbnQ4YXJyYXlzXCI7aW1wb3J0e2VjIGFzIFFvfWZyb21cImVsbGlwdGljXCI7aW1wb3J0e2RlY29kZUpXVCBhcyBKb31mcm9tXCJAd2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoXCI7aW1wb3J0e1JFTEFZX0pTT05SUEMgYXMgR299ZnJvbVwiQHdhbGxldGNvbm5lY3QvcmVsYXktYXBpXCI7Y29uc3QgUnI9XCI6XCI7ZnVuY3Rpb24gQW4oZSl7Y29uc3RbdCxyXT1lLnNwbGl0KFJyKTtyZXR1cm57bmFtZXNwYWNlOnQscmVmZXJlbmNlOnJ9fWZ1bmN0aW9uIGJuKGUpe2NvbnN0e25hbWVzcGFjZTp0LHJlZmVyZW5jZTpyfT1lO3JldHVyblt0LHJdLmpvaW4oUnIpfWZ1bmN0aW9uIGdpKGUpe2NvbnN0W3QscixpXT1lLnNwbGl0KFJyKTtyZXR1cm57bmFtZXNwYWNlOnQscmVmZXJlbmNlOnIsYWRkcmVzczppfX1mdW5jdGlvbiB5bihlKXtjb25zdHtuYW1lc3BhY2U6dCxyZWZlcmVuY2U6cixhZGRyZXNzOml9PWU7cmV0dXJuW3QscixpXS5qb2luKFJyKX1mdW5jdGlvbiBtaShlLHQpe2NvbnN0IHI9W107cmV0dXJuIGUuZm9yRWFjaChpPT57Y29uc3Qgbj10KGkpO3IuaW5jbHVkZXMobil8fHIucHVzaChuKX0pLHJ9ZnVuY3Rpb24gd24oZSl7Y29uc3R7YWRkcmVzczp0fT1naShlKTtyZXR1cm4gdH1mdW5jdGlvbiB4bihlKXtjb25zdHtuYW1lc3BhY2U6dCxyZWZlcmVuY2U6cn09Z2koZSk7cmV0dXJuIGJuKHtuYW1lc3BhY2U6dCxyZWZlcmVuY2U6cn0pfWZ1bmN0aW9uIFlvKGUsdCl7Y29uc3R7bmFtZXNwYWNlOnIscmVmZXJlbmNlOml9PUFuKHQpO3JldHVybiB5bih7bmFtZXNwYWNlOnIscmVmZXJlbmNlOmksYWRkcmVzczplfSl9ZnVuY3Rpb24gVm8oZSl7cmV0dXJuIG1pKGUsd24pfWZ1bmN0aW9uIE1uKGUpe3JldHVybiBtaShlLHhuKX1mdW5jdGlvbiBXbyhlLHQ9W10pe2NvbnN0IHI9W107cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2goaT0+e2lmKHQubGVuZ3RoJiYhdC5pbmNsdWRlcyhpKSlyZXR1cm47Y29uc3Qgbj1lW2ldO3IucHVzaCguLi5uLmFjY291bnRzKX0pLHJ9ZnVuY3Rpb24gWG8oZSx0PVtdKXtjb25zdCByPVtdO3JldHVybiBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGk9PntpZih0Lmxlbmd0aCYmIXQuaW5jbHVkZXMoaSkpcmV0dXJuO2NvbnN0IG49ZVtpXTtyLnB1c2goLi4uTW4obi5hY2NvdW50cykpfSkscn1mdW5jdGlvbiAkbyhlLHQ9W10pe2NvbnN0IHI9W107cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2goaT0+e2lmKHQubGVuZ3RoJiYhdC5pbmNsdWRlcyhpKSlyZXR1cm47Y29uc3Qgbj1lW2ldO3IucHVzaCguLi5PcihpLG4pKX0pLHJ9ZnVuY3Rpb24gT3IoZSx0KXtyZXR1cm4gZS5pbmNsdWRlcyhcIjpcIik/W2VdOnQuY2hhaW5zfHxbXX12YXIgWm89T2JqZWN0LmRlZmluZVByb3BlcnR5LEVuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsdHM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxlcz1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLFNuPShlLHQscik9PnQgaW4gZT9abyhlLHQse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnJ9KTplW3RdPXIsSW49KGUsdCk9Pntmb3IodmFyIHIgaW4gdHx8KHQ9e30pKXRzLmNhbGwodCxyKSYmU24oZSxyLHRbcl0pO2lmKEVuKWZvcih2YXIgciBvZiBFbih0KSllcy5jYWxsKHQscikmJlNuKGUscix0W3JdKTtyZXR1cm4gZX07Y29uc3QgTm49XCJSZWFjdE5hdGl2ZVwiLHF0PXtyZWFjdE5hdGl2ZTpcInJlYWN0LW5hdGl2ZVwiLG5vZGU6XCJub2RlXCIsYnJvd3NlcjpcImJyb3dzZXJcIix1bmtub3duOlwidW5rbm93blwifSxQcj1cIiBcIixycz1cIjpcIixfbj1cIi9cIixBaT0yLGlzPTFlMyxCbj1cImpzXCI7ZnVuY3Rpb24gYmkoKXtyZXR1cm4gdHlwZW9mIHByb2Nlc3M8XCJ1XCImJnR5cGVvZiBwcm9jZXNzLnZlcnNpb25zPFwidVwiJiZ0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlPFwidVwifWZ1bmN0aW9uIHJyKCl7cmV0dXJuIXBpKCkmJiEhbG4oKSYmbmF2aWdhdG9yLnByb2R1Y3Q9PT1Obn1mdW5jdGlvbiBncigpe3JldHVybiFiaSgpJiYhIWxuKCkmJiEhcGkoKX1mdW5jdGlvbiBXZSgpe3JldHVybiBycigpP3F0LnJlYWN0TmF0aXZlOmJpKCk/cXQubm9kZTpncigpP3F0LmJyb3dzZXI6cXQudW5rbm93bn1mdW5jdGlvbiBucygpe3ZhciBlO3RyeXtyZXR1cm4gcnIoKSYmdHlwZW9mIGdsb2JhbDxcInVcIiYmdHlwZW9mKGdsb2JhbD09bnVsbD92b2lkIDA6Z2xvYmFsLkFwcGxpY2F0aW9uKTxcInVcIj8oZT1nbG9iYWwuQXBwbGljYXRpb24pPT1udWxsP3ZvaWQgMDplLmFwcGxpY2F0aW9uSWQ6dm9pZCAwfWNhdGNoe3JldHVybn19ZnVuY3Rpb24gQ24oZSx0KXtsZXQgcj1Cci5wYXJzZShlKTtyZXR1cm4gcj1JbihJbih7fSxyKSx0KSxlPUJyLnN0cmluZ2lmeShyKSxlfWZ1bmN0aW9uIGZzKCl7cmV0dXJuIHpvKCl8fHtuYW1lOlwiXCIsZGVzY3JpcHRpb246XCJcIix1cmw6XCJcIixpY29uczpbXCJcIl19fWZ1bmN0aW9uIG9zKGUsdCl7dmFyIHI7Y29uc3QgaT1XZSgpLG49e3Byb3RvY29sOmUsdmVyc2lvbjp0LGVudjppfTtyZXR1cm4gaT09PVwiYnJvd3NlclwiJiYobi5ob3N0PSgocj1kbigpKT09bnVsbD92b2lkIDA6ci5ob3N0KXx8XCJ1bmtub3duXCIpLG59ZnVuY3Rpb24gUm4oKXtpZihXZSgpPT09cXQucmVhY3ROYXRpdmUmJnR5cGVvZiBnbG9iYWw8XCJ1XCImJnR5cGVvZihnbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5QbGF0Zm9ybSk8XCJ1XCIpe2NvbnN0e09TOnIsVmVyc2lvbjppfT1nbG9iYWwuUGxhdGZvcm07cmV0dXJuW3IsaV0uam9pbihcIi1cIil9Y29uc3QgZT1IbygpO2lmKGU9PT1udWxsKXJldHVyblwidW5rbm93blwiO2NvbnN0IHQ9ZS5vcz9lLm9zLnJlcGxhY2UoXCIgXCIsXCJcIikudG9Mb3dlckNhc2UoKTpcInVua25vd25cIjtyZXR1cm4gZS50eXBlPT09XCJicm93c2VyXCI/W3QsZS5uYW1lLGUudmVyc2lvbl0uam9pbihcIi1cIik6W3QsZS52ZXJzaW9uXS5qb2luKFwiLVwiKX1mdW5jdGlvbiBPbigpe3ZhciBlO2NvbnN0IHQ9V2UoKTtyZXR1cm4gdD09PXF0LmJyb3dzZXI/W3QsKChlPWRuKCkpPT1udWxsP3ZvaWQgMDplLmhvc3QpfHxcInVua25vd25cIl0uam9pbihcIjpcIik6dH1mdW5jdGlvbiBQbihlLHQscil7Y29uc3QgaT1SbigpLG49T24oKTtyZXR1cm5bW2UsdF0uam9pbihcIi1cIiksW0JuLHJdLmpvaW4oXCItXCIpLGksbl0uam9pbihcIi9cIil9ZnVuY3Rpb24gc3Moe3Byb3RvY29sOmUsdmVyc2lvbjp0LHJlbGF5VXJsOnIsc2RrVmVyc2lvbjppLGF1dGg6bixwcm9qZWN0SWQ6byx1c2VPbkNsb3NlRXZlbnQ6aCxidW5kbGVJZDpwfSl7Y29uc3QgQT1yLnNwbGl0KFwiP1wiKSx2PVBuKGUsdCxpKSx3PXthdXRoOm4sdWE6dixwcm9qZWN0SWQ6byx1c2VPbkNsb3NlRXZlbnQ6aHx8dm9pZCAwLG9yaWdpbjpwfHx2b2lkIDB9LHk9Q24oQVsxXXx8XCJcIix3KTtyZXR1cm4gQVswXStcIj9cIit5fWZ1bmN0aW9uIGFzKGUpe2xldCB0PShlLm1hdGNoKC9eW146XSsoPz06XFwvXFwvKS9naSl8fFtdKVswXTtjb25zdCByPXR5cGVvZiB0PFwidVwiP2Uuc3BsaXQoXCI6Ly9cIilbMV06ZTtyZXR1cm4gdD10PT09XCJ3c3NcIj9cImh0dHBzXCI6XCJodHRwXCIsW3Qscl0uam9pbihcIjovL1wiKX1mdW5jdGlvbiB1cyhlLHQscil7aWYoIWVbdF18fHR5cGVvZiBlW3RdIT09cil0aHJvdyBuZXcgRXJyb3IoYE1pc3Npbmcgb3IgaW52YWxpZCBcIiR7dH1cIiBwYXJhbWApfWZ1bmN0aW9uIFRuKGUsdD1BaSl7cmV0dXJuIERuKGUuc3BsaXQoX24pLHQpfWZ1bmN0aW9uIGhzKGUpe3JldHVybiBUbihlKS5qb2luKFByKX1mdW5jdGlvbiBfZShlLHQpe3JldHVybiBlLmZpbHRlcihyPT50LmluY2x1ZGVzKHIpKS5sZW5ndGg9PT1lLmxlbmd0aH1mdW5jdGlvbiBEbihlLHQ9QWkpe3JldHVybiBlLnNsaWNlKE1hdGgubWF4KGUubGVuZ3RoLXQsMCkpfWZ1bmN0aW9uIGNzKGUpe3JldHVybiBPYmplY3QuZnJvbUVudHJpZXMoZS5lbnRyaWVzKCkpfWZ1bmN0aW9uIGxzKGUpe3JldHVybiBuZXcgTWFwKE9iamVjdC5lbnRyaWVzKGUpKX1mdW5jdGlvbiBkcyhlLHQpe2NvbnN0IHI9e307cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2goaT0+e3JbaV09dChlW2ldKX0pLHJ9Y29uc3QgcHM9ZT0+ZTtmdW5jdGlvbiBGbihlKXtyZXR1cm4gZS50cmltKCkucmVwbGFjZSgvXlxcdy8sdD0+dC50b1VwcGVyQ2FzZSgpKX1mdW5jdGlvbiB2cyhlKXtyZXR1cm4gZS5zcGxpdChQcikubWFwKHQ9PkZuKHQpKS5qb2luKFByKX1mdW5jdGlvbiBncyhlPWNuLHQpe2NvbnN0IHI9ZGkoZXx8Y24pO2xldCBpLG4sbztyZXR1cm57cmVzb2x2ZTpoPT57byYmaSYmKGNsZWFyVGltZW91dChvKSxpKGgpKX0scmVqZWN0Omg9PntvJiZuJiYoY2xlYXJUaW1lb3V0KG8pLG4oaCkpfSxkb25lOigpPT5uZXcgUHJvbWlzZSgoaCxwKT0+e289c2V0VGltZW91dCgoKT0+e3AobmV3IEVycm9yKHQpKX0sciksaT1oLG49cH0pfX1mdW5jdGlvbiBtcyhlLHQscil7cmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jKGksbik9Pntjb25zdCBvPXNldFRpbWVvdXQoKCk9Pm4obmV3IEVycm9yKHIpKSx0KTt0cnl7Y29uc3QgaD1hd2FpdCBlO2koaCl9Y2F0Y2goaCl7bihoKX1jbGVhclRpbWVvdXQobyl9KX1mdW5jdGlvbiB5aShlLHQpe2lmKHR5cGVvZiB0PT1cInN0cmluZ1wiJiZ0LnN0YXJ0c1dpdGgoYCR7ZX06YCkpcmV0dXJuIHQ7aWYoZS50b0xvd2VyQ2FzZSgpPT09XCJ0b3BpY1wiKXtpZih0eXBlb2YgdCE9XCJzdHJpbmdcIil0aHJvdyBuZXcgRXJyb3IoJ1ZhbHVlIG11c3QgYmUgXCJzdHJpbmdcIiBmb3IgZXhwaXJlciB0YXJnZXQgdHlwZTogdG9waWMnKTtyZXR1cm5gdG9waWM6JHt0fWB9ZWxzZSBpZihlLnRvTG93ZXJDYXNlKCk9PT1cImlkXCIpe2lmKHR5cGVvZiB0IT1cIm51bWJlclwiKXRocm93IG5ldyBFcnJvcignVmFsdWUgbXVzdCBiZSBcIm51bWJlclwiIGZvciBleHBpcmVyIHRhcmdldCB0eXBlOiBpZCcpO3JldHVybmBpZDoke3R9YH10aHJvdyBuZXcgRXJyb3IoYFVua25vd24gZXhwaXJlciB0YXJnZXQgdHlwZTogJHtlfWApfWZ1bmN0aW9uIEFzKGUpe3JldHVybiB5aShcInRvcGljXCIsZSl9ZnVuY3Rpb24gYnMoZSl7cmV0dXJuIHlpKFwiaWRcIixlKX1mdW5jdGlvbiB5cyhlKXtjb25zdFt0LHJdPWUuc3BsaXQoXCI6XCIpLGk9e2lkOnZvaWQgMCx0b3BpYzp2b2lkIDB9O2lmKHQ9PT1cInRvcGljXCImJnR5cGVvZiByPT1cInN0cmluZ1wiKWkudG9waWM9cjtlbHNlIGlmKHQ9PT1cImlkXCImJk51bWJlci5pc0ludGVnZXIoTnVtYmVyKHIpKSlpLmlkPU51bWJlcihyKTtlbHNlIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0YXJnZXQsIGV4cGVjdGVkIGlkOm51bWJlciBvciB0b3BpYzpzdHJpbmcsIGdvdCAke3R9OiR7cn1gKTtyZXR1cm4gaX1mdW5jdGlvbiB3cyhlLHQpe3JldHVybiBMbygodHx8RGF0ZS5ub3coKSkrZGkoZSkpfWZ1bmN0aW9uIHhzKGUpe3JldHVybiBEYXRlLm5vdygpPj1kaShlKX1mdW5jdGlvbiBNcyhlLHQpe3JldHVybmAke2V9JHt0P2A6JHt0fWA6XCJcIn1gfWZ1bmN0aW9uIG1lKGU9W10sdD1bXSl7cmV0dXJuWy4uLm5ldyBTZXQoWy4uLmUsLi4udF0pXX1hc3luYyBmdW5jdGlvbiBFcyh7aWQ6ZSx0b3BpYzp0LHdjRGVlcExpbms6cn0pe3ZhciBpO3RyeXtpZighcilyZXR1cm47Y29uc3Qgbj10eXBlb2Ygcj09XCJzdHJpbmdcIj9KU09OLnBhcnNlKHIpOnIsbz1uPy5ocmVmO2lmKHR5cGVvZiBvIT1cInN0cmluZ1wiKXJldHVybjtjb25zdCBoPVVuKG8sZSx0KSxwPVdlKCk7aWYocD09PXF0LmJyb3dzZXIpe2lmKCEoKGk9cGkoKSkhPW51bGwmJmkuaGFzRm9jdXMoKSkpe2NvbnNvbGUud2FybihcIkRvY3VtZW50IGRvZXMgbm90IGhhdmUgZm9jdXMsIHNraXBwaW5nIGRlZXBsaW5rLlwiKTtyZXR1cm59aC5zdGFydHNXaXRoKFwiaHR0cHM6Ly9cIil8fGguc3RhcnRzV2l0aChcImh0dHA6Ly9cIik/d2luZG93Lm9wZW4oaCxcIl9ibGFua1wiLFwibm9yZWZlcnJlciBub29wZW5lclwiKTp3aW5kb3cub3BlbihoLGtuKCk/XCJfYmxhbmtcIjpcIl9zZWxmXCIsXCJub3JlZmVycmVyIG5vb3BlbmVyXCIpfWVsc2UgcD09PXF0LnJlYWN0TmF0aXZlJiZ0eXBlb2YoZ2xvYmFsPT1udWxsP3ZvaWQgMDpnbG9iYWwuTGlua2luZyk8XCJ1XCImJmF3YWl0IGdsb2JhbC5MaW5raW5nLm9wZW5VUkwoaCl9Y2F0Y2gobil7Y29uc29sZS5lcnJvcihuKX19ZnVuY3Rpb24gVW4oZSx0LHIpe2NvbnN0IGk9YHJlcXVlc3RJZD0ke3R9JnNlc3Npb25Ub3BpYz0ke3J9YDtlLmVuZHNXaXRoKFwiL1wiKSYmKGU9ZS5zbGljZSgwLC0xKSk7bGV0IG49YCR7ZX1gO2lmKGUuc3RhcnRzV2l0aChcImh0dHBzOi8vdC5tZVwiKSl7Y29uc3Qgbz1lLmluY2x1ZGVzKFwiP1wiKT9cIiZzdGFydGFwcD1cIjpcIj9zdGFydGFwcD1cIjtuPWAke259JHtvfSR7cW4oaSwhMCl9YH1lbHNlIG49YCR7bn0vd2M/JHtpfWA7cmV0dXJuIG59YXN5bmMgZnVuY3Rpb24gU3MoZSx0KXtsZXQgcj1cIlwiO3RyeXtpZihncigpJiYocj1sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0KSxyKSlyZXR1cm4gcjtyPWF3YWl0IGUuZ2V0SXRlbSh0KX1jYXRjaChpKXtjb25zb2xlLmVycm9yKGkpfXJldHVybiByfWZ1bmN0aW9uIHdpKGUsdCl7cmV0dXJuIGUuZmlsdGVyKHI9PnQuaW5jbHVkZXMocikpfWZ1bmN0aW9uIElzKGUsdCl7aWYoIWUuaW5jbHVkZXModCkpcmV0dXJuIG51bGw7Y29uc3Qgcj1lLnNwbGl0KC8oWyYsPyw9XSkvKSxpPXIuaW5kZXhPZih0KTtyZXR1cm4gcltpKzJdfWZ1bmN0aW9uIE5zKCl7cmV0dXJuIHR5cGVvZiBjcnlwdG88XCJ1XCImJmNyeXB0byE9bnVsbCYmY3J5cHRvLnJhbmRvbVVVSUQ/Y3J5cHRvLnJhbmRvbVVVSUQoKTpcInh4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFwiLnJlcGxhY2UoL1t4eV0vZ3UsZT0+e2NvbnN0IHQ9TWF0aC5yYW5kb20oKSoxNnwwO3JldHVybihlPT09XCJ4XCI/dDp0JjN8OCkudG9TdHJpbmcoMTYpfSl9ZnVuY3Rpb24gX3MoKXtyZXR1cm4gdHlwZW9mIHByb2Nlc3M8XCJ1XCImJnByb2Nlc3MuZW52LklTX1ZJVEVTVD09PVwidHJ1ZVwifWZ1bmN0aW9uIGtuKCl7cmV0dXJuIHR5cGVvZiB3aW5kb3c8XCJ1XCImJighIXdpbmRvdy5UZWxlZ3JhbVdlYnZpZXdQcm94eXx8ISF3aW5kb3cuVGVsZWdyYW18fCEhd2luZG93LlRlbGVncmFtV2Vidmlld1Byb3h5UHJvdG8pfWZ1bmN0aW9uIHFuKGUsdD0hMSl7Y29uc3Qgcj1CdWZmZXIuZnJvbShlKS50b1N0cmluZyhcImJhc2U2NFwiKTtyZXR1cm4gdD9yLnJlcGxhY2UoL1s9XS9nLFwiXCIpOnJ9ZnVuY3Rpb24geGkoZSl7cmV0dXJuIEJ1ZmZlci5mcm9tKGUsXCJiYXNlNjRcIikudG9TdHJpbmcoXCJ1dGYtOFwiKX12YXIgS249dHlwZW9mIGdsb2JhbFRoaXM8XCJ1XCI/Z2xvYmFsVGhpczp0eXBlb2Ygd2luZG93PFwidVwiP3dpbmRvdzp0eXBlb2YgZ2xvYmFsPFwidVwiP2dsb2JhbDp0eXBlb2Ygc2VsZjxcInVcIj9zZWxmOnt9O2Z1bmN0aW9uIEJzKGUpe3ZhciB0PWUuZGVmYXVsdDtpZih0eXBlb2YgdD09XCJmdW5jdGlvblwiKXt2YXIgcj1mdW5jdGlvbigpe3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX07ci5wcm90b3R5cGU9dC5wcm90b3R5cGV9ZWxzZSByPXt9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkocixcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKGkpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxpKTtPYmplY3QuZGVmaW5lUHJvcGVydHkocixpLG4uZ2V0P246e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGVbaV19fSl9KSxyfXZhciBIbj17ZXhwb3J0czp7fX07LyoqXG4gKiBbanMtc2hhM117QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2VtbjE3OC9qcy1zaGEzfVxuICpcbiAqIEB2ZXJzaW9uIDAuOC4wXG4gKiBAYXV0aG9yIENoZW4sIFlpLUN5dWFuIFtlbW4xNzhAZ21haWwuY29tXVxuICogQGNvcHlyaWdodCBDaGVuLCBZaS1DeXVhbiAyMDE1LTIwMThcbiAqIEBsaWNlbnNlIE1JVFxuICovKGZ1bmN0aW9uKGUpeyhmdW5jdGlvbigpe3ZhciB0PVwiaW5wdXQgaXMgaW52YWxpZCB0eXBlXCIscj1cImZpbmFsaXplIGFscmVhZHkgY2FsbGVkXCIsaT10eXBlb2Ygd2luZG93PT1cIm9iamVjdFwiLG49aT93aW5kb3c6e307bi5KU19TSEEzX05PX1dJTkRPVyYmKGk9ITEpO3ZhciBvPSFpJiZ0eXBlb2Ygc2VsZj09XCJvYmplY3RcIixoPSFuLkpTX1NIQTNfTk9fTk9ERV9KUyYmdHlwZW9mIHByb2Nlc3M9PVwib2JqZWN0XCImJnByb2Nlc3MudmVyc2lvbnMmJnByb2Nlc3MudmVyc2lvbnMubm9kZTtoP249S246byYmKG49c2VsZik7dmFyIHA9IW4uSlNfU0hBM19OT19DT01NT05fSlMmJiEwJiZlLmV4cG9ydHMsQT0hbi5KU19TSEEzX05PX0FSUkFZX0JVRkZFUiYmdHlwZW9mIEFycmF5QnVmZmVyPFwidVwiLHY9XCIwMTIzNDU2Nzg5YWJjZGVmXCIuc3BsaXQoXCJcIiksdz1bMzEsNzkzNiwyMDMxNjE2LDUyMDA5MzY5Nl0seT1bNCwxMDI0LDI2MjE0NCw2NzEwODg2NF0sUz1bMSwyNTYsNjU1MzYsMTY3NzcyMTZdLE49WzYsMTUzNiwzOTMyMTYsMTAwNjYzMjk2XSxJPVswLDgsMTYsMjRdLEM9WzEsMCwzMjg5OCwwLDMyOTA2LDIxNDc0ODM2NDgsMjE0NzUxNjQxNiwyMTQ3NDgzNjQ4LDMyOTA3LDAsMjE0NzQ4MzY0OSwwLDIxNDc1MTY1NDUsMjE0NzQ4MzY0OCwzMjc3NywyMTQ3NDgzNjQ4LDEzOCwwLDEzNiwwLDIxNDc1MTY0MjUsMCwyMTQ3NDgzNjU4LDAsMjE0NzUxNjU1NSwwLDEzOSwyMTQ3NDgzNjQ4LDMyOTA1LDIxNDc0ODM2NDgsMzI3NzEsMjE0NzQ4MzY0OCwzMjc3MCwyMTQ3NDgzNjQ4LDEyOCwyMTQ3NDgzNjQ4LDMyNzc4LDAsMjE0NzQ4MzY1OCwyMTQ3NDgzNjQ4LDIxNDc1MTY1NDUsMjE0NzQ4MzY0OCwzMjg5NiwyMTQ3NDgzNjQ4LDIxNDc0ODM2NDksMCwyMTQ3NTE2NDI0LDIxNDc0ODM2NDhdLEQ9WzIyNCwyNTYsMzg0LDUxMl0sVT1bMTI4LDI1Nl0sSj1bXCJoZXhcIixcImJ1ZmZlclwiLFwiYXJyYXlCdWZmZXJcIixcImFycmF5XCIsXCJkaWdlc3RcIl0sQnQ9ezEyODoxNjgsMjU2OjEzNn07KG4uSlNfU0hBM19OT19OT0RFX0pTfHwhQXJyYXkuaXNBcnJheSkmJihBcnJheS5pc0FycmF5PWZ1bmN0aW9uKHUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodSk9PT1cIltvYmplY3QgQXJyYXldXCJ9KSxBJiYobi5KU19TSEEzX05PX0FSUkFZX0JVRkZFUl9JU19WSUVXfHwhQXJyYXlCdWZmZXIuaXNWaWV3KSYmKEFycmF5QnVmZmVyLmlzVmlldz1mdW5jdGlvbih1KXtyZXR1cm4gdHlwZW9mIHU9PVwib2JqZWN0XCImJnUuYnVmZmVyJiZ1LmJ1ZmZlci5jb25zdHJ1Y3Rvcj09PUFycmF5QnVmZmVyfSk7Zm9yKHZhciBHPWZ1bmN0aW9uKHUsRSxfKXtyZXR1cm4gZnVuY3Rpb24oQil7cmV0dXJuIG5ldyBzKHUsRSx1KS51cGRhdGUoQilbX10oKX19LEg9ZnVuY3Rpb24odSxFLF8pe3JldHVybiBmdW5jdGlvbihCLFIpe3JldHVybiBuZXcgcyh1LEUsUikudXBkYXRlKEIpW19dKCl9fSxMPWZ1bmN0aW9uKHUsRSxfKXtyZXR1cm4gZnVuY3Rpb24oQixSLEYsUCl7cmV0dXJuIGZbXCJjc2hha2VcIit1XS51cGRhdGUoQixSLEYsUClbX10oKX19LFB0PWZ1bmN0aW9uKHUsRSxfKXtyZXR1cm4gZnVuY3Rpb24oQixSLEYsUCl7cmV0dXJuIGZbXCJrbWFjXCIrdV0udXBkYXRlKEIsUixGLFApW19dKCl9fSxXPWZ1bmN0aW9uKHUsRSxfLEIpe2Zvcih2YXIgUj0wO1I8Si5sZW5ndGg7KytSKXt2YXIgRj1KW1JdO3VbRl09RShfLEIsRil9cmV0dXJuIHV9LFJ0PWZ1bmN0aW9uKHUsRSl7dmFyIF89Ryh1LEUsXCJoZXhcIik7cmV0dXJuIF8uY3JlYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzKHUsRSx1KX0sXy51cGRhdGU9ZnVuY3Rpb24oQil7cmV0dXJuIF8uY3JlYXRlKCkudXBkYXRlKEIpfSxXKF8sRyx1LEUpfSxWdD1mdW5jdGlvbih1LEUpe3ZhciBfPUgodSxFLFwiaGV4XCIpO3JldHVybiBfLmNyZWF0ZT1mdW5jdGlvbihCKXtyZXR1cm4gbmV3IHModSxFLEIpfSxfLnVwZGF0ZT1mdW5jdGlvbihCLFIpe3JldHVybiBfLmNyZWF0ZShSKS51cGRhdGUoQil9LFcoXyxILHUsRSl9LFk9ZnVuY3Rpb24odSxFKXt2YXIgXz1CdFt1XSxCPUwodSxFLFwiaGV4XCIpO3JldHVybiBCLmNyZWF0ZT1mdW5jdGlvbihSLEYsUCl7cmV0dXJuIUYmJiFQP2ZbXCJzaGFrZVwiK3VdLmNyZWF0ZShSKTpuZXcgcyh1LEUsUikuYnl0ZXBhZChbRixQXSxfKX0sQi51cGRhdGU9ZnVuY3Rpb24oUixGLFAsTyl7cmV0dXJuIEIuY3JlYXRlKEYsUCxPKS51cGRhdGUoUil9LFcoQixMLHUsRSl9LFd0PWZ1bmN0aW9uKHUsRSl7dmFyIF89QnRbdV0sQj1QdCh1LEUsXCJoZXhcIik7cmV0dXJuIEIuY3JlYXRlPWZ1bmN0aW9uKFIsRixQKXtyZXR1cm4gbmV3IGcodSxFLEYpLmJ5dGVwYWQoW1wiS01BQ1wiLFBdLF8pLmJ5dGVwYWQoW1JdLF8pfSxCLnVwZGF0ZT1mdW5jdGlvbihSLEYsUCxPKXtyZXR1cm4gQi5jcmVhdGUoUixQLE8pLnVwZGF0ZShGKX0sVyhCLFB0LHUsRSl9LGI9W3tuYW1lOlwia2VjY2FrXCIscGFkZGluZzpTLGJpdHM6RCxjcmVhdGVNZXRob2Q6UnR9LHtuYW1lOlwic2hhM1wiLHBhZGRpbmc6TixiaXRzOkQsY3JlYXRlTWV0aG9kOlJ0fSx7bmFtZTpcInNoYWtlXCIscGFkZGluZzp3LGJpdHM6VSxjcmVhdGVNZXRob2Q6VnR9LHtuYW1lOlwiY3NoYWtlXCIscGFkZGluZzp5LGJpdHM6VSxjcmVhdGVNZXRob2Q6WX0se25hbWU6XCJrbWFjXCIscGFkZGluZzp5LGJpdHM6VSxjcmVhdGVNZXRob2Q6V3R9XSxmPXt9LGE9W10sYz0wO2M8Yi5sZW5ndGg7KytjKWZvcih2YXIgZD1iW2NdLG09ZC5iaXRzLHg9MDt4PG0ubGVuZ3RoOysreCl7dmFyIE09ZC5uYW1lK1wiX1wiK21beF07aWYoYS5wdXNoKE0pLGZbTV09ZC5jcmVhdGVNZXRob2QobVt4XSxkLnBhZGRpbmcpLGQubmFtZSE9PVwic2hhM1wiKXt2YXIgbD1kLm5hbWUrbVt4XTthLnB1c2gobCksZltsXT1mW01dfX1mdW5jdGlvbiBzKHUsRSxfKXt0aGlzLmJsb2Nrcz1bXSx0aGlzLnM9W10sdGhpcy5wYWRkaW5nPUUsdGhpcy5vdXRwdXRCaXRzPV8sdGhpcy5yZXNldD0hMCx0aGlzLmZpbmFsaXplZD0hMSx0aGlzLmJsb2NrPTAsdGhpcy5zdGFydD0wLHRoaXMuYmxvY2tDb3VudD0xNjAwLSh1PDwxKT4+NSx0aGlzLmJ5dGVDb3VudD10aGlzLmJsb2NrQ291bnQ8PDIsdGhpcy5vdXRwdXRCbG9ja3M9Xz4+NSx0aGlzLmV4dHJhQnl0ZXM9KF8mMzEpPj4zO2Zvcih2YXIgQj0wO0I8NTA7KytCKXRoaXMuc1tCXT0wfXMucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih1KXtpZih0aGlzLmZpbmFsaXplZCl0aHJvdyBuZXcgRXJyb3Iocik7dmFyIEUsXz10eXBlb2YgdTtpZihfIT09XCJzdHJpbmdcIil7aWYoXz09PVwib2JqZWN0XCIpe2lmKHU9PT1udWxsKXRocm93IG5ldyBFcnJvcih0KTtpZihBJiZ1LmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpdT1uZXcgVWludDhBcnJheSh1KTtlbHNlIGlmKCFBcnJheS5pc0FycmF5KHUpJiYoIUF8fCFBcnJheUJ1ZmZlci5pc1ZpZXcodSkpKXRocm93IG5ldyBFcnJvcih0KX1lbHNlIHRocm93IG5ldyBFcnJvcih0KTtFPSEwfWZvcih2YXIgQj10aGlzLmJsb2NrcyxSPXRoaXMuYnl0ZUNvdW50LEY9dS5sZW5ndGgsUD10aGlzLmJsb2NrQ291bnQsTz0wLEN0PXRoaXMucyxULHE7TzxGOyl7aWYodGhpcy5yZXNldClmb3IodGhpcy5yZXNldD0hMSxCWzBdPXRoaXMuYmxvY2ssVD0xO1Q8UCsxOysrVClCW1RdPTA7aWYoRSlmb3IoVD10aGlzLnN0YXJ0O088RiYmVDxSOysrTylCW1Q+PjJdfD11W09dPDxJW1QrKyYzXTtlbHNlIGZvcihUPXRoaXMuc3RhcnQ7TzxGJiZUPFI7KytPKXE9dS5jaGFyQ29kZUF0KE8pLHE8MTI4P0JbVD4+Ml18PXE8PElbVCsrJjNdOnE8MjA0OD8oQltUPj4yXXw9KDE5MnxxPj42KTw8SVtUKysmM10sQltUPj4yXXw9KDEyOHxxJjYzKTw8SVtUKysmM10pOnE8NTUyOTZ8fHE+PTU3MzQ0PyhCW1Q+PjJdfD0oMjI0fHE+PjEyKTw8SVtUKysmM10sQltUPj4yXXw9KDEyOHxxPj42JjYzKTw8SVtUKysmM10sQltUPj4yXXw9KDEyOHxxJjYzKTw8SVtUKysmM10pOihxPTY1NTM2KygocSYxMDIzKTw8MTB8dS5jaGFyQ29kZUF0KCsrTykmMTAyMyksQltUPj4yXXw9KDI0MHxxPj4xOCk8PElbVCsrJjNdLEJbVD4+Ml18PSgxMjh8cT4+MTImNjMpPDxJW1QrKyYzXSxCW1Q+PjJdfD0oMTI4fHE+PjYmNjMpPDxJW1QrKyYzXSxCW1Q+PjJdfD0oMTI4fHEmNjMpPDxJW1QrKyYzXSk7aWYodGhpcy5sYXN0Qnl0ZUluZGV4PVQsVD49Uil7Zm9yKHRoaXMuc3RhcnQ9VC1SLHRoaXMuYmxvY2s9QltQXSxUPTA7VDxQOysrVClDdFtUXV49QltUXTtrKEN0KSx0aGlzLnJlc2V0PSEwfWVsc2UgdGhpcy5zdGFydD1UfXJldHVybiB0aGlzfSxzLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24odSxFKXt2YXIgXz11JjI1NSxCPTEsUj1bX107Zm9yKHU9dT4+OCxfPXUmMjU1O18+MDspUi51bnNoaWZ0KF8pLHU9dT4+OCxfPXUmMjU1LCsrQjtyZXR1cm4gRT9SLnB1c2goQik6Ui51bnNoaWZ0KEIpLHRoaXMudXBkYXRlKFIpLFIubGVuZ3RofSxzLnByb3RvdHlwZS5lbmNvZGVTdHJpbmc9ZnVuY3Rpb24odSl7dmFyIEUsXz10eXBlb2YgdTtpZihfIT09XCJzdHJpbmdcIil7aWYoXz09PVwib2JqZWN0XCIpe2lmKHU9PT1udWxsKXRocm93IG5ldyBFcnJvcih0KTtpZihBJiZ1LmNvbnN0cnVjdG9yPT09QXJyYXlCdWZmZXIpdT1uZXcgVWludDhBcnJheSh1KTtlbHNlIGlmKCFBcnJheS5pc0FycmF5KHUpJiYoIUF8fCFBcnJheUJ1ZmZlci5pc1ZpZXcodSkpKXRocm93IG5ldyBFcnJvcih0KX1lbHNlIHRocm93IG5ldyBFcnJvcih0KTtFPSEwfXZhciBCPTAsUj11Lmxlbmd0aDtpZihFKUI9UjtlbHNlIGZvcih2YXIgRj0wO0Y8dS5sZW5ndGg7KytGKXt2YXIgUD11LmNoYXJDb2RlQXQoRik7UDwxMjg/Qis9MTpQPDIwNDg/Qis9MjpQPDU1Mjk2fHxQPj01NzM0ND9CKz0zOihQPTY1NTM2KygoUCYxMDIzKTw8MTB8dS5jaGFyQ29kZUF0KCsrRikmMTAyMyksQis9NCl9cmV0dXJuIEIrPXRoaXMuZW5jb2RlKEIqOCksdGhpcy51cGRhdGUodSksQn0scy5wcm90b3R5cGUuYnl0ZXBhZD1mdW5jdGlvbih1LEUpe2Zvcih2YXIgXz10aGlzLmVuY29kZShFKSxCPTA7Qjx1Lmxlbmd0aDsrK0IpXys9dGhpcy5lbmNvZGVTdHJpbmcodVtCXSk7dmFyIFI9RS1fJUUsRj1bXTtyZXR1cm4gRi5sZW5ndGg9Uix0aGlzLnVwZGF0ZShGKSx0aGlzfSxzLnByb3RvdHlwZS5maW5hbGl6ZT1mdW5jdGlvbigpe2lmKCF0aGlzLmZpbmFsaXplZCl7dGhpcy5maW5hbGl6ZWQ9ITA7dmFyIHU9dGhpcy5ibG9ja3MsRT10aGlzLmxhc3RCeXRlSW5kZXgsXz10aGlzLmJsb2NrQ291bnQsQj10aGlzLnM7aWYodVtFPj4yXXw9dGhpcy5wYWRkaW5nW0UmM10sdGhpcy5sYXN0Qnl0ZUluZGV4PT09dGhpcy5ieXRlQ291bnQpZm9yKHVbMF09dVtfXSxFPTE7RTxfKzE7KytFKXVbRV09MDtmb3IodVtfLTFdfD0yMTQ3NDgzNjQ4LEU9MDtFPF87KytFKUJbRV1ePXVbRV07ayhCKX19LHMucHJvdG90eXBlLnRvU3RyaW5nPXMucHJvdG90eXBlLmhleD1mdW5jdGlvbigpe3RoaXMuZmluYWxpemUoKTtmb3IodmFyIHU9dGhpcy5ibG9ja0NvdW50LEU9dGhpcy5zLF89dGhpcy5vdXRwdXRCbG9ja3MsQj10aGlzLmV4dHJhQnl0ZXMsUj0wLEY9MCxQPVwiXCIsTztGPF87KXtmb3IoUj0wO1I8dSYmRjxfOysrUiwrK0YpTz1FW1JdLFArPXZbTz4+NCYxNV0rdltPJjE1XSt2W08+PjEyJjE1XSt2W08+PjgmMTVdK3ZbTz4+MjAmMTVdK3ZbTz4+MTYmMTVdK3ZbTz4+MjgmMTVdK3ZbTz4+MjQmMTVdO0YldT09PTAmJihrKEUpLFI9MCl9cmV0dXJuIEImJihPPUVbUl0sUCs9dltPPj40JjE1XSt2W08mMTVdLEI+MSYmKFArPXZbTz4+MTImMTVdK3ZbTz4+OCYxNV0pLEI+MiYmKFArPXZbTz4+MjAmMTVdK3ZbTz4+MTYmMTVdKSksUH0scy5wcm90b3R5cGUuYXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXt0aGlzLmZpbmFsaXplKCk7dmFyIHU9dGhpcy5ibG9ja0NvdW50LEU9dGhpcy5zLF89dGhpcy5vdXRwdXRCbG9ja3MsQj10aGlzLmV4dHJhQnl0ZXMsUj0wLEY9MCxQPXRoaXMub3V0cHV0Qml0cz4+MyxPO0I/Tz1uZXcgQXJyYXlCdWZmZXIoXysxPDwyKTpPPW5ldyBBcnJheUJ1ZmZlcihQKTtmb3IodmFyIEN0PW5ldyBVaW50MzJBcnJheShPKTtGPF87KXtmb3IoUj0wO1I8dSYmRjxfOysrUiwrK0YpQ3RbRl09RVtSXTtGJXU9PT0wJiZrKEUpfXJldHVybiBCJiYoQ3RbUl09RVtSXSxPPU8uc2xpY2UoMCxQKSksT30scy5wcm90b3R5cGUuYnVmZmVyPXMucHJvdG90eXBlLmFycmF5QnVmZmVyLHMucHJvdG90eXBlLmRpZ2VzdD1zLnByb3RvdHlwZS5hcnJheT1mdW5jdGlvbigpe3RoaXMuZmluYWxpemUoKTtmb3IodmFyIHU9dGhpcy5ibG9ja0NvdW50LEU9dGhpcy5zLF89dGhpcy5vdXRwdXRCbG9ja3MsQj10aGlzLmV4dHJhQnl0ZXMsUj0wLEY9MCxQPVtdLE8sQ3Q7RjxfOyl7Zm9yKFI9MDtSPHUmJkY8XzsrK1IsKytGKU89Rjw8MixDdD1FW1JdLFBbT109Q3QmMjU1LFBbTysxXT1DdD4+OCYyNTUsUFtPKzJdPUN0Pj4xNiYyNTUsUFtPKzNdPUN0Pj4yNCYyNTU7RiV1PT09MCYmayhFKX1yZXR1cm4gQiYmKE89Rjw8MixDdD1FW1JdLFBbT109Q3QmMjU1LEI+MSYmKFBbTysxXT1DdD4+OCYyNTUpLEI+MiYmKFBbTysyXT1DdD4+MTYmMjU1KSksUH07ZnVuY3Rpb24gZyh1LEUsXyl7cy5jYWxsKHRoaXMsdSxFLF8pfWcucHJvdG90eXBlPW5ldyBzLGcucHJvdG90eXBlLmZpbmFsaXplPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW5jb2RlKHRoaXMub3V0cHV0Qml0cywhMCkscy5wcm90b3R5cGUuZmluYWxpemUuY2FsbCh0aGlzKX07dmFyIGs9ZnVuY3Rpb24odSl7dmFyIEUsXyxCLFIsRixQLE8sQ3QsVCxxLFRlLFgsJCxEZSxaLHR0LEZlLGV0LHJ0LFVlLGl0LG50LGtlLGZ0LG90LHFlLHN0LGF0LEtlLHV0LGh0LEhlLGN0LGx0LExlLGR0LHB0LHplLHZ0LGd0LGplLG10LEF0LFFlLGJ0LHl0LEplLHd0LHh0LEdlLE10LEV0LFllLFN0LEl0LFZlLE50LF90LE1lLEVlLFNlLEllLE5lO2ZvcihCPTA7Qjw0ODtCKz0yKVI9dVswXV51WzEwXV51WzIwXV51WzMwXV51WzQwXSxGPXVbMV1edVsxMV1edVsyMV1edVszMV1edVs0MV0sUD11WzJdXnVbMTJdXnVbMjJdXnVbMzJdXnVbNDJdLE89dVszXV51WzEzXV51WzIzXV51WzMzXV51WzQzXSxDdD11WzRdXnVbMTRdXnVbMjRdXnVbMzRdXnVbNDRdLFQ9dVs1XV51WzE1XV51WzI1XV51WzM1XV51WzQ1XSxxPXVbNl1edVsxNl1edVsyNl1edVszNl1edVs0Nl0sVGU9dVs3XV51WzE3XV51WzI3XV51WzM3XV51WzQ3XSxYPXVbOF1edVsxOF1edVsyOF1edVszOF1edVs0OF0sJD11WzldXnVbMTldXnVbMjldXnVbMzldXnVbNDldLEU9WF4oUDw8MXxPPj4+MzEpLF89JF4oTzw8MXxQPj4+MzEpLHVbMF1ePUUsdVsxXV49Xyx1WzEwXV49RSx1WzExXV49Xyx1WzIwXV49RSx1WzIxXV49Xyx1WzMwXV49RSx1WzMxXV49Xyx1WzQwXV49RSx1WzQxXV49XyxFPVJeKEN0PDwxfFQ+Pj4zMSksXz1GXihUPDwxfEN0Pj4+MzEpLHVbMl1ePUUsdVszXV49Xyx1WzEyXV49RSx1WzEzXV49Xyx1WzIyXV49RSx1WzIzXV49Xyx1WzMyXV49RSx1WzMzXV49Xyx1WzQyXV49RSx1WzQzXV49XyxFPVBeKHE8PDF8VGU+Pj4zMSksXz1PXihUZTw8MXxxPj4+MzEpLHVbNF1ePUUsdVs1XV49Xyx1WzE0XV49RSx1WzE1XV49Xyx1WzI0XV49RSx1WzI1XV49Xyx1WzM0XV49RSx1WzM1XV49Xyx1WzQ0XV49RSx1WzQ1XV49XyxFPUN0XihYPDwxfCQ+Pj4zMSksXz1UXigkPDwxfFg+Pj4zMSksdVs2XV49RSx1WzddXj1fLHVbMTZdXj1FLHVbMTddXj1fLHVbMjZdXj1FLHVbMjddXj1fLHVbMzZdXj1FLHVbMzddXj1fLHVbNDZdXj1FLHVbNDddXj1fLEU9cV4oUjw8MXxGPj4+MzEpLF89VGVeKEY8PDF8Uj4+PjMxKSx1WzhdXj1FLHVbOV1ePV8sdVsxOF1ePUUsdVsxOV1ePV8sdVsyOF1ePUUsdVsyOV1ePV8sdVszOF1ePUUsdVszOV1ePV8sdVs0OF1ePUUsdVs0OV1ePV8sRGU9dVswXSxaPXVbMV0seXQ9dVsxMV08PDR8dVsxMF0+Pj4yOCxKZT11WzEwXTw8NHx1WzExXT4+PjI4LGF0PXVbMjBdPDwzfHVbMjFdPj4+MjksS2U9dVsyMV08PDN8dVsyMF0+Pj4yOSxFZT11WzMxXTw8OXx1WzMwXT4+PjIzLFNlPXVbMzBdPDw5fHVbMzFdPj4+MjMsbXQ9dVs0MF08PDE4fHVbNDFdPj4+MTQsQXQ9dVs0MV08PDE4fHVbNDBdPj4+MTQsbHQ9dVsyXTw8MXx1WzNdPj4+MzEsTGU9dVszXTw8MXx1WzJdPj4+MzEsdHQ9dVsxM108PDEyfHVbMTJdPj4+MjAsRmU9dVsxMl08PDEyfHVbMTNdPj4+MjAsd3Q9dVsyMl08PDEwfHVbMjNdPj4+MjIseHQ9dVsyM108PDEwfHVbMjJdPj4+MjIsdXQ9dVszM108PDEzfHVbMzJdPj4+MTksaHQ9dVszMl08PDEzfHVbMzNdPj4+MTksSWU9dVs0Ml08PDJ8dVs0M10+Pj4zMCxOZT11WzQzXTw8Mnx1WzQyXT4+PjMwLFN0PXVbNV08PDMwfHVbNF0+Pj4yLEl0PXVbNF08PDMwfHVbNV0+Pj4yLGR0PXVbMTRdPDw2fHVbMTVdPj4+MjYscHQ9dVsxNV08PDZ8dVsxNF0+Pj4yNixldD11WzI1XTw8MTF8dVsyNF0+Pj4yMSxydD11WzI0XTw8MTF8dVsyNV0+Pj4yMSxHZT11WzM0XTw8MTV8dVszNV0+Pj4xNyxNdD11WzM1XTw8MTV8dVszNF0+Pj4xNyxIZT11WzQ1XTw8Mjl8dVs0NF0+Pj4zLGN0PXVbNDRdPDwyOXx1WzQ1XT4+PjMsZnQ9dVs2XTw8Mjh8dVs3XT4+PjQsb3Q9dVs3XTw8Mjh8dVs2XT4+PjQsVmU9dVsxN108PDIzfHVbMTZdPj4+OSxOdD11WzE2XTw8MjN8dVsxN10+Pj45LHplPXVbMjZdPDwyNXx1WzI3XT4+PjcsdnQ9dVsyN108PDI1fHVbMjZdPj4+NyxVZT11WzM2XTw8MjF8dVszN10+Pj4xMSxpdD11WzM3XTw8MjF8dVszNl0+Pj4xMSxFdD11WzQ3XTw8MjR8dVs0Nl0+Pj44LFllPXVbNDZdPDwyNHx1WzQ3XT4+PjgsUWU9dVs4XTw8Mjd8dVs5XT4+PjUsYnQ9dVs5XTw8Mjd8dVs4XT4+PjUscWU9dVsxOF08PDIwfHVbMTldPj4+MTIsc3Q9dVsxOV08PDIwfHVbMThdPj4+MTIsX3Q9dVsyOV08PDd8dVsyOF0+Pj4yNSxNZT11WzI4XTw8N3x1WzI5XT4+PjI1LGd0PXVbMzhdPDw4fHVbMzldPj4+MjQsamU9dVszOV08PDh8dVszOF0+Pj4yNCxudD11WzQ4XTw8MTR8dVs0OV0+Pj4xOCxrZT11WzQ5XTw8MTR8dVs0OF0+Pj4xOCx1WzBdPURlXn50dCZldCx1WzFdPVpefkZlJnJ0LHVbMTBdPWZ0Xn5xZSZhdCx1WzExXT1vdF5+c3QmS2UsdVsyMF09bHRefmR0JnplLHVbMjFdPUxlXn5wdCZ2dCx1WzMwXT1RZV5+eXQmd3QsdVszMV09YnRefkplJnh0LHVbNDBdPVN0Xn5WZSZfdCx1WzQxXT1JdF5+TnQmTWUsdVsyXT10dF5+ZXQmVWUsdVszXT1GZV5+cnQmaXQsdVsxMl09cWVefmF0JnV0LHVbMTNdPXN0Xn5LZSZodCx1WzIyXT1kdF5+emUmZ3QsdVsyM109cHRefnZ0JmplLHVbMzJdPXl0Xn53dCZHZSx1WzMzXT1KZV5+eHQmTXQsdVs0Ml09VmVefl90JkVlLHVbNDNdPU50Xn5NZSZTZSx1WzRdPWV0Xn5VZSZudCx1WzVdPXJ0Xn5pdCZrZSx1WzE0XT1hdF5+dXQmSGUsdVsxNV09S2Vefmh0JmN0LHVbMjRdPXplXn5ndCZtdCx1WzI1XT12dF5+amUmQXQsdVszNF09d3RefkdlJkV0LHVbMzVdPXh0Xn5NdCZZZSx1WzQ0XT1fdF5+RWUmSWUsdVs0NV09TWVeflNlJk5lLHVbNl09VWVefm50JkRlLHVbN109aXRefmtlJlosdVsxNl09dXRefkhlJmZ0LHVbMTddPWh0Xn5jdCZvdCx1WzI2XT1ndF5+bXQmbHQsdVsyN109amVefkF0JkxlLHVbMzZdPUdlXn5FdCZRZSx1WzM3XT1NdF5+WWUmYnQsdVs0Nl09RWVefkllJlN0LHVbNDddPVNlXn5OZSZJdCx1WzhdPW50Xn5EZSZ0dCx1WzldPWtlXn5aJkZlLHVbMThdPUhlXn5mdCZxZSx1WzE5XT1jdF5+b3Qmc3QsdVsyOF09bXRefmx0JmR0LHVbMjldPUF0Xn5MZSZwdCx1WzM4XT1FdF5+UWUmeXQsdVszOV09WWVefmJ0JkplLHVbNDhdPUllXn5TdCZWZSx1WzQ5XT1OZV5+SXQmTnQsdVswXV49Q1tCXSx1WzFdXj1DW0IrMV19O2lmKHApZS5leHBvcnRzPWY7ZWxzZSBmb3IoYz0wO2M8YS5sZW5ndGg7KytjKW5bYVtjXV09ZlthW2NdXX0pKCl9KShIbik7dmFyIENzPUhuLmV4cG9ydHM7Y29uc3QgUnM9XCJsb2dnZXIvNS43LjBcIjtsZXQgTG49ITEsem49ITE7Y29uc3QgVHI9e2RlYnVnOjEsZGVmYXVsdDoyLGluZm86Mix3YXJuaW5nOjMsZXJyb3I6NCxvZmY6NX07bGV0IGpuPVRyLmRlZmF1bHQsTWk9bnVsbDtmdW5jdGlvbiBPcygpe3RyeXtjb25zdCBlPVtdO2lmKFtcIk5GRFwiLFwiTkZDXCIsXCJORktEXCIsXCJORktDXCJdLmZvckVhY2godD0+e3RyeXtpZihcInRlc3RcIi5ub3JtYWxpemUodCkhPT1cInRlc3RcIil0aHJvdyBuZXcgRXJyb3IoXCJiYWQgbm9ybWFsaXplXCIpfWNhdGNoe2UucHVzaCh0KX19KSxlLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJtaXNzaW5nIFwiK2Uuam9pbihcIiwgXCIpKTtpZihTdHJpbmcuZnJvbUNoYXJDb2RlKDIzMykubm9ybWFsaXplKFwiTkZEXCIpIT09U3RyaW5nLmZyb21DaGFyQ29kZSgxMDEsNzY5KSl0aHJvdyBuZXcgRXJyb3IoXCJicm9rZW4gaW1wbGVtZW50YXRpb25cIil9Y2F0Y2goZSl7cmV0dXJuIGUubWVzc2FnZX1yZXR1cm4gbnVsbH1jb25zdCBRbj1PcygpO3ZhciBFaTsoZnVuY3Rpb24oZSl7ZS5ERUJVRz1cIkRFQlVHXCIsZS5JTkZPPVwiSU5GT1wiLGUuV0FSTklORz1cIldBUk5JTkdcIixlLkVSUk9SPVwiRVJST1JcIixlLk9GRj1cIk9GRlwifSkoRWl8fChFaT17fSkpO3ZhciByZTsoZnVuY3Rpb24oZSl7ZS5VTktOT1dOX0VSUk9SPVwiVU5LTk9XTl9FUlJPUlwiLGUuTk9UX0lNUExFTUVOVEVEPVwiTk9UX0lNUExFTUVOVEVEXCIsZS5VTlNVUFBPUlRFRF9PUEVSQVRJT049XCJVTlNVUFBPUlRFRF9PUEVSQVRJT05cIixlLk5FVFdPUktfRVJST1I9XCJORVRXT1JLX0VSUk9SXCIsZS5TRVJWRVJfRVJST1I9XCJTRVJWRVJfRVJST1JcIixlLlRJTUVPVVQ9XCJUSU1FT1VUXCIsZS5CVUZGRVJfT1ZFUlJVTj1cIkJVRkZFUl9PVkVSUlVOXCIsZS5OVU1FUklDX0ZBVUxUPVwiTlVNRVJJQ19GQVVMVFwiLGUuTUlTU0lOR19ORVc9XCJNSVNTSU5HX05FV1wiLGUuSU5WQUxJRF9BUkdVTUVOVD1cIklOVkFMSURfQVJHVU1FTlRcIixlLk1JU1NJTkdfQVJHVU1FTlQ9XCJNSVNTSU5HX0FSR1VNRU5UXCIsZS5VTkVYUEVDVEVEX0FSR1VNRU5UPVwiVU5FWFBFQ1RFRF9BUkdVTUVOVFwiLGUuQ0FMTF9FWENFUFRJT049XCJDQUxMX0VYQ0VQVElPTlwiLGUuSU5TVUZGSUNJRU5UX0ZVTkRTPVwiSU5TVUZGSUNJRU5UX0ZVTkRTXCIsZS5OT05DRV9FWFBJUkVEPVwiTk9OQ0VfRVhQSVJFRFwiLGUuUkVQTEFDRU1FTlRfVU5ERVJQUklDRUQ9XCJSRVBMQUNFTUVOVF9VTkRFUlBSSUNFRFwiLGUuVU5QUkVESUNUQUJMRV9HQVNfTElNSVQ9XCJVTlBSRURJQ1RBQkxFX0dBU19MSU1JVFwiLGUuVFJBTlNBQ1RJT05fUkVQTEFDRUQ9XCJUUkFOU0FDVElPTl9SRVBMQUNFRFwiLGUuQUNUSU9OX1JFSkVDVEVEPVwiQUNUSU9OX1JFSkVDVEVEXCJ9KShyZXx8KHJlPXt9KSk7Y29uc3QgSm49XCIwMTIzNDU2Nzg5YWJjZGVmXCI7Y2xhc3Mgentjb25zdHJ1Y3Rvcih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInZlcnNpb25cIix7ZW51bWVyYWJsZTohMCx2YWx1ZTp0LHdyaXRhYmxlOiExfSl9X2xvZyh0LHIpe2NvbnN0IGk9dC50b0xvd2VyQ2FzZSgpO1RyW2ldPT1udWxsJiZ0aGlzLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgbG9nIGxldmVsIG5hbWVcIixcImxvZ0xldmVsXCIsdCksIShqbj5UcltpXSkmJmNvbnNvbGUubG9nLmFwcGx5KGNvbnNvbGUscil9ZGVidWcoLi4udCl7dGhpcy5fbG9nKHoubGV2ZWxzLkRFQlVHLHQpfWluZm8oLi4udCl7dGhpcy5fbG9nKHoubGV2ZWxzLklORk8sdCl9d2FybiguLi50KXt0aGlzLl9sb2coei5sZXZlbHMuV0FSTklORyx0KX1tYWtlRXJyb3IodCxyLGkpe2lmKHpuKXJldHVybiB0aGlzLm1ha2VFcnJvcihcImNlbnNvcmVkIGVycm9yXCIscix7fSk7cnx8KHI9ei5lcnJvcnMuVU5LTk9XTl9FUlJPUiksaXx8KGk9e30pO2NvbnN0IG49W107T2JqZWN0LmtleXMoaSkuZm9yRWFjaChBPT57Y29uc3Qgdj1pW0FdO3RyeXtpZih2IGluc3RhbmNlb2YgVWludDhBcnJheSl7bGV0IHc9XCJcIjtmb3IobGV0IHk9MDt5PHYubGVuZ3RoO3krKyl3Kz1Kblt2W3ldPj40XSx3Kz1Kblt2W3ldJjE1XTtuLnB1c2goQStcIj1VaW50OEFycmF5KDB4XCIrdytcIilcIil9ZWxzZSBuLnB1c2goQStcIj1cIitKU09OLnN0cmluZ2lmeSh2KSl9Y2F0Y2h7bi5wdXNoKEErXCI9XCIrSlNPTi5zdHJpbmdpZnkoaVtBXS50b1N0cmluZygpKSl9fSksbi5wdXNoKGBjb2RlPSR7cn1gKSxuLnB1c2goYHZlcnNpb249JHt0aGlzLnZlcnNpb259YCk7Y29uc3Qgbz10O2xldCBoPVwiXCI7c3dpdGNoKHIpe2Nhc2UgcmUuTlVNRVJJQ19GQVVMVDp7aD1cIk5VTUVSSUNfRkFVTFRcIjtjb25zdCBBPXQ7c3dpdGNoKEEpe2Nhc2VcIm92ZXJmbG93XCI6Y2FzZVwidW5kZXJmbG93XCI6Y2FzZVwiZGl2aXNpb24tYnktemVyb1wiOmgrPVwiLVwiK0E7YnJlYWs7Y2FzZVwibmVnYXRpdmUtcG93ZXJcIjpjYXNlXCJuZWdhdGl2ZS13aWR0aFwiOmgrPVwiLXVuc3VwcG9ydGVkXCI7YnJlYWs7Y2FzZVwidW5ib3VuZC1iaXR3aXNlLXJlc3VsdFwiOmgrPVwiLXVuYm91bmQtcmVzdWx0XCI7YnJlYWt9YnJlYWt9Y2FzZSByZS5DQUxMX0VYQ0VQVElPTjpjYXNlIHJlLklOU1VGRklDSUVOVF9GVU5EUzpjYXNlIHJlLk1JU1NJTkdfTkVXOmNhc2UgcmUuTk9OQ0VfRVhQSVJFRDpjYXNlIHJlLlJFUExBQ0VNRU5UX1VOREVSUFJJQ0VEOmNhc2UgcmUuVFJBTlNBQ1RJT05fUkVQTEFDRUQ6Y2FzZSByZS5VTlBSRURJQ1RBQkxFX0dBU19MSU1JVDpoPXI7YnJlYWt9aCYmKHQrPVwiIFsgU2VlOiBodHRwczovL2xpbmtzLmV0aGVycy5vcmcvdjUtZXJyb3JzLVwiK2grXCIgXVwiKSxuLmxlbmd0aCYmKHQrPVwiIChcIituLmpvaW4oXCIsIFwiKStcIilcIik7Y29uc3QgcD1uZXcgRXJyb3IodCk7cmV0dXJuIHAucmVhc29uPW8scC5jb2RlPXIsT2JqZWN0LmtleXMoaSkuZm9yRWFjaChmdW5jdGlvbihBKXtwW0FdPWlbQV19KSxwfXRocm93RXJyb3IodCxyLGkpe3Rocm93IHRoaXMubWFrZUVycm9yKHQscixpKX10aHJvd0FyZ3VtZW50RXJyb3IodCxyLGkpe3JldHVybiB0aGlzLnRocm93RXJyb3IodCx6LmVycm9ycy5JTlZBTElEX0FSR1VNRU5ULHthcmd1bWVudDpyLHZhbHVlOml9KX1hc3NlcnQodCxyLGksbil7dHx8dGhpcy50aHJvd0Vycm9yKHIsaSxuKX1hc3NlcnRBcmd1bWVudCh0LHIsaSxuKXt0fHx0aGlzLnRocm93QXJndW1lbnRFcnJvcihyLGksbil9Y2hlY2tOb3JtYWxpemUodCl7UW4mJnRoaXMudGhyb3dFcnJvcihcInBsYXRmb3JtIG1pc3NpbmcgU3RyaW5nLnByb3RvdHlwZS5ub3JtYWxpemVcIix6LmVycm9ycy5VTlNVUFBPUlRFRF9PUEVSQVRJT04se29wZXJhdGlvbjpcIlN0cmluZy5wcm90b3R5cGUubm9ybWFsaXplXCIsZm9ybTpRbn0pfWNoZWNrU2FmZVVpbnQ1Myh0LHIpe3R5cGVvZiB0PT1cIm51bWJlclwiJiYocj09bnVsbCYmKHI9XCJ2YWx1ZSBub3Qgc2FmZVwiKSwodDwwfHx0Pj05MDA3MTk5MjU0NzQwOTkxKSYmdGhpcy50aHJvd0Vycm9yKHIsei5lcnJvcnMuTlVNRVJJQ19GQVVMVCx7b3BlcmF0aW9uOlwiY2hlY2tTYWZlSW50ZWdlclwiLGZhdWx0Olwib3V0LW9mLXNhZmUtcmFuZ2VcIix2YWx1ZTp0fSksdCUxJiZ0aGlzLnRocm93RXJyb3Iocix6LmVycm9ycy5OVU1FUklDX0ZBVUxULHtvcGVyYXRpb246XCJjaGVja1NhZmVJbnRlZ2VyXCIsZmF1bHQ6XCJub24taW50ZWdlclwiLHZhbHVlOnR9KSl9Y2hlY2tBcmd1bWVudENvdW50KHQscixpKXtpP2k9XCI6IFwiK2k6aT1cIlwiLHQ8ciYmdGhpcy50aHJvd0Vycm9yKFwibWlzc2luZyBhcmd1bWVudFwiK2ksei5lcnJvcnMuTUlTU0lOR19BUkdVTUVOVCx7Y291bnQ6dCxleHBlY3RlZENvdW50OnJ9KSx0PnImJnRoaXMudGhyb3dFcnJvcihcInRvbyBtYW55IGFyZ3VtZW50c1wiK2ksei5lcnJvcnMuVU5FWFBFQ1RFRF9BUkdVTUVOVCx7Y291bnQ6dCxleHBlY3RlZENvdW50OnJ9KX1jaGVja05ldyh0LHIpeyh0PT09T2JqZWN0fHx0PT1udWxsKSYmdGhpcy50aHJvd0Vycm9yKFwibWlzc2luZyBuZXdcIix6LmVycm9ycy5NSVNTSU5HX05FVyx7bmFtZTpyLm5hbWV9KX1jaGVja0Fic3RyYWN0KHQscil7dD09PXI/dGhpcy50aHJvd0Vycm9yKFwiY2Fubm90IGluc3RhbnRpYXRlIGFic3RyYWN0IGNsYXNzIFwiK0pTT04uc3RyaW5naWZ5KHIubmFtZSkrXCIgZGlyZWN0bHk7IHVzZSBhIHN1Yi1jbGFzc1wiLHouZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7bmFtZTp0Lm5hbWUsb3BlcmF0aW9uOlwibmV3XCJ9KToodD09PU9iamVjdHx8dD09bnVsbCkmJnRoaXMudGhyb3dFcnJvcihcIm1pc3NpbmcgbmV3XCIsei5lcnJvcnMuTUlTU0lOR19ORVcse25hbWU6ci5uYW1lfSl9c3RhdGljIGdsb2JhbExvZ2dlcigpe3JldHVybiBNaXx8KE1pPW5ldyB6KFJzKSksTWl9c3RhdGljIHNldENlbnNvcnNoaXAodCxyKXtpZighdCYmciYmdGhpcy5nbG9iYWxMb2dnZXIoKS50aHJvd0Vycm9yKFwiY2Fubm90IHBlcm1hbmVudGx5IGRpc2FibGUgY2Vuc29yc2hpcFwiLHouZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7b3BlcmF0aW9uOlwic2V0Q2Vuc29yc2hpcFwifSksTG4pe2lmKCF0KXJldHVybjt0aGlzLmdsb2JhbExvZ2dlcigpLnRocm93RXJyb3IoXCJlcnJvciBjZW5zb3JzaGlwIHBlcm1hbmVudFwiLHouZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7b3BlcmF0aW9uOlwic2V0Q2Vuc29yc2hpcFwifSl9em49ISF0LExuPSEhcn1zdGF0aWMgc2V0TG9nTGV2ZWwodCl7Y29uc3Qgcj1Uclt0LnRvTG93ZXJDYXNlKCldO2lmKHI9PW51bGwpe3ouZ2xvYmFsTG9nZ2VyKCkud2FybihcImludmFsaWQgbG9nIGxldmVsIC0gXCIrdCk7cmV0dXJufWpuPXJ9c3RhdGljIGZyb20odCl7cmV0dXJuIG5ldyB6KHQpfX16LmVycm9ycz1yZSx6LmxldmVscz1FaTtjb25zdCBQcz1cImJ5dGVzLzUuNy4wXCIsVHQ9bmV3IHooUHMpO2Z1bmN0aW9uIEduKGUpe3JldHVybiEhZS50b0hleFN0cmluZ31mdW5jdGlvbiBpcihlKXtyZXR1cm4gZS5zbGljZXx8KGUuc2xpY2U9ZnVuY3Rpb24oKXtjb25zdCB0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIGlyKG5ldyBVaW50OEFycmF5KEFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShlLHQpKSl9KSxlfWZ1bmN0aW9uIFRzKGUpe3JldHVybiBKdChlKSYmIShlLmxlbmd0aCUyKXx8bnIoZSl9ZnVuY3Rpb24gWW4oZSl7cmV0dXJuIHR5cGVvZiBlPT1cIm51bWJlclwiJiZlPT1lJiZlJTE9PT0wfWZ1bmN0aW9uIG5yKGUpe2lmKGU9PW51bGwpcmV0dXJuITE7aWYoZS5jb25zdHJ1Y3Rvcj09PVVpbnQ4QXJyYXkpcmV0dXJuITA7aWYodHlwZW9mIGU9PVwic3RyaW5nXCJ8fCFZbihlLmxlbmd0aCl8fGUubGVuZ3RoPDApcmV0dXJuITE7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kyspe2NvbnN0IHI9ZVt0XTtpZighWW4ocil8fHI8MHx8cj49MjU2KXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIE90KGUsdCl7aWYodHx8KHQ9e30pLHR5cGVvZiBlPT1cIm51bWJlclwiKXtUdC5jaGVja1NhZmVVaW50NTMoZSxcImludmFsaWQgYXJyYXlpZnkgdmFsdWVcIik7Y29uc3Qgcj1bXTtmb3IoO2U7KXIudW5zaGlmdChlJjI1NSksZT1wYXJzZUludChTdHJpbmcoZS8yNTYpKTtyZXR1cm4gci5sZW5ndGg9PT0wJiZyLnB1c2goMCksaXIobmV3IFVpbnQ4QXJyYXkocikpfWlmKHQuYWxsb3dNaXNzaW5nUHJlZml4JiZ0eXBlb2YgZT09XCJzdHJpbmdcIiYmZS5zdWJzdHJpbmcoMCwyKSE9PVwiMHhcIiYmKGU9XCIweFwiK2UpLEduKGUpJiYoZT1lLnRvSGV4U3RyaW5nKCkpLEp0KGUpKXtsZXQgcj1lLnN1YnN0cmluZygyKTtyLmxlbmd0aCUyJiYodC5oZXhQYWQ9PT1cImxlZnRcIj9yPVwiMFwiK3I6dC5oZXhQYWQ9PT1cInJpZ2h0XCI/cis9XCIwXCI6VHQudGhyb3dBcmd1bWVudEVycm9yKFwiaGV4IGRhdGEgaXMgb2RkLWxlbmd0aFwiLFwidmFsdWVcIixlKSk7Y29uc3QgaT1bXTtmb3IobGV0IG49MDtuPHIubGVuZ3RoO24rPTIpaS5wdXNoKHBhcnNlSW50KHIuc3Vic3RyaW5nKG4sbisyKSwxNikpO3JldHVybiBpcihuZXcgVWludDhBcnJheShpKSl9cmV0dXJuIG5yKGUpP2lyKG5ldyBVaW50OEFycmF5KGUpKTpUdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGFycmF5aWZ5IHZhbHVlXCIsXCJ2YWx1ZVwiLGUpfWZ1bmN0aW9uIERzKGUpe2NvbnN0IHQ9ZS5tYXAobj0+T3QobikpLHI9dC5yZWR1Y2UoKG4sbyk9Pm4rby5sZW5ndGgsMCksaT1uZXcgVWludDhBcnJheShyKTtyZXR1cm4gdC5yZWR1Y2UoKG4sbyk9PihpLnNldChvLG4pLG4rby5sZW5ndGgpLDApLGlyKGkpfWZ1bmN0aW9uIEZzKGUsdCl7ZT1PdChlKSxlLmxlbmd0aD50JiZUdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJ2YWx1ZSBvdXQgb2YgcmFuZ2VcIixcInZhbHVlXCIsYXJndW1lbnRzWzBdKTtjb25zdCByPW5ldyBVaW50OEFycmF5KHQpO3JldHVybiByLnNldChlLHQtZS5sZW5ndGgpLGlyKHIpfWZ1bmN0aW9uIEp0KGUsdCl7cmV0dXJuISh0eXBlb2YgZSE9XCJzdHJpbmdcInx8IWUubWF0Y2goL14weFswLTlBLUZhLWZdKiQvKXx8dCYmZS5sZW5ndGghPT0yKzIqdCl9Y29uc3QgU2k9XCIwMTIzNDU2Nzg5YWJjZGVmXCI7ZnVuY3Rpb24gS3QoZSx0KXtpZih0fHwodD17fSksdHlwZW9mIGU9PVwibnVtYmVyXCIpe1R0LmNoZWNrU2FmZVVpbnQ1MyhlLFwiaW52YWxpZCBoZXhsaWZ5IHZhbHVlXCIpO2xldCByPVwiXCI7Zm9yKDtlOylyPVNpW2UmMTVdK3IsZT1NYXRoLmZsb29yKGUvMTYpO3JldHVybiByLmxlbmd0aD8oci5sZW5ndGglMiYmKHI9XCIwXCIrciksXCIweFwiK3IpOlwiMHgwMFwifWlmKHR5cGVvZiBlPT1cImJpZ2ludFwiKXJldHVybiBlPWUudG9TdHJpbmcoMTYpLGUubGVuZ3RoJTI/XCIweDBcIitlOlwiMHhcIitlO2lmKHQuYWxsb3dNaXNzaW5nUHJlZml4JiZ0eXBlb2YgZT09XCJzdHJpbmdcIiYmZS5zdWJzdHJpbmcoMCwyKSE9PVwiMHhcIiYmKGU9XCIweFwiK2UpLEduKGUpKXJldHVybiBlLnRvSGV4U3RyaW5nKCk7aWYoSnQoZSkpcmV0dXJuIGUubGVuZ3RoJTImJih0LmhleFBhZD09PVwibGVmdFwiP2U9XCIweDBcIitlLnN1YnN0cmluZygyKTp0LmhleFBhZD09PVwicmlnaHRcIj9lKz1cIjBcIjpUdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJoZXggZGF0YSBpcyBvZGQtbGVuZ3RoXCIsXCJ2YWx1ZVwiLGUpKSxlLnRvTG93ZXJDYXNlKCk7aWYobnIoZSkpe2xldCByPVwiMHhcIjtmb3IobGV0IGk9MDtpPGUubGVuZ3RoO2krKyl7bGV0IG49ZVtpXTtyKz1TaVsobiYyNDApPj40XStTaVtuJjE1XX1yZXR1cm4gcn1yZXR1cm4gVHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBoZXhsaWZ5IHZhbHVlXCIsXCJ2YWx1ZVwiLGUpfWZ1bmN0aW9uIFVzKGUpe2lmKHR5cGVvZiBlIT1cInN0cmluZ1wiKWU9S3QoZSk7ZWxzZSBpZighSnQoZSl8fGUubGVuZ3RoJTIpcmV0dXJuIG51bGw7cmV0dXJuKGUubGVuZ3RoLTIpLzJ9ZnVuY3Rpb24gVm4oZSx0LHIpe3JldHVybiB0eXBlb2YgZSE9XCJzdHJpbmdcIj9lPUt0KGUpOighSnQoZSl8fGUubGVuZ3RoJTIpJiZUdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGhleERhdGFcIixcInZhbHVlXCIsZSksdD0yKzIqdCxyIT1udWxsP1wiMHhcIitlLnN1YnN0cmluZyh0LDIrMipyKTpcIjB4XCIrZS5zdWJzdHJpbmcodCl9ZnVuY3Rpb24gb2UoZSx0KXtmb3IodHlwZW9mIGUhPVwic3RyaW5nXCI/ZT1LdChlKTpKdChlKXx8VHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBoZXggc3RyaW5nXCIsXCJ2YWx1ZVwiLGUpLGUubGVuZ3RoPjIqdCsyJiZUdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJ2YWx1ZSBvdXQgb2YgcmFuZ2VcIixcInZhbHVlXCIsYXJndW1lbnRzWzFdKTtlLmxlbmd0aDwyKnQrMjspZT1cIjB4MFwiK2Uuc3Vic3RyaW5nKDIpO3JldHVybiBlfWZ1bmN0aW9uIFduKGUpe2NvbnN0IHQ9e3I6XCIweFwiLHM6XCIweFwiLF92czpcIjB4XCIscmVjb3ZlcnlQYXJhbTowLHY6MCx5UGFyaXR5QW5kUzpcIjB4XCIsY29tcGFjdDpcIjB4XCJ9O2lmKFRzKGUpKXtsZXQgcj1PdChlKTtyLmxlbmd0aD09PTY0Pyh0LnY9MjcrKHJbMzJdPj43KSxyWzMyXSY9MTI3LHQucj1LdChyLnNsaWNlKDAsMzIpKSx0LnM9S3Qoci5zbGljZSgzMiw2NCkpKTpyLmxlbmd0aD09PTY1Pyh0LnI9S3Qoci5zbGljZSgwLDMyKSksdC5zPUt0KHIuc2xpY2UoMzIsNjQpKSx0LnY9cls2NF0pOlR0LnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgc2lnbmF0dXJlIHN0cmluZ1wiLFwic2lnbmF0dXJlXCIsZSksdC52PDI3JiYodC52PT09MHx8dC52PT09MT90LnYrPTI3OlR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBpbnZhbGlkIHYgYnl0ZVwiLFwic2lnbmF0dXJlXCIsZSkpLHQucmVjb3ZlcnlQYXJhbT0xLXQudiUyLHQucmVjb3ZlcnlQYXJhbSYmKHJbMzJdfD0xMjgpLHQuX3ZzPUt0KHIuc2xpY2UoMzIsNjQpKX1lbHNle2lmKHQucj1lLnIsdC5zPWUucyx0LnY9ZS52LHQucmVjb3ZlcnlQYXJhbT1lLnJlY292ZXJ5UGFyYW0sdC5fdnM9ZS5fdnMsdC5fdnMhPW51bGwpe2NvbnN0IG49RnMoT3QodC5fdnMpLDMyKTt0Ll92cz1LdChuKTtjb25zdCBvPW5bMF0+PTEyOD8xOjA7dC5yZWNvdmVyeVBhcmFtPT1udWxsP3QucmVjb3ZlcnlQYXJhbT1vOnQucmVjb3ZlcnlQYXJhbSE9PW8mJlR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSByZWNvdmVyeVBhcmFtIG1pc21hdGNoIF92c1wiLFwic2lnbmF0dXJlXCIsZSksblswXSY9MTI3O2NvbnN0IGg9S3Qobik7dC5zPT1udWxsP3Qucz1oOnQucyE9PWgmJlR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSB2IG1pc21hdGNoIF92c1wiLFwic2lnbmF0dXJlXCIsZSl9aWYodC5yZWNvdmVyeVBhcmFtPT1udWxsKXQudj09bnVsbD9UdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgbWlzc2luZyB2IGFuZCByZWNvdmVyeVBhcmFtXCIsXCJzaWduYXR1cmVcIixlKTp0LnY9PT0wfHx0LnY9PT0xP3QucmVjb3ZlcnlQYXJhbT10LnY6dC5yZWNvdmVyeVBhcmFtPTEtdC52JTI7ZWxzZSBpZih0LnY9PW51bGwpdC52PTI3K3QucmVjb3ZlcnlQYXJhbTtlbHNle2NvbnN0IG49dC52PT09MHx8dC52PT09MT90LnY6MS10LnYlMjt0LnJlY292ZXJ5UGFyYW0hPT1uJiZUdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgcmVjb3ZlcnlQYXJhbSBtaXNtYXRjaCB2XCIsXCJzaWduYXR1cmVcIixlKX10LnI9PW51bGx8fCFKdCh0LnIpP1R0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBtaXNzaW5nIG9yIGludmFsaWQgclwiLFwic2lnbmF0dXJlXCIsZSk6dC5yPW9lKHQuciwzMiksdC5zPT1udWxsfHwhSnQodC5zKT9UdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgbWlzc2luZyBvciBpbnZhbGlkIHNcIixcInNpZ25hdHVyZVwiLGUpOnQucz1vZSh0LnMsMzIpO2NvbnN0IHI9T3QodC5zKTtyWzBdPj0xMjgmJlR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBzIG91dCBvZiByYW5nZVwiLFwic2lnbmF0dXJlXCIsZSksdC5yZWNvdmVyeVBhcmFtJiYoclswXXw9MTI4KTtjb25zdCBpPUt0KHIpO3QuX3ZzJiYoSnQodC5fdnMpfHxUdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJzaWduYXR1cmUgaW52YWxpZCBfdnNcIixcInNpZ25hdHVyZVwiLGUpLHQuX3ZzPW9lKHQuX3ZzLDMyKSksdC5fdnM9PW51bGw/dC5fdnM9aTp0Ll92cyE9PWkmJlR0LnRocm93QXJndW1lbnRFcnJvcihcInNpZ25hdHVyZSBfdnMgbWlzbWF0Y2ggdiBhbmQgc1wiLFwic2lnbmF0dXJlXCIsZSl9cmV0dXJuIHQueVBhcml0eUFuZFM9dC5fdnMsdC5jb21wYWN0PXQucit0LnlQYXJpdHlBbmRTLnN1YnN0cmluZygyKSx0fWZ1bmN0aW9uIElpKGUpe3JldHVyblwiMHhcIitDcy5rZWNjYWtfMjU2KE90KGUpKX12YXIgWG49e2V4cG9ydHM6e319LGtzPXt9LHFzPU9iamVjdC5mcmVlemUoe19fcHJvdG9fXzpudWxsLGRlZmF1bHQ6a3N9KSxLcz1Ccyhxcyk7KGZ1bmN0aW9uKGUpeyhmdW5jdGlvbih0LHIpe2Z1bmN0aW9uIGkoYixmKXtpZighYil0aHJvdyBuZXcgRXJyb3IoZnx8XCJBc3NlcnRpb24gZmFpbGVkXCIpfWZ1bmN0aW9uIG4oYixmKXtiLnN1cGVyXz1mO3ZhciBhPWZ1bmN0aW9uKCl7fTthLnByb3RvdHlwZT1mLnByb3RvdHlwZSxiLnByb3RvdHlwZT1uZXcgYSxiLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1ifWZ1bmN0aW9uIG8oYixmLGEpe2lmKG8uaXNCTihiKSlyZXR1cm4gYjt0aGlzLm5lZ2F0aXZlPTAsdGhpcy53b3Jkcz1udWxsLHRoaXMubGVuZ3RoPTAsdGhpcy5yZWQ9bnVsbCxiIT09bnVsbCYmKChmPT09XCJsZVwifHxmPT09XCJiZVwiKSYmKGE9ZixmPTEwKSx0aGlzLl9pbml0KGJ8fDAsZnx8MTAsYXx8XCJiZVwiKSl9dHlwZW9mIHQ9PVwib2JqZWN0XCI/dC5leHBvcnRzPW86ci5CTj1vLG8uQk49byxvLndvcmRTaXplPTI2O3ZhciBoO3RyeXt0eXBlb2Ygd2luZG93PFwidVwiJiZ0eXBlb2Ygd2luZG93LkJ1ZmZlcjxcInVcIj9oPXdpbmRvdy5CdWZmZXI6aD1Lcy5CdWZmZXJ9Y2F0Y2h7fW8uaXNCTj1mdW5jdGlvbihmKXtyZXR1cm4gZiBpbnN0YW5jZW9mIG8/ITA6ZiE9PW51bGwmJnR5cGVvZiBmPT1cIm9iamVjdFwiJiZmLmNvbnN0cnVjdG9yLndvcmRTaXplPT09by53b3JkU2l6ZSYmQXJyYXkuaXNBcnJheShmLndvcmRzKX0sby5tYXg9ZnVuY3Rpb24oZixhKXtyZXR1cm4gZi5jbXAoYSk+MD9mOmF9LG8ubWluPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIGYuY21wKGEpPDA/ZjphfSxvLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbihmLGEsYyl7aWYodHlwZW9mIGY9PVwibnVtYmVyXCIpcmV0dXJuIHRoaXMuX2luaXROdW1iZXIoZixhLGMpO2lmKHR5cGVvZiBmPT1cIm9iamVjdFwiKXJldHVybiB0aGlzLl9pbml0QXJyYXkoZixhLGMpO2E9PT1cImhleFwiJiYoYT0xNiksaShhPT09KGF8MCkmJmE+PTImJmE8PTM2KSxmPWYudG9TdHJpbmcoKS5yZXBsYWNlKC9cXHMrL2csXCJcIik7dmFyIGQ9MDtmWzBdPT09XCItXCImJihkKyssdGhpcy5uZWdhdGl2ZT0xKSxkPGYubGVuZ3RoJiYoYT09PTE2P3RoaXMuX3BhcnNlSGV4KGYsZCxjKToodGhpcy5fcGFyc2VCYXNlKGYsYSxkKSxjPT09XCJsZVwiJiZ0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksYSxjKSkpfSxvLnByb3RvdHlwZS5faW5pdE51bWJlcj1mdW5jdGlvbihmLGEsYyl7ZjwwJiYodGhpcy5uZWdhdGl2ZT0xLGY9LWYpLGY8NjcxMDg4NjQ/KHRoaXMud29yZHM9W2YmNjcxMDg4NjNdLHRoaXMubGVuZ3RoPTEpOmY8NDUwMzU5OTYyNzM3MDQ5Nj8odGhpcy53b3Jkcz1bZiY2NzEwODg2MyxmLzY3MTA4ODY0JjY3MTA4ODYzXSx0aGlzLmxlbmd0aD0yKTooaShmPDkwMDcxOTkyNTQ3NDA5OTIpLHRoaXMud29yZHM9W2YmNjcxMDg4NjMsZi82NzEwODg2NCY2NzEwODg2MywxXSx0aGlzLmxlbmd0aD0zKSxjPT09XCJsZVwiJiZ0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksYSxjKX0sby5wcm90b3R5cGUuX2luaXRBcnJheT1mdW5jdGlvbihmLGEsYyl7aWYoaSh0eXBlb2YgZi5sZW5ndGg9PVwibnVtYmVyXCIpLGYubGVuZ3RoPD0wKXJldHVybiB0aGlzLndvcmRzPVswXSx0aGlzLmxlbmd0aD0xLHRoaXM7dGhpcy5sZW5ndGg9TWF0aC5jZWlsKGYubGVuZ3RoLzMpLHRoaXMud29yZHM9bmV3IEFycmF5KHRoaXMubGVuZ3RoKTtmb3IodmFyIGQ9MDtkPHRoaXMubGVuZ3RoO2QrKyl0aGlzLndvcmRzW2RdPTA7dmFyIG0seCxNPTA7aWYoYz09PVwiYmVcIilmb3IoZD1mLmxlbmd0aC0xLG09MDtkPj0wO2QtPTMpeD1mW2RdfGZbZC0xXTw8OHxmW2QtMl08PDE2LHRoaXMud29yZHNbbV18PXg8PE0mNjcxMDg4NjMsdGhpcy53b3Jkc1ttKzFdPXg+Pj4yNi1NJjY3MTA4ODYzLE0rPTI0LE0+PTI2JiYoTS09MjYsbSsrKTtlbHNlIGlmKGM9PT1cImxlXCIpZm9yKGQ9MCxtPTA7ZDxmLmxlbmd0aDtkKz0zKXg9ZltkXXxmW2QrMV08PDh8ZltkKzJdPDwxNix0aGlzLndvcmRzW21dfD14PDxNJjY3MTA4ODYzLHRoaXMud29yZHNbbSsxXT14Pj4+MjYtTSY2NzEwODg2MyxNKz0yNCxNPj0yNiYmKE0tPTI2LG0rKyk7cmV0dXJuIHRoaXMuX3N0cmlwKCl9O2Z1bmN0aW9uIHAoYixmKXt2YXIgYT1iLmNoYXJDb2RlQXQoZik7aWYoYT49NDgmJmE8PTU3KXJldHVybiBhLTQ4O2lmKGE+PTY1JiZhPD03MClyZXR1cm4gYS01NTtpZihhPj05NyYmYTw9MTAyKXJldHVybiBhLTg3O2koITEsXCJJbnZhbGlkIGNoYXJhY3RlciBpbiBcIitiKX1mdW5jdGlvbiBBKGIsZixhKXt2YXIgYz1wKGIsYSk7cmV0dXJuIGEtMT49ZiYmKGN8PXAoYixhLTEpPDw0KSxjfW8ucHJvdG90eXBlLl9wYXJzZUhleD1mdW5jdGlvbihmLGEsYyl7dGhpcy5sZW5ndGg9TWF0aC5jZWlsKChmLmxlbmd0aC1hKS82KSx0aGlzLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCk7Zm9yKHZhciBkPTA7ZDx0aGlzLmxlbmd0aDtkKyspdGhpcy53b3Jkc1tkXT0wO3ZhciBtPTAseD0wLE07aWYoYz09PVwiYmVcIilmb3IoZD1mLmxlbmd0aC0xO2Q+PWE7ZC09MilNPUEoZixhLGQpPDxtLHRoaXMud29yZHNbeF18PU0mNjcxMDg4NjMsbT49MTg/KG0tPTE4LHgrPTEsdGhpcy53b3Jkc1t4XXw9TT4+PjI2KTptKz04O2Vsc2V7dmFyIGw9Zi5sZW5ndGgtYTtmb3IoZD1sJTI9PT0wP2ErMTphO2Q8Zi5sZW5ndGg7ZCs9MilNPUEoZixhLGQpPDxtLHRoaXMud29yZHNbeF18PU0mNjcxMDg4NjMsbT49MTg/KG0tPTE4LHgrPTEsdGhpcy53b3Jkc1t4XXw9TT4+PjI2KTptKz04fXRoaXMuX3N0cmlwKCl9O2Z1bmN0aW9uIHYoYixmLGEsYyl7Zm9yKHZhciBkPTAsbT0wLHg9TWF0aC5taW4oYi5sZW5ndGgsYSksTT1mO008eDtNKyspe3ZhciBsPWIuY2hhckNvZGVBdChNKS00ODtkKj1jLGw+PTQ5P209bC00OSsxMDpsPj0xNz9tPWwtMTcrMTA6bT1sLGkobD49MCYmbTxjLFwiSW52YWxpZCBjaGFyYWN0ZXJcIiksZCs9bX1yZXR1cm4gZH1vLnByb3RvdHlwZS5fcGFyc2VCYXNlPWZ1bmN0aW9uKGYsYSxjKXt0aGlzLndvcmRzPVswXSx0aGlzLmxlbmd0aD0xO2Zvcih2YXIgZD0wLG09MTttPD02NzEwODg2MzttKj1hKWQrKztkLS0sbT1tL2F8MDtmb3IodmFyIHg9Zi5sZW5ndGgtYyxNPXglZCxsPU1hdGgubWluKHgseC1NKStjLHM9MCxnPWM7ZzxsO2crPWQpcz12KGYsZyxnK2QsYSksdGhpcy5pbXVsbihtKSx0aGlzLndvcmRzWzBdK3M8NjcxMDg4NjQ/dGhpcy53b3Jkc1swXSs9czp0aGlzLl9pYWRkbihzKTtpZihNIT09MCl7dmFyIGs9MTtmb3Iocz12KGYsZyxmLmxlbmd0aCxhKSxnPTA7ZzxNO2crKylrKj1hO3RoaXMuaW11bG4oayksdGhpcy53b3Jkc1swXStzPDY3MTA4ODY0P3RoaXMud29yZHNbMF0rPXM6dGhpcy5faWFkZG4ocyl9dGhpcy5fc3RyaXAoKX0sby5wcm90b3R5cGUuY29weT1mdW5jdGlvbihmKXtmLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCk7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aDthKyspZi53b3Jkc1thXT10aGlzLndvcmRzW2FdO2YubGVuZ3RoPXRoaXMubGVuZ3RoLGYubmVnYXRpdmU9dGhpcy5uZWdhdGl2ZSxmLnJlZD10aGlzLnJlZH07ZnVuY3Rpb24gdyhiLGYpe2Iud29yZHM9Zi53b3JkcyxiLmxlbmd0aD1mLmxlbmd0aCxiLm5lZ2F0aXZlPWYubmVnYXRpdmUsYi5yZWQ9Zi5yZWR9aWYoby5wcm90b3R5cGUuX21vdmU9ZnVuY3Rpb24oZil7dyhmLHRoaXMpfSxvLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBmPW5ldyBvKG51bGwpO3JldHVybiB0aGlzLmNvcHkoZiksZn0sby5wcm90b3R5cGUuX2V4cGFuZD1mdW5jdGlvbihmKXtmb3IoO3RoaXMubGVuZ3RoPGY7KXRoaXMud29yZHNbdGhpcy5sZW5ndGgrK109MDtyZXR1cm4gdGhpc30sby5wcm90b3R5cGUuX3N0cmlwPWZ1bmN0aW9uKCl7Zm9yKDt0aGlzLmxlbmd0aD4xJiZ0aGlzLndvcmRzW3RoaXMubGVuZ3RoLTFdPT09MDspdGhpcy5sZW5ndGgtLTtyZXR1cm4gdGhpcy5fbm9ybVNpZ24oKX0sby5wcm90b3R5cGUuX25vcm1TaWduPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RoPT09MSYmdGhpcy53b3Jkc1swXT09PTAmJih0aGlzLm5lZ2F0aXZlPTApLHRoaXN9LHR5cGVvZiBTeW1ib2w8XCJ1XCImJnR5cGVvZiBTeW1ib2wuZm9yPT1cImZ1bmN0aW9uXCIpdHJ5e28ucHJvdG90eXBlW1N5bWJvbC5mb3IoXCJub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbVwiKV09eX1jYXRjaHtvLnByb3RvdHlwZS5pbnNwZWN0PXl9ZWxzZSBvLnByb3RvdHlwZS5pbnNwZWN0PXk7ZnVuY3Rpb24geSgpe3JldHVybih0aGlzLnJlZD9cIjxCTi1SOiBcIjpcIjxCTjogXCIpK3RoaXMudG9TdHJpbmcoMTYpK1wiPlwifXZhciBTPVtcIlwiLFwiMFwiLFwiMDBcIixcIjAwMFwiLFwiMDAwMFwiLFwiMDAwMDBcIixcIjAwMDAwMFwiLFwiMDAwMDAwMFwiLFwiMDAwMDAwMDBcIixcIjAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXSxOPVswLDAsMjUsMTYsMTIsMTEsMTAsOSw4LDgsNyw3LDcsNyw2LDYsNiw2LDYsNiw2LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDVdLEk9WzAsMCwzMzU1NDQzMiw0MzA0NjcyMSwxNjc3NzIxNiw0ODgyODEyNSw2MDQ2NjE3Niw0MDM1MzYwNywxNjc3NzIxNiw0MzA0NjcyMSwxZTcsMTk0ODcxNzEsMzU4MzE4MDgsNjI3NDg1MTcsNzUyOTUzNiwxMTM5MDYyNSwxNjc3NzIxNiwyNDEzNzU2OSwzNDAxMjIyNCw0NzA0NTg4MSw2NGU2LDQwODQxMDEsNTE1MzYzMiw2NDM2MzQzLDc5NjI2MjQsOTc2NTYyNSwxMTg4MTM3NiwxNDM0ODkwNywxNzIxMDM2OCwyMDUxMTE0OSwyNDNlNSwyODYyOTE1MSwzMzU1NDQzMiwzOTEzNTM5Myw0NTQzNTQyNCw1MjUyMTg3NSw2MDQ2NjE3Nl07by5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oZixhKXtmPWZ8fDEwLGE9YXwwfHwxO3ZhciBjO2lmKGY9PT0xNnx8Zj09PVwiaGV4XCIpe2M9XCJcIjtmb3IodmFyIGQ9MCxtPTAseD0wO3g8dGhpcy5sZW5ndGg7eCsrKXt2YXIgTT10aGlzLndvcmRzW3hdLGw9KChNPDxkfG0pJjE2Nzc3MjE1KS50b1N0cmluZygxNik7bT1NPj4+MjQtZCYxNjc3NzIxNSxkKz0yLGQ+PTI2JiYoZC09MjYseC0tKSxtIT09MHx8eCE9PXRoaXMubGVuZ3RoLTE/Yz1TWzYtbC5sZW5ndGhdK2wrYzpjPWwrY31mb3IobSE9PTAmJihjPW0udG9TdHJpbmcoMTYpK2MpO2MubGVuZ3RoJWEhPT0wOyljPVwiMFwiK2M7cmV0dXJuIHRoaXMubmVnYXRpdmUhPT0wJiYoYz1cIi1cIitjKSxjfWlmKGY9PT0oZnwwKSYmZj49MiYmZjw9MzYpe3ZhciBzPU5bZl0sZz1JW2ZdO2M9XCJcIjt2YXIgaz10aGlzLmNsb25lKCk7Zm9yKGsubmVnYXRpdmU9MDshay5pc1plcm8oKTspe3ZhciB1PWsubW9kcm4oZykudG9TdHJpbmcoZik7az1rLmlkaXZuKGcpLGsuaXNaZXJvKCk/Yz11K2M6Yz1TW3MtdS5sZW5ndGhdK3UrY31mb3IodGhpcy5pc1plcm8oKSYmKGM9XCIwXCIrYyk7Yy5sZW5ndGglYSE9PTA7KWM9XCIwXCIrYztyZXR1cm4gdGhpcy5uZWdhdGl2ZSE9PTAmJihjPVwiLVwiK2MpLGN9aSghMSxcIkJhc2Ugc2hvdWxkIGJlIGJldHdlZW4gMiBhbmQgMzZcIil9LG8ucHJvdG90eXBlLnRvTnVtYmVyPWZ1bmN0aW9uKCl7dmFyIGY9dGhpcy53b3Jkc1swXTtyZXR1cm4gdGhpcy5sZW5ndGg9PT0yP2YrPXRoaXMud29yZHNbMV0qNjcxMDg4NjQ6dGhpcy5sZW5ndGg9PT0zJiZ0aGlzLndvcmRzWzJdPT09MT9mKz00NTAzNTk5NjI3MzcwNDk2K3RoaXMud29yZHNbMV0qNjcxMDg4NjQ6dGhpcy5sZW5ndGg+MiYmaSghMSxcIk51bWJlciBjYW4gb25seSBzYWZlbHkgc3RvcmUgdXAgdG8gNTMgYml0c1wiKSx0aGlzLm5lZ2F0aXZlIT09MD8tZjpmfSxvLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b1N0cmluZygxNiwyKX0saCYmKG8ucHJvdG90eXBlLnRvQnVmZmVyPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMudG9BcnJheUxpa2UoaCxmLGEpfSksby5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbihmLGEpe3JldHVybiB0aGlzLnRvQXJyYXlMaWtlKEFycmF5LGYsYSl9O3ZhciBDPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIGYuYWxsb2NVbnNhZmU/Zi5hbGxvY1Vuc2FmZShhKTpuZXcgZihhKX07by5wcm90b3R5cGUudG9BcnJheUxpa2U9ZnVuY3Rpb24oZixhLGMpe3RoaXMuX3N0cmlwKCk7dmFyIGQ9dGhpcy5ieXRlTGVuZ3RoKCksbT1jfHxNYXRoLm1heCgxLGQpO2koZDw9bSxcImJ5dGUgYXJyYXkgbG9uZ2VyIHRoYW4gZGVzaXJlZCBsZW5ndGhcIiksaShtPjAsXCJSZXF1ZXN0ZWQgYXJyYXkgbGVuZ3RoIDw9IDBcIik7dmFyIHg9QyhmLG0pLE09YT09PVwibGVcIj9cIkxFXCI6XCJCRVwiO3JldHVybiB0aGlzW1wiX3RvQXJyYXlMaWtlXCIrTV0oeCxkKSx4fSxvLnByb3RvdHlwZS5fdG9BcnJheUxpa2VMRT1mdW5jdGlvbihmLGEpe2Zvcih2YXIgYz0wLGQ9MCxtPTAseD0wO208dGhpcy5sZW5ndGg7bSsrKXt2YXIgTT10aGlzLndvcmRzW21dPDx4fGQ7ZltjKytdPU0mMjU1LGM8Zi5sZW5ndGgmJihmW2MrK109TT4+OCYyNTUpLGM8Zi5sZW5ndGgmJihmW2MrK109TT4+MTYmMjU1KSx4PT09Nj8oYzxmLmxlbmd0aCYmKGZbYysrXT1NPj4yNCYyNTUpLGQ9MCx4PTApOihkPU0+Pj4yNCx4Kz0yKX1pZihjPGYubGVuZ3RoKWZvcihmW2MrK109ZDtjPGYubGVuZ3RoOylmW2MrK109MH0sby5wcm90b3R5cGUuX3RvQXJyYXlMaWtlQkU9ZnVuY3Rpb24oZixhKXtmb3IodmFyIGM9Zi5sZW5ndGgtMSxkPTAsbT0wLHg9MDttPHRoaXMubGVuZ3RoO20rKyl7dmFyIE09dGhpcy53b3Jkc1ttXTw8eHxkO2ZbYy0tXT1NJjI1NSxjPj0wJiYoZltjLS1dPU0+PjgmMjU1KSxjPj0wJiYoZltjLS1dPU0+PjE2JjI1NSkseD09PTY/KGM+PTAmJihmW2MtLV09TT4+MjQmMjU1KSxkPTAseD0wKTooZD1NPj4+MjQseCs9Mil9aWYoYz49MClmb3IoZltjLS1dPWQ7Yz49MDspZltjLS1dPTB9LE1hdGguY2x6MzI/by5wcm90b3R5cGUuX2NvdW50Qml0cz1mdW5jdGlvbihmKXtyZXR1cm4gMzItTWF0aC5jbHozMihmKX06by5wcm90b3R5cGUuX2NvdW50Qml0cz1mdW5jdGlvbihmKXt2YXIgYT1mLGM9MDtyZXR1cm4gYT49NDA5NiYmKGMrPTEzLGE+Pj49MTMpLGE+PTY0JiYoYys9NyxhPj4+PTcpLGE+PTgmJihjKz00LGE+Pj49NCksYT49MiYmKGMrPTIsYT4+Pj0yKSxjK2F9LG8ucHJvdG90eXBlLl96ZXJvQml0cz1mdW5jdGlvbihmKXtpZihmPT09MClyZXR1cm4gMjY7dmFyIGE9ZixjPTA7cmV0dXJuIGEmODE5MXx8KGMrPTEzLGE+Pj49MTMpLGEmMTI3fHwoYys9NyxhPj4+PTcpLGEmMTV8fChjKz00LGE+Pj49NCksYSYzfHwoYys9MixhPj4+PTIpLGEmMXx8YysrLGN9LG8ucHJvdG90eXBlLmJpdExlbmd0aD1mdW5jdGlvbigpe3ZhciBmPXRoaXMud29yZHNbdGhpcy5sZW5ndGgtMV0sYT10aGlzLl9jb3VudEJpdHMoZik7cmV0dXJuKHRoaXMubGVuZ3RoLTEpKjI2K2F9O2Z1bmN0aW9uIEQoYil7Zm9yKHZhciBmPW5ldyBBcnJheShiLmJpdExlbmd0aCgpKSxhPTA7YTxmLmxlbmd0aDthKyspe3ZhciBjPWEvMjZ8MCxkPWElMjY7ZlthXT1iLndvcmRzW2NdPj4+ZCYxfXJldHVybiBmfW8ucHJvdG90eXBlLnplcm9CaXRzPWZ1bmN0aW9uKCl7aWYodGhpcy5pc1plcm8oKSlyZXR1cm4gMDtmb3IodmFyIGY9MCxhPTA7YTx0aGlzLmxlbmd0aDthKyspe3ZhciBjPXRoaXMuX3plcm9CaXRzKHRoaXMud29yZHNbYV0pO2lmKGYrPWMsYyE9PTI2KWJyZWFrfXJldHVybiBmfSxvLnByb3RvdHlwZS5ieXRlTGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguY2VpbCh0aGlzLmJpdExlbmd0aCgpLzgpfSxvLnByb3RvdHlwZS50b1R3b3M9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubmVnYXRpdmUhPT0wP3RoaXMuYWJzKCkuaW5vdG4oZikuaWFkZG4oMSk6dGhpcy5jbG9uZSgpfSxvLnByb3RvdHlwZS5mcm9tVHdvcz1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy50ZXN0bihmLTEpP3RoaXMubm90bihmKS5pYWRkbigxKS5pbmVnKCk6dGhpcy5jbG9uZSgpfSxvLnByb3RvdHlwZS5pc05lZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5lZ2F0aXZlIT09MH0sby5wcm90b3R5cGUubmVnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbmVnKCl9LG8ucHJvdG90eXBlLmluZWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc1plcm8oKXx8KHRoaXMubmVnYXRpdmVePTEpLHRoaXN9LG8ucHJvdG90eXBlLml1b3I9ZnVuY3Rpb24oZil7Zm9yKDt0aGlzLmxlbmd0aDxmLmxlbmd0aDspdGhpcy53b3Jkc1t0aGlzLmxlbmd0aCsrXT0wO2Zvcih2YXIgYT0wO2E8Zi5sZW5ndGg7YSsrKXRoaXMud29yZHNbYV09dGhpcy53b3Jkc1thXXxmLndvcmRzW2FdO3JldHVybiB0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5pb3I9ZnVuY3Rpb24oZil7cmV0dXJuIGkoKHRoaXMubmVnYXRpdmV8Zi5uZWdhdGl2ZSk9PT0wKSx0aGlzLml1b3IoZil9LG8ucHJvdG90eXBlLm9yPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmxlbmd0aD5mLmxlbmd0aD90aGlzLmNsb25lKCkuaW9yKGYpOmYuY2xvbmUoKS5pb3IodGhpcyl9LG8ucHJvdG90eXBlLnVvcj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5sZW5ndGg+Zi5sZW5ndGg/dGhpcy5jbG9uZSgpLml1b3IoZik6Zi5jbG9uZSgpLml1b3IodGhpcyl9LG8ucHJvdG90eXBlLml1YW5kPWZ1bmN0aW9uKGYpe3ZhciBhO3RoaXMubGVuZ3RoPmYubGVuZ3RoP2E9ZjphPXRoaXM7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspdGhpcy53b3Jkc1tjXT10aGlzLndvcmRzW2NdJmYud29yZHNbY107cmV0dXJuIHRoaXMubGVuZ3RoPWEubGVuZ3RoLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLmlhbmQ9ZnVuY3Rpb24oZil7cmV0dXJuIGkoKHRoaXMubmVnYXRpdmV8Zi5uZWdhdGl2ZSk9PT0wKSx0aGlzLml1YW5kKGYpfSxvLnByb3RvdHlwZS5hbmQ9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubGVuZ3RoPmYubGVuZ3RoP3RoaXMuY2xvbmUoKS5pYW5kKGYpOmYuY2xvbmUoKS5pYW5kKHRoaXMpfSxvLnByb3RvdHlwZS51YW5kPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmxlbmd0aD5mLmxlbmd0aD90aGlzLmNsb25lKCkuaXVhbmQoZik6Zi5jbG9uZSgpLml1YW5kKHRoaXMpfSxvLnByb3RvdHlwZS5pdXhvcj1mdW5jdGlvbihmKXt2YXIgYSxjO3RoaXMubGVuZ3RoPmYubGVuZ3RoPyhhPXRoaXMsYz1mKTooYT1mLGM9dGhpcyk7Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspdGhpcy53b3Jkc1tkXT1hLndvcmRzW2RdXmMud29yZHNbZF07aWYodGhpcyE9PWEpZm9yKDtkPGEubGVuZ3RoO2QrKyl0aGlzLndvcmRzW2RdPWEud29yZHNbZF07cmV0dXJuIHRoaXMubGVuZ3RoPWEubGVuZ3RoLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLml4b3I9ZnVuY3Rpb24oZil7cmV0dXJuIGkoKHRoaXMubmVnYXRpdmV8Zi5uZWdhdGl2ZSk9PT0wKSx0aGlzLml1eG9yKGYpfSxvLnByb3RvdHlwZS54b3I9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubGVuZ3RoPmYubGVuZ3RoP3RoaXMuY2xvbmUoKS5peG9yKGYpOmYuY2xvbmUoKS5peG9yKHRoaXMpfSxvLnByb3RvdHlwZS51eG9yPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmxlbmd0aD5mLmxlbmd0aD90aGlzLmNsb25lKCkuaXV4b3IoZik6Zi5jbG9uZSgpLml1eG9yKHRoaXMpfSxvLnByb3RvdHlwZS5pbm90bj1mdW5jdGlvbihmKXtpKHR5cGVvZiBmPT1cIm51bWJlclwiJiZmPj0wKTt2YXIgYT1NYXRoLmNlaWwoZi8yNil8MCxjPWYlMjY7dGhpcy5fZXhwYW5kKGEpLGM+MCYmYS0tO2Zvcih2YXIgZD0wO2Q8YTtkKyspdGhpcy53b3Jkc1tkXT1+dGhpcy53b3Jkc1tkXSY2NzEwODg2MztyZXR1cm4gYz4wJiYodGhpcy53b3Jkc1tkXT1+dGhpcy53b3Jkc1tkXSY2NzEwODg2Mz4+MjYtYyksdGhpcy5fc3RyaXAoKX0sby5wcm90b3R5cGUubm90bj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlub3RuKGYpfSxvLnByb3RvdHlwZS5zZXRuPWZ1bmN0aW9uKGYsYSl7aSh0eXBlb2YgZj09XCJudW1iZXJcIiYmZj49MCk7dmFyIGM9Zi8yNnwwLGQ9ZiUyNjtyZXR1cm4gdGhpcy5fZXhwYW5kKGMrMSksYT90aGlzLndvcmRzW2NdPXRoaXMud29yZHNbY118MTw8ZDp0aGlzLndvcmRzW2NdPXRoaXMud29yZHNbY10mfigxPDxkKSx0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5pYWRkPWZ1bmN0aW9uKGYpe3ZhciBhO2lmKHRoaXMubmVnYXRpdmUhPT0wJiZmLm5lZ2F0aXZlPT09MClyZXR1cm4gdGhpcy5uZWdhdGl2ZT0wLGE9dGhpcy5pc3ViKGYpLHRoaXMubmVnYXRpdmVePTEsdGhpcy5fbm9ybVNpZ24oKTtpZih0aGlzLm5lZ2F0aXZlPT09MCYmZi5uZWdhdGl2ZSE9PTApcmV0dXJuIGYubmVnYXRpdmU9MCxhPXRoaXMuaXN1YihmKSxmLm5lZ2F0aXZlPTEsYS5fbm9ybVNpZ24oKTt2YXIgYyxkO3RoaXMubGVuZ3RoPmYubGVuZ3RoPyhjPXRoaXMsZD1mKTooYz1mLGQ9dGhpcyk7Zm9yKHZhciBtPTAseD0wO3g8ZC5sZW5ndGg7eCsrKWE9KGMud29yZHNbeF18MCkrKGQud29yZHNbeF18MCkrbSx0aGlzLndvcmRzW3hdPWEmNjcxMDg4NjMsbT1hPj4+MjY7Zm9yKDttIT09MCYmeDxjLmxlbmd0aDt4KyspYT0oYy53b3Jkc1t4XXwwKSttLHRoaXMud29yZHNbeF09YSY2NzEwODg2MyxtPWE+Pj4yNjtpZih0aGlzLmxlbmd0aD1jLmxlbmd0aCxtIT09MCl0aGlzLndvcmRzW3RoaXMubGVuZ3RoXT1tLHRoaXMubGVuZ3RoKys7ZWxzZSBpZihjIT09dGhpcylmb3IoO3g8Yy5sZW5ndGg7eCsrKXRoaXMud29yZHNbeF09Yy53b3Jkc1t4XTtyZXR1cm4gdGhpc30sby5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGYpe3ZhciBhO3JldHVybiBmLm5lZ2F0aXZlIT09MCYmdGhpcy5uZWdhdGl2ZT09PTA/KGYubmVnYXRpdmU9MCxhPXRoaXMuc3ViKGYpLGYubmVnYXRpdmVePTEsYSk6Zi5uZWdhdGl2ZT09PTAmJnRoaXMubmVnYXRpdmUhPT0wPyh0aGlzLm5lZ2F0aXZlPTAsYT1mLnN1Yih0aGlzKSx0aGlzLm5lZ2F0aXZlPTEsYSk6dGhpcy5sZW5ndGg+Zi5sZW5ndGg/dGhpcy5jbG9uZSgpLmlhZGQoZik6Zi5jbG9uZSgpLmlhZGQodGhpcyl9LG8ucHJvdG90eXBlLmlzdWI9ZnVuY3Rpb24oZil7aWYoZi5uZWdhdGl2ZSE9PTApe2YubmVnYXRpdmU9MDt2YXIgYT10aGlzLmlhZGQoZik7cmV0dXJuIGYubmVnYXRpdmU9MSxhLl9ub3JtU2lnbigpfWVsc2UgaWYodGhpcy5uZWdhdGl2ZSE9PTApcmV0dXJuIHRoaXMubmVnYXRpdmU9MCx0aGlzLmlhZGQoZiksdGhpcy5uZWdhdGl2ZT0xLHRoaXMuX25vcm1TaWduKCk7dmFyIGM9dGhpcy5jbXAoZik7aWYoYz09PTApcmV0dXJuIHRoaXMubmVnYXRpdmU9MCx0aGlzLmxlbmd0aD0xLHRoaXMud29yZHNbMF09MCx0aGlzO3ZhciBkLG07Yz4wPyhkPXRoaXMsbT1mKTooZD1mLG09dGhpcyk7Zm9yKHZhciB4PTAsTT0wO008bS5sZW5ndGg7TSsrKWE9KGQud29yZHNbTV18MCktKG0ud29yZHNbTV18MCkreCx4PWE+PjI2LHRoaXMud29yZHNbTV09YSY2NzEwODg2Mztmb3IoO3ghPT0wJiZNPGQubGVuZ3RoO00rKylhPShkLndvcmRzW01dfDApK3gseD1hPj4yNix0aGlzLndvcmRzW01dPWEmNjcxMDg4NjM7aWYoeD09PTAmJk08ZC5sZW5ndGgmJmQhPT10aGlzKWZvcig7TTxkLmxlbmd0aDtNKyspdGhpcy53b3Jkc1tNXT1kLndvcmRzW01dO3JldHVybiB0aGlzLmxlbmd0aD1NYXRoLm1heCh0aGlzLmxlbmd0aCxNKSxkIT09dGhpcyYmKHRoaXMubmVnYXRpdmU9MSksdGhpcy5fc3RyaXAoKX0sby5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXN1YihmKX07ZnVuY3Rpb24gVShiLGYsYSl7YS5uZWdhdGl2ZT1mLm5lZ2F0aXZlXmIubmVnYXRpdmU7dmFyIGM9Yi5sZW5ndGgrZi5sZW5ndGh8MDthLmxlbmd0aD1jLGM9Yy0xfDA7dmFyIGQ9Yi53b3Jkc1swXXwwLG09Zi53b3Jkc1swXXwwLHg9ZCptLE09eCY2NzEwODg2MyxsPXgvNjcxMDg4NjR8MDthLndvcmRzWzBdPU07Zm9yKHZhciBzPTE7czxjO3MrKyl7Zm9yKHZhciBnPWw+Pj4yNixrPWwmNjcxMDg4NjMsdT1NYXRoLm1pbihzLGYubGVuZ3RoLTEpLEU9TWF0aC5tYXgoMCxzLWIubGVuZ3RoKzEpO0U8PXU7RSsrKXt2YXIgXz1zLUV8MDtkPWIud29yZHNbX118MCxtPWYud29yZHNbRV18MCx4PWQqbStrLGcrPXgvNjcxMDg4NjR8MCxrPXgmNjcxMDg4NjN9YS53b3Jkc1tzXT1rfDAsbD1nfDB9cmV0dXJuIGwhPT0wP2Eud29yZHNbc109bHwwOmEubGVuZ3RoLS0sYS5fc3RyaXAoKX12YXIgSj1mdW5jdGlvbihmLGEsYyl7dmFyIGQ9Zi53b3JkcyxtPWEud29yZHMseD1jLndvcmRzLE09MCxsLHMsZyxrPWRbMF18MCx1PWsmODE5MSxFPWs+Pj4xMyxfPWRbMV18MCxCPV8mODE5MSxSPV8+Pj4xMyxGPWRbMl18MCxQPUYmODE5MSxPPUY+Pj4xMyxDdD1kWzNdfDAsVD1DdCY4MTkxLHE9Q3Q+Pj4xMyxUZT1kWzRdfDAsWD1UZSY4MTkxLCQ9VGU+Pj4xMyxEZT1kWzVdfDAsWj1EZSY4MTkxLHR0PURlPj4+MTMsRmU9ZFs2XXwwLGV0PUZlJjgxOTEscnQ9RmU+Pj4xMyxVZT1kWzddfDAsaXQ9VWUmODE5MSxudD1VZT4+PjEzLGtlPWRbOF18MCxmdD1rZSY4MTkxLG90PWtlPj4+MTMscWU9ZFs5XXwwLHN0PXFlJjgxOTEsYXQ9cWU+Pj4xMyxLZT1tWzBdfDAsdXQ9S2UmODE5MSxodD1LZT4+PjEzLEhlPW1bMV18MCxjdD1IZSY4MTkxLGx0PUhlPj4+MTMsTGU9bVsyXXwwLGR0PUxlJjgxOTEscHQ9TGU+Pj4xMyx6ZT1tWzNdfDAsdnQ9emUmODE5MSxndD16ZT4+PjEzLGplPW1bNF18MCxtdD1qZSY4MTkxLEF0PWplPj4+MTMsUWU9bVs1XXwwLGJ0PVFlJjgxOTEseXQ9UWU+Pj4xMyxKZT1tWzZdfDAsd3Q9SmUmODE5MSx4dD1KZT4+PjEzLEdlPW1bN118MCxNdD1HZSY4MTkxLEV0PUdlPj4+MTMsWWU9bVs4XXwwLFN0PVllJjgxOTEsSXQ9WWU+Pj4xMyxWZT1tWzldfDAsTnQ9VmUmODE5MSxfdD1WZT4+PjEzO2MubmVnYXRpdmU9Zi5uZWdhdGl2ZV5hLm5lZ2F0aXZlLGMubGVuZ3RoPTE5LGw9TWF0aC5pbXVsKHUsdXQpLHM9TWF0aC5pbXVsKHUsaHQpLHM9cytNYXRoLmltdWwoRSx1dCl8MCxnPU1hdGguaW11bChFLGh0KTt2YXIgTWU9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KGcrKHM+Pj4xMyl8MCkrKE1lPj4+MjYpfDAsTWUmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKEIsdXQpLHM9TWF0aC5pbXVsKEIsaHQpLHM9cytNYXRoLmltdWwoUix1dCl8MCxnPU1hdGguaW11bChSLGh0KSxsPWwrTWF0aC5pbXVsKHUsY3QpfDAscz1zK01hdGguaW11bCh1LGx0KXwwLHM9cytNYXRoLmltdWwoRSxjdCl8MCxnPWcrTWF0aC5pbXVsKEUsbHQpfDA7dmFyIEVlPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPShnKyhzPj4+MTMpfDApKyhFZT4+PjI2KXwwLEVlJj02NzEwODg2MyxsPU1hdGguaW11bChQLHV0KSxzPU1hdGguaW11bChQLGh0KSxzPXMrTWF0aC5pbXVsKE8sdXQpfDAsZz1NYXRoLmltdWwoTyxodCksbD1sK01hdGguaW11bChCLGN0KXwwLHM9cytNYXRoLmltdWwoQixsdCl8MCxzPXMrTWF0aC5pbXVsKFIsY3QpfDAsZz1nK01hdGguaW11bChSLGx0KXwwLGw9bCtNYXRoLmltdWwodSxkdCl8MCxzPXMrTWF0aC5pbXVsKHUscHQpfDAscz1zK01hdGguaW11bChFLGR0KXwwLGc9ZytNYXRoLmltdWwoRSxwdCl8MDt2YXIgU2U9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KGcrKHM+Pj4xMyl8MCkrKFNlPj4+MjYpfDAsU2UmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKFQsdXQpLHM9TWF0aC5pbXVsKFQsaHQpLHM9cytNYXRoLmltdWwocSx1dCl8MCxnPU1hdGguaW11bChxLGh0KSxsPWwrTWF0aC5pbXVsKFAsY3QpfDAscz1zK01hdGguaW11bChQLGx0KXwwLHM9cytNYXRoLmltdWwoTyxjdCl8MCxnPWcrTWF0aC5pbXVsKE8sbHQpfDAsbD1sK01hdGguaW11bChCLGR0KXwwLHM9cytNYXRoLmltdWwoQixwdCl8MCxzPXMrTWF0aC5pbXVsKFIsZHQpfDAsZz1nK01hdGguaW11bChSLHB0KXwwLGw9bCtNYXRoLmltdWwodSx2dCl8MCxzPXMrTWF0aC5pbXVsKHUsZ3QpfDAscz1zK01hdGguaW11bChFLHZ0KXwwLGc9ZytNYXRoLmltdWwoRSxndCl8MDt2YXIgSWU9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KGcrKHM+Pj4xMyl8MCkrKEllPj4+MjYpfDAsSWUmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKFgsdXQpLHM9TWF0aC5pbXVsKFgsaHQpLHM9cytNYXRoLmltdWwoJCx1dCl8MCxnPU1hdGguaW11bCgkLGh0KSxsPWwrTWF0aC5pbXVsKFQsY3QpfDAscz1zK01hdGguaW11bChULGx0KXwwLHM9cytNYXRoLmltdWwocSxjdCl8MCxnPWcrTWF0aC5pbXVsKHEsbHQpfDAsbD1sK01hdGguaW11bChQLGR0KXwwLHM9cytNYXRoLmltdWwoUCxwdCl8MCxzPXMrTWF0aC5pbXVsKE8sZHQpfDAsZz1nK01hdGguaW11bChPLHB0KXwwLGw9bCtNYXRoLmltdWwoQix2dCl8MCxzPXMrTWF0aC5pbXVsKEIsZ3QpfDAscz1zK01hdGguaW11bChSLHZ0KXwwLGc9ZytNYXRoLmltdWwoUixndCl8MCxsPWwrTWF0aC5pbXVsKHUsbXQpfDAscz1zK01hdGguaW11bCh1LEF0KXwwLHM9cytNYXRoLmltdWwoRSxtdCl8MCxnPWcrTWF0aC5pbXVsKEUsQXQpfDA7dmFyIE5lPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPShnKyhzPj4+MTMpfDApKyhOZT4+PjI2KXwwLE5lJj02NzEwODg2MyxsPU1hdGguaW11bChaLHV0KSxzPU1hdGguaW11bChaLGh0KSxzPXMrTWF0aC5pbXVsKHR0LHV0KXwwLGc9TWF0aC5pbXVsKHR0LGh0KSxsPWwrTWF0aC5pbXVsKFgsY3QpfDAscz1zK01hdGguaW11bChYLGx0KXwwLHM9cytNYXRoLmltdWwoJCxjdCl8MCxnPWcrTWF0aC5pbXVsKCQsbHQpfDAsbD1sK01hdGguaW11bChULGR0KXwwLHM9cytNYXRoLmltdWwoVCxwdCl8MCxzPXMrTWF0aC5pbXVsKHEsZHQpfDAsZz1nK01hdGguaW11bChxLHB0KXwwLGw9bCtNYXRoLmltdWwoUCx2dCl8MCxzPXMrTWF0aC5pbXVsKFAsZ3QpfDAscz1zK01hdGguaW11bChPLHZ0KXwwLGc9ZytNYXRoLmltdWwoTyxndCl8MCxsPWwrTWF0aC5pbXVsKEIsbXQpfDAscz1zK01hdGguaW11bChCLEF0KXwwLHM9cytNYXRoLmltdWwoUixtdCl8MCxnPWcrTWF0aC5pbXVsKFIsQXQpfDAsbD1sK01hdGguaW11bCh1LGJ0KXwwLHM9cytNYXRoLmltdWwodSx5dCl8MCxzPXMrTWF0aC5pbXVsKEUsYnQpfDAsZz1nK01hdGguaW11bChFLHl0KXwwO3ZhciBacj0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsoWnI+Pj4yNil8MCxaciY9NjcxMDg4NjMsbD1NYXRoLmltdWwoZXQsdXQpLHM9TWF0aC5pbXVsKGV0LGh0KSxzPXMrTWF0aC5pbXVsKHJ0LHV0KXwwLGc9TWF0aC5pbXVsKHJ0LGh0KSxsPWwrTWF0aC5pbXVsKFosY3QpfDAscz1zK01hdGguaW11bChaLGx0KXwwLHM9cytNYXRoLmltdWwodHQsY3QpfDAsZz1nK01hdGguaW11bCh0dCxsdCl8MCxsPWwrTWF0aC5pbXVsKFgsZHQpfDAscz1zK01hdGguaW11bChYLHB0KXwwLHM9cytNYXRoLmltdWwoJCxkdCl8MCxnPWcrTWF0aC5pbXVsKCQscHQpfDAsbD1sK01hdGguaW11bChULHZ0KXwwLHM9cytNYXRoLmltdWwoVCxndCl8MCxzPXMrTWF0aC5pbXVsKHEsdnQpfDAsZz1nK01hdGguaW11bChxLGd0KXwwLGw9bCtNYXRoLmltdWwoUCxtdCl8MCxzPXMrTWF0aC5pbXVsKFAsQXQpfDAscz1zK01hdGguaW11bChPLG10KXwwLGc9ZytNYXRoLmltdWwoTyxBdCl8MCxsPWwrTWF0aC5pbXVsKEIsYnQpfDAscz1zK01hdGguaW11bChCLHl0KXwwLHM9cytNYXRoLmltdWwoUixidCl8MCxnPWcrTWF0aC5pbXVsKFIseXQpfDAsbD1sK01hdGguaW11bCh1LHd0KXwwLHM9cytNYXRoLmltdWwodSx4dCl8MCxzPXMrTWF0aC5pbXVsKEUsd3QpfDAsZz1nK01hdGguaW11bChFLHh0KXwwO3ZhciB0aT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsodGk+Pj4yNil8MCx0aSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoaXQsdXQpLHM9TWF0aC5pbXVsKGl0LGh0KSxzPXMrTWF0aC5pbXVsKG50LHV0KXwwLGc9TWF0aC5pbXVsKG50LGh0KSxsPWwrTWF0aC5pbXVsKGV0LGN0KXwwLHM9cytNYXRoLmltdWwoZXQsbHQpfDAscz1zK01hdGguaW11bChydCxjdCl8MCxnPWcrTWF0aC5pbXVsKHJ0LGx0KXwwLGw9bCtNYXRoLmltdWwoWixkdCl8MCxzPXMrTWF0aC5pbXVsKFoscHQpfDAscz1zK01hdGguaW11bCh0dCxkdCl8MCxnPWcrTWF0aC5pbXVsKHR0LHB0KXwwLGw9bCtNYXRoLmltdWwoWCx2dCl8MCxzPXMrTWF0aC5pbXVsKFgsZ3QpfDAscz1zK01hdGguaW11bCgkLHZ0KXwwLGc9ZytNYXRoLmltdWwoJCxndCl8MCxsPWwrTWF0aC5pbXVsKFQsbXQpfDAscz1zK01hdGguaW11bChULEF0KXwwLHM9cytNYXRoLmltdWwocSxtdCl8MCxnPWcrTWF0aC5pbXVsKHEsQXQpfDAsbD1sK01hdGguaW11bChQLGJ0KXwwLHM9cytNYXRoLmltdWwoUCx5dCl8MCxzPXMrTWF0aC5pbXVsKE8sYnQpfDAsZz1nK01hdGguaW11bChPLHl0KXwwLGw9bCtNYXRoLmltdWwoQix3dCl8MCxzPXMrTWF0aC5pbXVsKEIseHQpfDAscz1zK01hdGguaW11bChSLHd0KXwwLGc9ZytNYXRoLmltdWwoUix4dCl8MCxsPWwrTWF0aC5pbXVsKHUsTXQpfDAscz1zK01hdGguaW11bCh1LEV0KXwwLHM9cytNYXRoLmltdWwoRSxNdCl8MCxnPWcrTWF0aC5pbXVsKEUsRXQpfDA7dmFyIGVpPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPShnKyhzPj4+MTMpfDApKyhlaT4+PjI2KXwwLGVpJj02NzEwODg2MyxsPU1hdGguaW11bChmdCx1dCkscz1NYXRoLmltdWwoZnQsaHQpLHM9cytNYXRoLmltdWwob3QsdXQpfDAsZz1NYXRoLmltdWwob3QsaHQpLGw9bCtNYXRoLmltdWwoaXQsY3QpfDAscz1zK01hdGguaW11bChpdCxsdCl8MCxzPXMrTWF0aC5pbXVsKG50LGN0KXwwLGc9ZytNYXRoLmltdWwobnQsbHQpfDAsbD1sK01hdGguaW11bChldCxkdCl8MCxzPXMrTWF0aC5pbXVsKGV0LHB0KXwwLHM9cytNYXRoLmltdWwocnQsZHQpfDAsZz1nK01hdGguaW11bChydCxwdCl8MCxsPWwrTWF0aC5pbXVsKFosdnQpfDAscz1zK01hdGguaW11bChaLGd0KXwwLHM9cytNYXRoLmltdWwodHQsdnQpfDAsZz1nK01hdGguaW11bCh0dCxndCl8MCxsPWwrTWF0aC5pbXVsKFgsbXQpfDAscz1zK01hdGguaW11bChYLEF0KXwwLHM9cytNYXRoLmltdWwoJCxtdCl8MCxnPWcrTWF0aC5pbXVsKCQsQXQpfDAsbD1sK01hdGguaW11bChULGJ0KXwwLHM9cytNYXRoLmltdWwoVCx5dCl8MCxzPXMrTWF0aC5pbXVsKHEsYnQpfDAsZz1nK01hdGguaW11bChxLHl0KXwwLGw9bCtNYXRoLmltdWwoUCx3dCl8MCxzPXMrTWF0aC5pbXVsKFAseHQpfDAscz1zK01hdGguaW11bChPLHd0KXwwLGc9ZytNYXRoLmltdWwoTyx4dCl8MCxsPWwrTWF0aC5pbXVsKEIsTXQpfDAscz1zK01hdGguaW11bChCLEV0KXwwLHM9cytNYXRoLmltdWwoUixNdCl8MCxnPWcrTWF0aC5pbXVsKFIsRXQpfDAsbD1sK01hdGguaW11bCh1LFN0KXwwLHM9cytNYXRoLmltdWwodSxJdCl8MCxzPXMrTWF0aC5pbXVsKEUsU3QpfDAsZz1nK01hdGguaW11bChFLEl0KXwwO3ZhciByaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsocmk+Pj4yNil8MCxyaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsdXQpLHM9TWF0aC5pbXVsKHN0LGh0KSxzPXMrTWF0aC5pbXVsKGF0LHV0KXwwLGc9TWF0aC5pbXVsKGF0LGh0KSxsPWwrTWF0aC5pbXVsKGZ0LGN0KXwwLHM9cytNYXRoLmltdWwoZnQsbHQpfDAscz1zK01hdGguaW11bChvdCxjdCl8MCxnPWcrTWF0aC5pbXVsKG90LGx0KXwwLGw9bCtNYXRoLmltdWwoaXQsZHQpfDAscz1zK01hdGguaW11bChpdCxwdCl8MCxzPXMrTWF0aC5pbXVsKG50LGR0KXwwLGc9ZytNYXRoLmltdWwobnQscHQpfDAsbD1sK01hdGguaW11bChldCx2dCl8MCxzPXMrTWF0aC5pbXVsKGV0LGd0KXwwLHM9cytNYXRoLmltdWwocnQsdnQpfDAsZz1nK01hdGguaW11bChydCxndCl8MCxsPWwrTWF0aC5pbXVsKFosbXQpfDAscz1zK01hdGguaW11bChaLEF0KXwwLHM9cytNYXRoLmltdWwodHQsbXQpfDAsZz1nK01hdGguaW11bCh0dCxBdCl8MCxsPWwrTWF0aC5pbXVsKFgsYnQpfDAscz1zK01hdGguaW11bChYLHl0KXwwLHM9cytNYXRoLmltdWwoJCxidCl8MCxnPWcrTWF0aC5pbXVsKCQseXQpfDAsbD1sK01hdGguaW11bChULHd0KXwwLHM9cytNYXRoLmltdWwoVCx4dCl8MCxzPXMrTWF0aC5pbXVsKHEsd3QpfDAsZz1nK01hdGguaW11bChxLHh0KXwwLGw9bCtNYXRoLmltdWwoUCxNdCl8MCxzPXMrTWF0aC5pbXVsKFAsRXQpfDAscz1zK01hdGguaW11bChPLE10KXwwLGc9ZytNYXRoLmltdWwoTyxFdCl8MCxsPWwrTWF0aC5pbXVsKEIsU3QpfDAscz1zK01hdGguaW11bChCLEl0KXwwLHM9cytNYXRoLmltdWwoUixTdCl8MCxnPWcrTWF0aC5pbXVsKFIsSXQpfDAsbD1sK01hdGguaW11bCh1LE50KXwwLHM9cytNYXRoLmltdWwodSxfdCl8MCxzPXMrTWF0aC5pbXVsKEUsTnQpfDAsZz1nK01hdGguaW11bChFLF90KXwwO3ZhciBpaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsoaWk+Pj4yNil8MCxpaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsY3QpLHM9TWF0aC5pbXVsKHN0LGx0KSxzPXMrTWF0aC5pbXVsKGF0LGN0KXwwLGc9TWF0aC5pbXVsKGF0LGx0KSxsPWwrTWF0aC5pbXVsKGZ0LGR0KXwwLHM9cytNYXRoLmltdWwoZnQscHQpfDAscz1zK01hdGguaW11bChvdCxkdCl8MCxnPWcrTWF0aC5pbXVsKG90LHB0KXwwLGw9bCtNYXRoLmltdWwoaXQsdnQpfDAscz1zK01hdGguaW11bChpdCxndCl8MCxzPXMrTWF0aC5pbXVsKG50LHZ0KXwwLGc9ZytNYXRoLmltdWwobnQsZ3QpfDAsbD1sK01hdGguaW11bChldCxtdCl8MCxzPXMrTWF0aC5pbXVsKGV0LEF0KXwwLHM9cytNYXRoLmltdWwocnQsbXQpfDAsZz1nK01hdGguaW11bChydCxBdCl8MCxsPWwrTWF0aC5pbXVsKFosYnQpfDAscz1zK01hdGguaW11bChaLHl0KXwwLHM9cytNYXRoLmltdWwodHQsYnQpfDAsZz1nK01hdGguaW11bCh0dCx5dCl8MCxsPWwrTWF0aC5pbXVsKFgsd3QpfDAscz1zK01hdGguaW11bChYLHh0KXwwLHM9cytNYXRoLmltdWwoJCx3dCl8MCxnPWcrTWF0aC5pbXVsKCQseHQpfDAsbD1sK01hdGguaW11bChULE10KXwwLHM9cytNYXRoLmltdWwoVCxFdCl8MCxzPXMrTWF0aC5pbXVsKHEsTXQpfDAsZz1nK01hdGguaW11bChxLEV0KXwwLGw9bCtNYXRoLmltdWwoUCxTdCl8MCxzPXMrTWF0aC5pbXVsKFAsSXQpfDAscz1zK01hdGguaW11bChPLFN0KXwwLGc9ZytNYXRoLmltdWwoTyxJdCl8MCxsPWwrTWF0aC5pbXVsKEIsTnQpfDAscz1zK01hdGguaW11bChCLF90KXwwLHM9cytNYXRoLmltdWwoUixOdCl8MCxnPWcrTWF0aC5pbXVsKFIsX3QpfDA7dmFyIG5pPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPShnKyhzPj4+MTMpfDApKyhuaT4+PjI2KXwwLG5pJj02NzEwODg2MyxsPU1hdGguaW11bChzdCxkdCkscz1NYXRoLmltdWwoc3QscHQpLHM9cytNYXRoLmltdWwoYXQsZHQpfDAsZz1NYXRoLmltdWwoYXQscHQpLGw9bCtNYXRoLmltdWwoZnQsdnQpfDAscz1zK01hdGguaW11bChmdCxndCl8MCxzPXMrTWF0aC5pbXVsKG90LHZ0KXwwLGc9ZytNYXRoLmltdWwob3QsZ3QpfDAsbD1sK01hdGguaW11bChpdCxtdCl8MCxzPXMrTWF0aC5pbXVsKGl0LEF0KXwwLHM9cytNYXRoLmltdWwobnQsbXQpfDAsZz1nK01hdGguaW11bChudCxBdCl8MCxsPWwrTWF0aC5pbXVsKGV0LGJ0KXwwLHM9cytNYXRoLmltdWwoZXQseXQpfDAscz1zK01hdGguaW11bChydCxidCl8MCxnPWcrTWF0aC5pbXVsKHJ0LHl0KXwwLGw9bCtNYXRoLmltdWwoWix3dCl8MCxzPXMrTWF0aC5pbXVsKFoseHQpfDAscz1zK01hdGguaW11bCh0dCx3dCl8MCxnPWcrTWF0aC5pbXVsKHR0LHh0KXwwLGw9bCtNYXRoLmltdWwoWCxNdCl8MCxzPXMrTWF0aC5pbXVsKFgsRXQpfDAscz1zK01hdGguaW11bCgkLE10KXwwLGc9ZytNYXRoLmltdWwoJCxFdCl8MCxsPWwrTWF0aC5pbXVsKFQsU3QpfDAscz1zK01hdGguaW11bChULEl0KXwwLHM9cytNYXRoLmltdWwocSxTdCl8MCxnPWcrTWF0aC5pbXVsKHEsSXQpfDAsbD1sK01hdGguaW11bChQLE50KXwwLHM9cytNYXRoLmltdWwoUCxfdCl8MCxzPXMrTWF0aC5pbXVsKE8sTnQpfDAsZz1nK01hdGguaW11bChPLF90KXwwO3ZhciBmaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsoZmk+Pj4yNil8MCxmaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsdnQpLHM9TWF0aC5pbXVsKHN0LGd0KSxzPXMrTWF0aC5pbXVsKGF0LHZ0KXwwLGc9TWF0aC5pbXVsKGF0LGd0KSxsPWwrTWF0aC5pbXVsKGZ0LG10KXwwLHM9cytNYXRoLmltdWwoZnQsQXQpfDAscz1zK01hdGguaW11bChvdCxtdCl8MCxnPWcrTWF0aC5pbXVsKG90LEF0KXwwLGw9bCtNYXRoLmltdWwoaXQsYnQpfDAscz1zK01hdGguaW11bChpdCx5dCl8MCxzPXMrTWF0aC5pbXVsKG50LGJ0KXwwLGc9ZytNYXRoLmltdWwobnQseXQpfDAsbD1sK01hdGguaW11bChldCx3dCl8MCxzPXMrTWF0aC5pbXVsKGV0LHh0KXwwLHM9cytNYXRoLmltdWwocnQsd3QpfDAsZz1nK01hdGguaW11bChydCx4dCl8MCxsPWwrTWF0aC5pbXVsKFosTXQpfDAscz1zK01hdGguaW11bChaLEV0KXwwLHM9cytNYXRoLmltdWwodHQsTXQpfDAsZz1nK01hdGguaW11bCh0dCxFdCl8MCxsPWwrTWF0aC5pbXVsKFgsU3QpfDAscz1zK01hdGguaW11bChYLEl0KXwwLHM9cytNYXRoLmltdWwoJCxTdCl8MCxnPWcrTWF0aC5pbXVsKCQsSXQpfDAsbD1sK01hdGguaW11bChULE50KXwwLHM9cytNYXRoLmltdWwoVCxfdCl8MCxzPXMrTWF0aC5pbXVsKHEsTnQpfDAsZz1nK01hdGguaW11bChxLF90KXwwO3ZhciBvaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsob2k+Pj4yNil8MCxvaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsbXQpLHM9TWF0aC5pbXVsKHN0LEF0KSxzPXMrTWF0aC5pbXVsKGF0LG10KXwwLGc9TWF0aC5pbXVsKGF0LEF0KSxsPWwrTWF0aC5pbXVsKGZ0LGJ0KXwwLHM9cytNYXRoLmltdWwoZnQseXQpfDAscz1zK01hdGguaW11bChvdCxidCl8MCxnPWcrTWF0aC5pbXVsKG90LHl0KXwwLGw9bCtNYXRoLmltdWwoaXQsd3QpfDAscz1zK01hdGguaW11bChpdCx4dCl8MCxzPXMrTWF0aC5pbXVsKG50LHd0KXwwLGc9ZytNYXRoLmltdWwobnQseHQpfDAsbD1sK01hdGguaW11bChldCxNdCl8MCxzPXMrTWF0aC5pbXVsKGV0LEV0KXwwLHM9cytNYXRoLmltdWwocnQsTXQpfDAsZz1nK01hdGguaW11bChydCxFdCl8MCxsPWwrTWF0aC5pbXVsKFosU3QpfDAscz1zK01hdGguaW11bChaLEl0KXwwLHM9cytNYXRoLmltdWwodHQsU3QpfDAsZz1nK01hdGguaW11bCh0dCxJdCl8MCxsPWwrTWF0aC5pbXVsKFgsTnQpfDAscz1zK01hdGguaW11bChYLF90KXwwLHM9cytNYXRoLmltdWwoJCxOdCl8MCxnPWcrTWF0aC5pbXVsKCQsX3QpfDA7dmFyIHNpPShNK2x8MCkrKChzJjgxOTEpPDwxMyl8MDtNPShnKyhzPj4+MTMpfDApKyhzaT4+PjI2KXwwLHNpJj02NzEwODg2MyxsPU1hdGguaW11bChzdCxidCkscz1NYXRoLmltdWwoc3QseXQpLHM9cytNYXRoLmltdWwoYXQsYnQpfDAsZz1NYXRoLmltdWwoYXQseXQpLGw9bCtNYXRoLmltdWwoZnQsd3QpfDAscz1zK01hdGguaW11bChmdCx4dCl8MCxzPXMrTWF0aC5pbXVsKG90LHd0KXwwLGc9ZytNYXRoLmltdWwob3QseHQpfDAsbD1sK01hdGguaW11bChpdCxNdCl8MCxzPXMrTWF0aC5pbXVsKGl0LEV0KXwwLHM9cytNYXRoLmltdWwobnQsTXQpfDAsZz1nK01hdGguaW11bChudCxFdCl8MCxsPWwrTWF0aC5pbXVsKGV0LFN0KXwwLHM9cytNYXRoLmltdWwoZXQsSXQpfDAscz1zK01hdGguaW11bChydCxTdCl8MCxnPWcrTWF0aC5pbXVsKHJ0LEl0KXwwLGw9bCtNYXRoLmltdWwoWixOdCl8MCxzPXMrTWF0aC5pbXVsKFosX3QpfDAscz1zK01hdGguaW11bCh0dCxOdCl8MCxnPWcrTWF0aC5pbXVsKHR0LF90KXwwO3ZhciBhaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsoYWk+Pj4yNil8MCxhaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3Qsd3QpLHM9TWF0aC5pbXVsKHN0LHh0KSxzPXMrTWF0aC5pbXVsKGF0LHd0KXwwLGc9TWF0aC5pbXVsKGF0LHh0KSxsPWwrTWF0aC5pbXVsKGZ0LE10KXwwLHM9cytNYXRoLmltdWwoZnQsRXQpfDAscz1zK01hdGguaW11bChvdCxNdCl8MCxnPWcrTWF0aC5pbXVsKG90LEV0KXwwLGw9bCtNYXRoLmltdWwoaXQsU3QpfDAscz1zK01hdGguaW11bChpdCxJdCl8MCxzPXMrTWF0aC5pbXVsKG50LFN0KXwwLGc9ZytNYXRoLmltdWwobnQsSXQpfDAsbD1sK01hdGguaW11bChldCxOdCl8MCxzPXMrTWF0aC5pbXVsKGV0LF90KXwwLHM9cytNYXRoLmltdWwocnQsTnQpfDAsZz1nK01hdGguaW11bChydCxfdCl8MDt2YXIgdWk9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO009KGcrKHM+Pj4xMyl8MCkrKHVpPj4+MjYpfDAsdWkmPTY3MTA4ODYzLGw9TWF0aC5pbXVsKHN0LE10KSxzPU1hdGguaW11bChzdCxFdCkscz1zK01hdGguaW11bChhdCxNdCl8MCxnPU1hdGguaW11bChhdCxFdCksbD1sK01hdGguaW11bChmdCxTdCl8MCxzPXMrTWF0aC5pbXVsKGZ0LEl0KXwwLHM9cytNYXRoLmltdWwob3QsU3QpfDAsZz1nK01hdGguaW11bChvdCxJdCl8MCxsPWwrTWF0aC5pbXVsKGl0LE50KXwwLHM9cytNYXRoLmltdWwoaXQsX3QpfDAscz1zK01hdGguaW11bChudCxOdCl8MCxnPWcrTWF0aC5pbXVsKG50LF90KXwwO3ZhciBoaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsoaGk+Pj4yNil8MCxoaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsU3QpLHM9TWF0aC5pbXVsKHN0LEl0KSxzPXMrTWF0aC5pbXVsKGF0LFN0KXwwLGc9TWF0aC5pbXVsKGF0LEl0KSxsPWwrTWF0aC5pbXVsKGZ0LE50KXwwLHM9cytNYXRoLmltdWwoZnQsX3QpfDAscz1zK01hdGguaW11bChvdCxOdCl8MCxnPWcrTWF0aC5pbXVsKG90LF90KXwwO3ZhciBjaT0oTStsfDApKygocyY4MTkxKTw8MTMpfDA7TT0oZysocz4+PjEzKXwwKSsoY2k+Pj4yNil8MCxjaSY9NjcxMDg4NjMsbD1NYXRoLmltdWwoc3QsTnQpLHM9TWF0aC5pbXVsKHN0LF90KSxzPXMrTWF0aC5pbXVsKGF0LE50KXwwLGc9TWF0aC5pbXVsKGF0LF90KTt2YXIgbGk9KE0rbHwwKSsoKHMmODE5MSk8PDEzKXwwO3JldHVybiBNPShnKyhzPj4+MTMpfDApKyhsaT4+PjI2KXwwLGxpJj02NzEwODg2Myx4WzBdPU1lLHhbMV09RWUseFsyXT1TZSx4WzNdPUllLHhbNF09TmUseFs1XT1acix4WzZdPXRpLHhbN109ZWkseFs4XT1yaSx4WzldPWlpLHhbMTBdPW5pLHhbMTFdPWZpLHhbMTJdPW9pLHhbMTNdPXNpLHhbMTRdPWFpLHhbMTVdPXVpLHhbMTZdPWhpLHhbMTddPWNpLHhbMThdPWxpLE0hPT0wJiYoeFsxOV09TSxjLmxlbmd0aCsrKSxjfTtNYXRoLmltdWx8fChKPVUpO2Z1bmN0aW9uIEJ0KGIsZixhKXthLm5lZ2F0aXZlPWYubmVnYXRpdmVeYi5uZWdhdGl2ZSxhLmxlbmd0aD1iLmxlbmd0aCtmLmxlbmd0aDtmb3IodmFyIGM9MCxkPTAsbT0wO208YS5sZW5ndGgtMTttKyspe3ZhciB4PWQ7ZD0wO2Zvcih2YXIgTT1jJjY3MTA4ODYzLGw9TWF0aC5taW4obSxmLmxlbmd0aC0xKSxzPU1hdGgubWF4KDAsbS1iLmxlbmd0aCsxKTtzPD1sO3MrKyl7dmFyIGc9bS1zLGs9Yi53b3Jkc1tnXXwwLHU9Zi53b3Jkc1tzXXwwLEU9ayp1LF89RSY2NzEwODg2Mzt4PXgrKEUvNjcxMDg4NjR8MCl8MCxfPV8rTXwwLE09XyY2NzEwODg2Myx4PXgrKF8+Pj4yNil8MCxkKz14Pj4+MjYseCY9NjcxMDg4NjN9YS53b3Jkc1ttXT1NLGM9eCx4PWR9cmV0dXJuIGMhPT0wP2Eud29yZHNbbV09YzphLmxlbmd0aC0tLGEuX3N0cmlwKCl9ZnVuY3Rpb24gRyhiLGYsYSl7cmV0dXJuIEJ0KGIsZixhKX1vLnByb3RvdHlwZS5tdWxUbz1mdW5jdGlvbihmLGEpe3ZhciBjLGQ9dGhpcy5sZW5ndGgrZi5sZW5ndGg7cmV0dXJuIHRoaXMubGVuZ3RoPT09MTAmJmYubGVuZ3RoPT09MTA/Yz1KKHRoaXMsZixhKTpkPDYzP2M9VSh0aGlzLGYsYSk6ZDwxMDI0P2M9QnQodGhpcyxmLGEpOmM9Ryh0aGlzLGYsYSksY30sby5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKGYpe3ZhciBhPW5ldyBvKG51bGwpO3JldHVybiBhLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCtmLmxlbmd0aCksdGhpcy5tdWxUbyhmLGEpfSxvLnByb3RvdHlwZS5tdWxmPWZ1bmN0aW9uKGYpe3ZhciBhPW5ldyBvKG51bGwpO3JldHVybiBhLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCtmLmxlbmd0aCksRyh0aGlzLGYsYSl9LG8ucHJvdG90eXBlLmltdWw9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuY2xvbmUoKS5tdWxUbyhmLHRoaXMpfSxvLnByb3RvdHlwZS5pbXVsbj1mdW5jdGlvbihmKXt2YXIgYT1mPDA7YSYmKGY9LWYpLGkodHlwZW9mIGY9PVwibnVtYmVyXCIpLGkoZjw2NzEwODg2NCk7Zm9yKHZhciBjPTAsZD0wO2Q8dGhpcy5sZW5ndGg7ZCsrKXt2YXIgbT0odGhpcy53b3Jkc1tkXXwwKSpmLHg9KG0mNjcxMDg4NjMpKyhjJjY3MTA4ODYzKTtjPj49MjYsYys9bS82NzEwODg2NHwwLGMrPXg+Pj4yNix0aGlzLndvcmRzW2RdPXgmNjcxMDg4NjN9cmV0dXJuIGMhPT0wJiYodGhpcy53b3Jkc1tkXT1jLHRoaXMubGVuZ3RoKyspLGE/dGhpcy5pbmVnKCk6dGhpc30sby5wcm90b3R5cGUubXVsbj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmltdWxuKGYpfSxvLnByb3RvdHlwZS5zcXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tdWwodGhpcyl9LG8ucHJvdG90eXBlLmlzcXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbXVsKHRoaXMuY2xvbmUoKSl9LG8ucHJvdG90eXBlLnBvdz1mdW5jdGlvbihmKXt2YXIgYT1EKGYpO2lmKGEubGVuZ3RoPT09MClyZXR1cm4gbmV3IG8oMSk7Zm9yKHZhciBjPXRoaXMsZD0wO2Q8YS5sZW5ndGgmJmFbZF09PT0wO2QrKyxjPWMuc3FyKCkpO2lmKCsrZDxhLmxlbmd0aClmb3IodmFyIG09Yy5zcXIoKTtkPGEubGVuZ3RoO2QrKyxtPW0uc3FyKCkpYVtkXSE9PTAmJihjPWMubXVsKG0pKTtyZXR1cm4gY30sby5wcm90b3R5cGUuaXVzaGxuPWZ1bmN0aW9uKGYpe2kodHlwZW9mIGY9PVwibnVtYmVyXCImJmY+PTApO3ZhciBhPWYlMjYsYz0oZi1hKS8yNixkPTY3MTA4ODYzPj4+MjYtYTw8MjYtYSxtO2lmKGEhPT0wKXt2YXIgeD0wO2ZvcihtPTA7bTx0aGlzLmxlbmd0aDttKyspe3ZhciBNPXRoaXMud29yZHNbbV0mZCxsPSh0aGlzLndvcmRzW21dfDApLU08PGE7dGhpcy53b3Jkc1ttXT1sfHgseD1NPj4+MjYtYX14JiYodGhpcy53b3Jkc1ttXT14LHRoaXMubGVuZ3RoKyspfWlmKGMhPT0wKXtmb3IobT10aGlzLmxlbmd0aC0xO20+PTA7bS0tKXRoaXMud29yZHNbbStjXT10aGlzLndvcmRzW21dO2ZvcihtPTA7bTxjO20rKyl0aGlzLndvcmRzW21dPTA7dGhpcy5sZW5ndGgrPWN9cmV0dXJuIHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLmlzaGxuPWZ1bmN0aW9uKGYpe3JldHVybiBpKHRoaXMubmVnYXRpdmU9PT0wKSx0aGlzLml1c2hsbihmKX0sby5wcm90b3R5cGUuaXVzaHJuPWZ1bmN0aW9uKGYsYSxjKXtpKHR5cGVvZiBmPT1cIm51bWJlclwiJiZmPj0wKTt2YXIgZDthP2Q9KGEtYSUyNikvMjY6ZD0wO3ZhciBtPWYlMjYseD1NYXRoLm1pbigoZi1tKS8yNix0aGlzLmxlbmd0aCksTT02NzEwODg2M142NzEwODg2Mz4+Pm08PG0sbD1jO2lmKGQtPXgsZD1NYXRoLm1heCgwLGQpLGwpe2Zvcih2YXIgcz0wO3M8eDtzKyspbC53b3Jkc1tzXT10aGlzLndvcmRzW3NdO2wubGVuZ3RoPXh9aWYoeCE9PTApaWYodGhpcy5sZW5ndGg+eClmb3IodGhpcy5sZW5ndGgtPXgscz0wO3M8dGhpcy5sZW5ndGg7cysrKXRoaXMud29yZHNbc109dGhpcy53b3Jkc1tzK3hdO2Vsc2UgdGhpcy53b3Jkc1swXT0wLHRoaXMubGVuZ3RoPTE7dmFyIGc9MDtmb3Iocz10aGlzLmxlbmd0aC0xO3M+PTAmJihnIT09MHx8cz49ZCk7cy0tKXt2YXIgaz10aGlzLndvcmRzW3NdfDA7dGhpcy53b3Jkc1tzXT1nPDwyNi1tfGs+Pj5tLGc9ayZNfXJldHVybiBsJiZnIT09MCYmKGwud29yZHNbbC5sZW5ndGgrK109ZyksdGhpcy5sZW5ndGg9PT0wJiYodGhpcy53b3Jkc1swXT0wLHRoaXMubGVuZ3RoPTEpLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLmlzaHJuPWZ1bmN0aW9uKGYsYSxjKXtyZXR1cm4gaSh0aGlzLm5lZ2F0aXZlPT09MCksdGhpcy5pdXNocm4oZixhLGMpfSxvLnByb3RvdHlwZS5zaGxuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXNobG4oZil9LG8ucHJvdG90eXBlLnVzaGxuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXVzaGxuKGYpfSxvLnByb3RvdHlwZS5zaHJuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXNocm4oZil9LG8ucHJvdG90eXBlLnVzaHJuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaXVzaHJuKGYpfSxvLnByb3RvdHlwZS50ZXN0bj1mdW5jdGlvbihmKXtpKHR5cGVvZiBmPT1cIm51bWJlclwiJiZmPj0wKTt2YXIgYT1mJTI2LGM9KGYtYSkvMjYsZD0xPDxhO2lmKHRoaXMubGVuZ3RoPD1jKXJldHVybiExO3ZhciBtPXRoaXMud29yZHNbY107cmV0dXJuISEobSZkKX0sby5wcm90b3R5cGUuaW1hc2tuPWZ1bmN0aW9uKGYpe2kodHlwZW9mIGY9PVwibnVtYmVyXCImJmY+PTApO3ZhciBhPWYlMjYsYz0oZi1hKS8yNjtpZihpKHRoaXMubmVnYXRpdmU9PT0wLFwiaW1hc2tuIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZSBudW1iZXJzXCIpLHRoaXMubGVuZ3RoPD1jKXJldHVybiB0aGlzO2lmKGEhPT0wJiZjKyssdGhpcy5sZW5ndGg9TWF0aC5taW4oYyx0aGlzLmxlbmd0aCksYSE9PTApe3ZhciBkPTY3MTA4ODYzXjY3MTA4ODYzPj4+YTw8YTt0aGlzLndvcmRzW3RoaXMubGVuZ3RoLTFdJj1kfXJldHVybiB0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5tYXNrbj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmltYXNrbihmKX0sby5wcm90b3R5cGUuaWFkZG49ZnVuY3Rpb24oZil7cmV0dXJuIGkodHlwZW9mIGY9PVwibnVtYmVyXCIpLGkoZjw2NzEwODg2NCksZjwwP3RoaXMuaXN1Ym4oLWYpOnRoaXMubmVnYXRpdmUhPT0wP3RoaXMubGVuZ3RoPT09MSYmKHRoaXMud29yZHNbMF18MCk8PWY/KHRoaXMud29yZHNbMF09Zi0odGhpcy53b3Jkc1swXXwwKSx0aGlzLm5lZ2F0aXZlPTAsdGhpcyk6KHRoaXMubmVnYXRpdmU9MCx0aGlzLmlzdWJuKGYpLHRoaXMubmVnYXRpdmU9MSx0aGlzKTp0aGlzLl9pYWRkbihmKX0sby5wcm90b3R5cGUuX2lhZGRuPWZ1bmN0aW9uKGYpe3RoaXMud29yZHNbMF0rPWY7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aCYmdGhpcy53b3Jkc1thXT49NjcxMDg4NjQ7YSsrKXRoaXMud29yZHNbYV0tPTY3MTA4ODY0LGE9PT10aGlzLmxlbmd0aC0xP3RoaXMud29yZHNbYSsxXT0xOnRoaXMud29yZHNbYSsxXSsrO3JldHVybiB0aGlzLmxlbmd0aD1NYXRoLm1heCh0aGlzLmxlbmd0aCxhKzEpLHRoaXN9LG8ucHJvdG90eXBlLmlzdWJuPWZ1bmN0aW9uKGYpe2lmKGkodHlwZW9mIGY9PVwibnVtYmVyXCIpLGkoZjw2NzEwODg2NCksZjwwKXJldHVybiB0aGlzLmlhZGRuKC1mKTtpZih0aGlzLm5lZ2F0aXZlIT09MClyZXR1cm4gdGhpcy5uZWdhdGl2ZT0wLHRoaXMuaWFkZG4oZiksdGhpcy5uZWdhdGl2ZT0xLHRoaXM7aWYodGhpcy53b3Jkc1swXS09Zix0aGlzLmxlbmd0aD09PTEmJnRoaXMud29yZHNbMF08MCl0aGlzLndvcmRzWzBdPS10aGlzLndvcmRzWzBdLHRoaXMubmVnYXRpdmU9MTtlbHNlIGZvcih2YXIgYT0wO2E8dGhpcy5sZW5ndGgmJnRoaXMud29yZHNbYV08MDthKyspdGhpcy53b3Jkc1thXSs9NjcxMDg4NjQsdGhpcy53b3Jkc1thKzFdLT0xO3JldHVybiB0aGlzLl9zdHJpcCgpfSxvLnByb3RvdHlwZS5hZGRuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNsb25lKCkuaWFkZG4oZil9LG8ucHJvdG90eXBlLnN1Ym49ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuY2xvbmUoKS5pc3VibihmKX0sby5wcm90b3R5cGUuaWFicz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5lZ2F0aXZlPTAsdGhpc30sby5wcm90b3R5cGUuYWJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pYWJzKCl9LG8ucHJvdG90eXBlLl9pc2hsbnN1Ym11bD1mdW5jdGlvbihmLGEsYyl7dmFyIGQ9Zi5sZW5ndGgrYyxtO3RoaXMuX2V4cGFuZChkKTt2YXIgeCxNPTA7Zm9yKG09MDttPGYubGVuZ3RoO20rKyl7eD0odGhpcy53b3Jkc1ttK2NdfDApK007dmFyIGw9KGYud29yZHNbbV18MCkqYTt4LT1sJjY3MTA4ODYzLE09KHg+PjI2KS0obC82NzEwODg2NHwwKSx0aGlzLndvcmRzW20rY109eCY2NzEwODg2M31mb3IoO208dGhpcy5sZW5ndGgtYzttKyspeD0odGhpcy53b3Jkc1ttK2NdfDApK00sTT14Pj4yNix0aGlzLndvcmRzW20rY109eCY2NzEwODg2MztpZihNPT09MClyZXR1cm4gdGhpcy5fc3RyaXAoKTtmb3IoaShNPT09LTEpLE09MCxtPTA7bTx0aGlzLmxlbmd0aDttKyspeD0tKHRoaXMud29yZHNbbV18MCkrTSxNPXg+PjI2LHRoaXMud29yZHNbbV09eCY2NzEwODg2MztyZXR1cm4gdGhpcy5uZWdhdGl2ZT0xLHRoaXMuX3N0cmlwKCl9LG8ucHJvdG90eXBlLl93b3JkRGl2PWZ1bmN0aW9uKGYsYSl7dmFyIGM9dGhpcy5sZW5ndGgtZi5sZW5ndGgsZD10aGlzLmNsb25lKCksbT1mLHg9bS53b3Jkc1ttLmxlbmd0aC0xXXwwLE09dGhpcy5fY291bnRCaXRzKHgpO2M9MjYtTSxjIT09MCYmKG09bS51c2hsbihjKSxkLml1c2hsbihjKSx4PW0ud29yZHNbbS5sZW5ndGgtMV18MCk7dmFyIGw9ZC5sZW5ndGgtbS5sZW5ndGgscztpZihhIT09XCJtb2RcIil7cz1uZXcgbyhudWxsKSxzLmxlbmd0aD1sKzEscy53b3Jkcz1uZXcgQXJyYXkocy5sZW5ndGgpO2Zvcih2YXIgZz0wO2c8cy5sZW5ndGg7ZysrKXMud29yZHNbZ109MH12YXIgaz1kLmNsb25lKCkuX2lzaGxuc3VibXVsKG0sMSxsKTtrLm5lZ2F0aXZlPT09MCYmKGQ9ayxzJiYocy53b3Jkc1tsXT0xKSk7Zm9yKHZhciB1PWwtMTt1Pj0wO3UtLSl7dmFyIEU9KGQud29yZHNbbS5sZW5ndGgrdV18MCkqNjcxMDg4NjQrKGQud29yZHNbbS5sZW5ndGgrdS0xXXwwKTtmb3IoRT1NYXRoLm1pbihFL3h8MCw2NzEwODg2MyksZC5faXNobG5zdWJtdWwobSxFLHUpO2QubmVnYXRpdmUhPT0wOylFLS0sZC5uZWdhdGl2ZT0wLGQuX2lzaGxuc3VibXVsKG0sMSx1KSxkLmlzWmVybygpfHwoZC5uZWdhdGl2ZV49MSk7cyYmKHMud29yZHNbdV09RSl9cmV0dXJuIHMmJnMuX3N0cmlwKCksZC5fc3RyaXAoKSxhIT09XCJkaXZcIiYmYyE9PTAmJmQuaXVzaHJuKGMpLHtkaXY6c3x8bnVsbCxtb2Q6ZH19LG8ucHJvdG90eXBlLmRpdm1vZD1mdW5jdGlvbihmLGEsYyl7aWYoaSghZi5pc1plcm8oKSksdGhpcy5pc1plcm8oKSlyZXR1cm57ZGl2Om5ldyBvKDApLG1vZDpuZXcgbygwKX07dmFyIGQsbSx4O3JldHVybiB0aGlzLm5lZ2F0aXZlIT09MCYmZi5uZWdhdGl2ZT09PTA/KHg9dGhpcy5uZWcoKS5kaXZtb2QoZixhKSxhIT09XCJtb2RcIiYmKGQ9eC5kaXYubmVnKCkpLGEhPT1cImRpdlwiJiYobT14Lm1vZC5uZWcoKSxjJiZtLm5lZ2F0aXZlIT09MCYmbS5pYWRkKGYpKSx7ZGl2OmQsbW9kOm19KTp0aGlzLm5lZ2F0aXZlPT09MCYmZi5uZWdhdGl2ZSE9PTA/KHg9dGhpcy5kaXZtb2QoZi5uZWcoKSxhKSxhIT09XCJtb2RcIiYmKGQ9eC5kaXYubmVnKCkpLHtkaXY6ZCxtb2Q6eC5tb2R9KTp0aGlzLm5lZ2F0aXZlJmYubmVnYXRpdmU/KHg9dGhpcy5uZWcoKS5kaXZtb2QoZi5uZWcoKSxhKSxhIT09XCJkaXZcIiYmKG09eC5tb2QubmVnKCksYyYmbS5uZWdhdGl2ZSE9PTAmJm0uaXN1YihmKSkse2Rpdjp4LmRpdixtb2Q6bX0pOmYubGVuZ3RoPnRoaXMubGVuZ3RofHx0aGlzLmNtcChmKTwwP3tkaXY6bmV3IG8oMCksbW9kOnRoaXN9OmYubGVuZ3RoPT09MT9hPT09XCJkaXZcIj97ZGl2OnRoaXMuZGl2bihmLndvcmRzWzBdKSxtb2Q6bnVsbH06YT09PVwibW9kXCI/e2RpdjpudWxsLG1vZDpuZXcgbyh0aGlzLm1vZHJuKGYud29yZHNbMF0pKX06e2Rpdjp0aGlzLmRpdm4oZi53b3Jkc1swXSksbW9kOm5ldyBvKHRoaXMubW9kcm4oZi53b3Jkc1swXSkpfTp0aGlzLl93b3JkRGl2KGYsYSl9LG8ucHJvdG90eXBlLmRpdj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5kaXZtb2QoZixcImRpdlwiLCExKS5kaXZ9LG8ucHJvdG90eXBlLm1vZD1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5kaXZtb2QoZixcIm1vZFwiLCExKS5tb2R9LG8ucHJvdG90eXBlLnVtb2Q9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuZGl2bW9kKGYsXCJtb2RcIiwhMCkubW9kfSxvLnByb3RvdHlwZS5kaXZSb3VuZD1mdW5jdGlvbihmKXt2YXIgYT10aGlzLmRpdm1vZChmKTtpZihhLm1vZC5pc1plcm8oKSlyZXR1cm4gYS5kaXY7dmFyIGM9YS5kaXYubmVnYXRpdmUhPT0wP2EubW9kLmlzdWIoZik6YS5tb2QsZD1mLnVzaHJuKDEpLG09Zi5hbmRsbigxKSx4PWMuY21wKGQpO3JldHVybiB4PDB8fG09PT0xJiZ4PT09MD9hLmRpdjphLmRpdi5uZWdhdGl2ZSE9PTA/YS5kaXYuaXN1Ym4oMSk6YS5kaXYuaWFkZG4oMSl9LG8ucHJvdG90eXBlLm1vZHJuPWZ1bmN0aW9uKGYpe3ZhciBhPWY8MDthJiYoZj0tZiksaShmPD02NzEwODg2Myk7Zm9yKHZhciBjPSgxPDwyNiklZixkPTAsbT10aGlzLmxlbmd0aC0xO20+PTA7bS0tKWQ9KGMqZCsodGhpcy53b3Jkc1ttXXwwKSklZjtyZXR1cm4gYT8tZDpkfSxvLnByb3RvdHlwZS5tb2RuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLm1vZHJuKGYpfSxvLnByb3RvdHlwZS5pZGl2bj1mdW5jdGlvbihmKXt2YXIgYT1mPDA7YSYmKGY9LWYpLGkoZjw9NjcxMDg4NjMpO2Zvcih2YXIgYz0wLGQ9dGhpcy5sZW5ndGgtMTtkPj0wO2QtLSl7dmFyIG09KHRoaXMud29yZHNbZF18MCkrYyo2NzEwODg2NDt0aGlzLndvcmRzW2RdPW0vZnwwLGM9bSVmfXJldHVybiB0aGlzLl9zdHJpcCgpLGE/dGhpcy5pbmVnKCk6dGhpc30sby5wcm90b3R5cGUuZGl2bj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlkaXZuKGYpfSxvLnByb3RvdHlwZS5lZ2NkPWZ1bmN0aW9uKGYpe2koZi5uZWdhdGl2ZT09PTApLGkoIWYuaXNaZXJvKCkpO3ZhciBhPXRoaXMsYz1mLmNsb25lKCk7YS5uZWdhdGl2ZSE9PTA/YT1hLnVtb2QoZik6YT1hLmNsb25lKCk7Zm9yKHZhciBkPW5ldyBvKDEpLG09bmV3IG8oMCkseD1uZXcgbygwKSxNPW5ldyBvKDEpLGw9MDthLmlzRXZlbigpJiZjLmlzRXZlbigpOylhLml1c2hybigxKSxjLml1c2hybigxKSwrK2w7Zm9yKHZhciBzPWMuY2xvbmUoKSxnPWEuY2xvbmUoKTshYS5pc1plcm8oKTspe2Zvcih2YXIgaz0wLHU9MTshKGEud29yZHNbMF0mdSkmJms8MjY7KytrLHU8PD0xKTtpZihrPjApZm9yKGEuaXVzaHJuKGspO2stLSA+MDspKGQuaXNPZGQoKXx8bS5pc09kZCgpKSYmKGQuaWFkZChzKSxtLmlzdWIoZykpLGQuaXVzaHJuKDEpLG0uaXVzaHJuKDEpO2Zvcih2YXIgRT0wLF89MTshKGMud29yZHNbMF0mXykmJkU8MjY7KytFLF88PD0xKTtpZihFPjApZm9yKGMuaXVzaHJuKEUpO0UtLSA+MDspKHguaXNPZGQoKXx8TS5pc09kZCgpKSYmKHguaWFkZChzKSxNLmlzdWIoZykpLHguaXVzaHJuKDEpLE0uaXVzaHJuKDEpO2EuY21wKGMpPj0wPyhhLmlzdWIoYyksZC5pc3ViKHgpLG0uaXN1YihNKSk6KGMuaXN1YihhKSx4LmlzdWIoZCksTS5pc3ViKG0pKX1yZXR1cm57YTp4LGI6TSxnY2Q6Yy5pdXNobG4obCl9fSxvLnByb3RvdHlwZS5faW52bXA9ZnVuY3Rpb24oZil7aShmLm5lZ2F0aXZlPT09MCksaSghZi5pc1plcm8oKSk7dmFyIGE9dGhpcyxjPWYuY2xvbmUoKTthLm5lZ2F0aXZlIT09MD9hPWEudW1vZChmKTphPWEuY2xvbmUoKTtmb3IodmFyIGQ9bmV3IG8oMSksbT1uZXcgbygwKSx4PWMuY2xvbmUoKTthLmNtcG4oMSk+MCYmYy5jbXBuKDEpPjA7KXtmb3IodmFyIE09MCxsPTE7IShhLndvcmRzWzBdJmwpJiZNPDI2OysrTSxsPDw9MSk7aWYoTT4wKWZvcihhLml1c2hybihNKTtNLS0gPjA7KWQuaXNPZGQoKSYmZC5pYWRkKHgpLGQuaXVzaHJuKDEpO2Zvcih2YXIgcz0wLGc9MTshKGMud29yZHNbMF0mZykmJnM8MjY7KytzLGc8PD0xKTtpZihzPjApZm9yKGMuaXVzaHJuKHMpO3MtLSA+MDspbS5pc09kZCgpJiZtLmlhZGQoeCksbS5pdXNocm4oMSk7YS5jbXAoYyk+PTA/KGEuaXN1YihjKSxkLmlzdWIobSkpOihjLmlzdWIoYSksbS5pc3ViKGQpKX12YXIgaztyZXR1cm4gYS5jbXBuKDEpPT09MD9rPWQ6az1tLGsuY21wbigwKTwwJiZrLmlhZGQoZiksa30sby5wcm90b3R5cGUuZ2NkPWZ1bmN0aW9uKGYpe2lmKHRoaXMuaXNaZXJvKCkpcmV0dXJuIGYuYWJzKCk7aWYoZi5pc1plcm8oKSlyZXR1cm4gdGhpcy5hYnMoKTt2YXIgYT10aGlzLmNsb25lKCksYz1mLmNsb25lKCk7YS5uZWdhdGl2ZT0wLGMubmVnYXRpdmU9MDtmb3IodmFyIGQ9MDthLmlzRXZlbigpJiZjLmlzRXZlbigpO2QrKylhLml1c2hybigxKSxjLml1c2hybigxKTtkb3tmb3IoO2EuaXNFdmVuKCk7KWEuaXVzaHJuKDEpO2Zvcig7Yy5pc0V2ZW4oKTspYy5pdXNocm4oMSk7dmFyIG09YS5jbXAoYyk7aWYobTwwKXt2YXIgeD1hO2E9YyxjPXh9ZWxzZSBpZihtPT09MHx8Yy5jbXBuKDEpPT09MClicmVhazthLmlzdWIoYyl9d2hpbGUoITApO3JldHVybiBjLml1c2hsbihkKX0sby5wcm90b3R5cGUuaW52bT1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5lZ2NkKGYpLmEudW1vZChmKX0sby5wcm90b3R5cGUuaXNFdmVuPWZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMud29yZHNbMF0mMSk9PT0wfSxvLnByb3RvdHlwZS5pc09kZD1mdW5jdGlvbigpe3JldHVybih0aGlzLndvcmRzWzBdJjEpPT09MX0sby5wcm90b3R5cGUuYW5kbG49ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMud29yZHNbMF0mZn0sby5wcm90b3R5cGUuYmluY249ZnVuY3Rpb24oZil7aSh0eXBlb2YgZj09XCJudW1iZXJcIik7dmFyIGE9ZiUyNixjPShmLWEpLzI2LGQ9MTw8YTtpZih0aGlzLmxlbmd0aDw9YylyZXR1cm4gdGhpcy5fZXhwYW5kKGMrMSksdGhpcy53b3Jkc1tjXXw9ZCx0aGlzO2Zvcih2YXIgbT1kLHg9YzttIT09MCYmeDx0aGlzLmxlbmd0aDt4Kyspe3ZhciBNPXRoaXMud29yZHNbeF18MDtNKz1tLG09TT4+PjI2LE0mPTY3MTA4ODYzLHRoaXMud29yZHNbeF09TX1yZXR1cm4gbSE9PTAmJih0aGlzLndvcmRzW3hdPW0sdGhpcy5sZW5ndGgrKyksdGhpc30sby5wcm90b3R5cGUuaXNaZXJvPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RoPT09MSYmdGhpcy53b3Jkc1swXT09PTB9LG8ucHJvdG90eXBlLmNtcG49ZnVuY3Rpb24oZil7dmFyIGE9ZjwwO2lmKHRoaXMubmVnYXRpdmUhPT0wJiYhYSlyZXR1cm4tMTtpZih0aGlzLm5lZ2F0aXZlPT09MCYmYSlyZXR1cm4gMTt0aGlzLl9zdHJpcCgpO3ZhciBjO2lmKHRoaXMubGVuZ3RoPjEpYz0xO2Vsc2V7YSYmKGY9LWYpLGkoZjw9NjcxMDg4NjMsXCJOdW1iZXIgaXMgdG9vIGJpZ1wiKTt2YXIgZD10aGlzLndvcmRzWzBdfDA7Yz1kPT09Zj8wOmQ8Zj8tMToxfXJldHVybiB0aGlzLm5lZ2F0aXZlIT09MD8tY3wwOmN9LG8ucHJvdG90eXBlLmNtcD1mdW5jdGlvbihmKXtpZih0aGlzLm5lZ2F0aXZlIT09MCYmZi5uZWdhdGl2ZT09PTApcmV0dXJuLTE7aWYodGhpcy5uZWdhdGl2ZT09PTAmJmYubmVnYXRpdmUhPT0wKXJldHVybiAxO3ZhciBhPXRoaXMudWNtcChmKTtyZXR1cm4gdGhpcy5uZWdhdGl2ZSE9PTA/LWF8MDphfSxvLnByb3RvdHlwZS51Y21wPWZ1bmN0aW9uKGYpe2lmKHRoaXMubGVuZ3RoPmYubGVuZ3RoKXJldHVybiAxO2lmKHRoaXMubGVuZ3RoPGYubGVuZ3RoKXJldHVybi0xO2Zvcih2YXIgYT0wLGM9dGhpcy5sZW5ndGgtMTtjPj0wO2MtLSl7dmFyIGQ9dGhpcy53b3Jkc1tjXXwwLG09Zi53b3Jkc1tjXXwwO2lmKGQhPT1tKXtkPG0/YT0tMTpkPm0mJihhPTEpO2JyZWFrfX1yZXR1cm4gYX0sby5wcm90b3R5cGUuZ3RuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcG4oZik9PT0xfSxvLnByb3RvdHlwZS5ndD1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXAoZik9PT0xfSxvLnByb3RvdHlwZS5ndGVuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcG4oZik+PTB9LG8ucHJvdG90eXBlLmd0ZT1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXAoZik+PTB9LG8ucHJvdG90eXBlLmx0bj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXBuKGYpPT09LTF9LG8ucHJvdG90eXBlLmx0PWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcChmKT09PS0xfSxvLnByb3RvdHlwZS5sdGVuPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmNtcG4oZik8PTB9LG8ucHJvdG90eXBlLmx0ZT1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXAoZik8PTB9LG8ucHJvdG90eXBlLmVxbj1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5jbXBuKGYpPT09MH0sby5wcm90b3R5cGUuZXE9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMuY21wKGYpPT09MH0sby5yZWQ9ZnVuY3Rpb24oZil7cmV0dXJuIG5ldyBZKGYpfSxvLnByb3RvdHlwZS50b1JlZD1mdW5jdGlvbihmKXtyZXR1cm4gaSghdGhpcy5yZWQsXCJBbHJlYWR5IGEgbnVtYmVyIGluIHJlZHVjdGlvbiBjb250ZXh0XCIpLGkodGhpcy5uZWdhdGl2ZT09PTAsXCJyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlc1wiKSxmLmNvbnZlcnRUbyh0aGlzKS5fZm9yY2VSZWQoZil9LG8ucHJvdG90eXBlLmZyb21SZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gaSh0aGlzLnJlZCxcImZyb21SZWQgd29ya3Mgb25seSB3aXRoIG51bWJlcnMgaW4gcmVkdWN0aW9uIGNvbnRleHRcIiksdGhpcy5yZWQuY29udmVydEZyb20odGhpcyl9LG8ucHJvdG90eXBlLl9mb3JjZVJlZD1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5yZWQ9Zix0aGlzfSxvLnByb3RvdHlwZS5mb3JjZVJlZD1mdW5jdGlvbihmKXtyZXR1cm4gaSghdGhpcy5yZWQsXCJBbHJlYWR5IGEgbnVtYmVyIGluIHJlZHVjdGlvbiBjb250ZXh0XCIpLHRoaXMuX2ZvcmNlUmVkKGYpfSxvLnByb3RvdHlwZS5yZWRBZGQ9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRBZGQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLmFkZCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRJQWRkPWZ1bmN0aW9uKGYpe3JldHVybiBpKHRoaXMucmVkLFwicmVkSUFkZCB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuaWFkZCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRTdWI9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRTdWIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLnN1Yih0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRJU3ViPWZ1bmN0aW9uKGYpe3JldHVybiBpKHRoaXMucmVkLFwicmVkSVN1YiB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuaXN1Yih0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRTaGw9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRTaGwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLnNobCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRNdWw9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLl92ZXJpZnkyKHRoaXMsZiksdGhpcy5yZWQubXVsKHRoaXMsZil9LG8ucHJvdG90eXBlLnJlZElNdWw9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpLHRoaXMucmVkLl92ZXJpZnkyKHRoaXMsZiksdGhpcy5yZWQuaW11bCh0aGlzLGYpfSxvLnByb3RvdHlwZS5yZWRTcXI9ZnVuY3Rpb24oKXtyZXR1cm4gaSh0aGlzLnJlZCxcInJlZFNxciB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyksdGhpcy5yZWQuc3FyKHRoaXMpfSxvLnByb3RvdHlwZS5yZWRJU3FyPWZ1bmN0aW9uKCl7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRJU3FyIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5pc3FyKHRoaXMpfSxvLnByb3RvdHlwZS5yZWRTcXJ0PWZ1bmN0aW9uKCl7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRTcXJ0IHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5zcXJ0KHRoaXMpfSxvLnByb3RvdHlwZS5yZWRJbnZtPWZ1bmN0aW9uKCl7cmV0dXJuIGkodGhpcy5yZWQsXCJyZWRJbnZtIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKSx0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKSx0aGlzLnJlZC5pbnZtKHRoaXMpfSxvLnByb3RvdHlwZS5yZWROZWc9ZnVuY3Rpb24oKXtyZXR1cm4gaSh0aGlzLnJlZCxcInJlZE5lZyB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIiksdGhpcy5yZWQuX3ZlcmlmeTEodGhpcyksdGhpcy5yZWQubmVnKHRoaXMpfSxvLnByb3RvdHlwZS5yZWRQb3c9ZnVuY3Rpb24oZil7cmV0dXJuIGkodGhpcy5yZWQmJiFmLnJlZCxcInJlZFBvdyhub3JtYWxOdW0pXCIpLHRoaXMucmVkLl92ZXJpZnkxKHRoaXMpLHRoaXMucmVkLnBvdyh0aGlzLGYpfTt2YXIgSD17azI1NjpudWxsLHAyMjQ6bnVsbCxwMTkyOm51bGwscDI1NTE5Om51bGx9O2Z1bmN0aW9uIEwoYixmKXt0aGlzLm5hbWU9Yix0aGlzLnA9bmV3IG8oZiwxNiksdGhpcy5uPXRoaXMucC5iaXRMZW5ndGgoKSx0aGlzLms9bmV3IG8oMSkuaXVzaGxuKHRoaXMubikuaXN1Yih0aGlzLnApLHRoaXMudG1wPXRoaXMuX3RtcCgpfUwucHJvdG90eXBlLl90bXA9ZnVuY3Rpb24oKXt2YXIgZj1uZXcgbyhudWxsKTtyZXR1cm4gZi53b3Jkcz1uZXcgQXJyYXkoTWF0aC5jZWlsKHRoaXMubi8xMykpLGZ9LEwucHJvdG90eXBlLmlyZWR1Y2U9ZnVuY3Rpb24oZil7dmFyIGE9ZixjO2RvIHRoaXMuc3BsaXQoYSx0aGlzLnRtcCksYT10aGlzLmltdWxLKGEpLGE9YS5pYWRkKHRoaXMudG1wKSxjPWEuYml0TGVuZ3RoKCk7d2hpbGUoYz50aGlzLm4pO3ZhciBkPWM8dGhpcy5uPy0xOmEudWNtcCh0aGlzLnApO3JldHVybiBkPT09MD8oYS53b3Jkc1swXT0wLGEubGVuZ3RoPTEpOmQ+MD9hLmlzdWIodGhpcy5wKTphLnN0cmlwIT09dm9pZCAwP2Euc3RyaXAoKTphLl9zdHJpcCgpLGF9LEwucHJvdG90eXBlLnNwbGl0PWZ1bmN0aW9uKGYsYSl7Zi5pdXNocm4odGhpcy5uLDAsYSl9LEwucHJvdG90eXBlLmltdWxLPWZ1bmN0aW9uKGYpe3JldHVybiBmLmltdWwodGhpcy5rKX07ZnVuY3Rpb24gUHQoKXtMLmNhbGwodGhpcyxcImsyNTZcIixcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmYzJmXCIpfW4oUHQsTCksUHQucHJvdG90eXBlLnNwbGl0PWZ1bmN0aW9uKGYsYSl7Zm9yKHZhciBjPTQxOTQzMDMsZD1NYXRoLm1pbihmLmxlbmd0aCw5KSxtPTA7bTxkO20rKylhLndvcmRzW21dPWYud29yZHNbbV07aWYoYS5sZW5ndGg9ZCxmLmxlbmd0aDw9OSl7Zi53b3Jkc1swXT0wLGYubGVuZ3RoPTE7cmV0dXJufXZhciB4PWYud29yZHNbOV07Zm9yKGEud29yZHNbYS5sZW5ndGgrK109eCZjLG09MTA7bTxmLmxlbmd0aDttKyspe3ZhciBNPWYud29yZHNbbV18MDtmLndvcmRzW20tMTBdPShNJmMpPDw0fHg+Pj4yMix4PU19eD4+Pj0yMixmLndvcmRzW20tMTBdPXgseD09PTAmJmYubGVuZ3RoPjEwP2YubGVuZ3RoLT0xMDpmLmxlbmd0aC09OX0sUHQucHJvdG90eXBlLmltdWxLPWZ1bmN0aW9uKGYpe2Yud29yZHNbZi5sZW5ndGhdPTAsZi53b3Jkc1tmLmxlbmd0aCsxXT0wLGYubGVuZ3RoKz0yO2Zvcih2YXIgYT0wLGM9MDtjPGYubGVuZ3RoO2MrKyl7dmFyIGQ9Zi53b3Jkc1tjXXwwO2ErPWQqOTc3LGYud29yZHNbY109YSY2NzEwODg2MyxhPWQqNjQrKGEvNjcxMDg4NjR8MCl9cmV0dXJuIGYud29yZHNbZi5sZW5ndGgtMV09PT0wJiYoZi5sZW5ndGgtLSxmLndvcmRzW2YubGVuZ3RoLTFdPT09MCYmZi5sZW5ndGgtLSksZn07ZnVuY3Rpb24gVygpe0wuY2FsbCh0aGlzLFwicDIyNFwiLFwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDFcIil9bihXLEwpO2Z1bmN0aW9uIFJ0KCl7TC5jYWxsKHRoaXMsXCJwMTkyXCIsXCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmZlwiKX1uKFJ0LEwpO2Z1bmN0aW9uIFZ0KCl7TC5jYWxsKHRoaXMsXCIyNTUxOVwiLFwiN2ZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZlZFwiKX1uKFZ0LEwpLFZ0LnByb3RvdHlwZS5pbXVsSz1mdW5jdGlvbihmKXtmb3IodmFyIGE9MCxjPTA7YzxmLmxlbmd0aDtjKyspe3ZhciBkPShmLndvcmRzW2NdfDApKjE5K2EsbT1kJjY3MTA4ODYzO2Q+Pj49MjYsZi53b3Jkc1tjXT1tLGE9ZH1yZXR1cm4gYSE9PTAmJihmLndvcmRzW2YubGVuZ3RoKytdPWEpLGZ9LG8uX3ByaW1lPWZ1bmN0aW9uKGYpe2lmKEhbZl0pcmV0dXJuIEhbZl07dmFyIGE7aWYoZj09PVwiazI1NlwiKWE9bmV3IFB0O2Vsc2UgaWYoZj09PVwicDIyNFwiKWE9bmV3IFc7ZWxzZSBpZihmPT09XCJwMTkyXCIpYT1uZXcgUnQ7ZWxzZSBpZihmPT09XCJwMjU1MTlcIilhPW5ldyBWdDtlbHNlIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gcHJpbWUgXCIrZik7cmV0dXJuIEhbZl09YSxhfTtmdW5jdGlvbiBZKGIpe2lmKHR5cGVvZiBiPT1cInN0cmluZ1wiKXt2YXIgZj1vLl9wcmltZShiKTt0aGlzLm09Zi5wLHRoaXMucHJpbWU9Zn1lbHNlIGkoYi5ndG4oMSksXCJtb2R1bHVzIG11c3QgYmUgZ3JlYXRlciB0aGFuIDFcIiksdGhpcy5tPWIsdGhpcy5wcmltZT1udWxsfVkucHJvdG90eXBlLl92ZXJpZnkxPWZ1bmN0aW9uKGYpe2koZi5uZWdhdGl2ZT09PTAsXCJyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlc1wiKSxpKGYucmVkLFwicmVkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKX0sWS5wcm90b3R5cGUuX3ZlcmlmeTI9ZnVuY3Rpb24oZixhKXtpKChmLm5lZ2F0aXZlfGEubmVnYXRpdmUpPT09MCxcInJlZCB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmVzXCIpLGkoZi5yZWQmJmYucmVkPT09YS5yZWQsXCJyZWQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpfSxZLnByb3RvdHlwZS5pbW9kPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLnByaW1lP3RoaXMucHJpbWUuaXJlZHVjZShmKS5fZm9yY2VSZWQodGhpcyk6KHcoZixmLnVtb2QodGhpcy5tKS5fZm9yY2VSZWQodGhpcykpLGYpfSxZLnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24oZil7cmV0dXJuIGYuaXNaZXJvKCk/Zi5jbG9uZSgpOnRoaXMubS5zdWIoZikuX2ZvcmNlUmVkKHRoaXMpfSxZLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZixhKXt0aGlzLl92ZXJpZnkyKGYsYSk7dmFyIGM9Zi5hZGQoYSk7cmV0dXJuIGMuY21wKHRoaXMubSk+PTAmJmMuaXN1Yih0aGlzLm0pLGMuX2ZvcmNlUmVkKHRoaXMpfSxZLnByb3RvdHlwZS5pYWRkPWZ1bmN0aW9uKGYsYSl7dGhpcy5fdmVyaWZ5MihmLGEpO3ZhciBjPWYuaWFkZChhKTtyZXR1cm4gYy5jbXAodGhpcy5tKT49MCYmYy5pc3ViKHRoaXMubSksY30sWS5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uKGYsYSl7dGhpcy5fdmVyaWZ5MihmLGEpO3ZhciBjPWYuc3ViKGEpO3JldHVybiBjLmNtcG4oMCk8MCYmYy5pYWRkKHRoaXMubSksYy5fZm9yY2VSZWQodGhpcyl9LFkucHJvdG90eXBlLmlzdWI9ZnVuY3Rpb24oZixhKXt0aGlzLl92ZXJpZnkyKGYsYSk7dmFyIGM9Zi5pc3ViKGEpO3JldHVybiBjLmNtcG4oMCk8MCYmYy5pYWRkKHRoaXMubSksY30sWS5wcm90b3R5cGUuc2hsPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTEoZiksdGhpcy5pbW9kKGYudXNobG4oYSkpfSxZLnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTIoZixhKSx0aGlzLmltb2QoZi5pbXVsKGEpKX0sWS5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKGYsYSl7cmV0dXJuIHRoaXMuX3ZlcmlmeTIoZixhKSx0aGlzLmltb2QoZi5tdWwoYSkpfSxZLnByb3RvdHlwZS5pc3FyPWZ1bmN0aW9uKGYpe3JldHVybiB0aGlzLmltdWwoZixmLmNsb25lKCkpfSxZLnByb3RvdHlwZS5zcXI9ZnVuY3Rpb24oZil7cmV0dXJuIHRoaXMubXVsKGYsZil9LFkucHJvdG90eXBlLnNxcnQ9ZnVuY3Rpb24oZil7aWYoZi5pc1plcm8oKSlyZXR1cm4gZi5jbG9uZSgpO3ZhciBhPXRoaXMubS5hbmRsbigzKTtpZihpKGElMj09PTEpLGE9PT0zKXt2YXIgYz10aGlzLm0uYWRkKG5ldyBvKDEpKS5pdXNocm4oMik7cmV0dXJuIHRoaXMucG93KGYsYyl9Zm9yKHZhciBkPXRoaXMubS5zdWJuKDEpLG09MDshZC5pc1plcm8oKSYmZC5hbmRsbigxKT09PTA7KW0rKyxkLml1c2hybigxKTtpKCFkLmlzWmVybygpKTt2YXIgeD1uZXcgbygxKS50b1JlZCh0aGlzKSxNPXgucmVkTmVnKCksbD10aGlzLm0uc3VibigxKS5pdXNocm4oMSkscz10aGlzLm0uYml0TGVuZ3RoKCk7Zm9yKHM9bmV3IG8oMipzKnMpLnRvUmVkKHRoaXMpO3RoaXMucG93KHMsbCkuY21wKE0pIT09MDspcy5yZWRJQWRkKE0pO2Zvcih2YXIgZz10aGlzLnBvdyhzLGQpLGs9dGhpcy5wb3coZixkLmFkZG4oMSkuaXVzaHJuKDEpKSx1PXRoaXMucG93KGYsZCksRT1tO3UuY21wKHgpIT09MDspe2Zvcih2YXIgXz11LEI9MDtfLmNtcCh4KSE9PTA7QisrKV89Xy5yZWRTcXIoKTtpKEI8RSk7dmFyIFI9dGhpcy5wb3coZyxuZXcgbygxKS5pdXNobG4oRS1CLTEpKTtrPWsucmVkTXVsKFIpLGc9Ui5yZWRTcXIoKSx1PXUucmVkTXVsKGcpLEU9Qn1yZXR1cm4ga30sWS5wcm90b3R5cGUuaW52bT1mdW5jdGlvbihmKXt2YXIgYT1mLl9pbnZtcCh0aGlzLm0pO3JldHVybiBhLm5lZ2F0aXZlIT09MD8oYS5uZWdhdGl2ZT0wLHRoaXMuaW1vZChhKS5yZWROZWcoKSk6dGhpcy5pbW9kKGEpfSxZLnByb3RvdHlwZS5wb3c9ZnVuY3Rpb24oZixhKXtpZihhLmlzWmVybygpKXJldHVybiBuZXcgbygxKS50b1JlZCh0aGlzKTtpZihhLmNtcG4oMSk9PT0wKXJldHVybiBmLmNsb25lKCk7dmFyIGM9NCxkPW5ldyBBcnJheSgxPDxjKTtkWzBdPW5ldyBvKDEpLnRvUmVkKHRoaXMpLGRbMV09Zjtmb3IodmFyIG09MjttPGQubGVuZ3RoO20rKylkW21dPXRoaXMubXVsKGRbbS0xXSxmKTt2YXIgeD1kWzBdLE09MCxsPTAscz1hLmJpdExlbmd0aCgpJTI2O2ZvcihzPT09MCYmKHM9MjYpLG09YS5sZW5ndGgtMTttPj0wO20tLSl7Zm9yKHZhciBnPWEud29yZHNbbV0saz1zLTE7az49MDtrLS0pe3ZhciB1PWc+PmsmMTtpZih4IT09ZFswXSYmKHg9dGhpcy5zcXIoeCkpLHU9PT0wJiZNPT09MCl7bD0wO2NvbnRpbnVlfU08PD0xLE18PXUsbCsrLCEobCE9PWMmJihtIT09MHx8ayE9PTApKSYmKHg9dGhpcy5tdWwoeCxkW01dKSxsPTAsTT0wKX1zPTI2fXJldHVybiB4fSxZLnByb3RvdHlwZS5jb252ZXJ0VG89ZnVuY3Rpb24oZil7dmFyIGE9Zi51bW9kKHRoaXMubSk7cmV0dXJuIGE9PT1mP2EuY2xvbmUoKTphfSxZLnByb3RvdHlwZS5jb252ZXJ0RnJvbT1mdW5jdGlvbihmKXt2YXIgYT1mLmNsb25lKCk7cmV0dXJuIGEucmVkPW51bGwsYX0sby5tb250PWZ1bmN0aW9uKGYpe3JldHVybiBuZXcgV3QoZil9O2Z1bmN0aW9uIFd0KGIpe1kuY2FsbCh0aGlzLGIpLHRoaXMuc2hpZnQ9dGhpcy5tLmJpdExlbmd0aCgpLHRoaXMuc2hpZnQlMjYhPT0wJiYodGhpcy5zaGlmdCs9MjYtdGhpcy5zaGlmdCUyNiksdGhpcy5yPW5ldyBvKDEpLml1c2hsbih0aGlzLnNoaWZ0KSx0aGlzLnIyPXRoaXMuaW1vZCh0aGlzLnIuc3FyKCkpLHRoaXMucmludj10aGlzLnIuX2ludm1wKHRoaXMubSksdGhpcy5taW52PXRoaXMucmludi5tdWwodGhpcy5yKS5pc3VibigxKS5kaXYodGhpcy5tKSx0aGlzLm1pbnY9dGhpcy5taW52LnVtb2QodGhpcy5yKSx0aGlzLm1pbnY9dGhpcy5yLnN1Yih0aGlzLm1pbnYpfW4oV3QsWSksV3QucHJvdG90eXBlLmNvbnZlcnRUbz1mdW5jdGlvbihmKXtyZXR1cm4gdGhpcy5pbW9kKGYudXNobG4odGhpcy5zaGlmdCkpfSxXdC5wcm90b3R5cGUuY29udmVydEZyb209ZnVuY3Rpb24oZil7dmFyIGE9dGhpcy5pbW9kKGYubXVsKHRoaXMucmludikpO3JldHVybiBhLnJlZD1udWxsLGF9LFd0LnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uKGYsYSl7aWYoZi5pc1plcm8oKXx8YS5pc1plcm8oKSlyZXR1cm4gZi53b3Jkc1swXT0wLGYubGVuZ3RoPTEsZjt2YXIgYz1mLmltdWwoYSksZD1jLm1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm1pbnYpLmltYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5tKSxtPWMuaXN1YihkKS5pdXNocm4odGhpcy5zaGlmdCkseD1tO3JldHVybiBtLmNtcCh0aGlzLm0pPj0wP3g9bS5pc3ViKHRoaXMubSk6bS5jbXBuKDApPDAmJih4PW0uaWFkZCh0aGlzLm0pKSx4Ll9mb3JjZVJlZCh0aGlzKX0sV3QucHJvdG90eXBlLm11bD1mdW5jdGlvbihmLGEpe2lmKGYuaXNaZXJvKCl8fGEuaXNaZXJvKCkpcmV0dXJuIG5ldyBvKDApLl9mb3JjZVJlZCh0aGlzKTt2YXIgYz1mLm11bChhKSxkPWMubWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubWludikuaW1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm0pLG09Yy5pc3ViKGQpLml1c2hybih0aGlzLnNoaWZ0KSx4PW07cmV0dXJuIG0uY21wKHRoaXMubSk+PTA/eD1tLmlzdWIodGhpcy5tKTptLmNtcG4oMCk8MCYmKHg9bS5pYWRkKHRoaXMubSkpLHguX2ZvcmNlUmVkKHRoaXMpfSxXdC5wcm90b3R5cGUuaW52bT1mdW5jdGlvbihmKXt2YXIgYT10aGlzLmltb2QoZi5faW52bXAodGhpcy5tKS5tdWwodGhpcy5yMikpO3JldHVybiBhLl9mb3JjZVJlZCh0aGlzKX19KShlLEtuKX0pKFhuKTt2YXIgSz1Ybi5leHBvcnRzO2NvbnN0ICRuPVwiYmlnbnVtYmVyLzUuNy4wXCI7dmFyIERyPUsuQk47Y29uc3QgQWU9bmV3IHooJG4pLE5pPXt9LFpuPTkwMDcxOTkyNTQ3NDA5OTE7ZnVuY3Rpb24gSHMoZSl7cmV0dXJuIGUhPW51bGwmJihWLmlzQmlnTnVtYmVyKGUpfHx0eXBlb2YgZT09XCJudW1iZXJcIiYmZSUxPT09MHx8dHlwZW9mIGU9PVwic3RyaW5nXCImJiEhZS5tYXRjaCgvXi0/WzAtOV0rJC8pfHxKdChlKXx8dHlwZW9mIGU9PVwiYmlnaW50XCJ8fG5yKGUpKX1sZXQgdGY9ITE7Y2xhc3MgVntjb25zdHJ1Y3Rvcih0LHIpe3QhPT1OaSYmQWUudGhyb3dFcnJvcihcImNhbm5vdCBjYWxsIGNvbnN0cnVjdG9yIGRpcmVjdGx5OyB1c2UgQmlnTnVtYmVyLmZyb21cIix6LmVycm9ycy5VTlNVUFBPUlRFRF9PUEVSQVRJT04se29wZXJhdGlvbjpcIm5ldyAoQmlnTnVtYmVyKVwifSksdGhpcy5faGV4PXIsdGhpcy5faXNCaWdOdW1iZXI9ITAsT2JqZWN0LmZyZWV6ZSh0aGlzKX1mcm9tVHdvcyh0KXtyZXR1cm4genQoaih0aGlzKS5mcm9tVHdvcyh0KSl9dG9Ud29zKHQpe3JldHVybiB6dChqKHRoaXMpLnRvVHdvcyh0KSl9YWJzKCl7cmV0dXJuIHRoaXMuX2hleFswXT09PVwiLVwiP1YuZnJvbSh0aGlzLl9oZXguc3Vic3RyaW5nKDEpKTp0aGlzfWFkZCh0KXtyZXR1cm4genQoaih0aGlzKS5hZGQoaih0KSkpfXN1Yih0KXtyZXR1cm4genQoaih0aGlzKS5zdWIoaih0KSkpfWRpdih0KXtyZXR1cm4gVi5mcm9tKHQpLmlzWmVybygpJiYkdChcImRpdmlzaW9uLWJ5LXplcm9cIixcImRpdlwiKSx6dChqKHRoaXMpLmRpdihqKHQpKSl9bXVsKHQpe3JldHVybiB6dChqKHRoaXMpLm11bChqKHQpKSl9bW9kKHQpe2NvbnN0IHI9aih0KTtyZXR1cm4gci5pc05lZygpJiYkdChcImRpdmlzaW9uLWJ5LXplcm9cIixcIm1vZFwiKSx6dChqKHRoaXMpLnVtb2QocikpfXBvdyh0KXtjb25zdCByPWoodCk7cmV0dXJuIHIuaXNOZWcoKSYmJHQoXCJuZWdhdGl2ZS1wb3dlclwiLFwicG93XCIpLHp0KGoodGhpcykucG93KHIpKX1hbmQodCl7Y29uc3Qgcj1qKHQpO3JldHVybih0aGlzLmlzTmVnYXRpdmUoKXx8ci5pc05lZygpKSYmJHQoXCJ1bmJvdW5kLWJpdHdpc2UtcmVzdWx0XCIsXCJhbmRcIiksenQoaih0aGlzKS5hbmQocikpfW9yKHQpe2NvbnN0IHI9aih0KTtyZXR1cm4odGhpcy5pc05lZ2F0aXZlKCl8fHIuaXNOZWcoKSkmJiR0KFwidW5ib3VuZC1iaXR3aXNlLXJlc3VsdFwiLFwib3JcIiksenQoaih0aGlzKS5vcihyKSl9eG9yKHQpe2NvbnN0IHI9aih0KTtyZXR1cm4odGhpcy5pc05lZ2F0aXZlKCl8fHIuaXNOZWcoKSkmJiR0KFwidW5ib3VuZC1iaXR3aXNlLXJlc3VsdFwiLFwieG9yXCIpLHp0KGoodGhpcykueG9yKHIpKX1tYXNrKHQpe3JldHVybih0aGlzLmlzTmVnYXRpdmUoKXx8dDwwKSYmJHQoXCJuZWdhdGl2ZS13aWR0aFwiLFwibWFza1wiKSx6dChqKHRoaXMpLm1hc2tuKHQpKX1zaGwodCl7cmV0dXJuKHRoaXMuaXNOZWdhdGl2ZSgpfHx0PDApJiYkdChcIm5lZ2F0aXZlLXdpZHRoXCIsXCJzaGxcIiksenQoaih0aGlzKS5zaGxuKHQpKX1zaHIodCl7cmV0dXJuKHRoaXMuaXNOZWdhdGl2ZSgpfHx0PDApJiYkdChcIm5lZ2F0aXZlLXdpZHRoXCIsXCJzaHJcIiksenQoaih0aGlzKS5zaHJuKHQpKX1lcSh0KXtyZXR1cm4gaih0aGlzKS5lcShqKHQpKX1sdCh0KXtyZXR1cm4gaih0aGlzKS5sdChqKHQpKX1sdGUodCl7cmV0dXJuIGoodGhpcykubHRlKGoodCkpfWd0KHQpe3JldHVybiBqKHRoaXMpLmd0KGoodCkpfWd0ZSh0KXtyZXR1cm4gaih0aGlzKS5ndGUoaih0KSl9aXNOZWdhdGl2ZSgpe3JldHVybiB0aGlzLl9oZXhbMF09PT1cIi1cIn1pc1plcm8oKXtyZXR1cm4gaih0aGlzKS5pc1plcm8oKX10b051bWJlcigpe3RyeXtyZXR1cm4gaih0aGlzKS50b051bWJlcigpfWNhdGNoeyR0KFwib3ZlcmZsb3dcIixcInRvTnVtYmVyXCIsdGhpcy50b1N0cmluZygpKX1yZXR1cm4gbnVsbH10b0JpZ0ludCgpe3RyeXtyZXR1cm4gQmlnSW50KHRoaXMudG9TdHJpbmcoKSl9Y2F0Y2h7fXJldHVybiBBZS50aHJvd0Vycm9yKFwidGhpcyBwbGF0Zm9ybSBkb2VzIG5vdCBzdXBwb3J0IEJpZ0ludFwiLHouZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7dmFsdWU6dGhpcy50b1N0cmluZygpfSl9dG9TdHJpbmcoKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4wJiYoYXJndW1lbnRzWzBdPT09MTA/dGZ8fCh0Zj0hMCxBZS53YXJuKFwiQmlnTnVtYmVyLnRvU3RyaW5nIGRvZXMgbm90IGFjY2VwdCBhbnkgcGFyYW1ldGVyczsgYmFzZS0xMCBpcyBhc3N1bWVkXCIpKTphcmd1bWVudHNbMF09PT0xNj9BZS50aHJvd0Vycm9yKFwiQmlnTnVtYmVyLnRvU3RyaW5nIGRvZXMgbm90IGFjY2VwdCBhbnkgcGFyYW1ldGVyczsgdXNlIGJpZ051bWJlci50b0hleFN0cmluZygpXCIsei5lcnJvcnMuVU5FWFBFQ1RFRF9BUkdVTUVOVCx7fSk6QWUudGhyb3dFcnJvcihcIkJpZ051bWJlci50b1N0cmluZyBkb2VzIG5vdCBhY2NlcHQgcGFyYW1ldGVyc1wiLHouZXJyb3JzLlVORVhQRUNURURfQVJHVU1FTlQse30pKSxqKHRoaXMpLnRvU3RyaW5nKDEwKX10b0hleFN0cmluZygpe3JldHVybiB0aGlzLl9oZXh9dG9KU09OKHQpe3JldHVybnt0eXBlOlwiQmlnTnVtYmVyXCIsaGV4OnRoaXMudG9IZXhTdHJpbmcoKX19c3RhdGljIGZyb20odCl7aWYodCBpbnN0YW5jZW9mIFYpcmV0dXJuIHQ7aWYodHlwZW9mIHQ9PVwic3RyaW5nXCIpcmV0dXJuIHQubWF0Y2goL14tPzB4WzAtOWEtZl0rJC9pKT9uZXcgVihOaSxtcih0KSk6dC5tYXRjaCgvXi0/WzAtOV0rJC8pP25ldyBWKE5pLG1yKG5ldyBEcih0KSkpOkFlLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgQmlnTnVtYmVyIHN0cmluZ1wiLFwidmFsdWVcIix0KTtpZih0eXBlb2YgdD09XCJudW1iZXJcIilyZXR1cm4gdCUxJiYkdChcInVuZGVyZmxvd1wiLFwiQmlnTnVtYmVyLmZyb21cIix0KSwodD49Wm58fHQ8PS1abikmJiR0KFwib3ZlcmZsb3dcIixcIkJpZ051bWJlci5mcm9tXCIsdCksVi5mcm9tKFN0cmluZyh0KSk7Y29uc3Qgcj10O2lmKHR5cGVvZiByPT1cImJpZ2ludFwiKXJldHVybiBWLmZyb20oci50b1N0cmluZygpKTtpZihucihyKSlyZXR1cm4gVi5mcm9tKEt0KHIpKTtpZihyKWlmKHIudG9IZXhTdHJpbmcpe2NvbnN0IGk9ci50b0hleFN0cmluZygpO2lmKHR5cGVvZiBpPT1cInN0cmluZ1wiKXJldHVybiBWLmZyb20oaSl9ZWxzZXtsZXQgaT1yLl9oZXg7aWYoaT09bnVsbCYmci50eXBlPT09XCJCaWdOdW1iZXJcIiYmKGk9ci5oZXgpLHR5cGVvZiBpPT1cInN0cmluZ1wiJiYoSnQoaSl8fGlbMF09PT1cIi1cIiYmSnQoaS5zdWJzdHJpbmcoMSkpKSlyZXR1cm4gVi5mcm9tKGkpfXJldHVybiBBZS50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIEJpZ051bWJlciB2YWx1ZVwiLFwidmFsdWVcIix0KX1zdGF0aWMgaXNCaWdOdW1iZXIodCl7cmV0dXJuISEodCYmdC5faXNCaWdOdW1iZXIpfX1mdW5jdGlvbiBtcihlKXtpZih0eXBlb2YgZSE9XCJzdHJpbmdcIilyZXR1cm4gbXIoZS50b1N0cmluZygxNikpO2lmKGVbMF09PT1cIi1cIilyZXR1cm4gZT1lLnN1YnN0cmluZygxKSxlWzBdPT09XCItXCImJkFlLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgaGV4XCIsXCJ2YWx1ZVwiLGUpLGU9bXIoZSksZT09PVwiMHgwMFwiP2U6XCItXCIrZTtpZihlLnN1YnN0cmluZygwLDIpIT09XCIweFwiJiYoZT1cIjB4XCIrZSksZT09PVwiMHhcIilyZXR1cm5cIjB4MDBcIjtmb3IoZS5sZW5ndGglMiYmKGU9XCIweDBcIitlLnN1YnN0cmluZygyKSk7ZS5sZW5ndGg+NCYmZS5zdWJzdHJpbmcoMCw0KT09PVwiMHgwMFwiOyllPVwiMHhcIitlLnN1YnN0cmluZyg0KTtyZXR1cm4gZX1mdW5jdGlvbiB6dChlKXtyZXR1cm4gVi5mcm9tKG1yKGUpKX1mdW5jdGlvbiBqKGUpe2NvbnN0IHQ9Vi5mcm9tKGUpLnRvSGV4U3RyaW5nKCk7cmV0dXJuIHRbMF09PT1cIi1cIj9uZXcgRHIoXCItXCIrdC5zdWJzdHJpbmcoMyksMTYpOm5ldyBEcih0LnN1YnN0cmluZygyKSwxNil9ZnVuY3Rpb24gJHQoZSx0LHIpe2NvbnN0IGk9e2ZhdWx0OmUsb3BlcmF0aW9uOnR9O3JldHVybiByIT1udWxsJiYoaS52YWx1ZT1yKSxBZS50aHJvd0Vycm9yKGUsei5lcnJvcnMuTlVNRVJJQ19GQVVMVCxpKX1mdW5jdGlvbiBMcyhlKXtyZXR1cm4gbmV3IERyKGUsMzYpLnRvU3RyaW5nKDE2KX1jb25zdCBIdD1uZXcgeigkbiksQXI9e30sZWY9Vi5mcm9tKDApLHJmPVYuZnJvbSgtMSk7ZnVuY3Rpb24gbmYoZSx0LHIsaSl7Y29uc3Qgbj17ZmF1bHQ6dCxvcGVyYXRpb246cn07cmV0dXJuIGkhPT12b2lkIDAmJihuLnZhbHVlPWkpLEh0LnRocm93RXJyb3IoZSx6LmVycm9ycy5OVU1FUklDX0ZBVUxULG4pfWxldCBicj1cIjBcIjtmb3IoO2JyLmxlbmd0aDwyNTY7KWJyKz1icjtmdW5jdGlvbiBfaShlKXtpZih0eXBlb2YgZSE9XCJudW1iZXJcIil0cnl7ZT1WLmZyb20oZSkudG9OdW1iZXIoKX1jYXRjaHt9cmV0dXJuIHR5cGVvZiBlPT1cIm51bWJlclwiJiZlPj0wJiZlPD0yNTYmJiEoZSUxKT9cIjFcIitici5zdWJzdHJpbmcoMCxlKTpIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGRlY2ltYWwgc2l6ZVwiLFwiZGVjaW1hbHNcIixlKX1mdW5jdGlvbiBCaShlLHQpe3Q9PW51bGwmJih0PTApO2NvbnN0IHI9X2kodCk7ZT1WLmZyb20oZSk7Y29uc3QgaT1lLmx0KGVmKTtpJiYoZT1lLm11bChyZikpO2xldCBuPWUubW9kKHIpLnRvU3RyaW5nKCk7Zm9yKDtuLmxlbmd0aDxyLmxlbmd0aC0xOyluPVwiMFwiK247bj1uLm1hdGNoKC9eKFswLTldKlsxLTldfDApKDAqKS8pWzFdO2NvbnN0IG89ZS5kaXYocikudG9TdHJpbmcoKTtyZXR1cm4gci5sZW5ndGg9PT0xP2U9bzplPW8rXCIuXCIrbixpJiYoZT1cIi1cIitlKSxlfWZ1bmN0aW9uIGJlKGUsdCl7dD09bnVsbCYmKHQ9MCk7Y29uc3Qgcj1faSh0KTsodHlwZW9mIGUhPVwic3RyaW5nXCJ8fCFlLm1hdGNoKC9eLT9bMC05Ll0rJC8pKSYmSHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBkZWNpbWFsIHZhbHVlXCIsXCJ2YWx1ZVwiLGUpO2NvbnN0IGk9ZS5zdWJzdHJpbmcoMCwxKT09PVwiLVwiO2kmJihlPWUuc3Vic3RyaW5nKDEpKSxlPT09XCIuXCImJkh0LnRocm93QXJndW1lbnRFcnJvcihcIm1pc3NpbmcgdmFsdWVcIixcInZhbHVlXCIsZSk7Y29uc3Qgbj1lLnNwbGl0KFwiLlwiKTtuLmxlbmd0aD4yJiZIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJ0b28gbWFueSBkZWNpbWFsIHBvaW50c1wiLFwidmFsdWVcIixlKTtsZXQgbz1uWzBdLGg9blsxXTtmb3Iob3x8KG89XCIwXCIpLGh8fChoPVwiMFwiKTtoW2gubGVuZ3RoLTFdPT09XCIwXCI7KWg9aC5zdWJzdHJpbmcoMCxoLmxlbmd0aC0xKTtmb3IoaC5sZW5ndGg+ci5sZW5ndGgtMSYmbmYoXCJmcmFjdGlvbmFsIGNvbXBvbmVudCBleGNlZWRzIGRlY2ltYWxzXCIsXCJ1bmRlcmZsb3dcIixcInBhcnNlRml4ZWRcIiksaD09PVwiXCImJihoPVwiMFwiKTtoLmxlbmd0aDxyLmxlbmd0aC0xOyloKz1cIjBcIjtjb25zdCBwPVYuZnJvbShvKSxBPVYuZnJvbShoKTtsZXQgdj1wLm11bChyKS5hZGQoQSk7cmV0dXJuIGkmJih2PXYubXVsKHJmKSksdn1jbGFzcyB2cntjb25zdHJ1Y3Rvcih0LHIsaSxuKXt0IT09QXImJkh0LnRocm93RXJyb3IoXCJjYW5ub3QgdXNlIEZpeGVkRm9ybWF0IGNvbnN0cnVjdG9yOyB1c2UgRml4ZWRGb3JtYXQuZnJvbVwiLHouZXJyb3JzLlVOU1VQUE9SVEVEX09QRVJBVElPTix7b3BlcmF0aW9uOlwibmV3IEZpeGVkRm9ybWF0XCJ9KSx0aGlzLnNpZ25lZD1yLHRoaXMud2lkdGg9aSx0aGlzLmRlY2ltYWxzPW4sdGhpcy5uYW1lPShyP1wiXCI6XCJ1XCIpK1wiZml4ZWRcIitTdHJpbmcoaSkrXCJ4XCIrU3RyaW5nKG4pLHRoaXMuX211bHRpcGxpZXI9X2kobiksT2JqZWN0LmZyZWV6ZSh0aGlzKX1zdGF0aWMgZnJvbSh0KXtpZih0IGluc3RhbmNlb2YgdnIpcmV0dXJuIHQ7dHlwZW9mIHQ9PVwibnVtYmVyXCImJih0PWBmaXhlZDEyOHgke3R9YCk7bGV0IHI9ITAsaT0xMjgsbj0xODtpZih0eXBlb2YgdD09XCJzdHJpbmdcIil7aWYodCE9PVwiZml4ZWRcIilpZih0PT09XCJ1Zml4ZWRcIilyPSExO2Vsc2V7Y29uc3Qgbz10Lm1hdGNoKC9eKHU/KWZpeGVkKFswLTldKyl4KFswLTldKykkLyk7b3x8SHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBmaXhlZCBmb3JtYXRcIixcImZvcm1hdFwiLHQpLHI9b1sxXSE9PVwidVwiLGk9cGFyc2VJbnQob1syXSksbj1wYXJzZUludChvWzNdKX19ZWxzZSBpZih0KXtjb25zdCBvPShoLHAsQSk9PnRbaF09PW51bGw/QToodHlwZW9mIHRbaF0hPT1wJiZIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGZpeGVkIGZvcm1hdCAoXCIraCtcIiBub3QgXCIrcCtcIilcIixcImZvcm1hdC5cIitoLHRbaF0pLHRbaF0pO3I9byhcInNpZ25lZFwiLFwiYm9vbGVhblwiLHIpLGk9byhcIndpZHRoXCIsXCJudW1iZXJcIixpKSxuPW8oXCJkZWNpbWFsc1wiLFwibnVtYmVyXCIsbil9cmV0dXJuIGklOCYmSHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBmaXhlZCBmb3JtYXQgd2lkdGggKG5vdCBieXRlIGFsaWduZWQpXCIsXCJmb3JtYXQud2lkdGhcIixpKSxuPjgwJiZIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGZpeGVkIGZvcm1hdCAoZGVjaW1hbHMgdG9vIGxhcmdlKVwiLFwiZm9ybWF0LmRlY2ltYWxzXCIsbiksbmV3IHZyKEFyLHIsaSxuKX19Y2xhc3MgVXR7Y29uc3RydWN0b3IodCxyLGksbil7dCE9PUFyJiZIdC50aHJvd0Vycm9yKFwiY2Fubm90IHVzZSBGaXhlZE51bWJlciBjb25zdHJ1Y3RvcjsgdXNlIEZpeGVkTnVtYmVyLmZyb21cIix6LmVycm9ycy5VTlNVUFBPUlRFRF9PUEVSQVRJT04se29wZXJhdGlvbjpcIm5ldyBGaXhlZEZvcm1hdFwifSksdGhpcy5mb3JtYXQ9bix0aGlzLl9oZXg9cix0aGlzLl92YWx1ZT1pLHRoaXMuX2lzRml4ZWROdW1iZXI9ITAsT2JqZWN0LmZyZWV6ZSh0aGlzKX1fY2hlY2tGb3JtYXQodCl7dGhpcy5mb3JtYXQubmFtZSE9PXQuZm9ybWF0Lm5hbWUmJkh0LnRocm93QXJndW1lbnRFcnJvcihcImluY29tcGF0aWJsZSBmb3JtYXQ7IHVzZSBmaXhlZE51bWJlci50b0Zvcm1hdFwiLFwib3RoZXJcIix0KX1hZGRVbnNhZmUodCl7dGhpcy5fY2hlY2tGb3JtYXQodCk7Y29uc3Qgcj1iZSh0aGlzLl92YWx1ZSx0aGlzLmZvcm1hdC5kZWNpbWFscyksaT1iZSh0Ll92YWx1ZSx0LmZvcm1hdC5kZWNpbWFscyk7cmV0dXJuIFV0LmZyb21WYWx1ZShyLmFkZChpKSx0aGlzLmZvcm1hdC5kZWNpbWFscyx0aGlzLmZvcm1hdCl9c3ViVW5zYWZlKHQpe3RoaXMuX2NoZWNrRm9ybWF0KHQpO2NvbnN0IHI9YmUodGhpcy5fdmFsdWUsdGhpcy5mb3JtYXQuZGVjaW1hbHMpLGk9YmUodC5fdmFsdWUsdC5mb3JtYXQuZGVjaW1hbHMpO3JldHVybiBVdC5mcm9tVmFsdWUoci5zdWIoaSksdGhpcy5mb3JtYXQuZGVjaW1hbHMsdGhpcy5mb3JtYXQpfW11bFVuc2FmZSh0KXt0aGlzLl9jaGVja0Zvcm1hdCh0KTtjb25zdCByPWJlKHRoaXMuX3ZhbHVlLHRoaXMuZm9ybWF0LmRlY2ltYWxzKSxpPWJlKHQuX3ZhbHVlLHQuZm9ybWF0LmRlY2ltYWxzKTtyZXR1cm4gVXQuZnJvbVZhbHVlKHIubXVsKGkpLmRpdih0aGlzLmZvcm1hdC5fbXVsdGlwbGllciksdGhpcy5mb3JtYXQuZGVjaW1hbHMsdGhpcy5mb3JtYXQpfWRpdlVuc2FmZSh0KXt0aGlzLl9jaGVja0Zvcm1hdCh0KTtjb25zdCByPWJlKHRoaXMuX3ZhbHVlLHRoaXMuZm9ybWF0LmRlY2ltYWxzKSxpPWJlKHQuX3ZhbHVlLHQuZm9ybWF0LmRlY2ltYWxzKTtyZXR1cm4gVXQuZnJvbVZhbHVlKHIubXVsKHRoaXMuZm9ybWF0Ll9tdWx0aXBsaWVyKS5kaXYoaSksdGhpcy5mb3JtYXQuZGVjaW1hbHMsdGhpcy5mb3JtYXQpfWZsb29yKCl7Y29uc3QgdD10aGlzLnRvU3RyaW5nKCkuc3BsaXQoXCIuXCIpO3QubGVuZ3RoPT09MSYmdC5wdXNoKFwiMFwiKTtsZXQgcj1VdC5mcm9tKHRbMF0sdGhpcy5mb3JtYXQpO2NvbnN0IGk9IXRbMV0ubWF0Y2goL14oMCopJC8pO3JldHVybiB0aGlzLmlzTmVnYXRpdmUoKSYmaSYmKHI9ci5zdWJVbnNhZmUoZmYudG9Gb3JtYXQoci5mb3JtYXQpKSkscn1jZWlsaW5nKCl7Y29uc3QgdD10aGlzLnRvU3RyaW5nKCkuc3BsaXQoXCIuXCIpO3QubGVuZ3RoPT09MSYmdC5wdXNoKFwiMFwiKTtsZXQgcj1VdC5mcm9tKHRbMF0sdGhpcy5mb3JtYXQpO2NvbnN0IGk9IXRbMV0ubWF0Y2goL14oMCopJC8pO3JldHVybiF0aGlzLmlzTmVnYXRpdmUoKSYmaSYmKHI9ci5hZGRVbnNhZmUoZmYudG9Gb3JtYXQoci5mb3JtYXQpKSkscn1yb3VuZCh0KXt0PT1udWxsJiYodD0wKTtjb25zdCByPXRoaXMudG9TdHJpbmcoKS5zcGxpdChcIi5cIik7aWYoci5sZW5ndGg9PT0xJiZyLnB1c2goXCIwXCIpLCh0PDB8fHQ+ODB8fHQlMSkmJkh0LnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgZGVjaW1hbCBjb3VudFwiLFwiZGVjaW1hbHNcIix0KSxyWzFdLmxlbmd0aDw9dClyZXR1cm4gdGhpcztjb25zdCBpPVV0LmZyb20oXCIxXCIrYnIuc3Vic3RyaW5nKDAsdCksdGhpcy5mb3JtYXQpLG49enMudG9Gb3JtYXQodGhpcy5mb3JtYXQpO3JldHVybiB0aGlzLm11bFVuc2FmZShpKS5hZGRVbnNhZmUobikuZmxvb3IoKS5kaXZVbnNhZmUoaSl9aXNaZXJvKCl7cmV0dXJuIHRoaXMuX3ZhbHVlPT09XCIwLjBcInx8dGhpcy5fdmFsdWU9PT1cIjBcIn1pc05lZ2F0aXZlKCl7cmV0dXJuIHRoaXMuX3ZhbHVlWzBdPT09XCItXCJ9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5fdmFsdWV9dG9IZXhTdHJpbmcodCl7aWYodD09bnVsbClyZXR1cm4gdGhpcy5faGV4O3QlOCYmSHQudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBieXRlIHdpZHRoXCIsXCJ3aWR0aFwiLHQpO2NvbnN0IHI9Vi5mcm9tKHRoaXMuX2hleCkuZnJvbVR3b3ModGhpcy5mb3JtYXQud2lkdGgpLnRvVHdvcyh0KS50b0hleFN0cmluZygpO3JldHVybiBvZShyLHQvOCl9dG9VbnNhZmVGbG9hdCgpe3JldHVybiBwYXJzZUZsb2F0KHRoaXMudG9TdHJpbmcoKSl9dG9Gb3JtYXQodCl7cmV0dXJuIFV0LmZyb21TdHJpbmcodGhpcy5fdmFsdWUsdCl9c3RhdGljIGZyb21WYWx1ZSh0LHIsaSl7cmV0dXJuIGk9PW51bGwmJnIhPW51bGwmJiFIcyhyKSYmKGk9cixyPW51bGwpLHI9PW51bGwmJihyPTApLGk9PW51bGwmJihpPVwiZml4ZWRcIiksVXQuZnJvbVN0cmluZyhCaSh0LHIpLHZyLmZyb20oaSkpfXN0YXRpYyBmcm9tU3RyaW5nKHQscil7cj09bnVsbCYmKHI9XCJmaXhlZFwiKTtjb25zdCBpPXZyLmZyb20ociksbj1iZSh0LGkuZGVjaW1hbHMpOyFpLnNpZ25lZCYmbi5sdChlZikmJm5mKFwidW5zaWduZWQgdmFsdWUgY2Fubm90IGJlIG5lZ2F0aXZlXCIsXCJvdmVyZmxvd1wiLFwidmFsdWVcIix0KTtsZXQgbz1udWxsO2kuc2lnbmVkP289bi50b1R3b3MoaS53aWR0aCkudG9IZXhTdHJpbmcoKToobz1uLnRvSGV4U3RyaW5nKCksbz1vZShvLGkud2lkdGgvOCkpO2NvbnN0IGg9QmkobixpLmRlY2ltYWxzKTtyZXR1cm4gbmV3IFV0KEFyLG8saCxpKX1zdGF0aWMgZnJvbUJ5dGVzKHQscil7cj09bnVsbCYmKHI9XCJmaXhlZFwiKTtjb25zdCBpPXZyLmZyb20ocik7aWYoT3QodCkubGVuZ3RoPmkud2lkdGgvOCl0aHJvdyBuZXcgRXJyb3IoXCJvdmVyZmxvd1wiKTtsZXQgbj1WLmZyb20odCk7aS5zaWduZWQmJihuPW4uZnJvbVR3b3MoaS53aWR0aCkpO2NvbnN0IG89bi50b1R3b3MoKGkuc2lnbmVkPzA6MSkraS53aWR0aCkudG9IZXhTdHJpbmcoKSxoPUJpKG4saS5kZWNpbWFscyk7cmV0dXJuIG5ldyBVdChBcixvLGgsaSl9c3RhdGljIGZyb20odCxyKXtpZih0eXBlb2YgdD09XCJzdHJpbmdcIilyZXR1cm4gVXQuZnJvbVN0cmluZyh0LHIpO2lmKG5yKHQpKXJldHVybiBVdC5mcm9tQnl0ZXModCxyKTt0cnl7cmV0dXJuIFV0LmZyb21WYWx1ZSh0LDAscil9Y2F0Y2goaSl7aWYoaS5jb2RlIT09ei5lcnJvcnMuSU5WQUxJRF9BUkdVTUVOVCl0aHJvdyBpfXJldHVybiBIdC50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIEZpeGVkTnVtYmVyIHZhbHVlXCIsXCJ2YWx1ZVwiLHQpfXN0YXRpYyBpc0ZpeGVkTnVtYmVyKHQpe3JldHVybiEhKHQmJnQuX2lzRml4ZWROdW1iZXIpfX1jb25zdCBmZj1VdC5mcm9tKDEpLHpzPVV0LmZyb20oXCIwLjVcIiksanM9XCJzdHJpbmdzLzUuNy4wXCIsb2Y9bmV3IHooanMpO3ZhciBGcjsoZnVuY3Rpb24oZSl7ZS5jdXJyZW50PVwiXCIsZS5ORkM9XCJORkNcIixlLk5GRD1cIk5GRFwiLGUuTkZLQz1cIk5GS0NcIixlLk5GS0Q9XCJORktEXCJ9KShGcnx8KEZyPXt9KSk7dmFyIGZyOyhmdW5jdGlvbihlKXtlLlVORVhQRUNURURfQ09OVElOVUU9XCJ1bmV4cGVjdGVkIGNvbnRpbnVhdGlvbiBieXRlXCIsZS5CQURfUFJFRklYPVwiYmFkIGNvZGVwb2ludCBwcmVmaXhcIixlLk9WRVJSVU49XCJzdHJpbmcgb3ZlcnJ1blwiLGUuTUlTU0lOR19DT05USU5VRT1cIm1pc3NpbmcgY29udGludWF0aW9uIGJ5dGVcIixlLk9VVF9PRl9SQU5HRT1cIm91dCBvZiBVVEYtOCByYW5nZVwiLGUuVVRGMTZfU1VSUk9HQVRFPVwiVVRGLTE2IHN1cnJvZ2F0ZVwiLGUuT1ZFUkxPTkc9XCJvdmVybG9uZyByZXByZXNlbnRhdGlvblwifSkoZnJ8fChmcj17fSkpO2Z1bmN0aW9uIFFzKGUsdCxyLGksbil7cmV0dXJuIG9mLnRocm93QXJndW1lbnRFcnJvcihgaW52YWxpZCBjb2RlcG9pbnQgYXQgb2Zmc2V0ICR7dH07ICR7ZX1gLFwiYnl0ZXNcIixyKX1mdW5jdGlvbiBzZihlLHQscixpLG4pe2lmKGU9PT1mci5CQURfUFJFRklYfHxlPT09ZnIuVU5FWFBFQ1RFRF9DT05USU5VRSl7bGV0IG89MDtmb3IobGV0IGg9dCsxO2g8ci5sZW5ndGgmJnJbaF0+PjY9PT0yO2grKylvKys7cmV0dXJuIG99cmV0dXJuIGU9PT1mci5PVkVSUlVOP3IubGVuZ3RoLXQtMTowfWZ1bmN0aW9uIEpzKGUsdCxyLGksbil7cmV0dXJuIGU9PT1mci5PVkVSTE9ORz8oaS5wdXNoKG4pLDApOihpLnB1c2goNjU1MzMpLHNmKGUsdCxyKSl9T2JqZWN0LmZyZWV6ZSh7ZXJyb3I6UXMsaWdub3JlOnNmLHJlcGxhY2U6SnN9KTtmdW5jdGlvbiBDaShlLHQ9RnIuY3VycmVudCl7dCE9RnIuY3VycmVudCYmKG9mLmNoZWNrTm9ybWFsaXplKCksZT1lLm5vcm1hbGl6ZSh0KSk7bGV0IHI9W107Zm9yKGxldCBpPTA7aTxlLmxlbmd0aDtpKyspe2NvbnN0IG49ZS5jaGFyQ29kZUF0KGkpO2lmKG48MTI4KXIucHVzaChuKTtlbHNlIGlmKG48MjA0OClyLnB1c2gobj4+NnwxOTIpLHIucHVzaChuJjYzfDEyOCk7ZWxzZSBpZigobiY2NDUxMik9PTU1Mjk2KXtpKys7Y29uc3Qgbz1lLmNoYXJDb2RlQXQoaSk7aWYoaT49ZS5sZW5ndGh8fChvJjY0NTEyKSE9PTU2MzIwKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgdXRmLTggc3RyaW5nXCIpO2NvbnN0IGg9NjU1MzYrKChuJjEwMjMpPDwxMCkrKG8mMTAyMyk7ci5wdXNoKGg+PjE4fDI0MCksci5wdXNoKGg+PjEyJjYzfDEyOCksci5wdXNoKGg+PjYmNjN8MTI4KSxyLnB1c2goaCY2M3wxMjgpfWVsc2Ugci5wdXNoKG4+PjEyfDIyNCksci5wdXNoKG4+PjYmNjN8MTI4KSxyLnB1c2gobiY2M3wxMjgpfXJldHVybiBPdChyKX1mdW5jdGlvbiBHcyhlKXtpZihlLmxlbmd0aCU0IT09MCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgZGF0YVwiKTtsZXQgdD1bXTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrPTQpdC5wdXNoKHBhcnNlSW50KGUuc3Vic3RyaW5nKHIscis0KSwxNikpO3JldHVybiB0fWZ1bmN0aW9uIFJpKGUsdCl7dHx8KHQ9ZnVuY3Rpb24obil7cmV0dXJuW3BhcnNlSW50KG4sMTYpXX0pO2xldCByPTAsaT17fTtyZXR1cm4gZS5zcGxpdChcIixcIikuZm9yRWFjaChuPT57bGV0IG89bi5zcGxpdChcIjpcIik7cis9cGFyc2VJbnQob1swXSwxNiksaVtyXT10KG9bMV0pfSksaX1mdW5jdGlvbiBhZihlKXtsZXQgdD0wO3JldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAocj0+e2xldCBpPXIuc3BsaXQoXCItXCIpO2kubGVuZ3RoPT09MT9pWzFdPVwiMFwiOmlbMV09PT1cIlwiJiYoaVsxXT1cIjFcIik7bGV0IG49dCtwYXJzZUludChpWzBdLDE2KTtyZXR1cm4gdD1wYXJzZUludChpWzFdLDE2KSx7bDpuLGg6dH19KX1hZihcIjIyMSwxMy0xYiw1Zi0sNDAtMTAsNTEtZiwxMS0zLDMtMywyLTIsMi00LDgsMiwxNSwyZCwyOC04LDg4LDQ4LDI3LSwzLTUsMTEtMjAsMjctLDgsMjgsMy01LDEyLDE4LGItYSwxYy00LDYtMTYsMi1kLDItMiwyLDFiLTQsMTctOSw4Zi0sMTAsZiwxZi0yLDFjLTM0LDMzLTE0ZSw0LDM2LSwxMy0sNi0yLDFhLWYsNCw5LSwzLSwxNyw4LDItMiw1LSwyLDgtLDMtLDQtOCwyLTMsMyw2LSwxNi02LDItLDctMywzLSwxNyw4LDMsMywzLSwyLDYtMywzLSw0LWEsNSwyLTYsMTAtYiw0LDgsMiw0LDE3LDgsMyw2LSxiLDQsNC0sMi1lLDItNCxiLTEwLDQsOS0sMy0sMTcsOCwzLSw1LSw5LTIsMy0sNC03LDMtMywzLDQtMyxjLTEwLDMsNy0yLDQsNS0yLDMsMiwzLTIsMy0yLDQtMiw5LDQtMyw2LTIsNCw1LTgsMi1lLGQtZCw0LDksNCwxOCxiLDYtMyw4LDQsNS02LDMtOCwzLTMsYi0xMSwzLDksNCwxOCxiLDYtMyw4LDQsNS02LDMtNiwyLDMtMyxiLTExLDMsOSw0LDE4LDExLTMsNy0sNCw1LTgsMi03LDMtMyxiLTExLDMsMTMtMiwxOSxhLDItLDgtMiwyLTMsNywyLDktMTEsNC1iLDNiLTMsMWUtMjQsMywyLSwzLDItLDItNSw1LDgsNCwyLDItLDMsZSw0LSw2LDIsNy0sYi0sMy0yMSw0OSwyMy01LDFjLTMsOSwyNSwxMC0sMi0yZiwyMyw2LDMsOC0yLDUtNSwxYi00NSwyNy05LDJhLSwyLTMsNWItNCw0NS00LDUzLTUsOCw0MCwyLDUtLDgsMiw1LSwyOCwyLDUtLDIwLDIsNS0sOCwyLDUtLDgsOCwxOCwyMCwyLDUtLDgsMjgsMTQtNSwxZC0yMiw1Ni1iLDI3Ny04LDFlLTIsNTItZSxlLDgtYSwxOC04LDE1LWIsZSw0LDMtYiw1ZS0yLGItMTUsMTAsYi01LDU5LTcsMmItNTU1LDlkLTMsNWItNSwxNy0sNy0sMjctLDctLDksMiwyLDIsMjAtLDM2LDEwLGYtLDcsMTQtLDQsYSw1NC0zLDItNiw2LTUsOS0sMWMtMTAsMTMtMWQsMWMtMTQsM2MtLDEwLTYsMzItYiwyNDAtMzAsMjgtMTgsYy0xNCxhMCwxMTUtLDMsNjYtLGItNzYsNSw1LSwxZCwyNCwyLDUtMiwyLDgtLDM1LTIsMTksZi0xMCwxZC0zLDMxMS0zN2YsMWIsNWEtYixkNy0xOSxkLTMsNDEsNTctLDY4LTQsMjktMyw1ZiwyOS0zNywyZS0yLDI1LWMsMmMtMiw0ZS0zLDMwLDc4LTMsNjQtLDIwLDE5YjctNDksNTFhNy01OSw0OGUtMiwzOC03MzgsMmJhNS01YiwyMjJmLSwzYy05NCw4LWIsNi00LDFiLDYsMiwzLDMsNmQtMjAsMTZlLWYsNDEtLDM3LTcsMmUtMiwxMS1mLDUtYiwxOC0sYiwxNCw1LTMsNiw4OC0sMixiZi0yLDctLDctLDctLDQtMiw4LDgtOSw4LTJmZiwyMCw1LWIsMWMtYjQsMjctLDI3LWNiYjEsZjctOSwyOC0yLGI1LTIyMSw1Niw0OCwzLSwyLSwzLSw1LGQsMiw1LDMsNDIsNS0sOSw4LDFkLDUsNiwyLTIsOCwxNTMtMywxMjMtMywzMy0yN2ZkLGE2ZGEtNTEyOCwyMWYtNWRmLDMtZmZmZCwzLWZmZmQsMy1mZmZkLDMtZmZmZCwzLWZmZmQsMy1mZmZkLDMtZmZmZCwzLWZmZmQsMy1mZmZkLDMtZmZmZCwzLWZmZmQsMywyLTFkLDYxLWZmN2RcIiksXCJhZCwzNGYsMTgwNiwxODBiLDE4MGMsMTgwZCwyMDBiLDIwMGMsMjAwZCwyMDYwLGZlZmZcIi5zcGxpdChcIixcIikubWFwKGU9PnBhcnNlSW50KGUsMTYpKSxSaShcImI1OjNiYyxjMzpmZiw3OjczLDI6MjUzLDU6MjU0LDM6MjU2LDE6MjU3LDU6MjU5LDE6MjViLDM6MjYwLDE6MjYzLDI6MjY5LDE6MjY4LDU6MjZmLDE6MjcyLDI6Mjc1LDc6MjgwLDM6MjgzLDU6Mjg4LDM6MjhhLDE6MjhiLDU6MjkyLDNmOjE5NSwxOjFiZiwyOToxOWUsMTI1OjNiOSw4YjozYjIsMTozYjgsMTozYzUsMzozYzYsMTozYzAsMWE6M2JhLDE6M2MxLDE6M2MzLDI6M2I4LDE6M2I1LDFiYzk6M2I5LDFjOjFmNzYsMToxZjc3LGY6MWY3YSwxOjFmN2IsZDoxZjc4LDE6MWY3OSwxOjFmN2MsMToxZjdkLDEwNzo2Myw1OjI1Yiw0OjY4LDE6NjgsMTo2OCwzOjY5LDE6NjksMTo2YywzOjZlLDQ6NzAsMTo3MSwxOjcyLDE6NzIsMTo3Miw3OjdhLDI6M2M5LDI6N2EsMjo2YiwxOmU1LDE6NjIsMTo2MywzOjY1LDE6NjYsMjo2ZCxiOjNiMywxOjNjMCw2OjY0LDFiNTc0OjNiOCwxYTozYzMsMjA6M2I4LDFhOjNjMywyMDozYjgsMWE6M2MzLDIwOjNiOCwxYTozYzMsMjA6M2I4LDFhOjNjM1wiKSxSaShcIjE3OToxLDI6MSwyOjEsNToxLDI6MSxhOjRmLGE6MSw4OjEsMjoxLDI6MSwzOjEsNToxLDM6MSw0OjEsMjoxLDM6MSw0OjEsODoyLDE6MSwyOjIsMToxLDI6MiwyNzoyLDE5NToyNiwyOjI1LDE6MjUsMToyNSwyOjQwLDI6M2YsMTozZiwzMzoxLDExOi02LDE6LTksMWFjNzotM2EsNmQ6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCw5Oi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCxiOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsOTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDk6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LGM6LTgsMjotOCwyOi04LDI6LTgsOTotOCwxOi04LDE6LTgsMTotOCwxOi04LDE6LTgsMTotOCwxOi04LDQ5Oi04LDE6LTgsMTotNGEsMTotNGEsZDotNTYsMTotNTYsMTotNTYsMTotNTYsZDotOCwxOi04LGY6LTgsMTotOCwzOi03XCIpLFJpKFwiZGY6MDA3MzAwNzMsNTE6MDA2OTAzMDcsMTk6MDJCQzAwNkUsYTc6MDA2QTAzMEMsMThhOjAwMjAwM0I5LDE2OjAzQjkwMzA4MDMwMSwyMDowM0M1MDMwODAzMDEsMWQ3OjA1NjUwNTgyLDE5MGY6MDA2ODAzMzEsMTowMDc0MDMwOCwxOjAwNzcwMzBBLDE6MDA3OTAzMEEsMTowMDYxMDJCRSxiNjowM0M1MDMxMywyOjAzQzUwMzEzMDMwMCwyOjAzQzUwMzEzMDMwMSwyOjAzQzUwMzEzMDM0MiwyYToxRjAwMDNCOSwxOjFGMDEwM0I5LDE6MUYwMjAzQjksMToxRjAzMDNCOSwxOjFGMDQwM0I5LDE6MUYwNTAzQjksMToxRjA2MDNCOSwxOjFGMDcwM0I5LDE6MUYwMDAzQjksMToxRjAxMDNCOSwxOjFGMDIwM0I5LDE6MUYwMzAzQjksMToxRjA0MDNCOSwxOjFGMDUwM0I5LDE6MUYwNjAzQjksMToxRjA3MDNCOSwxOjFGMjAwM0I5LDE6MUYyMTAzQjksMToxRjIyMDNCOSwxOjFGMjMwM0I5LDE6MUYyNDAzQjksMToxRjI1MDNCOSwxOjFGMjYwM0I5LDE6MUYyNzAzQjksMToxRjIwMDNCOSwxOjFGMjEwM0I5LDE6MUYyMjAzQjksMToxRjIzMDNCOSwxOjFGMjQwM0I5LDE6MUYyNTAzQjksMToxRjI2MDNCOSwxOjFGMjcwM0I5LDE6MUY2MDAzQjksMToxRjYxMDNCOSwxOjFGNjIwM0I5LDE6MUY2MzAzQjksMToxRjY0MDNCOSwxOjFGNjUwM0I5LDE6MUY2NjAzQjksMToxRjY3MDNCOSwxOjFGNjAwM0I5LDE6MUY2MTAzQjksMToxRjYyMDNCOSwxOjFGNjMwM0I5LDE6MUY2NDAzQjksMToxRjY1MDNCOSwxOjFGNjYwM0I5LDE6MUY2NzAzQjksMzoxRjcwMDNCOSwxOjAzQjEwM0I5LDE6MDNBQzAzQjksMjowM0IxMDM0MiwxOjAzQjEwMzQyMDNCOSw1OjAzQjEwM0I5LDY6MUY3NDAzQjksMTowM0I3MDNCOSwxOjAzQUUwM0I5LDI6MDNCNzAzNDIsMTowM0I3MDM0MjAzQjksNTowM0I3MDNCOSw2OjAzQjkwMzA4MDMwMCwxOjAzQjkwMzA4MDMwMSwzOjAzQjkwMzQyLDE6MDNCOTAzMDgwMzQyLGI6MDNDNTAzMDgwMzAwLDE6MDNDNTAzMDgwMzAxLDE6MDNDMTAzMTMsMjowM0M1MDM0MiwxOjAzQzUwMzA4MDM0MixiOjFGN0MwM0I5LDE6MDNDOTAzQjksMTowM0NFMDNCOSwyOjAzQzkwMzQyLDE6MDNDOTAzNDIwM0I5LDU6MDNDOTAzQjksYWM6MDA3MjAwNzMsNWI6MDBCMDAwNjMsNjowMEIwMDA2NixkOjAwNkUwMDZGLGE6MDA3MzAwNkQsMTowMDc0MDA2NTAwNkMsMTowMDc0MDA2RCwxMjRmOjAwNjgwMDcwMDA2MSwyOjAwNjEwMDc1LDI6MDA2RjAwNzYsYjowMDcwMDA2MSwxOjAwNkUwMDYxLDE6MDNCQzAwNjEsMTowMDZEMDA2MSwxOjAwNkIwMDYxLDE6MDA2QjAwNjIsMTowMDZEMDA2MiwxOjAwNjcwMDYyLDM6MDA3MDAwNjYsMTowMDZFMDA2NiwxOjAzQkMwMDY2LDQ6MDA2ODAwN0EsMTowMDZCMDA2ODAwN0EsMTowMDZEMDA2ODAwN0EsMTowMDY3MDA2ODAwN0EsMTowMDc0MDA2ODAwN0EsMTU6MDA3MDAwNjEsMTowMDZCMDA3MDAwNjEsMTowMDZEMDA3MDAwNjEsMTowMDY3MDA3MDAwNjEsODowMDcwMDA3NiwxOjAwNkUwMDc2LDE6MDNCQzAwNzYsMTowMDZEMDA3NiwxOjAwNkIwMDc2LDE6MDA2RDAwNzYsMTowMDcwMDA3NywxOjAwNkUwMDc3LDE6MDNCQzAwNzcsMTowMDZEMDA3NywxOjAwNkIwMDc3LDE6MDA2RDAwNzcsMTowMDZCMDNDOSwxOjAwNkQwM0M5LDI6MDA2MjAwNzEsMzowMDYzMjIxNTAwNkIwMDY3LDE6MDA2MzAwNkYwMDJFLDE6MDA2NDAwNjIsMTowMDY3MDA3OSwyOjAwNjgwMDcwLDI6MDA2QjAwNkIsMTowMDZCMDA2RCw5OjAwNzAwMDY4LDI6MDA3MDAwNzAwMDZELDE6MDA3MDAwNzIsMjowMDczMDA3NiwxOjAwNzcwMDYyLGM3MjM6MDA2NjAwNjYsMTowMDY2MDA2OSwxOjAwNjYwMDZDLDE6MDA2NjAwNjYwMDY5LDE6MDA2NjAwNjYwMDZDLDE6MDA3MzAwNzQsMTowMDczMDA3NCxkOjA1NzQwNTc2LDE6MDU3NDA1NjUsMTowNTc0MDU2QiwxOjA1N0UwNTc2LDE6MDU3NDA1NkRcIixHcyksYWYoXCI4MC0yMCwyYTAtLDM5YywzMixmNzEsMThlLDdmMi1mLDE5LTcsMzAtNCw3LTUsZjgxLWIsNSxhODAwLTIwZmYsNGQxLTFmLDExMCxmYS02LGQxNzQtNywyZTg0LSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSxmZmZmLSwyLDFmLTVmLGZmN2YtMjAwMDFcIik7Y29uc3QgdWY9XCJoYXNoLzUuNy4wXCI7ZnVuY3Rpb24gWXMoZSl7ZT1hdG9iKGUpO2NvbnN0IHQ9W107Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspdC5wdXNoKGUuY2hhckNvZGVBdChyKSk7cmV0dXJuIE90KHQpfWZ1bmN0aW9uIGhmKGUsdCl7dD09bnVsbCYmKHQ9MSk7Y29uc3Qgcj1bXSxpPXIuZm9yRWFjaCxuPWZ1bmN0aW9uKG8saCl7aS5jYWxsKG8sZnVuY3Rpb24ocCl7aD4wJiZBcnJheS5pc0FycmF5KHApP24ocCxoLTEpOnIucHVzaChwKX0pfTtyZXR1cm4gbihlLHQpLHJ9ZnVuY3Rpb24gVnMoZSl7Y29uc3QgdD17fTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrKyl7Y29uc3QgaT1lW3JdO3RbaVswXV09aVsxXX1yZXR1cm4gdH1mdW5jdGlvbiBXcyhlKXtsZXQgdD0wO2Z1bmN0aW9uIHIoKXtyZXR1cm4gZVt0KytdPDw4fGVbdCsrXX1sZXQgaT1yKCksbj0xLG89WzAsMV07Zm9yKGxldCBIPTE7SDxpO0grKylvLnB1c2gobis9cigpKTtsZXQgaD1yKCkscD10O3QrPWg7bGV0IEE9MCx2PTA7ZnVuY3Rpb24gdygpe3JldHVybiBBPT0wJiYodj12PDw4fGVbdCsrXSxBPTgpLHY+Pi0tQSYxfWNvbnN0IHk9MzEsUz1NYXRoLnBvdygyLHkpLE49Uz4+PjEsST1OPj4xLEM9Uy0xO2xldCBEPTA7Zm9yKGxldCBIPTA7SDx5O0grKylEPUQ8PDF8dygpO2xldCBVPVtdLEo9MCxCdD1TO2Zvcig7Oyl7bGV0IEg9TWF0aC5mbG9vcigoKEQtSisxKSpuLTEpL0J0KSxMPTAsUHQ9aTtmb3IoO1B0LUw+MTspe2xldCBWdD1MK1B0Pj4+MTtIPG9bVnRdP1B0PVZ0Okw9VnR9aWYoTD09MClicmVhaztVLnB1c2goTCk7bGV0IFc9SitNYXRoLmZsb29yKEJ0Km9bTF0vbiksUnQ9SitNYXRoLmZsb29yKEJ0Km9bTCsxXS9uKS0xO2Zvcig7ISgoV15SdCkmTik7KUQ9RDw8MSZDfHcoKSxXPVc8PDEmQyxSdD1SdDw8MSZDfDE7Zm9yKDtXJn5SdCZJOylEPUQmTnxEPDwxJkM+Pj4xfHcoKSxXPVc8PDFeTixSdD0oUnReTik8PDF8TnwxO0o9VyxCdD0xK1J0LVd9bGV0IEc9aS00O3JldHVybiBVLm1hcChIPT57c3dpdGNoKEgtRyl7Y2FzZSAzOnJldHVybiBHKzY1NzkyKyhlW3ArK108PDE2fGVbcCsrXTw8OHxlW3ArK10pO2Nhc2UgMjpyZXR1cm4gRysyNTYrKGVbcCsrXTw8OHxlW3ArK10pO2Nhc2UgMTpyZXR1cm4gRytlW3ArK107ZGVmYXVsdDpyZXR1cm4gSC0xfX0pfWZ1bmN0aW9uIFhzKGUpe2xldCB0PTA7cmV0dXJuKCk9PmVbdCsrXX1mdW5jdGlvbiAkcyhlKXtyZXR1cm4gWHMoV3MoZSkpfWZ1bmN0aW9uIFpzKGUpe3JldHVybiBlJjE/fmU+PjE6ZT4+MX1mdW5jdGlvbiB0MChlLHQpe2xldCByPUFycmF5KGUpO2ZvcihsZXQgaT0wO2k8ZTtpKyspcltpXT0xK3QoKTtyZXR1cm4gcn1mdW5jdGlvbiBjZihlLHQpe2xldCByPUFycmF5KGUpO2ZvcihsZXQgaT0wLG49LTE7aTxlO2krKylyW2ldPW4rPTErdCgpO3JldHVybiByfWZ1bmN0aW9uIGUwKGUsdCl7bGV0IHI9QXJyYXkoZSk7Zm9yKGxldCBpPTAsbj0wO2k8ZTtpKyspcltpXT1uKz1acyh0KCkpO3JldHVybiByfWZ1bmN0aW9uIFVyKGUsdCl7bGV0IHI9Y2YoZSgpLGUpLGk9ZSgpLG49Y2YoaSxlKSxvPXQwKGksZSk7Zm9yKGxldCBoPTA7aDxpO2grKylmb3IobGV0IHA9MDtwPG9baF07cCsrKXIucHVzaChuW2hdK3ApO3JldHVybiB0P3IubWFwKGg9PnRbaF0pOnJ9ZnVuY3Rpb24gcjAoZSl7bGV0IHQ9W107Zm9yKDs7KXtsZXQgcj1lKCk7aWYocj09MClicmVhazt0LnB1c2gobjAocixlKSl9Zm9yKDs7KXtsZXQgcj1lKCktMTtpZihyPDApYnJlYWs7dC5wdXNoKGYwKHIsZSkpfXJldHVybiBWcyhoZih0KSl9ZnVuY3Rpb24gaTAoZSl7bGV0IHQ9W107Zm9yKDs7KXtsZXQgcj1lKCk7aWYocj09MClicmVhazt0LnB1c2gocil9cmV0dXJuIHR9ZnVuY3Rpb24gbGYoZSx0LHIpe2xldCBpPUFycmF5KGUpLmZpbGwodm9pZCAwKS5tYXAoKCk9PltdKTtmb3IobGV0IG49MDtuPHQ7bisrKWUwKGUscikuZm9yRWFjaCgobyxoKT0+aVtoXS5wdXNoKG8pKTtyZXR1cm4gaX1mdW5jdGlvbiBuMChlLHQpe2xldCByPTErdCgpLGk9dCgpLG49aTAodCksbz1sZihuLmxlbmd0aCwxK2UsdCk7cmV0dXJuIGhmKG8ubWFwKChoLHApPT57Y29uc3QgQT1oWzBdLHY9aC5zbGljZSgxKTtyZXR1cm4gQXJyYXkobltwXSkuZmlsbCh2b2lkIDApLm1hcCgodyx5KT0+e2xldCBTPXkqaTtyZXR1cm5bQSt5KnIsdi5tYXAoTj0+TitTKV19KX0pKX1mdW5jdGlvbiBmMChlLHQpe2xldCByPTErdCgpO3JldHVybiBsZihyLDErZSx0KS5tYXAobj0+W25bMF0sbi5zbGljZSgxKV0pfWZ1bmN0aW9uIG8wKGUpe2xldCB0PVVyKGUpLnNvcnQoKGksbik9Pmktbik7cmV0dXJuIHIoKTtmdW5jdGlvbiByKCl7bGV0IGk9W107Zm9yKDs7KXtsZXQgdj1VcihlLHQpO2lmKHYubGVuZ3RoPT0wKWJyZWFrO2kucHVzaCh7c2V0Om5ldyBTZXQodiksbm9kZTpyKCl9KX1pLnNvcnQoKHYsdyk9Pncuc2V0LnNpemUtdi5zZXQuc2l6ZSk7bGV0IG49ZSgpLG89biUzO249bi8zfDA7bGV0IGg9ISEobiYxKTtuPj49MTtsZXQgcD1uPT0xLEE9bj09MjtyZXR1cm57YnJhbmNoZXM6aSx2YWxpZDpvLGZlMGY6aCxzYXZlOnAsY2hlY2s6QX19fWZ1bmN0aW9uIHMwKCl7cmV0dXJuICRzKFlzKFwiQUVRRjJBTzJERXNBMndJckFHc0JSQUJ4QU44QVp3Q2NBRXdBcWdBMEFHd0FVZ0J5QURjQVRBQVZBRllBSVFBeUFDRUFLQUFZQUZnQUd3QWpBQlFBTUFBbUFESUFGQUFmQUJRQUt3QVRBQ29BRGdBYkFBOEFIUUFZQUJvQUdRQXhBRGdBTEFBb0FEd0FFd0E5QUJNQUdnQVJBQTRBRHdBV0FCTUFGZ0FJQUE4QUhnUVhCWU1BNUJISkFTOEp0QVlvQWU0QUV4b3ppMFVBSDIxdEFhTW5CVDhDcm5JeWhyTURoUmdEeWdJQlVBRUhjb0ZIVVBlOEFYQmpBZXdDamdEUVI4SUlDSWNFY1FMd0FUWENEZ3p2SHdCbUJvSE5BcXNCZEJjVUF5a2dEaEFNU2hza01nbzhBWThqcUFRZkFVQWZIdzhCRHc4N01pb0dsQ0lQQndaQ2E0RUxhdE1BQU1zcEpWZ3NEbDhBSWhja1NnOFhBSGR2VHdCY0lRRWlEVDRPUGhVcWJ5RUNBRW9BUzM0QWVqOFlieDgzSmdUL1h3OGdIeFovN3c4UklDeFBIQTl2QncrUGZ3OFBId0FQRnYrZkFzQXZDYzh2RXI4aXZ3RC9FUThCb2w4T0VCYS9BNzhocndBUENVOHZFU052dndXZkh3TmZBVm9ESHIrWkFBRUQzNFlhQWRKUEFLN1BMd1NFZ0RMSEFHbzFQejhQdng5ZlV3TXJwYjhPLzU4VlR6QVBJQm9YSXlRSk5GOGhwd0lWQVQ4WUdBVUFERE5CYVgzUkFNb21KQ2c5RWhVZUEyOU1BQnNaQlRNTkppcGpPaGMxOWdjSURSOGJCd1FIRWdnQ1dpNkRJZ0x1QVFZQStCQUZDaGEzQTVYaUFFc3FNN1VGRmdGTGhBTWpGVE1ZRTFLbG53NzRuUlZCRy9BU0NtMEJZUk4vQnJzVTNWb1d5K1MwdlY4TFF4K3ZOOGdGMkFDMkFLNUVBV3dBcGdZREttQUFyb1EwTkRRMEFUK09DZzd3QUFJSFJBYnBOZ1ZjQlYwQVBUQTVCZmJQRmdNTHpjWUwvUXFxQTgyZUJBTEtDalFDanFZQ2h0MC9rMitPQXNYUUFvUDNBU1RLRGdEdzZBQ0tBVVlDTXBJS0pwUmFBRTRBNXdvbUFCelp2czBSRUVLaUFDSVFBZDVRZEFFQ0FqNFl3Zy93R3FZMkFWZ0FZQURZdkFvQ0dBRXViQTBndkFZMkFMQUFicGJ2cXB5RUFHQUVwZ1FBSmdBRzdnQWdBRUFDbWdoVUZ3Q3FBTXBBSU5RSXdDNER0aFJBQVBjeWNLZ0Fwb0lkQUJ3QmZDaXNBQm9BVHdCcUFTSUF2aG5TQlA4YUgvRUNlQUtYQXE0ME5qZ0RCVHdGWVFVNkFYczNvQUJnQUQ0WE5nbWNDWTFlQ2w1dElGWmVVcUdneW9OSEFCZ0FFUUFhQUJOd1dRQW1BQk1BVFBNYTNUMzRBRGxkeXBybU0xTTJYb2NpVVFnTHp2d0FYVDN4QUJnQUVRQWFBQk53SUdGQW5BREQ4QUFnQUQ0QkJKV3phQ2NJQUlFQkZNQVd3S29BQWRxOUJXQUY1d0xRcEFMRXRRQUtVU0drYWhSNEduSk0rZ3NBd0NnZUZBaVVBRUNRMEJRdUw4QUFJQUFBQURLZUloZWNsdkZxUUFBRVRyNGlBTXhJQVJNZ0FNSW9IaFFJQW4wRTBwRFFGQzRIaHpub0FBQUFJQUkyQzAvNGx2RnFRQUFFVGdCSkp3WUNBeTRBQmdZQUZBQThNQktZRUg0ZVJoVGtBalllRmNnQUNBWUFlQUJzT3F5UTVnUndEYXlxdWdFZ2FJSUF0Z29BQ2dEbUVBQm1CQVdHbWU1T0JKSkEybTRjRGVvQW1JVFdBWHdyTWdPZ0FHd0JDaDZDQlhZRjFUemcxd0tBQUZkaXVBQlJBRndBWFFCc0FHOEFkZ0JyQUhZQWJ3Q0VBSEV3ZnhRQlZFNVRFUUFEVkZoVEJ3QkRBTklMQXFjQ3pnTFRBcFFDclFMNnZBQU1BTDhBUExoTkJLa0U2Z2xHS1RBVTREcjROMkVZRXdCQ2tBQktrOHJIQWJZQm13SW9BaVU0QWpmL0FxNENvd0NBQU5JQ2h6Z2FOQnNDc1RnZU9EY0ZYcmdDbFFLZEFxUUJpUUdZQXFzQ3NqVHNOSHNmTlBBMGl4c0FXVFdpT0FNRlBEUVNOQ2syQkRaSE5vdzJUVFpVTmhrMjhKazlWekkzUWtFb0FvSUNvUUt3QXFjQVFBQXhCVjRGWGJTOUJXNDdZa0lYUDFjaVVxczA1RFMvRndBQlV3SlcxMWU2bkh1WVptU2gvUkFZQThvTUt2WjhLQVNvVUFKWVdBSjZJTEFzQVpTb3FqcGdBMG9jQklobURnRFdBQWF3UkRRb0FBY3VBajVpQUhBQlppUjJBSWdpSGdDYUFVNjhBQ3h1SEFHMHlnTThNaVpJQWxnQmRGNEdhZ0pxQVBaT0hBTXVCZ29BVGtZQXNBQmlBSGdBTUxvR0RQajBIcEtFQkFBT0pnQXVBTGdnVEFIV0FlQU1FRGJkMjBVZWdlMEFEd0FXQURrQVFnQTlPSGQrMk1VUVpCQmhCZ05ORGt4eFB4VVFBckVQcXd2cUVSb00xaXJRMDkwQU5LNEg4QU5ZQi9BRFdBTllCL0FIOEFOWUIvQURXQU5ZQTFnRFdCd1A4Qi9ZeFJCa0QwMEVjZ1dUQlpBRTJ3aUlKazRSaGdjdENOZFVFblFqSEV3RFNnRUJJeXBKSVR1WU14QWxSMHdSVFFnSUFUWkhiS3g5UFFOTU1iQlUrcENuQTlBeVZEbHhCZ01lZGhLbEFDOFBlQ0UxdWs2RGVreHhwUXBRVDdOWDl3QkZCZ0FTcXdBUzVnQkpEU2dBVUN3R1BRQkk0elRZQUJOR0FFMmJBRTNLQUV4ZEdBQkthQWJnQUZCWEFGQ09BRkJKQUJJMlNXZE9iQUxET3EwLy9Rb21DWmh2d0hkVEJrSVFIQ2VtRVBnTU5BRzJBVHdON2t2WkJQSUdQQVRLSDM0WkdnL09sWjBJcGkzZURPNG01QzZpZ0ZzajlpcUVCZTVMOVR6ZUMwNVJhUTlhQzJZSjVEcGtnVThESWdFT0lvd0szZzA2Q0c0UTlBcktiQTNtRVVZSE9nUFdTWnNBcGdjQ0N4SWROaFcySmhGaXJRc0tPWGdHL0JyM0M1QW1zQk1xZXYwRjFCb2lCazRCS2hzQUFOQXU2SVd4V2pKY0hVOWdCZ1FMSmlQSUZLbFFJUTBtUUxoNFNSb2NCeFlscWdLU1EzRktpRkUzSHBRaDl6dytEV2N1RkZGOUIvWThCaGxRQzRJOG4wYXNSUThSMHo2T1BVa2lTa3d0QkRhQUxEQW5qQW5RRDRZTXVueHpBVm9KSWdteURISVRNaEVZTjhZSU9nY2FMcGNsSnhZSUlrYVdZSnNFK0tBRDlCUFNBd3dGUUFsQ0J4UUR0aHd1RXk4VktnVU9nU1hZQXZRMjFpNjBBcEJXZ1FFWUJjd1BKaC9nRUZGSDRRN3FDSndDWmdPRUpld0FMaFVpQUJnaW5BaEVaQUJnajlsVEJpN01DTWhxYlNOMUEyZ1U2R0lSZEFlU0RsZ0hxQncwRmNBYzRuREpYZ3lHQ1Npa3NBbGNBWFlKbWdGZ0JPUUlDalZjaktFZ1FtZFVpMWtZbkNCaVFVQmQvUUl5REdZVm9FUytoM2tDakE5c0Vod0JOZ0YwQnpvTkFnSjRFZTRSYkJDV0NPeUdCVFcyTS9rNkpnUlFJWVFnRWdvb0ExQnN6d3NvSnZvTStXb0JwQkpqQXcwMFBuZnZaNnhndHlVWC9nY2FNc1pCWVNIeUM1TlB6Z3lkR3NJWVExUXZHZVVId0FQMEd2UW42MEZZQmdBRHBBUVVPazR6N3dTK0Myb0lqQWxBQUVvT3BCZ0gyQmhyQ25LTTBRRXlqQUc0bWdOWWtvUUNjSkFHT0FjTUFHZ01pQVY2NWdBZUFxZ0lwQUFHQU5BRFdBQTZBcTRIbmdBYUFJWkNBVDRES0RBQkl1WUNrQU9VQ0RMTUFaWXdBZlFxQkJ6RURCWUErRGh1U3dMRHNnS0FhMmFqQmQ1WkFvOENTallCVGlZRUJrOUlVZ093Y3VJQTNBQk1CaFRnU0FFV3JFdk1HK1JFQWVCd0xBRElBUHdBQmpZSEJrSUJ6Z0gwYmdDNEFXQUxNZ21qdExZQlR1b3FBSVFBRm13QjJBS0tBTjRBTmdDQThnRlVBRTRGV3ZvRjFBSlFTZ0VTTWhrc1dHSUJ2QU1nQVRRQkRnQjZCc3lPcHNvSUlBUnVCOVFDRUJ3VjRnTHZMd2UyQWdNaTRCUE9Rc1lDdmQ5V0FESVhVdTVlWndxb0NxZGVhQUMwWVRRSE1uTTlVUUFQSDZrK3lBZHkvQlpJaVFJbVN3QlE1Z0JRUXpTYU5URldTVFlCcHdHcUtRSzM4QUZ0cXdCSS93SzM3Z0szclFLM3NBSzYyODBDMGdLMzNBSzN6eEFBVUVJQVVEOVNrbEtEQXJla0FydzVBRVFBekFIQ08xNDdXVHRlTzFrN1hqdFpPMTQ3V1R0ZU8xa0RtQ2hZSTAzQVZVMG9KcWtLYlY5R1lld01wdzNWUk1rNlNoUGNZRkpnTXhQSkxiZ1V3aFhQSlZjWlBocTlKd1lsNVZVS0R3VXQxR1l4Q0MwMGRoZTlBRUFwYVlOQ1k0Y2VNUXBNSE9oVGtsVDVMUndBc2t1ak03QU5yUnNXUkVFRlNIWHVZaXNXRHdvakFtU0NBbUpEWEU2d1hEY2hBcUg0QW1pWkFtWUtBcCtGT0J3TUFtWThBbVluQkc4RWdBTi9GQU4ra3prSE9YZ1lPWU02SkNRQ2JCNENNamM0Q3dKdHlBSnRyL0NMQURSb1Jpd0JhQURmQU9JQVN3WUhtUXlPQVA4TXd3QU90Z0ozTUFKMm8wQUNlVXhFQW5pN0hsM2NSYTlHOUFKOFFBSjZ5UUo5Q2dKODhVZ0JTSDVrSlFBc0ZrbFpTbHdXR0VyTkF0RUNBdEROU3lnRGlGQURoK2RFeHBFekF2S2lYUVFEQTY5THowd3VKZ1RRVFUxTnNBS0xRQUtLMmNJY0NCNUVhQWE0QW80NEFvNWRRWmlDQW83YUFvNWRlVkcxVXpZTFV0VlVoZ0tUL0FLVERRRHFBQjFWSDFXd1ZkRUhMQndwbG9jeTRuaG5SVHc2QXBlZ0F1K3pXQ0twQUZvbUFwYVFBcFo5blFDcVdhMWFDb0pPQUR3Q2xyWUNsazljUlZ6U0Fwbk1BcGxsWE10ZENCb0NuSnc1d3pxZUFwd1hBcCtjQXA2NWl3QWVFRElyRUFLZDhnS2Vrd0MyUG1FMVlmQUNudFFDb0c4QnFnS2VvQ0FDbmsrbVk4bGtLQ1lzQWlld0FpWi9BcUQ4QXFCTjJBS21NQUtsendLb0FBQitBcWZ6YUgxb3NnQUVTbW9kYXRJQ3JPUUNySzhDcldnQ3JRTUNWeDRDVmQwQ3NlTFlBeDlQYkpnQ3NyNE9BckxwR0d6aGJXUnRTV0FESmM0Q3RsMDhRRzZSQXlsR0FyaGZBcmxJRmdLNUszaHdOM0RpQXIwYUF5MnpBeklTQXI2SmNnTURNM0lDdmh0ekkzTlFBc1BNQXNNRmM0TjBURFpHZE9FRFBLZ0RQSnNEUGNBQ3hYMEN4a2dDeGhHS0FzaHFVZ0xJUlFMSlVBTEpMd0prbmdMZDAzaDZZbml2ZVNaTDBRTVlwR2NEQW1IMUdmU1ZKWHNNWHBOZXZCSUN6MndDejIwd1RGVFQ5QlNnQU1ldUFzOTBBU3JyQTA0VGZrd0dBdHdvQXR1TEF0SlFBMUpkQTFOZ0FRSURWWTJBaWtBQnpCZnVZVVoyQUlMUGc0NEMyc2dDMmQrRUVZUktwejBEaHFZQU1BTmtENFp5V3ZvQVZnTGZaZ0xldVhSNEF1SXc3UlVCOHpFb0FmU2NBZkxUaUFMcjlBTHBjWG9BQXVyNkF1cmxBUHBJQWJvQzdvb0M2NTJXcTVjRUF1NUFBNFhobUhwdzRYR2lBdk1FQUdvRGpoZVpsQUwzRkFPUmJ3T1NpQUwzbVFMNTJnTDRaNW9kbXF5OE9Kc2ZBNTJFQXY3N0FSd0FPcDhkbjdRREJZNERwbXNEcHRvQTBzWURCbXVoaWFJR0NnTU1TZ0ZnQVNBQ3RnTkdBSndFZ0xwb0JnQzhCR3pBRW93Y2dnQ0VEQzZrZGpvQUpBTTBDNUlLUm9BQlpDZ2lBSXp3M0FZQkxBQ2tmbmc5b2dpZ2tnTm1XQU42QUVRQ3Zya0VWcVRHQXdDc0JSYkFBKzRpUWtNQ0hSMDcyakkyUFRiVU5zazJSalk1TnZBMjNUWktOaVUzRURjWk41SStSVHhEUlRCQ0prSzVWQllLRmhaZndRQ1d5Z1UzQUpCUkhwdStPeXRnTnhhNjFBNDBHTXNZanNuN0JWd0ZYUVZjQlYwRmFBVmRCVndGWFFWY0JWMEZYQVZkQlZ3RlhVc2FDTnlLQUs0QUFRVUhCd0tVN29JQ29XMWU3akFFemdQeEErWUR3Z0NrQkZEQXdBREFCS3pBQU94RkxoaXRBMVVGVERleVBrTStiajUxUWtSQ3V3VFFXV1E4WCswQVdCWXpzQUNOQTh4d3pBR203RVovUWlzb0NUQWJMRHM2Zm5MZmI4SDJHY2NzYmdGdzEzTTFIQVZrQlcvSnhzbTlDTlJPOEU4RkREMEZCUXc5RmtjQ2xPWUNvTUZlZ3BEZkFEZ2NNaUEyQUpRQUNCOEFzaWdLQUl6SUVBSktlQklBcFk1eVBaUUlBS1FpSGI0ZnZqNUJLU1JQUXJaQ096MG9YeXhnT3l3ZktBbkdiZ01DbFFhQ0FrSUxYZ2RlQ0Q5SUlHVWdRajVmUG9ZK2RUNTJBbzVDTTBkQVg5QlRWRzlTRHpGd1dUUUFieEJ6SkYvbE9FSVFRZ2xDQ2tLSklBbHM1QWNDbFFJQ29LUE1PREVGeGhpNktTQWJpeWZJUnJNanRDZ2RXQ0FrUGxGQklpdENzRUpSekFiTUFWL09FeVF6RGcwT0FRUUVKMzZpMzI4L01rOUF5YkRKc1FscTN0RFJBcFVLQWtGelhmMWQvajl1QUxZUDZoQ29GZ0NUR0Q4a1BzRktRaW9icm0wK3pqMEtTRDhrUG5WQ1JCd01EeUpSVEhGZ01USmE1cndYUWlRMllmSS9KRDdCTUVKRUhHSU5UdzRUT0ZsSVJ6d0pPMGljTVFweVB5USt3ekpDUkJ2NkRWZ25LQjAxTmdVS2oyYndZek1xQ29Ca3puQmdFRit6WURJb2N3UklYK05nSGo0SElDTmZoMkM0Q3dkd0ZXcFRHL2xnVWhZR0F3UmZ2MlRzOG1BYVh6VmdtbC9YWUlKZnVXQzRISTFnVUY5cFlKWmdNUjZpbFFITUFPd0xBbERSZWZDMGluNEFYQUVKQTZQakN3YzBJYW1PQU5NTUNBRUNSUURGTlJUWkJnZCtDd1FsUkErcjYrZ0xCREVGQm53VUJYZ0tBVElBcndBR1JBQUhBM2NEZEFOMkEza0Rkd045QTNvRGRRTjdBMzBEZkFONEEzb0RmUUFZRUFBbEF0WUFTd01BVUFGc0FIY0tBSGNBbWdCM0FIVUFkUUIyQUhWdThVZ0F5Z0RBQUhjQWRRQjFBSFlBZFFBTENnQjNBQXNBbWdCM0FBc0NPd0IzQUF0dThVZ0F5Z0RBQUhnS0FKb0Fkd0IzQUhVQWRRQjJBSFVBZUFCMUFIVUFkZ0IxYnZGSUFNb0F3QUFMQ2dDYUFIY0FDd0IzQUFzQ093QjNBQXR1OFVnQXlnREFBSDRBQ3dHZ0FMY0Jwd0M2QWFoZEF1MENPd0x0YnZGSUFNb0F3QUFMQ2dDYUF1MEFDd0x0QUFzQ093THRBQXR1OFVnQXlnREFBMjRBQ3dOdkFBdTBWc1FBQXpzQUFCQ2tqVUlwQUFzQVVJdXNPZ2dXY2dNZUJ4VnNHd0w2N1UvMkhsem1XT0VlT2dBTEFTdnVBQXNlQWZwS1VwbnBHZ1lKRENJWk02WXlBUlVFOVRocUFENWlYUWduQUpZSlBuT3p3MFpBRVp4RUtzSUFrQTREaEFIblRBSUR4eFVESzBseENRbFBZZ0l2SVFWWUpRQlZxRTFHYWtVQUtHWWlEVG9TQkExRXRBWUFYUUpZQUlGOEdnTUhSeUFBSUFqT2U5WW5jZWtSQUEwS0FDVXJqd0U3QXljNkFBWVdBcWFpS0c0TWNFY3FBTm9OMytNZzlUd0NCaElrdUNueStKd1VRMjlMMDA4Smx1Unh1M0srb0FkcWlIT3FGSDBBRzVTVUlmVUo1U3hDR2Z4ZGlwUnpxVG1UNFY1WmIrcjFVbzRWbStOcVNTRWwybU52UjJKaElhOFNwWU82bnRkd0ZYSENXVENLOGYyK0h4bzd1aUczZHJEeWNBdUtJTVA1YmhpMDZBQ25xQXJIMXJ6NFJxZy8vbG02U2dKR0VWYkY5eEpISVNhUjZIeHF4U25rdzZzaERuZWxIS05FZkdVWFNKUkoxR2NzbXRKdzI1eHJaTURLOWdYU20xL1lNa2RYNC82TktZT2R0ay9OUTMvTm5EQVNqVGMzZlBqSWpXLzVzVmZWT2JYMm9URFdrcjFkRjlmM2t4QnNEMy8zYVFPOGhQZlJ6K2UwdUVpSnF0MTE2MWdyaXU3Z3o4aEREd3RweStGK0JXdGVmbktIWlBBeGNab1dibnpuaEpweTBlODQyajM2YmNOekduSUV1c2dHWDBhOFp4c25qY1NzUERaMDl5WjM2ZkNRYnJpSGVRNzJKUk1JTE5sNmVQUGYySFdvVndnV0FtMWZiM1Yyc0FZMCtCNnJBWHFTd1BCZ3NlVm1vcXNCVFNybTkxK1hhc01ZWXlTSThlZVJ4SDNadkhrTXozQlE1YUozaVVWYllQTk0zLzdlbVJ0amxzTWd2LzlWeVRzeXQvbUsrOGZnV2VUNlNvRmFjbFhxbjQyZEFJc3ZBYXJGNXZOTldIektTa0tRLzhIZms1WldLN3I5eWxpT3Nvb3lCalJoZmtIUDRRMkRrV1hRaTZGRy85ci9Jd2Jta1Y1VDdKU29wSEtuMXBKd205dGI1T3Qwb3lOMVoybVBwS1hIVHh4Mm5sSzA4ZktrMWhFWUE4V2dWVldMNWxneDBpVHYrS2RvakplVTIzWkRqbWl1YlhPeFZYSktLaTJXanVoMkhMWk9GTGlTQzdUbHM1U01oNGYrUGo2eFVTck5qRnFMR2VoUk5COGxDMFFTTE5ta0pKeC93U0czTW5qRTlUMUNrUHdKSTB3SDJsZnp3RVRJaVZxVXhnMGRmdTVxMzlHdCtod2RjeGtoaE52UTRUeXJCY2VvZjNNaHMvSXhGY2kxSG1IcjRGTVpnWEVFY3pQaUdDeDBIUnd6QXFEcTJqOUFWbTFrd04wbVJWTFdMeWxndG9QTmFwRjVjWTRZMXdKaC9lMEJCd1pqNDRZZ1pyRE5xdkQvOUh2N0dGWWRVUWVESnVRM0VXSTRIYUtxYXZVMVhqQy9uNDFrVDRMNzlrcUdxMGtMaGRUWnZnUDNUQTNmUzBvelZ6KzVwaVpzb090SXZCVUZvTUtiTmNtQkw2WXh4YVVBdXNIQjM4WHJTOGRRTW5Rd0pmVVVrcFJvR3I1QVVlV2ljdkJUenlLOWc3Nyt5Q2tmNVBBeXNMN3IvSmpjWmdyYnZScE1XOWl5YXhadktPNmNlWk4yRXdJeEt3VkZQdXZGdWlFUEdDb2FnYk1vK1NweWRMclhxQnpOQ0RHRkNyTy9ya2N3YTJ4aG9rUVo1Q2RaMEFzVTNKZlNxSjZuNUkxNFlBK1AvdUFnZmhQVTg0VGx3N2NFRmZwN0FFRThleTRzUDEyUFR0NENvZHMxR1JnRE9CNXh2eWlSNW0rQng4TzVuQkNOY3RVOEJldmZWNUEwOHg2UkhkNWpjd1BUTURTWkpPZWRJWjFjR1E3MDRseGJBenFaT1AwNVp4YU9naHpTZHZGQkhZcW9tQVRBUnlBQURLNGVsUDhMeTNJclVaS2ZXaDIzWHkyMHVCVW1MUzRQZmFndTkrb3lWYTJpUGdxUlAzRjJDVFVzdko3K1JZbk44ZkZaYlUvSFZ2eHZjRkZES2tpVHFWNVVCWjNHejU0SkFLQnlpOWhrS01aSnZ1R2djU1lYRm13MDhVeW9ReVZkZlREMS9kTWtDSFhjVEdBS2VST2dBcnN2bVJyUVRMVU9YaW9PSEdLMlFrakh1b1lGZ1hjaVpvVEpkNkZzNXExUVgxRytwL2UyNmhZc0VmN1FaRDFubkl5bC9TRmtOdFlZbW1CaHBCcnhsOVdiWTBZcEhXUnV3MkxsL3RqOW1EOFA0c25WekpsNEY5SisxYXJWZVRiOUU1cjJJTEgwNHFTdGp4UU53bjNtNFlOcXhtYU5iTEFxVzJUTjZMaWR3dUpScVMrTlhidHF4b2VEWHB4ZUdXbXh6U2tXeGpreUNrWDROUVJtZTZxNVNBY0MrTTcrOUVUZkEvRXdyelFhaktha0N3WXlldW5QNlpGbHhVMm9NRW4xUHozMXplU3RXNzRHNDA2WkpGQ2wxd0FYSW9VS2tXb3RZRXBPdVhCMXVWTnhKNjNkcEpFcWZ4QmVwdHdJSE5yUHo4QmxsWm9JY0JvWHdnZkorOFZBVW5WUHZSdmV4bncwTWEvV2lHWXVKTzV5OFFUdkVZQmlnRm1oVXhZNVJxekU4T2N5d04vOG00VVlybGFuaUpPNzVYUTZLU285K3RXSGx1K2hNaTBVVmRpS1FwN05lbG5vWlV6TmFJeUJQVmVPd0s2R05wK0ZmSHVQT295aGFXdU52VFlGa3Z4c2NNUVdEaCt6ZUZDRmtnd2JYZnRpVjIzeXdKNCt1d1JxbWc5azNLendJUXB6cHB0OERCQk9NYnJxd1FNNUdiMDVzRXdkS3pNaUFxT2xvYUEvbHIwS0ErMXByMC8rSGlXb2lJakhBL3dpcjJuSXVTM1BlVS9qaTNPNlp3b3hjUjFTWjlGaHRMQzVTMEZJekZoYkJXY0dWUC9LcHhPUFNpVW9BZFdVcHFLSCsrNlNjejUwN2lDY3hZSTZyZE1CSUNQSlplYTdPY21lRnc1bU9iSlNpcXBqZzJVb1dOSXMrY0ZoeURTdDZnZVY1cWdpM0Z1bm13d0RvR1NNZ2VyRk9aR1gxbTBkTUNZbzVYT3J1eE8wNjNkd0VOSzlEYm5WTTl3WUZSRXpoNHZ5VTFXWVlKL0xSUnA2b3hnanFQL1g1YTgvNEFmNnA2TldrUWZlcnpCbVhtZTB6WS80bndNSm0vd2QxdElxU3dHeitFM3hQRUFPb1psSml0M1hkZEQ3L0JUMXBsbHpPeCs4Ym1RdEFOUS9TNmZaZXhjNnFpM1crUTJ4Y21YVFVodVM1bXBIUVJ2Y3haVU4wUzUrUEw5bFhXVUFhUlpoRUg4aFRkQWN1Tk1NQ3VWTktURUd0U1VLTmkzTzZLaFNhVHpjazhjc1oydldSWitkN21XOGM0SUt3WElZZDI1Uy96SWZ0UGt3UHp1ZmpFdk9IV1ZEMW0rRmpwRFZVVFYwREdEdUhqNlFuYUV3THUvZEVnZExRT2c5RTFTcm85WEhKOHlrTEF3dFB1K3B4cUtEdUZleHFPTjFzS1FtN3J3YkUxRTY4VUNmQS9lcm92clRDRytEQlNOZzBsNGdvRFF2Wk42dU5sYnlMcGNaQXdqMlVjbHljdkxwSVpNZ3Y0eVJscGIzWXVNZnRvem9yYmNHVkh0L1ZlRFYzK0ZkZjFUUDBpdWFDc1BpMkc0WGVHaHN5RjF1YlZEeGtvSmhtbmlRMC9qU2cvZVlNTDlLTGZuQ0ZnSVNXa3A5MWVhdVIzSVF2RUQwbkFQWEsrNmhQQ1lzK24zK2hDWmJpc2ttVk1HMmRhKzBFc1pQb25VZUlZOEViZnVzUVhqc0svZUZEYW9zYlBqRWZRUzBSS0c3eWo1R0c2OU03TWVPMUhtaVVZb2NneWdKSEw2TTFxelVERHdVU21yOTlWN1NkcjJGM0pqUUFKWStGMHlIMzNJdjMrQzlNMzhlTUw3Z1RnbU51L3IyYlVNaVB2cFliWjZ2MS9JYUVTaXJCSE5hN21QS240ZEVtWWc3di8rSFFnUE4xRzc5akJRMStzb3lkZkRDMnIraDJCbC9LSWM1S2pNSzdPSDZuYjFqTHNOZjBFSFZlMktCaUU1MW94NjM2dXlHNkxobzB0M0ozNEw1UVkvaWxFM21pa2FGNEhLWEcxbUcxckNldlQxVnY2R2F2bHR4b1FlL2JNcnBadlJnZ25CeFNFUEVlRXprRWRPeFRuUFhIVmpVWWR3OEpZdmpCL283RWVnYzNNYStOVXhMTG5zSzBrSmxpblBtVUh6SEd0cms1K0NBYlZ6Rk9CcXB5eTNRVlVuelREZkMvMFhEOTQvb2tIK09CK2k3Zzlsb2xoV0lqU25mSWIrRXE0M1pYT1dtd3ZqeVYvcXFEK3QwZSs3bVRFTTc0cVAvT3p0OG5tQzdtUnB5dTYzT0I0S25VekZjMDc0U3FveVBVQWdNKy9USkdGbzZUNDRFSG5RVTRYNHo2cWFublZxZ3cvVTd6Q3B3Y21YVjFBdWJJcnZPbWtLSGF6SkFSNTVlUGpwNXRMQnNOOHZBcXMzTkFIZGNFSE9SMnhRMGxzTkFGelNVdXhGUUNGWXZYTFpKZE9qOXA0Zk5xNnAwSEJHVWlrMll6YUk0eHlTeTkxS3poUTArcTFoanh2SW1Sd1BSZjc2dENobFJraFJDaTc0TlhaOXFVTmVJd1ArczVwKzNtNW53UGROT0hnU0xENzluN085bTFuMXVESGlNbnRxNG5rWXdWNU9aMUVOYlh4RmQ0UGdybHZhdlpzeVVPNE1xWWxxcW4xTzhXL0kxZEVacTVkWGhyYkVUTGFaSWJDMktqL0FhL1FNK2ZxVU9IZGYwdFhBUTFodVozY21XRUNXU1h5LzQzajM1K012cTl4d3M3SktzZXJpWjFwRVdLYzhxbHpOckdQVUdjVmdPYTljUEpZSUpzR25KVEFVc0VjRE9FVlVMTzV4MHJYQmlqYzFsZ1hFelFRS2hST2Y4eklWODJ3OGVzd2M3OFlYMTFLWUxXUVJjZ0hOSkVsQnhmWHI3MmxTMlJCU2wwN3FUS29yTzJ1VURacjNzRmhZc3ZuaExabjBBOTRLUnpKLzdERUdJQWhXNVpXRnBMOGdFd3UxYUxBOU11V1p6TndsOE96ZTlZK2JYK3Y5Z3l3UlZub0I1SS84a1hUWFUzMTQxeVJMWXJJT096NlNPbnlITnk0U2llcXprQlhoYXJqZmpxcTFxNnRrbGFFYkE4UWZtMkRhSVBzN09UcS9udkpCaktmTzJIOWJIMmNDTWgxKzVnc3BmeWN1OGYvY3V1Um10RGp5cVo3dUNJTXlqZFYzYStwM2ZxbVhzUng0QzhsdWpleklGSG5RaVZUWExYdUkxWHJ3TjMrc2lZWWoySEhUdkVTVXg4RGxPVFhwYWs5cUZSSytMM21nSjFXc0Q3RjRjdTFhSm9Gb1lRbnUrd0dETU9qSk0za2lCUVdIQ2N2aEovSFJkeG9kT1FwNDVZWmFPVEEyMk5iNFhLQ1Z4cWtid01ZRmh6WVFZSUFuQ1c4RlcxNHVmOThqaFVHMnpyS2hRUTBxMENFcTB0NW5YeXZVeXZSOER2RDY5TFUrZzNpK0hGV1FNUThQcVp1SEQrc05LQVYwK002RUpDMHN6cTdyRXI3QjViUThCY05IenZETWM5ZXFCNVpDUWRUZjgwT2JuNHV6andwWVU3U0lTZHRWMFFHYTlEM1dyaDJCRFF0cEJLeGFORlYrL0N5MlAvU3YrOHM3VWQwRmQ3NFg0K28vVE56dFdnRVRVYXB5K21hak5RNjhMcTNlZTBaTzQ4VkViVFpZaUgxQ280T2xmV2VmODJSV2V5VVhvN3dvTTAzUHlhcEdmaWtUblFpbm9OcTV6NXZlTHBlTVYzSENBTVRhWm1BMW9HTEFuN1hTM1hZc3orWEs3Vk1Rc2M0WEtybURYT0xVL3BTWFZOVXE4ZElxVGJhLy8vM3g2TGlMUzZ4czF4dUNBWVNmY1EzK3JRZ211N3V2ZjNUSEt0NU9vbzk3VHFjYlJxeHg3RUFTaXphUUNCUWxsRy9yWXhWYXBNTGd0TGJaUzY0dzFNREJNWFgrUFFwQktOd3FVS09mMkREUkRVWFFmOUVoT1MwUWo0blRtbEE4ZHpTTHovRzFkK1VkOE1UeS82Z2hoZGlMcGVlckdZL1VsRE9maXVxRnNNVVU1L1VZbFArQkFtZ1JMdU5wdnJVYUxsVmtycURpZXZOVkVBd0YrNENvTTFNWlRtanhqSk1zS0pxK3U4WmQ3dE5DVUZ5NkxpeVlYUkpRNFZ5dkVRRkZhQ0dLc3hJd1FrazdFelo2TFRKcTJoVXVQaHZBVytnUW5TRzZKK01zekMrN1FDUkhjbnFEZHlOUko2VDl4eVM4N0E2TUR1dGJ6S0d2R2t0cGJYcXR6V3RYYjlIc2ZLMmNCTW9tak45YTR5K1RhSkxuWHhBZVgvSFd6bWY0Y1I0dkFMdC9QNHc0cWdLWTA0bWw0WmRMT2luRllTNmN1cDNHLzFpZTQrdDFlT25wQk5scUdxczc1aWx6a1Q0K0RzWlF4TnZhU0tKLy82ekliYmsvTTdMT2hGbVJjLzFSK2tCdHo3SkZHZFptL0NPb3RJZHZRb1hwVHFQLzF1cUVVbUNiL1FXb0dMTXdPNUFOY0h6eGRZNDhJR1A1K0orektPVEJGWjRQaWQrR1RNK1dxMTJNVi9IODZ4RUpwdEJhNlQrcDNrZ3B3TGVkTWFuQkhDMkdnTnJGcG9OMnhuck16OVdGV1gvOC95Z1NCa2F2cTJVdjdGZENzTEVZTHU5TExJdkFVMGJOUkR0ellsKy92WG1qcEl2dUpGWWptSTBpbTZRRVlxbkllTXNOalhHNHZJdXRJR0hpamVBRy85RURCb3pLVjVjbGRrSGJMeEhoMjV2VCtaRXpiaFhscXZwektKd2NFZ2ZOd0xBS0ZlbzAvcHZFRTEwWERCK0VYUlRYdFN6Sm96UUtGRkFKaE14WWtWYUNXK0U5QUw3dE1lVThhY3hpZEhxemI2bFg0NjkxVXNEcHkvTExSbVQrZXBnVzU2KzVDdzh0QjRrTVV2NnM5bGgzZVJLYnlHcytILzRtUU1hWXpQVGYyT09kb2tFbit6emd2b0QzRnFOS2s4UXFHQVhWc3FjR2RYclQ2MmZTUGtSMnZST0ZpNjhBNnNlODZVeFJVazRjYWpmUHlDQzRHNXdEaEQrek5xNGpvZFE0dTRuL20zN0xyMzZuNExJQUFzVnIwMmRGaTlBaXdBODFNWXMycm00ZURsRE5tZE1SdkVLUkhmQndXNURkTU5wMGpQRlpNZUFScUYvd0w0WEJmZCtFTUxCZk16cEg1R0g2TmFXKzF2cnZNZGcrVnhEemF0azNNWGdPM3JvM1AvRHBjQzYrTW80TXlTSmhLSmhTUjAxU0dHR3A1aFBXbXJyVWdydjNsRG5QK0hoY0kzbnQzWXFCb1ZBVlRCQVFUNWl1aFRnOG52UHRkOFplWWo2dzF4NlJxR1VCclNrdTcrTjErQmFhc1p2alRrNjRSb0lEbEw4YnJwRWNKeDNPbVk3akxvWnNzd2R0bWhmQy9HMjFsbFhoSVRPd212UkREZVRUUGJ5QVNPYTE2Y0Y1L0ExZlpBaWRKcHFqdTN3WUF5OWF2UFIxeWE2ZU5wOUs4WFlycnR1eGxxaStiREt3bGZyWWRSMFJSaUtSVlRMT0g4NStaWTdYU216UnBmWkJKamFUYTgxVkRjSkhwWm5ablNRTEFTR1lXOWw1MVpWL2g3ZVZ6VGkzSHY2aFVzZ2MvNTFBcUpSVGtwYkZWTFhYc3pvQkw4bkJYMHUvMGpCTFQ4bkgrZkplUGJyd1VSVDU4T1krVWllUmpkMXZzMDR3MFZHNVZOMlU2TW9HWmtRektOL3B0ejBRMzY2ZHhvVEdtajdpMU5RR0hpOUdnbnF1WEZZZHJDZlpCbWViN3MwVDZ5cmRsWkg1Y1p1d0hGeUlKL2tBdEdzVGcweEg1dGFBQXE0NEJBazFDUGs5S1ZWYnFRenJDVWlGZEYvNmd0bFBROGJISGMxRzFXOTJNWEdaNUhFSGZ0eUxZczhtYkQvOXhZUlVXa0htbE0wekMyaWxKbG5OZ1Y0YmZBTHBRZ2h4T1VvWkw3VlRxdENISWFRU1htK1lVTW5wa1h5Ym5WK0E2eGxtMkNWeThmbjBYbG0yWFJhMCt6ek9hMjFKV1dtaXhmaVBNU0NaN3FBNHJTOTNWTjNwa3BGMXM1VG9uUWppc0hmN2lVOVpHdlVQT0FLWmNSMXBiZVZmL1VsN09oZXBHQ2FJZDl3T3RxbzdwSjd5TGNCWjBwRmtPRjI4eTR6RUkva2NVTm11dEJIYVFwQmROTTh2akNTNkhaUm9ra2VvODhUQkFqR3lHN1NSKzZ2VWdUY3lLOUltYWxqMGt1eHowd21LK2J5UVUxMUFpSkZrL3lhNWROZHVSQ2xjblU2NHlHdS9pZVdTZU9vczF0M2VwK1JQSVdRMnB5VFlWYlpsdFRic2I3Tml3U2kzQVYrOEtMV2s3THhDbmZaVWV0RU04VGhuc1NvR0gzOC9ueUF3Rmd1SnA4Rmp2bEh0Y1dadVU0aFB2YTBySGZyMFVoT09KL0Y2dlM2MkZXN0t6a21SbGwySEVjN29VcTRmeWk1VDcwVmw3WVZJZnNQSFVDZEhlc2Y5TGs3V05WV083NUpEa1liTUk4VE9XOEpLVnRMWTlkNlVKUklUTzhvS28weFMrbzk5WXkwNGluaUdIQWFHajg4a0VXZ3d2ME9ySGRZL25yNzZET0dOUzU5aFhDR1h6VEtVdkRsOWlLcExTV1lOMWx4SWV5eXdkTnBUa2hheTc0dzJqRlQ2TlM4cWtqbzVDeEExeWZTWXdwNkFKSVpOS0llRUs1UEpBVzdPUmdXZ3dwMFZnellwcW92TXJXeGJ1K0RHWjZMaGllMVJBcXB6bThWVXpLSk9IM21Deld1VE9Mc04zVlQvZHYyZWVZZTlVamJSOFlUQnNMejdxNjBWTjFzVTUxayt1bTFmOEp4RDVwUGhiaFNDOHJSYUI0NTR0bWg2WVVXckpJMytHV1kwcWVXaW9qL3Ria1lJVE9rSmFldUd0NEpySnZIQStsMEd1N2tZN1hPYWEwNWFsTW5SV1ZDWHFGZ0xJd1NZNHVGNTlVZTVTVTRRS3VjL0hhbUR4YnIweDZjc0NldFhHb1A3UW4xQmsvSjlEc3luTy9VRDZpWjFIeXJ6K2ppdDBoREN3aS9FOU9qZ0tUYkIzWlFLUS8wWk92ZXZmTkhHME5LNEFqM0NwN05wUmswN1JUMWkvUzBFTDkzQWc4R1JnS0k5Q2ZwYWpLeUs2K0pqL1BJMUtPNS84NVZBd3oyQXd6UDhGVEJiMDc1SXhDWHY2VDlSVnZXVDJ0VWFxeERTOTJ6ckdVYld6VVlrOW1TczgycEVDSCtma3FzRHQ5M1ZXKys0WXNSL2RIQ1ljUVNZVE8vS2FCTURqOUxTRC9KLyt6MjBLcThYdlpVQUlIdG05aFJQUDNJdGJ1QXUySG01bGtQczkycGQ3a0N4Z1JzMHhPVkJuWjEzY2NkQTBhdW5yd3Y5U2RxRWxKUkMzZytvQ3Urblh5Q2dtWFVzOXlNalRNQUlIZnhaVithUEtjWmVVQld0MDU3WG84NUtzMUlyNWd6RUhDV3FaRWhyTFpNdUYxMXppR3RGUVVkcy9FRVNhamhhZ3pjS3N4YW1jU1p4R3RoNFVJSSthZFBoUWtVbngyV3lOKzRZV1IrcjNmOE1ua3lHRnVSNHpqenhKUzhXc1FZUjVQVHlSYUQ5aXhhNk1oNzQxbkJIYnpmalhIc2tHRHExNzl4YVJOckNJQjF6MXhSZldmanF3MnBIYzF6azl4bFBwTDhzUVdBSXVFVFpaaGJubUw1NHJjZVhWTlJ2VWlLcnJxSWtlb2dzbDBYWGIxN3lsTmIwZjRHQTlXZDQ0dmZmRUc4RlNaR0hFTDJmYmFUR1JjU2lDZUE4UG1BL2Y2SHo4SENTNzZmWFVId2d3a3pTd2xJNzFla1o3RmFwbWxrL0tDK0hzOGhVY3czTjJMTjVMaGtWWXlpellGbC91UGVWUDVsc29KSGhoZld2dlNXcnVDVVcxWmNKT2V1VGJyRGd5d0ovcUcwN2daSnBsblR2TGNZZE5hSDBLTVlPWU1HWCtyQjROR1BGbVFzTmFJd2xXcmZDZXp4cmU4elhCcnNNVCtlZFZMYkxxTjFCcUI3NkpINEJ2WlRxVUlNZkd3UEdFbitFbm1UVjg2ZlBCYVliRkwzREZFaGpCNDVDZXdrWEVBdEp4azQvTXMycFBYbmFScWRreTBIT1lkY1VjRTJ6Y1hxNHZhSXZXMi92MG5IRkpIMlhYZTIydWVEbXEvMThYR3RFTFNxODVqOVg4cTB0Y05TU0tKSVg4RlR1SkYvUGY4ajVQaHFHMnUrb3N2c0x4WXJ2dmZlVkpMKzR0a2NYY3I5SlY3djBFUm1qL1g2Zk0zTkM0ajZkUzErOVVtcjJvUGF2cWlBeWRUWlBMTU5SR1kyM0xPOXpBVkRseTdqRCs3MEc1VFBQTGRoUklsNFd4Y1lqTG5NK1NOY0oyNkZPcmtySVNVdFBPYkl6NVpiM0FHNjEya3JucHkxNVJNVysxY1FqbG5XRkk2NTM4cWt5OWF4ZDJvSm1ISUhQMDhLeVAwdWJHTytUUU5PWXV2MnVoMTd5Q0l2UjhWY1N0dzdvMWcwTk02MHNrKzhUcTdZZklCSnJ0cDUzR2t2elhIN09BMHA4L24vdTFzYXRmL1ZKaHRSMWw4V2E2R21hdWc3aGFTcGFDYVlRYXg2dGEwbWt1dGxiK2VBT1NHMWFvYk04MUQ5QTRpUzFSUmx6QkJvVlg2dFUxUzZXRTJOOU9SWTZEZmVMUkM0bDlSdnI1aDk1WERXQjJtUjFkNFdGdWRwc2dWWXdpVHdUMzFsanNrRDhaeURPbG01RGtHaDlOL1VCLzBBSTVYdmI4WkJtYWkyaFE0QldNcUZ3WW56eHdCMjZZSFNPdjlXZ1kzSlhudm9OKzJSNHJxR1ZoL0xMRE10cEZQK1NwTUdKTld2YklsNVNPb2RiQ2N6VzJSS2xla3NQb1VlR0V6cmp0S0hWZHRaQStrZnFPK3JWeC9pY2xDcXdvb3BlcHZKcFNURGpUK2I5R1d5bEdSRjhFRGJHbHc2ZVV6bUpNOTVPdm96K2t3TFgzYzJmVGpGZVlFc0U3dlVabTNtcWRHSnVLaDJ3OS9RR1NhcVJIczk5YVNjR09kRHFrRmNBQ29xZGJCb1FxcWphbWhINlE5bmczOUpDZzNsckdKd2Q1MFFrOW92bnFCVHI4TU1FN1BzMndpVmZ5Z1VtUG9VQkpKZkpXWDVOZGEwbnVuY2JGa0E9PVwiKSl9Y29uc3Qga3I9czAoKTtuZXcgU2V0KFVyKGtyKSksbmV3IFNldChVcihrcikpLHIwKGtyKSxvMChrciksbmV3IHoodWYpO2NvbnN0IGEwPW5ldyBVaW50OEFycmF5KDMyKTthMC5maWxsKDApO2NvbnN0IHUwPWBcdTAwMTlFdGhlcmV1bSBTaWduZWQgTWVzc2FnZTpcbmA7ZnVuY3Rpb24gZGYoZSl7cmV0dXJuIHR5cGVvZiBlPT1cInN0cmluZ1wiJiYoZT1DaShlKSksSWkoRHMoW0NpKHUwKSxDaShTdHJpbmcoZS5sZW5ndGgpKSxlXSkpfWNvbnN0IGgwPVwicmxwLzUuNy4wXCI7bmV3IHooaDApO2NvbnN0IGMwPVwiYWRkcmVzcy81LjcuMFwiLHlyPW5ldyB6KGMwKTtmdW5jdGlvbiBwZihlKXtKdChlLDIwKXx8eXIudGhyb3dBcmd1bWVudEVycm9yKFwiaW52YWxpZCBhZGRyZXNzXCIsXCJhZGRyZXNzXCIsZSksZT1lLnRvTG93ZXJDYXNlKCk7Y29uc3QgdD1lLnN1YnN0cmluZygyKS5zcGxpdChcIlwiKSxyPW5ldyBVaW50OEFycmF5KDQwKTtmb3IobGV0IG49MDtuPDQwO24rKylyW25dPXRbbl0uY2hhckNvZGVBdCgwKTtjb25zdCBpPU90KElpKHIpKTtmb3IobGV0IG49MDtuPDQwO24rPTIpaVtuPj4xXT4+ND49OCYmKHRbbl09dFtuXS50b1VwcGVyQ2FzZSgpKSwoaVtuPj4xXSYxNSk+PTgmJih0W24rMV09dFtuKzFdLnRvVXBwZXJDYXNlKCkpO3JldHVyblwiMHhcIit0LmpvaW4oXCJcIil9Y29uc3QgbDA9OTAwNzE5OTI1NDc0MDk5MTtmdW5jdGlvbiBkMChlKXtyZXR1cm4gTWF0aC5sb2cxMD9NYXRoLmxvZzEwKGUpOk1hdGgubG9nKGUpL01hdGguTE4xMH1jb25zdCBPaT17fTtmb3IobGV0IGU9MDtlPDEwO2UrKylPaVtTdHJpbmcoZSldPVN0cmluZyhlKTtmb3IobGV0IGU9MDtlPDI2O2UrKylPaVtTdHJpbmcuZnJvbUNoYXJDb2RlKDY1K2UpXT1TdHJpbmcoMTArZSk7Y29uc3QgdmY9TWF0aC5mbG9vcihkMChsMCkpO2Z1bmN0aW9uIHAwKGUpe2U9ZS50b1VwcGVyQ2FzZSgpLGU9ZS5zdWJzdHJpbmcoNCkrZS5zdWJzdHJpbmcoMCwyKStcIjAwXCI7bGV0IHQ9ZS5zcGxpdChcIlwiKS5tYXAoaT0+T2lbaV0pLmpvaW4oXCJcIik7Zm9yKDt0Lmxlbmd0aD49dmY7KXtsZXQgaT10LnN1YnN0cmluZygwLHZmKTt0PXBhcnNlSW50KGksMTApJTk3K3Quc3Vic3RyaW5nKGkubGVuZ3RoKX1sZXQgcj1TdHJpbmcoOTgtcGFyc2VJbnQodCwxMCklOTcpO2Zvcig7ci5sZW5ndGg8Mjspcj1cIjBcIityO3JldHVybiByfWZ1bmN0aW9uIHYwKGUpe2xldCB0PW51bGw7aWYodHlwZW9mIGUhPVwic3RyaW5nXCImJnlyLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgYWRkcmVzc1wiLFwiYWRkcmVzc1wiLGUpLGUubWF0Y2goL14oMHgpP1swLTlhLWZBLUZdezQwfSQvKSllLnN1YnN0cmluZygwLDIpIT09XCIweFwiJiYoZT1cIjB4XCIrZSksdD1wZihlKSxlLm1hdGNoKC8oW0EtRl0uKlthLWZdKXwoW2EtZl0uKltBLUZdKS8pJiZ0IT09ZSYmeXIudGhyb3dBcmd1bWVudEVycm9yKFwiYmFkIGFkZHJlc3MgY2hlY2tzdW1cIixcImFkZHJlc3NcIixlKTtlbHNlIGlmKGUubWF0Y2goL15YRVswLTldezJ9WzAtOUEtWmEtel17MzAsMzF9JC8pKXtmb3IoZS5zdWJzdHJpbmcoMiw0KSE9PXAwKGUpJiZ5ci50aHJvd0FyZ3VtZW50RXJyb3IoXCJiYWQgaWNhcCBjaGVja3N1bVwiLFwiYWRkcmVzc1wiLGUpLHQ9THMoZS5zdWJzdHJpbmcoNCkpO3QubGVuZ3RoPDQwOyl0PVwiMFwiK3Q7dD1wZihcIjB4XCIrdCl9ZWxzZSB5ci50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIGFkZHJlc3NcIixcImFkZHJlc3NcIixlKTtyZXR1cm4gdH1jb25zdCBnMD1cInByb3BlcnRpZXMvNS43LjBcIjtuZXcgeihnMCk7ZnVuY3Rpb24gd3IoZSx0LHIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse2VudW1lcmFibGU6ITAsdmFsdWU6cix3cml0YWJsZTohMX0pfW5ldyB6KHVmKTtjb25zdCBtMD1uZXcgVWludDhBcnJheSgzMik7bTAuZmlsbCgwKSxWLmZyb20oLTEpO2NvbnN0IEEwPVYuZnJvbSgwKSxiMD1WLmZyb20oMSk7Vi5mcm9tKFwiMHhmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmXCIpLG9lKGIwLnRvSGV4U3RyaW5nKCksMzIpLG9lKEEwLnRvSGV4U3RyaW5nKCksMzIpO3ZhciBzZT17fSxRPXt9LHhyPWdmO2Z1bmN0aW9uIGdmKGUsdCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKHR8fFwiQXNzZXJ0aW9uIGZhaWxlZFwiKX1nZi5lcXVhbD1mdW5jdGlvbih0LHIsaSl7aWYodCE9cil0aHJvdyBuZXcgRXJyb3IoaXx8XCJBc3NlcnRpb24gZmFpbGVkOiBcIit0K1wiICE9IFwiK3IpfTt2YXIgUGk9e2V4cG9ydHM6e319O3R5cGVvZiBPYmplY3QuY3JlYXRlPT1cImZ1bmN0aW9uXCI/UGkuZXhwb3J0cz1mdW5jdGlvbih0LHIpe3ImJih0LnN1cGVyXz1yLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoci5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pKX06UGkuZXhwb3J0cz1mdW5jdGlvbih0LHIpe2lmKHIpe3Quc3VwZXJfPXI7dmFyIGk9ZnVuY3Rpb24oKXt9O2kucHJvdG90eXBlPXIucHJvdG90eXBlLHQucHJvdG90eXBlPW5ldyBpLHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPXR9fTt2YXIgeTA9eHIsdzA9UGkuZXhwb3J0cztRLmluaGVyaXRzPXcwO2Z1bmN0aW9uIHgwKGUsdCl7cmV0dXJuKGUuY2hhckNvZGVBdCh0KSY2NDUxMikhPT01NTI5Nnx8dDwwfHx0KzE+PWUubGVuZ3RoPyExOihlLmNoYXJDb2RlQXQodCsxKSY2NDUxMik9PT01NjMyMH1mdW5jdGlvbiBNMChlLHQpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGUuc2xpY2UoKTtpZighZSlyZXR1cm5bXTt2YXIgcj1bXTtpZih0eXBlb2YgZT09XCJzdHJpbmdcIilpZih0KXtpZih0PT09XCJoZXhcIilmb3IoZT1lLnJlcGxhY2UoL1teYS16MC05XSsvaWcsXCJcIiksZS5sZW5ndGglMiE9PTAmJihlPVwiMFwiK2UpLG49MDtuPGUubGVuZ3RoO24rPTIpci5wdXNoKHBhcnNlSW50KGVbbl0rZVtuKzFdLDE2KSl9ZWxzZSBmb3IodmFyIGk9MCxuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWUuY2hhckNvZGVBdChuKTtvPDEyOD9yW2krK109bzpvPDIwNDg/KHJbaSsrXT1vPj42fDE5MixyW2krK109byY2M3wxMjgpOngwKGUsbik/KG89NjU1MzYrKChvJjEwMjMpPDwxMCkrKGUuY2hhckNvZGVBdCgrK24pJjEwMjMpLHJbaSsrXT1vPj4xOHwyNDAscltpKytdPW8+PjEyJjYzfDEyOCxyW2krK109bz4+NiY2M3wxMjgscltpKytdPW8mNjN8MTI4KToocltpKytdPW8+PjEyfDIyNCxyW2krK109bz4+NiY2M3wxMjgscltpKytdPW8mNjN8MTI4KX1lbHNlIGZvcihuPTA7bjxlLmxlbmd0aDtuKyspcltuXT1lW25dfDA7cmV0dXJuIHJ9US50b0FycmF5PU0wO2Z1bmN0aW9uIEUwKGUpe2Zvcih2YXIgdD1cIlwiLHI9MDtyPGUubGVuZ3RoO3IrKyl0Kz1BZihlW3JdLnRvU3RyaW5nKDE2KSk7cmV0dXJuIHR9US50b0hleD1FMDtmdW5jdGlvbiBtZihlKXt2YXIgdD1lPj4+MjR8ZT4+PjgmNjUyODB8ZTw8OCYxNjcxMTY4MHwoZSYyNTUpPDwyNDtyZXR1cm4gdD4+PjB9US5odG9ubD1tZjtmdW5jdGlvbiBTMChlLHQpe2Zvcih2YXIgcj1cIlwiLGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIG49ZVtpXTt0PT09XCJsaXR0bGVcIiYmKG49bWYobikpLHIrPWJmKG4udG9TdHJpbmcoMTYpKX1yZXR1cm4gcn1RLnRvSGV4MzI9UzA7ZnVuY3Rpb24gQWYoZSl7cmV0dXJuIGUubGVuZ3RoPT09MT9cIjBcIitlOmV9US56ZXJvMj1BZjtmdW5jdGlvbiBiZihlKXtyZXR1cm4gZS5sZW5ndGg9PT03P1wiMFwiK2U6ZS5sZW5ndGg9PT02P1wiMDBcIitlOmUubGVuZ3RoPT09NT9cIjAwMFwiK2U6ZS5sZW5ndGg9PT00P1wiMDAwMFwiK2U6ZS5sZW5ndGg9PT0zP1wiMDAwMDBcIitlOmUubGVuZ3RoPT09Mj9cIjAwMDAwMFwiK2U6ZS5sZW5ndGg9PT0xP1wiMDAwMDAwMFwiK2U6ZX1RLnplcm84PWJmO2Z1bmN0aW9uIEkwKGUsdCxyLGkpe3ZhciBuPXItdDt5MChuJTQ9PT0wKTtmb3IodmFyIG89bmV3IEFycmF5KG4vNCksaD0wLHA9dDtoPG8ubGVuZ3RoO2grKyxwKz00KXt2YXIgQTtpPT09XCJiaWdcIj9BPWVbcF08PDI0fGVbcCsxXTw8MTZ8ZVtwKzJdPDw4fGVbcCszXTpBPWVbcCszXTw8MjR8ZVtwKzJdPDwxNnxlW3ArMV08PDh8ZVtwXSxvW2hdPUE+Pj4wfXJldHVybiBvfVEuam9pbjMyPUkwO2Z1bmN0aW9uIE4wKGUsdCl7Zm9yKHZhciByPW5ldyBBcnJheShlLmxlbmd0aCo0KSxpPTAsbj0wO2k8ZS5sZW5ndGg7aSsrLG4rPTQpe3ZhciBvPWVbaV07dD09PVwiYmlnXCI/KHJbbl09bz4+PjI0LHJbbisxXT1vPj4+MTYmMjU1LHJbbisyXT1vPj4+OCYyNTUscltuKzNdPW8mMjU1KToocltuKzNdPW8+Pj4yNCxyW24rMl09bz4+PjE2JjI1NSxyW24rMV09bz4+PjgmMjU1LHJbbl09byYyNTUpfXJldHVybiByfVEuc3BsaXQzMj1OMDtmdW5jdGlvbiBfMChlLHQpe3JldHVybiBlPj4+dHxlPDwzMi10fVEucm90cjMyPV8wO2Z1bmN0aW9uIEIwKGUsdCl7cmV0dXJuIGU8PHR8ZT4+PjMyLXR9US5yb3RsMzI9QjA7ZnVuY3Rpb24gQzAoZSx0KXtyZXR1cm4gZSt0Pj4+MH1RLnN1bTMyPUMwO2Z1bmN0aW9uIFIwKGUsdCxyKXtyZXR1cm4gZSt0K3I+Pj4wfVEuc3VtMzJfMz1SMDtmdW5jdGlvbiBPMChlLHQscixpKXtyZXR1cm4gZSt0K3IraT4+PjB9US5zdW0zMl80PU8wO2Z1bmN0aW9uIFAwKGUsdCxyLGksbil7cmV0dXJuIGUrdCtyK2krbj4+PjB9US5zdW0zMl81PVAwO2Z1bmN0aW9uIFQwKGUsdCxyLGkpe3ZhciBuPWVbdF0sbz1lW3QrMV0saD1pK28+Pj4wLHA9KGg8aT8xOjApK3IrbjtlW3RdPXA+Pj4wLGVbdCsxXT1ofVEuc3VtNjQ9VDA7ZnVuY3Rpb24gRDAoZSx0LHIsaSl7dmFyIG49dCtpPj4+MCxvPShuPHQ/MTowKStlK3I7cmV0dXJuIG8+Pj4wfVEuc3VtNjRfaGk9RDA7ZnVuY3Rpb24gRjAoZSx0LHIsaSl7dmFyIG49dCtpO3JldHVybiBuPj4+MH1RLnN1bTY0X2xvPUYwO2Z1bmN0aW9uIFUwKGUsdCxyLGksbixvLGgscCl7dmFyIEE9MCx2PXQ7dj12K2k+Pj4wLEErPXY8dD8xOjAsdj12K28+Pj4wLEErPXY8bz8xOjAsdj12K3A+Pj4wLEErPXY8cD8xOjA7dmFyIHc9ZStyK24raCtBO3JldHVybiB3Pj4+MH1RLnN1bTY0XzRfaGk9VTA7ZnVuY3Rpb24gazAoZSx0LHIsaSxuLG8saCxwKXt2YXIgQT10K2krbytwO3JldHVybiBBPj4+MH1RLnN1bTY0XzRfbG89azA7ZnVuY3Rpb24gcTAoZSx0LHIsaSxuLG8saCxwLEEsdil7dmFyIHc9MCx5PXQ7eT15K2k+Pj4wLHcrPXk8dD8xOjAseT15K28+Pj4wLHcrPXk8bz8xOjAseT15K3A+Pj4wLHcrPXk8cD8xOjAseT15K3Y+Pj4wLHcrPXk8dj8xOjA7dmFyIFM9ZStyK24raCtBK3c7cmV0dXJuIFM+Pj4wfVEuc3VtNjRfNV9oaT1xMDtmdW5jdGlvbiBLMChlLHQscixpLG4sbyxoLHAsQSx2KXt2YXIgdz10K2krbytwK3Y7cmV0dXJuIHc+Pj4wfVEuc3VtNjRfNV9sbz1LMDtmdW5jdGlvbiBIMChlLHQscil7dmFyIGk9dDw8MzItcnxlPj4+cjtyZXR1cm4gaT4+PjB9US5yb3RyNjRfaGk9SDA7ZnVuY3Rpb24gTDAoZSx0LHIpe3ZhciBpPWU8PDMyLXJ8dD4+PnI7cmV0dXJuIGk+Pj4wfVEucm90cjY0X2xvPUwwO2Z1bmN0aW9uIHowKGUsdCxyKXtyZXR1cm4gZT4+PnJ9US5zaHI2NF9oaT16MDtmdW5jdGlvbiBqMChlLHQscil7dmFyIGk9ZTw8MzItcnx0Pj4+cjtyZXR1cm4gaT4+PjB9US5zaHI2NF9sbz1qMDt2YXIgb3I9e30seWY9USxRMD14cjtmdW5jdGlvbiBxcigpe3RoaXMucGVuZGluZz1udWxsLHRoaXMucGVuZGluZ1RvdGFsPTAsdGhpcy5ibG9ja1NpemU9dGhpcy5jb25zdHJ1Y3Rvci5ibG9ja1NpemUsdGhpcy5vdXRTaXplPXRoaXMuY29uc3RydWN0b3Iub3V0U2l6ZSx0aGlzLmhtYWNTdHJlbmd0aD10aGlzLmNvbnN0cnVjdG9yLmhtYWNTdHJlbmd0aCx0aGlzLnBhZExlbmd0aD10aGlzLmNvbnN0cnVjdG9yLnBhZExlbmd0aC84LHRoaXMuZW5kaWFuPVwiYmlnXCIsdGhpcy5fZGVsdGE4PXRoaXMuYmxvY2tTaXplLzgsdGhpcy5fZGVsdGEzMj10aGlzLmJsb2NrU2l6ZS8zMn1vci5CbG9ja0hhc2g9cXIscXIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LHIpe2lmKHQ9eWYudG9BcnJheSh0LHIpLHRoaXMucGVuZGluZz90aGlzLnBlbmRpbmc9dGhpcy5wZW5kaW5nLmNvbmNhdCh0KTp0aGlzLnBlbmRpbmc9dCx0aGlzLnBlbmRpbmdUb3RhbCs9dC5sZW5ndGgsdGhpcy5wZW5kaW5nLmxlbmd0aD49dGhpcy5fZGVsdGE4KXt0PXRoaXMucGVuZGluZzt2YXIgaT10Lmxlbmd0aCV0aGlzLl9kZWx0YTg7dGhpcy5wZW5kaW5nPXQuc2xpY2UodC5sZW5ndGgtaSx0Lmxlbmd0aCksdGhpcy5wZW5kaW5nLmxlbmd0aD09PTAmJih0aGlzLnBlbmRpbmc9bnVsbCksdD15Zi5qb2luMzIodCwwLHQubGVuZ3RoLWksdGhpcy5lbmRpYW4pO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bis9dGhpcy5fZGVsdGEzMil0aGlzLl91cGRhdGUodCxuLG4rdGhpcy5fZGVsdGEzMil9cmV0dXJuIHRoaXN9LHFyLnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudXBkYXRlKHRoaXMuX3BhZCgpKSxRMCh0aGlzLnBlbmRpbmc9PT1udWxsKSx0aGlzLl9kaWdlc3QodCl9LHFyLnByb3RvdHlwZS5fcGFkPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wZW5kaW5nVG90YWwscj10aGlzLl9kZWx0YTgsaT1yLSh0K3RoaXMucGFkTGVuZ3RoKSVyLG49bmV3IEFycmF5KGkrdGhpcy5wYWRMZW5ndGgpO25bMF09MTI4O2Zvcih2YXIgbz0xO288aTtvKyspbltvXT0wO2lmKHQ8PD0zLHRoaXMuZW5kaWFuPT09XCJiaWdcIil7Zm9yKHZhciBoPTg7aDx0aGlzLnBhZExlbmd0aDtoKyspbltvKytdPTA7bltvKytdPTAsbltvKytdPTAsbltvKytdPTAsbltvKytdPTAsbltvKytdPXQ+Pj4yNCYyNTUsbltvKytdPXQ+Pj4xNiYyNTUsbltvKytdPXQ+Pj44JjI1NSxuW28rK109dCYyNTV9ZWxzZSBmb3IobltvKytdPXQmMjU1LG5bbysrXT10Pj4+OCYyNTUsbltvKytdPXQ+Pj4xNiYyNTUsbltvKytdPXQ+Pj4yNCYyNTUsbltvKytdPTAsbltvKytdPTAsbltvKytdPTAsbltvKytdPTAsaD04O2g8dGhpcy5wYWRMZW5ndGg7aCsrKW5bbysrXT0wO3JldHVybiBufTt2YXIgc3I9e30sYWU9e30sSjA9USx1ZT1KMC5yb3RyMzI7ZnVuY3Rpb24gRzAoZSx0LHIsaSl7aWYoZT09PTApcmV0dXJuIHdmKHQscixpKTtpZihlPT09MXx8ZT09PTMpcmV0dXJuIE1mKHQscixpKTtpZihlPT09MilyZXR1cm4geGYodCxyLGkpfWFlLmZ0XzE9RzA7ZnVuY3Rpb24gd2YoZSx0LHIpe3JldHVybiBlJnRefmUmcn1hZS5jaDMyPXdmO2Z1bmN0aW9uIHhmKGUsdCxyKXtyZXR1cm4gZSZ0XmUmcl50JnJ9YWUubWFqMzI9eGY7ZnVuY3Rpb24gTWYoZSx0LHIpe3JldHVybiBlXnRecn1hZS5wMzI9TWY7ZnVuY3Rpb24gWTAoZSl7cmV0dXJuIHVlKGUsMiledWUoZSwxMyledWUoZSwyMil9YWUuczBfMjU2PVkwO2Z1bmN0aW9uIFYwKGUpe3JldHVybiB1ZShlLDYpXnVlKGUsMTEpXnVlKGUsMjUpfWFlLnMxXzI1Nj1WMDtmdW5jdGlvbiBXMChlKXtyZXR1cm4gdWUoZSw3KV51ZShlLDE4KV5lPj4+M31hZS5nMF8yNTY9VzA7ZnVuY3Rpb24gWDAoZSl7cmV0dXJuIHVlKGUsMTcpXnVlKGUsMTkpXmU+Pj4xMH1hZS5nMV8yNTY9WDA7dmFyIGFyPVEsJDA9b3IsWjA9YWUsVGk9YXIucm90bDMyLE1yPWFyLnN1bTMyLHRhPWFyLnN1bTMyXzUsZWE9WjAuZnRfMSxFZj0kMC5CbG9ja0hhc2gscmE9WzE1MTg1MDAyNDksMTg1OTc3NTM5MywyNDAwOTU5NzA4LDMzOTU0Njk3ODJdO2Z1bmN0aW9uIGhlKCl7aWYoISh0aGlzIGluc3RhbmNlb2YgaGUpKXJldHVybiBuZXcgaGU7RWYuY2FsbCh0aGlzKSx0aGlzLmg9WzE3MzI1ODQxOTMsNDAyMzIzMzQxNywyNTYyMzgzMTAyLDI3MTczMzg3OCwzMjg1Mzc3NTIwXSx0aGlzLlc9bmV3IEFycmF5KDgwKX1hci5pbmhlcml0cyhoZSxFZik7dmFyIGlhPWhlO2hlLmJsb2NrU2l6ZT01MTIsaGUub3V0U2l6ZT0xNjAsaGUuaG1hY1N0cmVuZ3RoPTgwLGhlLnBhZExlbmd0aD02NCxoZS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0LHIpe2Zvcih2YXIgaT10aGlzLlcsbj0wO248MTY7bisrKWlbbl09dFtyK25dO2Zvcig7bjxpLmxlbmd0aDtuKyspaVtuXT1UaShpW24tM11eaVtuLThdXmlbbi0xNF1eaVtuLTE2XSwxKTt2YXIgbz10aGlzLmhbMF0saD10aGlzLmhbMV0scD10aGlzLmhbMl0sQT10aGlzLmhbM10sdj10aGlzLmhbNF07Zm9yKG49MDtuPGkubGVuZ3RoO24rKyl7dmFyIHc9fn4obi8yMCkseT10YShUaShvLDUpLGVhKHcsaCxwLEEpLHYsaVtuXSxyYVt3XSk7dj1BLEE9cCxwPVRpKGgsMzApLGg9byxvPXl9dGhpcy5oWzBdPU1yKHRoaXMuaFswXSxvKSx0aGlzLmhbMV09TXIodGhpcy5oWzFdLGgpLHRoaXMuaFsyXT1Ncih0aGlzLmhbMl0scCksdGhpcy5oWzNdPU1yKHRoaXMuaFszXSxBKSx0aGlzLmhbNF09TXIodGhpcy5oWzRdLHYpfSxoZS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm4gdD09PVwiaGV4XCI/YXIudG9IZXgzMih0aGlzLmgsXCJiaWdcIik6YXIuc3BsaXQzMih0aGlzLmgsXCJiaWdcIil9O3ZhciB1cj1RLG5hPW9yLGhyPWFlLGZhPXhyLGllPXVyLnN1bTMyLG9hPXVyLnN1bTMyXzQsc2E9dXIuc3VtMzJfNSxhYT1oci5jaDMyLHVhPWhyLm1hajMyLGhhPWhyLnMwXzI1NixjYT1oci5zMV8yNTYsbGE9aHIuZzBfMjU2LGRhPWhyLmcxXzI1NixTZj1uYS5CbG9ja0hhc2gscGE9WzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OF07ZnVuY3Rpb24gY2UoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBjZSkpcmV0dXJuIG5ldyBjZTtTZi5jYWxsKHRoaXMpLHRoaXMuaD1bMTc3OTAzMzcwMywzMTQ0MTM0Mjc3LDEwMTM5MDQyNDIsMjc3MzQ4MDc2MiwxMzU5ODkzMTE5LDI2MDA4MjI5MjQsNTI4NzM0NjM1LDE1NDE0NTkyMjVdLHRoaXMuaz1wYSx0aGlzLlc9bmV3IEFycmF5KDY0KX11ci5pbmhlcml0cyhjZSxTZik7dmFyIElmPWNlO2NlLmJsb2NrU2l6ZT01MTIsY2Uub3V0U2l6ZT0yNTYsY2UuaG1hY1N0cmVuZ3RoPTE5MixjZS5wYWRMZW5ndGg9NjQsY2UucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxyKXtmb3IodmFyIGk9dGhpcy5XLG49MDtuPDE2O24rKylpW25dPXRbcituXTtmb3IoO248aS5sZW5ndGg7bisrKWlbbl09b2EoZGEoaVtuLTJdKSxpW24tN10sbGEoaVtuLTE1XSksaVtuLTE2XSk7dmFyIG89dGhpcy5oWzBdLGg9dGhpcy5oWzFdLHA9dGhpcy5oWzJdLEE9dGhpcy5oWzNdLHY9dGhpcy5oWzRdLHc9dGhpcy5oWzVdLHk9dGhpcy5oWzZdLFM9dGhpcy5oWzddO2ZvcihmYSh0aGlzLmsubGVuZ3RoPT09aS5sZW5ndGgpLG49MDtuPGkubGVuZ3RoO24rKyl7dmFyIE49c2EoUyxjYSh2KSxhYSh2LHcseSksdGhpcy5rW25dLGlbbl0pLEk9aWUoaGEobyksdWEobyxoLHApKTtTPXkseT13LHc9dix2PWllKEEsTiksQT1wLHA9aCxoPW8sbz1pZShOLEkpfXRoaXMuaFswXT1pZSh0aGlzLmhbMF0sbyksdGhpcy5oWzFdPWllKHRoaXMuaFsxXSxoKSx0aGlzLmhbMl09aWUodGhpcy5oWzJdLHApLHRoaXMuaFszXT1pZSh0aGlzLmhbM10sQSksdGhpcy5oWzRdPWllKHRoaXMuaFs0XSx2KSx0aGlzLmhbNV09aWUodGhpcy5oWzVdLHcpLHRoaXMuaFs2XT1pZSh0aGlzLmhbNl0seSksdGhpcy5oWzddPWllKHRoaXMuaFs3XSxTKX0sY2UucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP3VyLnRvSGV4MzIodGhpcy5oLFwiYmlnXCIpOnVyLnNwbGl0MzIodGhpcy5oLFwiYmlnXCIpfTt2YXIgRGk9USxOZj1JZjtmdW5jdGlvbiB5ZSgpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHllKSlyZXR1cm4gbmV3IHllO05mLmNhbGwodGhpcyksdGhpcy5oPVszMjM4MzcxMDMyLDkxNDE1MDY2Myw4MTI3MDI5OTksNDE0NDkxMjY5Nyw0MjkwNzc1ODU3LDE3NTA2MDMwMjUsMTY5NDA3NjgzOSwzMjA0MDc1NDI4XX1EaS5pbmhlcml0cyh5ZSxOZik7dmFyIHZhPXllO3llLmJsb2NrU2l6ZT01MTIseWUub3V0U2l6ZT0yMjQseWUuaG1hY1N0cmVuZ3RoPTE5Mix5ZS5wYWRMZW5ndGg9NjQseWUucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP0RpLnRvSGV4MzIodGhpcy5oLnNsaWNlKDAsNyksXCJiaWdcIik6RGkuc3BsaXQzMih0aGlzLmguc2xpY2UoMCw3KSxcImJpZ1wiKX07dmFyIGp0PVEsZ2E9b3IsbWE9eHIsbGU9anQucm90cjY0X2hpLGRlPWp0LnJvdHI2NF9sbyxfZj1qdC5zaHI2NF9oaSxCZj1qdC5zaHI2NF9sbyxCZT1qdC5zdW02NCxGaT1qdC5zdW02NF9oaSxVaT1qdC5zdW02NF9sbyxBYT1qdC5zdW02NF80X2hpLGJhPWp0LnN1bTY0XzRfbG8seWE9anQuc3VtNjRfNV9oaSx3YT1qdC5zdW02NF81X2xvLENmPWdhLkJsb2NrSGFzaCx4YT1bMTExNjM1MjQwOCwzNjA5NzY3NDU4LDE4OTk0NDc0NDEsNjAyODkxNzI1LDMwNDkzMjM0NzEsMzk2NDQ4NDM5OSwzOTIxMDA5NTczLDIxNzMyOTU1NDgsOTYxOTg3MTYzLDQwODE2Mjg0NzIsMTUwODk3MDk5MywzMDUzODM0MjY1LDI0NTM2MzU3NDgsMjkzNzY3MTU3OSwyODcwNzYzMjIxLDM2NjQ2MDk1NjAsMzYyNDM4MTA4MCwyNzM0ODgzMzk0LDMxMDU5ODQwMSwxMTY0OTk2NTQyLDYwNzIyNTI3OCwxMzIzNjEwNzY0LDE0MjY4ODE5ODcsMzU5MDMwNDk5NCwxOTI1MDc4Mzg4LDQwNjgxODIzODMsMjE2MjA3ODIwNiw5OTEzMzYxMTMsMjYxNDg4ODEwMyw2MzM4MDMzMTcsMzI0ODIyMjU4MCwzNDc5Nzc0ODY4LDM4MzUzOTA0MDEsMjY2NjYxMzQ1OCw0MDIyMjI0Nzc0LDk0NDcxMTEzOSwyNjQzNDcwNzgsMjM0MTI2Mjc3Myw2MDQ4MDc2MjgsMjAwNzgwMDkzMyw3NzAyNTU5ODMsMTQ5NTk5MDkwMSwxMjQ5MTUwMTIyLDE4NTY0MzEyMzUsMTU1NTA4MTY5MiwzMTc1MjE4MTMyLDE5OTYwNjQ5ODYsMjE5ODk1MDgzNywyNTU0MjIwODgyLDM5OTk3MTkzMzksMjgyMTgzNDM0OSw3NjY3ODQwMTYsMjk1Mjk5NjgwOCwyNTY2NTk0ODc5LDMyMTAzMTM2NzEsMzIwMzMzNzk1NiwzMzM2NTcxODkxLDEwMzQ0NTcwMjYsMzU4NDUyODcxMSwyNDY2OTQ4OTAxLDExMzkyNjk5MywzNzU4MzI2MzgzLDMzODI0MTg5NSwxNjg3MTc5MzYsNjY2MzA3MjA1LDExODgxNzk5NjQsNzczNTI5OTEyLDE1NDYwNDU3MzQsMTI5NDc1NzM3MiwxNTIyODA1NDg1LDEzOTYxODIyOTEsMjY0MzgzMzgyMywxNjk1MTgzNzAwLDIzNDM1MjczOTAsMTk4NjY2MTA1MSwxMDE0NDc3NDgwLDIxNzcwMjYzNTAsMTIwNjc1OTE0MiwyNDU2OTU2MDM3LDM0NDA3NzYyNywyNzMwNDg1OTIxLDEyOTA4NjM0NjAsMjgyMDMwMjQxMSwzMTU4NDU0MjczLDMyNTk3MzA4MDAsMzUwNTk1MjY1NywzMzQ1NzY0NzcxLDEwNjIxNzAwOCwzNTE2MDY1ODE3LDM2MDYwMDgzNDQsMzYwMDM1MjgwNCwxNDMyNzI1Nzc2LDQwOTQ1NzE5MDksMTQ2NzAzMTU5NCwyNzU0MjMzNDQsODUxMTY5NzIwLDQzMDIyNzczNCwzMTAwODIzNzUyLDUwNjk0ODYxNiwxMzYzMjU4MTk1LDY1OTA2MDU1NiwzNzUwNjg1NTkzLDg4Mzk5Nzg3NywzNzg1MDUwMjgwLDk1ODEzOTU3MSwzMzE4MzA3NDI3LDEzMjI4MjIyMTgsMzgxMjcyMzQwMywxNTM3MDAyMDYzLDIwMDMwMzQ5OTUsMTc0Nzg3Mzc3OSwzNjAyMDM2ODk5LDE5NTU1NjIyMjIsMTU3NTk5MDAxMiwyMDI0MTA0ODE1LDExMjU1OTI5MjgsMjIyNzczMDQ1MiwyNzE2OTA0MzA2LDIzNjE4NTI0MjQsNDQyNzc2MDQ0LDI0Mjg0MzY0NzQsNTkzNjk4MzQ0LDI3NTY3MzQxODcsMzczMzExMDI0OSwzMjA0MDMxNDc5LDI5OTkzNTE1NzMsMzMyOTMyNTI5OCwzODE1OTIwNDI3LDMzOTE1Njk2MTQsMzkyODM4MzkwMCwzNTE1MjY3MjcxLDU2NjI4MDcxMSwzOTQwMTg3NjA2LDM0NTQwNjk1MzQsNDExODYzMDI3MSw0MDAwMjM5OTkyLDExNjQxODQ3NCwxOTE0MTM4NTU0LDE3NDI5MjQyMSwyNzMxMDU1MjcwLDI4OTM4MDM1NiwzMjAzOTkzMDA2LDQ2MDM5MzI2OSwzMjA2MjAzMTUsNjg1NDcxNzMzLDU4NzQ5NjgzNiw4NTIxNDI5NzEsMTA4Njc5Mjg1MSwxMDE3MDM2Mjk4LDM2NTU0MzEwMCwxMTI2MDAwNTgwLDI2MTgyOTc2NzYsMTI4ODAzMzQ3MCwzNDA5ODU1MTU4LDE1MDE1MDU5NDgsNDIzNDUwOTg2NiwxNjA3MTY3OTE1LDk4NzE2NzQ2OCwxODE2NDAyMzE2LDEyNDYxODk1OTFdO2Z1bmN0aW9uIG5lKCl7aWYoISh0aGlzIGluc3RhbmNlb2YgbmUpKXJldHVybiBuZXcgbmU7Q2YuY2FsbCh0aGlzKSx0aGlzLmg9WzE3NzkwMzM3MDMsNDA4OTIzNTcyMCwzMTQ0MTM0Mjc3LDIyMjc4NzM1OTUsMTAxMzkwNDI0Miw0MjcxMTc1NzIzLDI3NzM0ODA3NjIsMTU5NTc1MDEyOSwxMzU5ODkzMTE5LDI5MTc1NjUxMzcsMjYwMDgyMjkyNCw3MjU1MTExOTksNTI4NzM0NjM1LDQyMTUzODk1NDcsMTU0MTQ1OTIyNSwzMjcwMzMyMDldLHRoaXMuaz14YSx0aGlzLlc9bmV3IEFycmF5KDE2MCl9anQuaW5oZXJpdHMobmUsQ2YpO3ZhciBSZj1uZTtuZS5ibG9ja1NpemU9MTAyNCxuZS5vdXRTaXplPTUxMixuZS5obWFjU3RyZW5ndGg9MTkyLG5lLnBhZExlbmd0aD0xMjgsbmUucHJvdG90eXBlLl9wcmVwYXJlQmxvY2s9ZnVuY3Rpb24odCxyKXtmb3IodmFyIGk9dGhpcy5XLG49MDtuPDMyO24rKylpW25dPXRbcituXTtmb3IoO248aS5sZW5ndGg7bis9Mil7dmFyIG89UGEoaVtuLTRdLGlbbi0zXSksaD1UYShpW24tNF0saVtuLTNdKSxwPWlbbi0xNF0sQT1pW24tMTNdLHY9UmEoaVtuLTMwXSxpW24tMjldKSx3PU9hKGlbbi0zMF0saVtuLTI5XSkseT1pW24tMzJdLFM9aVtuLTMxXTtpW25dPUFhKG8saCxwLEEsdix3LHksUyksaVtuKzFdPWJhKG8saCxwLEEsdix3LHksUyl9fSxuZS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0LHIpe3RoaXMuX3ByZXBhcmVCbG9jayh0LHIpO3ZhciBpPXRoaXMuVyxuPXRoaXMuaFswXSxvPXRoaXMuaFsxXSxoPXRoaXMuaFsyXSxwPXRoaXMuaFszXSxBPXRoaXMuaFs0XSx2PXRoaXMuaFs1XSx3PXRoaXMuaFs2XSx5PXRoaXMuaFs3XSxTPXRoaXMuaFs4XSxOPXRoaXMuaFs5XSxJPXRoaXMuaFsxMF0sQz10aGlzLmhbMTFdLEQ9dGhpcy5oWzEyXSxVPXRoaXMuaFsxM10sSj10aGlzLmhbMTRdLEJ0PXRoaXMuaFsxNV07bWEodGhpcy5rLmxlbmd0aD09PWkubGVuZ3RoKTtmb3IodmFyIEc9MDtHPGkubGVuZ3RoO0crPTIpe3ZhciBIPUosTD1CdCxQdD1CYShTLE4pLFc9Q2EoUyxOKSxSdD1NYShTLE4sSSxDLEQpLFZ0PUVhKFMsTixJLEMsRCxVKSxZPXRoaXMua1tHXSxXdD10aGlzLmtbRysxXSxiPWlbR10sZj1pW0crMV0sYT15YShILEwsUHQsVyxSdCxWdCxZLFd0LGIsZiksYz13YShILEwsUHQsVyxSdCxWdCxZLFd0LGIsZik7SD1OYShuLG8pLEw9X2EobixvKSxQdD1TYShuLG8saCxwLEEpLFc9SWEobixvLGgscCxBLHYpO3ZhciBkPUZpKEgsTCxQdCxXKSxtPVVpKEgsTCxQdCxXKTtKPUQsQnQ9VSxEPUksVT1DLEk9UyxDPU4sUz1GaSh3LHksYSxjKSxOPVVpKHkseSxhLGMpLHc9QSx5PXYsQT1oLHY9cCxoPW4scD1vLG49RmkoYSxjLGQsbSksbz1VaShhLGMsZCxtKX1CZSh0aGlzLmgsMCxuLG8pLEJlKHRoaXMuaCwyLGgscCksQmUodGhpcy5oLDQsQSx2KSxCZSh0aGlzLmgsNix3LHkpLEJlKHRoaXMuaCw4LFMsTiksQmUodGhpcy5oLDEwLEksQyksQmUodGhpcy5oLDEyLEQsVSksQmUodGhpcy5oLDE0LEosQnQpfSxuZS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm4gdD09PVwiaGV4XCI/anQudG9IZXgzMih0aGlzLmgsXCJiaWdcIik6anQuc3BsaXQzMih0aGlzLmgsXCJiaWdcIil9O2Z1bmN0aW9uIE1hKGUsdCxyLGksbil7dmFyIG89ZSZyXn5lJm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99ZnVuY3Rpb24gRWEoZSx0LHIsaSxuLG8pe3ZhciBoPXQmaV5+dCZvO3JldHVybiBoPDAmJihoKz00Mjk0OTY3Mjk2KSxofWZ1bmN0aW9uIFNhKGUsdCxyLGksbil7dmFyIG89ZSZyXmUmbl5yJm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99ZnVuY3Rpb24gSWEoZSx0LHIsaSxuLG8pe3ZhciBoPXQmaV50Jm9eaSZvO3JldHVybiBoPDAmJihoKz00Mjk0OTY3Mjk2KSxofWZ1bmN0aW9uIE5hKGUsdCl7dmFyIHI9bGUoZSx0LDI4KSxpPWxlKHQsZSwyKSxuPWxlKHQsZSw3KSxvPXJeaV5uO3JldHVybiBvPDAmJihvKz00Mjk0OTY3Mjk2KSxvfWZ1bmN0aW9uIF9hKGUsdCl7dmFyIHI9ZGUoZSx0LDI4KSxpPWRlKHQsZSwyKSxuPWRlKHQsZSw3KSxvPXJeaV5uO3JldHVybiBvPDAmJihvKz00Mjk0OTY3Mjk2KSxvfWZ1bmN0aW9uIEJhKGUsdCl7dmFyIHI9bGUoZSx0LDE0KSxpPWxlKGUsdCwxOCksbj1sZSh0LGUsOSksbz1yXmlebjtyZXR1cm4gbzwwJiYobys9NDI5NDk2NzI5Niksb31mdW5jdGlvbiBDYShlLHQpe3ZhciByPWRlKGUsdCwxNCksaT1kZShlLHQsMTgpLG49ZGUodCxlLDkpLG89cl5pXm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99ZnVuY3Rpb24gUmEoZSx0KXt2YXIgcj1sZShlLHQsMSksaT1sZShlLHQsOCksbj1fZihlLHQsNyksbz1yXmlebjtyZXR1cm4gbzwwJiYobys9NDI5NDk2NzI5Niksb31mdW5jdGlvbiBPYShlLHQpe3ZhciByPWRlKGUsdCwxKSxpPWRlKGUsdCw4KSxuPUJmKGUsdCw3KSxvPXJeaV5uO3JldHVybiBvPDAmJihvKz00Mjk0OTY3Mjk2KSxvfWZ1bmN0aW9uIFBhKGUsdCl7dmFyIHI9bGUoZSx0LDE5KSxpPWxlKHQsZSwyOSksbj1fZihlLHQsNiksbz1yXmlebjtyZXR1cm4gbzwwJiYobys9NDI5NDk2NzI5Niksb31mdW5jdGlvbiBUYShlLHQpe3ZhciByPWRlKGUsdCwxOSksaT1kZSh0LGUsMjkpLG49QmYoZSx0LDYpLG89cl5pXm47cmV0dXJuIG88MCYmKG8rPTQyOTQ5NjcyOTYpLG99dmFyIGtpPVEsT2Y9UmY7ZnVuY3Rpb24gd2UoKXtpZighKHRoaXMgaW5zdGFuY2VvZiB3ZSkpcmV0dXJuIG5ldyB3ZTtPZi5jYWxsKHRoaXMpLHRoaXMuaD1bMzQxODA3MDM2NSwzMjM4MzcxMDMyLDE2NTQyNzAyNTAsOTE0MTUwNjYzLDI0Mzg1MjkzNzAsODEyNzAyOTk5LDM1NTQ2MjM2MCw0MTQ0OTEyNjk3LDE3MzE0MDU0MTUsNDI5MDc3NTg1NywyMzk0MTgwMjMxLDE3NTA2MDMwMjUsMzY3NTAwODUyNSwxNjk0MDc2ODM5LDEyMDMwNjI4MTMsMzIwNDA3NTQyOF19a2kuaW5oZXJpdHMod2UsT2YpO3ZhciBEYT13ZTt3ZS5ibG9ja1NpemU9MTAyNCx3ZS5vdXRTaXplPTM4NCx3ZS5obWFjU3RyZW5ndGg9MTkyLHdlLnBhZExlbmd0aD0xMjgsd2UucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP2tpLnRvSGV4MzIodGhpcy5oLnNsaWNlKDAsMTIpLFwiYmlnXCIpOmtpLnNwbGl0MzIodGhpcy5oLnNsaWNlKDAsMTIpLFwiYmlnXCIpfSxzci5zaGExPWlhLHNyLnNoYTIyND12YSxzci5zaGEyNTY9SWYsc3Iuc2hhMzg0PURhLHNyLnNoYTUxMj1SZjt2YXIgUGY9e30sWGU9USxGYT1vcixLcj1YZS5yb3RsMzIsVGY9WGUuc3VtMzIsRXI9WGUuc3VtMzJfMyxEZj1YZS5zdW0zMl80LEZmPUZhLkJsb2NrSGFzaDtmdW5jdGlvbiBwZSgpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHBlKSlyZXR1cm4gbmV3IHBlO0ZmLmNhbGwodGhpcyksdGhpcy5oPVsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF0sdGhpcy5lbmRpYW49XCJsaXR0bGVcIn1YZS5pbmhlcml0cyhwZSxGZiksUGYucmlwZW1kMTYwPXBlLHBlLmJsb2NrU2l6ZT01MTIscGUub3V0U2l6ZT0xNjAscGUuaG1hY1N0cmVuZ3RoPTE5MixwZS5wYWRMZW5ndGg9NjQscGUucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxyKXtmb3IodmFyIGk9dGhpcy5oWzBdLG49dGhpcy5oWzFdLG89dGhpcy5oWzJdLGg9dGhpcy5oWzNdLHA9dGhpcy5oWzRdLEE9aSx2PW4sdz1vLHk9aCxTPXAsTj0wO048ODA7TisrKXt2YXIgST1UZihLcihEZihpLFVmKE4sbixvLGgpLHRbcWFbTl0rcl0sVWEoTikpLEhhW05dKSxwKTtpPXAscD1oLGg9S3IobywxMCksbz1uLG49SSxJPVRmKEtyKERmKEEsVWYoNzktTix2LHcseSksdFtLYVtOXStyXSxrYShOKSksTGFbTl0pLFMpLEE9UyxTPXkseT1Lcih3LDEwKSx3PXYsdj1JfUk9RXIodGhpcy5oWzFdLG8seSksdGhpcy5oWzFdPUVyKHRoaXMuaFsyXSxoLFMpLHRoaXMuaFsyXT1Fcih0aGlzLmhbM10scCxBKSx0aGlzLmhbM109RXIodGhpcy5oWzRdLGksdiksdGhpcy5oWzRdPUVyKHRoaXMuaFswXSxuLHcpLHRoaXMuaFswXT1JfSxwZS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbih0KXtyZXR1cm4gdD09PVwiaGV4XCI/WGUudG9IZXgzMih0aGlzLmgsXCJsaXR0bGVcIik6WGUuc3BsaXQzMih0aGlzLmgsXCJsaXR0bGVcIil9O2Z1bmN0aW9uIFVmKGUsdCxyLGkpe3JldHVybiBlPD0xNT90XnJeaTplPD0zMT90JnJ8fnQmaTplPD00Nz8odHx+cileaTplPD02Mz90Jml8ciZ+aTp0XihyfH5pKX1mdW5jdGlvbiBVYShlKXtyZXR1cm4gZTw9MTU/MDplPD0zMT8xNTE4NTAwMjQ5OmU8PTQ3PzE4NTk3NzUzOTM6ZTw9NjM/MjQwMDk1OTcwODoyODQwODUzODM4fWZ1bmN0aW9uIGthKGUpe3JldHVybiBlPD0xNT8xMzUyODI5OTI2OmU8PTMxPzE1NDg2MDM2ODQ6ZTw9NDc/MTgzNjA3MjY5MTplPD02Mz8yMDUzOTk0MjE3OjB9dmFyIHFhPVswLDEsMiwzLDQsNSw2LDcsOCw5LDEwLDExLDEyLDEzLDE0LDE1LDcsNCwxMywxLDEwLDYsMTUsMywxMiwwLDksNSwyLDE0LDExLDgsMywxMCwxNCw0LDksMTUsOCwxLDIsNywwLDYsMTMsMTEsNSwxMiwxLDksMTEsMTAsMCw4LDEyLDQsMTMsMyw3LDE1LDE0LDUsNiwyLDQsMCw1LDksNywxMiwyLDEwLDE0LDEsMyw4LDExLDYsMTUsMTNdLEthPVs1LDE0LDcsMCw5LDIsMTEsNCwxMyw2LDE1LDgsMSwxMCwzLDEyLDYsMTEsMyw3LDAsMTMsNSwxMCwxNCwxNSw4LDEyLDQsOSwxLDIsMTUsNSwxLDMsNywxNCw2LDksMTEsOCwxMiwyLDEwLDAsNCwxMyw4LDYsNCwxLDMsMTEsMTUsMCw1LDEyLDIsMTMsOSw3LDEwLDE0LDEyLDE1LDEwLDQsMSw1LDgsNyw2LDIsMTMsMTQsMCwzLDksMTFdLEhhPVsxMSwxNCwxNSwxMiw1LDgsNyw5LDExLDEzLDE0LDE1LDYsNyw5LDgsNyw2LDgsMTMsMTEsOSw3LDE1LDcsMTIsMTUsOSwxMSw3LDEzLDEyLDExLDEzLDYsNywxNCw5LDEzLDE1LDE0LDgsMTMsNiw1LDEyLDcsNSwxMSwxMiwxNCwxNSwxNCwxNSw5LDgsOSwxNCw1LDYsOCw2LDUsMTIsOSwxNSw1LDExLDYsOCwxMywxMiw1LDEyLDEzLDE0LDExLDgsNSw2XSxMYT1bOCw5LDksMTEsMTMsMTUsMTUsNSw3LDcsOCwxMSwxNCwxNCwxMiw2LDksMTMsMTUsNywxMiw4LDksMTEsNyw3LDEyLDcsNiwxNSwxMywxMSw5LDcsMTUsMTEsOCw2LDYsMTQsMTIsMTMsNSwxNCwxMywxMyw3LDUsMTUsNSw4LDExLDE0LDE0LDYsMTQsNiw5LDEyLDksMTIsNSwxNSw4LDgsNSwxMiw5LDEyLDUsMTQsNiw4LDEzLDYsNSwxNSwxMywxMSwxMV0semE9USxqYT14cjtmdW5jdGlvbiBjcihlLHQscil7aWYoISh0aGlzIGluc3RhbmNlb2YgY3IpKXJldHVybiBuZXcgY3IoZSx0LHIpO3RoaXMuSGFzaD1lLHRoaXMuYmxvY2tTaXplPWUuYmxvY2tTaXplLzgsdGhpcy5vdXRTaXplPWUub3V0U2l6ZS84LHRoaXMuaW5uZXI9bnVsbCx0aGlzLm91dGVyPW51bGwsdGhpcy5faW5pdCh6YS50b0FycmF5KHQscikpfXZhciBRYT1jcjtjci5wcm90b3R5cGUuX2luaXQ9ZnVuY3Rpb24odCl7dC5sZW5ndGg+dGhpcy5ibG9ja1NpemUmJih0PW5ldyB0aGlzLkhhc2goKS51cGRhdGUodCkuZGlnZXN0KCkpLGphKHQubGVuZ3RoPD10aGlzLmJsb2NrU2l6ZSk7Zm9yKHZhciByPXQubGVuZ3RoO3I8dGhpcy5ibG9ja1NpemU7cisrKXQucHVzaCgwKTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKXRbcl1ePTU0O2Zvcih0aGlzLmlubmVyPW5ldyB0aGlzLkhhc2goKS51cGRhdGUodCkscj0wO3I8dC5sZW5ndGg7cisrKXRbcl1ePTEwNjt0aGlzLm91dGVyPW5ldyB0aGlzLkhhc2goKS51cGRhdGUodCl9LGNyLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxyKXtyZXR1cm4gdGhpcy5pbm5lci51cGRhdGUodCxyKSx0aGlzfSxjci5wcm90b3R5cGUuZGlnZXN0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm91dGVyLnVwZGF0ZSh0aGlzLmlubmVyLmRpZ2VzdCgpKSx0aGlzLm91dGVyLmRpZ2VzdCh0KX0sZnVuY3Rpb24oZSl7dmFyIHQ9ZTt0LnV0aWxzPVEsdC5jb21tb249b3IsdC5zaGE9c3IsdC5yaXBlbWQ9UGYsdC5obWFjPVFhLHQuc2hhMT10LnNoYS5zaGExLHQuc2hhMjU2PXQuc2hhLnNoYTI1Nix0LnNoYTIyND10LnNoYS5zaGEyMjQsdC5zaGEzODQ9dC5zaGEuc2hhMzg0LHQuc2hhNTEyPXQuc2hhLnNoYTUxMix0LnJpcGVtZDE2MD10LnJpcGVtZC5yaXBlbWQxNjB9KHNlKTtmdW5jdGlvbiBscihlLHQscil7cmV0dXJuIHI9e3BhdGg6dCxleHBvcnRzOnt9LHJlcXVpcmU6ZnVuY3Rpb24oaSxuKXtyZXR1cm4gSmEoaSxuPz9yLnBhdGgpfX0sZShyLHIuZXhwb3J0cyksci5leHBvcnRzfWZ1bmN0aW9uIEphKCl7dGhyb3cgbmV3IEVycm9yKFwiRHluYW1pYyByZXF1aXJlcyBhcmUgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgYnkgQHJvbGx1cC9wbHVnaW4tY29tbW9uanNcIil9dmFyIHFpPWtmO2Z1bmN0aW9uIGtmKGUsdCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKHR8fFwiQXNzZXJ0aW9uIGZhaWxlZFwiKX1rZi5lcXVhbD1mdW5jdGlvbih0LHIsaSl7aWYodCE9cil0aHJvdyBuZXcgRXJyb3IoaXx8XCJBc3NlcnRpb24gZmFpbGVkOiBcIit0K1wiICE9IFwiK3IpfTt2YXIgZmU9bHIoZnVuY3Rpb24oZSx0KXt2YXIgcj10O2Z1bmN0aW9uIGkoaCxwKXtpZihBcnJheS5pc0FycmF5KGgpKXJldHVybiBoLnNsaWNlKCk7aWYoIWgpcmV0dXJuW107dmFyIEE9W107aWYodHlwZW9mIGghPVwic3RyaW5nXCIpe2Zvcih2YXIgdj0wO3Y8aC5sZW5ndGg7disrKUFbdl09aFt2XXwwO3JldHVybiBBfWlmKHA9PT1cImhleFwiKXtoPWgucmVwbGFjZSgvW15hLXowLTldKy9pZyxcIlwiKSxoLmxlbmd0aCUyIT09MCYmKGg9XCIwXCIraCk7Zm9yKHZhciB2PTA7djxoLmxlbmd0aDt2Kz0yKUEucHVzaChwYXJzZUludChoW3ZdK2hbdisxXSwxNikpfWVsc2UgZm9yKHZhciB2PTA7djxoLmxlbmd0aDt2Kyspe3ZhciB3PWguY2hhckNvZGVBdCh2KSx5PXc+PjgsUz13JjI1NTt5P0EucHVzaCh5LFMpOkEucHVzaChTKX1yZXR1cm4gQX1yLnRvQXJyYXk9aTtmdW5jdGlvbiBuKGgpe3JldHVybiBoLmxlbmd0aD09PTE/XCIwXCIraDpofXIuemVybzI9bjtmdW5jdGlvbiBvKGgpe2Zvcih2YXIgcD1cIlwiLEE9MDtBPGgubGVuZ3RoO0ErKylwKz1uKGhbQV0udG9TdHJpbmcoMTYpKTtyZXR1cm4gcH1yLnRvSGV4PW8sci5lbmNvZGU9ZnVuY3Rpb24ocCxBKXtyZXR1cm4gQT09PVwiaGV4XCI/byhwKTpwfX0pLEd0PWxyKGZ1bmN0aW9uKGUsdCl7dmFyIHI9dDtyLmFzc2VydD1xaSxyLnRvQXJyYXk9ZmUudG9BcnJheSxyLnplcm8yPWZlLnplcm8yLHIudG9IZXg9ZmUudG9IZXgsci5lbmNvZGU9ZmUuZW5jb2RlO2Z1bmN0aW9uIGkoQSx2LHcpe3ZhciB5PW5ldyBBcnJheShNYXRoLm1heChBLmJpdExlbmd0aCgpLHcpKzEpO3kuZmlsbCgwKTtmb3IodmFyIFM9MTw8disxLE49QS5jbG9uZSgpLEk9MDtJPHkubGVuZ3RoO0krKyl7dmFyIEMsRD1OLmFuZGxuKFMtMSk7Ti5pc09kZCgpPyhEPihTPj4xKS0xP0M9KFM+PjEpLUQ6Qz1ELE4uaXN1Ym4oQykpOkM9MCx5W0ldPUMsTi5pdXNocm4oMSl9cmV0dXJuIHl9ci5nZXROQUY9aTtmdW5jdGlvbiBuKEEsdil7dmFyIHc9W1tdLFtdXTtBPUEuY2xvbmUoKSx2PXYuY2xvbmUoKTtmb3IodmFyIHk9MCxTPTAsTjtBLmNtcG4oLXkpPjB8fHYuY21wbigtUyk+MDspe3ZhciBJPUEuYW5kbG4oMykreSYzLEM9di5hbmRsbigzKStTJjM7ST09PTMmJihJPS0xKSxDPT09MyYmKEM9LTEpO3ZhciBEO0kmMT8oTj1BLmFuZGxuKDcpK3kmNywoTj09PTN8fE49PT01KSYmQz09PTI/RD0tSTpEPUkpOkQ9MCx3WzBdLnB1c2goRCk7dmFyIFU7QyYxPyhOPXYuYW5kbG4oNykrUyY3LChOPT09M3x8Tj09PTUpJiZJPT09Mj9VPS1DOlU9Qyk6VT0wLHdbMV0ucHVzaChVKSwyKnk9PT1EKzEmJih5PTEteSksMipTPT09VSsxJiYoUz0xLVMpLEEuaXVzaHJuKDEpLHYuaXVzaHJuKDEpfXJldHVybiB3fXIuZ2V0SlNGPW47ZnVuY3Rpb24gbyhBLHYsdyl7dmFyIHk9XCJfXCIrdjtBLnByb3RvdHlwZVt2XT1mdW5jdGlvbigpe3JldHVybiB0aGlzW3ldIT09dm9pZCAwP3RoaXNbeV06dGhpc1t5XT13LmNhbGwodGhpcyl9fXIuY2FjaGVkUHJvcGVydHk9bztmdW5jdGlvbiBoKEEpe3JldHVybiB0eXBlb2YgQT09XCJzdHJpbmdcIj9yLnRvQXJyYXkoQSxcImhleFwiKTpBfXIucGFyc2VCeXRlcz1oO2Z1bmN0aW9uIHAoQSl7cmV0dXJuIG5ldyBLKEEsXCJoZXhcIixcImxlXCIpfXIuaW50RnJvbUxFPXB9KSxIcj1HdC5nZXROQUYsR2E9R3QuZ2V0SlNGLExyPUd0LmFzc2VydDtmdW5jdGlvbiBDZShlLHQpe3RoaXMudHlwZT1lLHRoaXMucD1uZXcgSyh0LnAsMTYpLHRoaXMucmVkPXQucHJpbWU/Sy5yZWQodC5wcmltZSk6Sy5tb250KHRoaXMucCksdGhpcy56ZXJvPW5ldyBLKDApLnRvUmVkKHRoaXMucmVkKSx0aGlzLm9uZT1uZXcgSygxKS50b1JlZCh0aGlzLnJlZCksdGhpcy50d289bmV3IEsoMikudG9SZWQodGhpcy5yZWQpLHRoaXMubj10Lm4mJm5ldyBLKHQubiwxNiksdGhpcy5nPXQuZyYmdGhpcy5wb2ludEZyb21KU09OKHQuZyx0LmdSZWQpLHRoaXMuX3duYWZUMT1uZXcgQXJyYXkoNCksdGhpcy5fd25hZlQyPW5ldyBBcnJheSg0KSx0aGlzLl93bmFmVDM9bmV3IEFycmF5KDQpLHRoaXMuX3duYWZUND1uZXcgQXJyYXkoNCksdGhpcy5fYml0TGVuZ3RoPXRoaXMubj90aGlzLm4uYml0TGVuZ3RoKCk6MDt2YXIgcj10aGlzLm4mJnRoaXMucC5kaXYodGhpcy5uKTshcnx8ci5jbXBuKDEwMCk+MD90aGlzLnJlZE49bnVsbDoodGhpcy5fbWF4d2VsbFRyaWNrPSEwLHRoaXMucmVkTj10aGlzLm4udG9SZWQodGhpcy5yZWQpKX12YXIgJGU9Q2U7Q2UucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpfSxDZS5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIil9LENlLnByb3RvdHlwZS5fZml4ZWROYWZNdWw9ZnVuY3Rpb24odCxyKXtMcih0LnByZWNvbXB1dGVkKTt2YXIgaT10Ll9nZXREb3VibGVzKCksbj1IcihyLDEsdGhpcy5fYml0TGVuZ3RoKSxvPSgxPDxpLnN0ZXArMSktKGkuc3RlcCUyPT09MD8yOjEpO28vPTM7dmFyIGg9W10scCxBO2ZvcihwPTA7cDxuLmxlbmd0aDtwKz1pLnN0ZXApe0E9MDtmb3IodmFyIHY9cCtpLnN0ZXAtMTt2Pj1wO3YtLSlBPShBPDwxKStuW3ZdO2gucHVzaChBKX1mb3IodmFyIHc9dGhpcy5qcG9pbnQobnVsbCxudWxsLG51bGwpLHk9dGhpcy5qcG9pbnQobnVsbCxudWxsLG51bGwpLFM9bztTPjA7Uy0tKXtmb3IocD0wO3A8aC5sZW5ndGg7cCsrKUE9aFtwXSxBPT09Uz95PXkubWl4ZWRBZGQoaS5wb2ludHNbcF0pOkE9PT0tUyYmKHk9eS5taXhlZEFkZChpLnBvaW50c1twXS5uZWcoKSkpO3c9dy5hZGQoeSl9cmV0dXJuIHcudG9QKCl9LENlLnByb3RvdHlwZS5fd25hZk11bD1mdW5jdGlvbih0LHIpe3ZhciBpPTQsbj10Ll9nZXROQUZQb2ludHMoaSk7aT1uLnduZDtmb3IodmFyIG89bi5wb2ludHMsaD1IcihyLGksdGhpcy5fYml0TGVuZ3RoKSxwPXRoaXMuanBvaW50KG51bGwsbnVsbCxudWxsKSxBPWgubGVuZ3RoLTE7QT49MDtBLS0pe2Zvcih2YXIgdj0wO0E+PTAmJmhbQV09PT0wO0EtLSl2Kys7aWYoQT49MCYmdisrLHA9cC5kYmxwKHYpLEE8MClicmVhazt2YXIgdz1oW0FdO0xyKHchPT0wKSx0LnR5cGU9PT1cImFmZmluZVwiP3c+MD9wPXAubWl4ZWRBZGQob1t3LTE+PjFdKTpwPXAubWl4ZWRBZGQob1stdy0xPj4xXS5uZWcoKSk6dz4wP3A9cC5hZGQob1t3LTE+PjFdKTpwPXAuYWRkKG9bLXctMT4+MV0ubmVnKCkpfXJldHVybiB0LnR5cGU9PT1cImFmZmluZVwiP3AudG9QKCk6cH0sQ2UucHJvdG90eXBlLl93bmFmTXVsQWRkPWZ1bmN0aW9uKHQscixpLG4sbyl7dmFyIGg9dGhpcy5fd25hZlQxLHA9dGhpcy5fd25hZlQyLEE9dGhpcy5fd25hZlQzLHY9MCx3LHksUztmb3Iodz0wO3c8bjt3Kyspe1M9clt3XTt2YXIgTj1TLl9nZXROQUZQb2ludHModCk7aFt3XT1OLnduZCxwW3ddPU4ucG9pbnRzfWZvcih3PW4tMTt3Pj0xO3ctPTIpe3ZhciBJPXctMSxDPXc7aWYoaFtJXSE9PTF8fGhbQ10hPT0xKXtBW0ldPUhyKGlbSV0saFtJXSx0aGlzLl9iaXRMZW5ndGgpLEFbQ109SHIoaVtDXSxoW0NdLHRoaXMuX2JpdExlbmd0aCksdj1NYXRoLm1heChBW0ldLmxlbmd0aCx2KSx2PU1hdGgubWF4KEFbQ10ubGVuZ3RoLHYpO2NvbnRpbnVlfXZhciBEPVtyW0ldLG51bGwsbnVsbCxyW0NdXTtyW0ldLnkuY21wKHJbQ10ueSk9PT0wPyhEWzFdPXJbSV0uYWRkKHJbQ10pLERbMl09cltJXS50b0ooKS5taXhlZEFkZChyW0NdLm5lZygpKSk6cltJXS55LmNtcChyW0NdLnkucmVkTmVnKCkpPT09MD8oRFsxXT1yW0ldLnRvSigpLm1peGVkQWRkKHJbQ10pLERbMl09cltJXS5hZGQocltDXS5uZWcoKSkpOihEWzFdPXJbSV0udG9KKCkubWl4ZWRBZGQocltDXSksRFsyXT1yW0ldLnRvSigpLm1peGVkQWRkKHJbQ10ubmVnKCkpKTt2YXIgVT1bLTMsLTEsLTUsLTcsMCw3LDUsMSwzXSxKPUdhKGlbSV0saVtDXSk7Zm9yKHY9TWF0aC5tYXgoSlswXS5sZW5ndGgsdiksQVtJXT1uZXcgQXJyYXkodiksQVtDXT1uZXcgQXJyYXkodikseT0wO3k8djt5Kyspe3ZhciBCdD1KWzBdW3ldfDAsRz1KWzFdW3ldfDA7QVtJXVt5XT1VWyhCdCsxKSozKyhHKzEpXSxBW0NdW3ldPTAscFtJXT1EfX12YXIgSD10aGlzLmpwb2ludChudWxsLG51bGwsbnVsbCksTD10aGlzLl93bmFmVDQ7Zm9yKHc9djt3Pj0wO3ctLSl7Zm9yKHZhciBQdD0wO3c+PTA7KXt2YXIgVz0hMDtmb3IoeT0wO3k8bjt5KyspTFt5XT1BW3ldW3ddfDAsTFt5XSE9PTAmJihXPSExKTtpZighVylicmVhaztQdCsrLHctLX1pZih3Pj0wJiZQdCsrLEg9SC5kYmxwKFB0KSx3PDApYnJlYWs7Zm9yKHk9MDt5PG47eSsrKXt2YXIgUnQ9TFt5XTtSdCE9PTAmJihSdD4wP1M9cFt5XVtSdC0xPj4xXTpSdDwwJiYoUz1wW3ldWy1SdC0xPj4xXS5uZWcoKSksUy50eXBlPT09XCJhZmZpbmVcIj9IPUgubWl4ZWRBZGQoUyk6SD1ILmFkZChTKSl9fWZvcih3PTA7dzxuO3crKylwW3ddPW51bGw7cmV0dXJuIG8/SDpILnRvUCgpfTtmdW5jdGlvbiBadChlLHQpe3RoaXMuY3VydmU9ZSx0aGlzLnR5cGU9dCx0aGlzLnByZWNvbXB1dGVkPW51bGx9Q2UuQmFzZVBvaW50PVp0LFp0LnByb3RvdHlwZS5lcT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKX0sWnQucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3VydmUudmFsaWRhdGUodGhpcyl9LENlLnByb3RvdHlwZS5kZWNvZGVQb2ludD1mdW5jdGlvbih0LHIpe3Q9R3QudG9BcnJheSh0LHIpO3ZhciBpPXRoaXMucC5ieXRlTGVuZ3RoKCk7aWYoKHRbMF09PT00fHx0WzBdPT09Nnx8dFswXT09PTcpJiZ0Lmxlbmd0aC0xPT09MippKXt0WzBdPT09Nj9Mcih0W3QubGVuZ3RoLTFdJTI9PT0wKTp0WzBdPT09NyYmTHIodFt0Lmxlbmd0aC0xXSUyPT09MSk7dmFyIG49dGhpcy5wb2ludCh0LnNsaWNlKDEsMStpKSx0LnNsaWNlKDEraSwxKzIqaSkpO3JldHVybiBufWVsc2UgaWYoKHRbMF09PT0yfHx0WzBdPT09MykmJnQubGVuZ3RoLTE9PT1pKXJldHVybiB0aGlzLnBvaW50RnJvbVgodC5zbGljZSgxLDEraSksdFswXT09PTMpO3Rocm93IG5ldyBFcnJvcihcIlVua25vd24gcG9pbnQgZm9ybWF0XCIpfSxadC5wcm90b3R5cGUuZW5jb2RlQ29tcHJlc3NlZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5lbmNvZGUodCwhMCl9LFp0LnByb3RvdHlwZS5fZW5jb2RlPWZ1bmN0aW9uKHQpe3ZhciByPXRoaXMuY3VydmUucC5ieXRlTGVuZ3RoKCksaT10aGlzLmdldFgoKS50b0FycmF5KFwiYmVcIixyKTtyZXR1cm4gdD9bdGhpcy5nZXRZKCkuaXNFdmVuKCk/MjozXS5jb25jYXQoaSk6WzRdLmNvbmNhdChpLHRoaXMuZ2V0WSgpLnRvQXJyYXkoXCJiZVwiLHIpKX0sWnQucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbih0LHIpe3JldHVybiBHdC5lbmNvZGUodGhpcy5fZW5jb2RlKHIpLHQpfSxadC5wcm90b3R5cGUucHJlY29tcHV0ZT1mdW5jdGlvbih0KXtpZih0aGlzLnByZWNvbXB1dGVkKXJldHVybiB0aGlzO3ZhciByPXtkb3VibGVzOm51bGwsbmFmOm51bGwsYmV0YTpudWxsfTtyZXR1cm4gci5uYWY9dGhpcy5fZ2V0TkFGUG9pbnRzKDgpLHIuZG91Ymxlcz10aGlzLl9nZXREb3VibGVzKDQsdCksci5iZXRhPXRoaXMuX2dldEJldGEoKSx0aGlzLnByZWNvbXB1dGVkPXIsdGhpc30sWnQucHJvdG90eXBlLl9oYXNEb3VibGVzPWZ1bmN0aW9uKHQpe2lmKCF0aGlzLnByZWNvbXB1dGVkKXJldHVybiExO3ZhciByPXRoaXMucHJlY29tcHV0ZWQuZG91YmxlcztyZXR1cm4gcj9yLnBvaW50cy5sZW5ndGg+PU1hdGguY2VpbCgodC5iaXRMZW5ndGgoKSsxKS9yLnN0ZXApOiExfSxadC5wcm90b3R5cGUuX2dldERvdWJsZXM9ZnVuY3Rpb24odCxyKXtpZih0aGlzLnByZWNvbXB1dGVkJiZ0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMpcmV0dXJuIHRoaXMucHJlY29tcHV0ZWQuZG91Ymxlcztmb3IodmFyIGk9W3RoaXNdLG49dGhpcyxvPTA7bzxyO28rPXQpe2Zvcih2YXIgaD0wO2g8dDtoKyspbj1uLmRibCgpO2kucHVzaChuKX1yZXR1cm57c3RlcDp0LHBvaW50czppfX0sWnQucHJvdG90eXBlLl9nZXROQUZQb2ludHM9ZnVuY3Rpb24odCl7aWYodGhpcy5wcmVjb21wdXRlZCYmdGhpcy5wcmVjb21wdXRlZC5uYWYpcmV0dXJuIHRoaXMucHJlY29tcHV0ZWQubmFmO2Zvcih2YXIgcj1bdGhpc10saT0oMTw8dCktMSxuPWk9PT0xP251bGw6dGhpcy5kYmwoKSxvPTE7bzxpO28rKylyW29dPXJbby0xXS5hZGQobik7cmV0dXJue3duZDp0LHBvaW50czpyfX0sWnQucHJvdG90eXBlLl9nZXRCZXRhPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LFp0LnByb3RvdHlwZS5kYmxwPWZ1bmN0aW9uKHQpe2Zvcih2YXIgcj10aGlzLGk9MDtpPHQ7aSsrKXI9ci5kYmwoKTtyZXR1cm4gcn07dmFyIEtpPWxyKGZ1bmN0aW9uKGUpe3R5cGVvZiBPYmplY3QuY3JlYXRlPT1cImZ1bmN0aW9uXCI/ZS5leHBvcnRzPWZ1bmN0aW9uKHIsaSl7aSYmKHIuc3VwZXJfPWksci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShpLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnIsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSkpfTplLmV4cG9ydHM9ZnVuY3Rpb24ocixpKXtpZihpKXtyLnN1cGVyXz1pO3ZhciBuPWZ1bmN0aW9uKCl7fTtuLnByb3RvdHlwZT1pLnByb3RvdHlwZSxyLnByb3RvdHlwZT1uZXcgbixyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1yfX19KSxZYT1HdC5hc3NlcnQ7ZnVuY3Rpb24gdGUoZSl7JGUuY2FsbCh0aGlzLFwic2hvcnRcIixlKSx0aGlzLmE9bmV3IEsoZS5hLDE2KS50b1JlZCh0aGlzLnJlZCksdGhpcy5iPW5ldyBLKGUuYiwxNikudG9SZWQodGhpcy5yZWQpLHRoaXMudGludj10aGlzLnR3by5yZWRJbnZtKCksdGhpcy56ZXJvQT10aGlzLmEuZnJvbVJlZCgpLmNtcG4oMCk9PT0wLHRoaXMudGhyZWVBPXRoaXMuYS5mcm9tUmVkKCkuc3ViKHRoaXMucCkuY21wbigtMyk9PT0wLHRoaXMuZW5kbz10aGlzLl9nZXRFbmRvbW9ycGhpc20oZSksdGhpcy5fZW5kb1duYWZUMT1uZXcgQXJyYXkoNCksdGhpcy5fZW5kb1duYWZUMj1uZXcgQXJyYXkoNCl9S2kodGUsJGUpO3ZhciBWYT10ZTt0ZS5wcm90b3R5cGUuX2dldEVuZG9tb3JwaGlzbT1mdW5jdGlvbih0KXtpZighKCF0aGlzLnplcm9BfHwhdGhpcy5nfHwhdGhpcy5ufHx0aGlzLnAubW9kbigzKSE9PTEpKXt2YXIgcixpO2lmKHQuYmV0YSlyPW5ldyBLKHQuYmV0YSwxNikudG9SZWQodGhpcy5yZWQpO2Vsc2V7dmFyIG49dGhpcy5fZ2V0RW5kb1Jvb3RzKHRoaXMucCk7cj1uWzBdLmNtcChuWzFdKTwwP25bMF06blsxXSxyPXIudG9SZWQodGhpcy5yZWQpfWlmKHQubGFtYmRhKWk9bmV3IEsodC5sYW1iZGEsMTYpO2Vsc2V7dmFyIG89dGhpcy5fZ2V0RW5kb1Jvb3RzKHRoaXMubik7dGhpcy5nLm11bChvWzBdKS54LmNtcCh0aGlzLmcueC5yZWRNdWwocikpPT09MD9pPW9bMF06KGk9b1sxXSxZYSh0aGlzLmcubXVsKGkpLnguY21wKHRoaXMuZy54LnJlZE11bChyKSk9PT0wKSl9dmFyIGg7cmV0dXJuIHQuYmFzaXM/aD10LmJhc2lzLm1hcChmdW5jdGlvbihwKXtyZXR1cm57YTpuZXcgSyhwLmEsMTYpLGI6bmV3IEsocC5iLDE2KX19KTpoPXRoaXMuX2dldEVuZG9CYXNpcyhpKSx7YmV0YTpyLGxhbWJkYTppLGJhc2lzOmh9fX0sdGUucHJvdG90eXBlLl9nZXRFbmRvUm9vdHM9ZnVuY3Rpb24odCl7dmFyIHI9dD09PXRoaXMucD90aGlzLnJlZDpLLm1vbnQodCksaT1uZXcgSygyKS50b1JlZChyKS5yZWRJbnZtKCksbj1pLnJlZE5lZygpLG89bmV3IEsoMykudG9SZWQocikucmVkTmVnKCkucmVkU3FydCgpLnJlZE11bChpKSxoPW4ucmVkQWRkKG8pLmZyb21SZWQoKSxwPW4ucmVkU3ViKG8pLmZyb21SZWQoKTtyZXR1cm5baCxwXX0sdGUucHJvdG90eXBlLl9nZXRFbmRvQmFzaXM9ZnVuY3Rpb24odCl7Zm9yKHZhciByPXRoaXMubi51c2hybihNYXRoLmZsb29yKHRoaXMubi5iaXRMZW5ndGgoKS8yKSksaT10LG49dGhpcy5uLmNsb25lKCksbz1uZXcgSygxKSxoPW5ldyBLKDApLHA9bmV3IEsoMCksQT1uZXcgSygxKSx2LHcseSxTLE4sSSxDLEQ9MCxVLEo7aS5jbXBuKDApIT09MDspe3ZhciBCdD1uLmRpdihpKTtVPW4uc3ViKEJ0Lm11bChpKSksSj1wLnN1YihCdC5tdWwobykpO3ZhciBHPUEuc3ViKEJ0Lm11bChoKSk7aWYoIXkmJlUuY21wKHIpPDApdj1DLm5lZygpLHc9byx5PVUubmVnKCksUz1KO2Vsc2UgaWYoeSYmKytEPT09MilicmVhaztDPVUsbj1pLGk9VSxwPW8sbz1KLEE9aCxoPUd9Tj1VLm5lZygpLEk9Sjt2YXIgSD15LnNxcigpLmFkZChTLnNxcigpKSxMPU4uc3FyKCkuYWRkKEkuc3FyKCkpO3JldHVybiBMLmNtcChIKT49MCYmKE49dixJPXcpLHkubmVnYXRpdmUmJih5PXkubmVnKCksUz1TLm5lZygpKSxOLm5lZ2F0aXZlJiYoTj1OLm5lZygpLEk9SS5uZWcoKSksW3thOnksYjpTfSx7YTpOLGI6SX1dfSx0ZS5wcm90b3R5cGUuX2VuZG9TcGxpdD1mdW5jdGlvbih0KXt2YXIgcj10aGlzLmVuZG8uYmFzaXMsaT1yWzBdLG49clsxXSxvPW4uYi5tdWwodCkuZGl2Um91bmQodGhpcy5uKSxoPWkuYi5uZWcoKS5tdWwodCkuZGl2Um91bmQodGhpcy5uKSxwPW8ubXVsKGkuYSksQT1oLm11bChuLmEpLHY9by5tdWwoaS5iKSx3PWgubXVsKG4uYikseT10LnN1YihwKS5zdWIoQSksUz12LmFkZCh3KS5uZWcoKTtyZXR1cm57azE6eSxrMjpTfX0sdGUucHJvdG90eXBlLnBvaW50RnJvbVg9ZnVuY3Rpb24odCxyKXt0PW5ldyBLKHQsMTYpLHQucmVkfHwodD10LnRvUmVkKHRoaXMucmVkKSk7dmFyIGk9dC5yZWRTcXIoKS5yZWRNdWwodCkucmVkSUFkZCh0LnJlZE11bCh0aGlzLmEpKS5yZWRJQWRkKHRoaXMuYiksbj1pLnJlZFNxcnQoKTtpZihuLnJlZFNxcigpLnJlZFN1YihpKS5jbXAodGhpcy56ZXJvKSE9PTApdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwb2ludFwiKTt2YXIgbz1uLmZyb21SZWQoKS5pc09kZCgpO3JldHVybihyJiYhb3x8IXImJm8pJiYobj1uLnJlZE5lZygpKSx0aGlzLnBvaW50KHQsbil9LHRlLnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbih0KXtpZih0LmluZilyZXR1cm4hMDt2YXIgcj10LngsaT10Lnksbj10aGlzLmEucmVkTXVsKHIpLG89ci5yZWRTcXIoKS5yZWRNdWwocikucmVkSUFkZChuKS5yZWRJQWRkKHRoaXMuYik7cmV0dXJuIGkucmVkU3FyKCkucmVkSVN1YihvKS5jbXBuKDApPT09MH0sdGUucHJvdG90eXBlLl9lbmRvV25hZk11bEFkZD1mdW5jdGlvbih0LHIsaSl7Zm9yKHZhciBuPXRoaXMuX2VuZG9XbmFmVDEsbz10aGlzLl9lbmRvV25hZlQyLGg9MDtoPHQubGVuZ3RoO2grKyl7dmFyIHA9dGhpcy5fZW5kb1NwbGl0KHJbaF0pLEE9dFtoXSx2PUEuX2dldEJldGEoKTtwLmsxLm5lZ2F0aXZlJiYocC5rMS5pbmVnKCksQT1BLm5lZyghMCkpLHAuazIubmVnYXRpdmUmJihwLmsyLmluZWcoKSx2PXYubmVnKCEwKSksbltoKjJdPUEsbltoKjIrMV09dixvW2gqMl09cC5rMSxvW2gqMisxXT1wLmsyfWZvcih2YXIgdz10aGlzLl93bmFmTXVsQWRkKDEsbixvLGgqMixpKSx5PTA7eTxoKjI7eSsrKW5beV09bnVsbCxvW3ldPW51bGw7cmV0dXJuIHd9O2Z1bmN0aW9uIER0KGUsdCxyLGkpeyRlLkJhc2VQb2ludC5jYWxsKHRoaXMsZSxcImFmZmluZVwiKSx0PT09bnVsbCYmcj09PW51bGw/KHRoaXMueD1udWxsLHRoaXMueT1udWxsLHRoaXMuaW5mPSEwKToodGhpcy54PW5ldyBLKHQsMTYpLHRoaXMueT1uZXcgSyhyLDE2KSxpJiYodGhpcy54LmZvcmNlUmVkKHRoaXMuY3VydmUucmVkKSx0aGlzLnkuZm9yY2VSZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLngucmVkfHwodGhpcy54PXRoaXMueC50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMueS5yZWR8fCh0aGlzLnk9dGhpcy55LnRvUmVkKHRoaXMuY3VydmUucmVkKSksdGhpcy5pbmY9ITEpfUtpKER0LCRlLkJhc2VQb2ludCksdGUucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uKHQscixpKXtyZXR1cm4gbmV3IER0KHRoaXMsdCxyLGkpfSx0ZS5wcm90b3R5cGUucG9pbnRGcm9tSlNPTj1mdW5jdGlvbih0LHIpe3JldHVybiBEdC5mcm9tSlNPTih0aGlzLHQscil9LER0LnByb3RvdHlwZS5fZ2V0QmV0YT1mdW5jdGlvbigpe2lmKHRoaXMuY3VydmUuZW5kbyl7dmFyIHQ9dGhpcy5wcmVjb21wdXRlZDtpZih0JiZ0LmJldGEpcmV0dXJuIHQuYmV0YTt2YXIgcj10aGlzLmN1cnZlLnBvaW50KHRoaXMueC5yZWRNdWwodGhpcy5jdXJ2ZS5lbmRvLmJldGEpLHRoaXMueSk7aWYodCl7dmFyIGk9dGhpcy5jdXJ2ZSxuPWZ1bmN0aW9uKG8pe3JldHVybiBpLnBvaW50KG8ueC5yZWRNdWwoaS5lbmRvLmJldGEpLG8ueSl9O3QuYmV0YT1yLHIucHJlY29tcHV0ZWQ9e2JldGE6bnVsbCxuYWY6dC5uYWYmJnt3bmQ6dC5uYWYud25kLHBvaW50czp0Lm5hZi5wb2ludHMubWFwKG4pfSxkb3VibGVzOnQuZG91YmxlcyYme3N0ZXA6dC5kb3VibGVzLnN0ZXAscG9pbnRzOnQuZG91Ymxlcy5wb2ludHMubWFwKG4pfX19cmV0dXJuIHJ9fSxEdC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJlY29tcHV0ZWQ/W3RoaXMueCx0aGlzLnksdGhpcy5wcmVjb21wdXRlZCYme2RvdWJsZXM6dGhpcy5wcmVjb21wdXRlZC5kb3VibGVzJiZ7c3RlcDp0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMuc3RlcCxwb2ludHM6dGhpcy5wcmVjb21wdXRlZC5kb3VibGVzLnBvaW50cy5zbGljZSgxKX0sbmFmOnRoaXMucHJlY29tcHV0ZWQubmFmJiZ7d25kOnRoaXMucHJlY29tcHV0ZWQubmFmLnduZCxwb2ludHM6dGhpcy5wcmVjb21wdXRlZC5uYWYucG9pbnRzLnNsaWNlKDEpfX1dOlt0aGlzLngsdGhpcy55XX0sRHQuZnJvbUpTT049ZnVuY3Rpb24odCxyLGkpe3R5cGVvZiByPT1cInN0cmluZ1wiJiYocj1KU09OLnBhcnNlKHIpKTt2YXIgbj10LnBvaW50KHJbMF0sclsxXSxpKTtpZighclsyXSlyZXR1cm4gbjtmdW5jdGlvbiBvKHApe3JldHVybiB0LnBvaW50KHBbMF0scFsxXSxpKX12YXIgaD1yWzJdO3JldHVybiBuLnByZWNvbXB1dGVkPXtiZXRhOm51bGwsZG91YmxlczpoLmRvdWJsZXMmJntzdGVwOmguZG91Ymxlcy5zdGVwLHBvaW50czpbbl0uY29uY2F0KGguZG91Ymxlcy5wb2ludHMubWFwKG8pKX0sbmFmOmgubmFmJiZ7d25kOmgubmFmLnduZCxwb2ludHM6W25dLmNvbmNhdChoLm5hZi5wb2ludHMubWFwKG8pKX19LG59LER0LnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP1wiPEVDIFBvaW50IEluZmluaXR5PlwiOlwiPEVDIFBvaW50IHg6IFwiK3RoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsMikrXCIgeTogXCIrdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIj5cIn0sRHQucHJvdG90eXBlLmlzSW5maW5pdHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbmZ9LER0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7aWYodGhpcy5pbmYpcmV0dXJuIHQ7aWYodC5pbmYpcmV0dXJuIHRoaXM7aWYodGhpcy5lcSh0KSlyZXR1cm4gdGhpcy5kYmwoKTtpZih0aGlzLm5lZygpLmVxKHQpKXJldHVybiB0aGlzLmN1cnZlLnBvaW50KG51bGwsbnVsbCk7aWYodGhpcy54LmNtcCh0LngpPT09MClyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciByPXRoaXMueS5yZWRTdWIodC55KTtyLmNtcG4oMCkhPT0wJiYocj1yLnJlZE11bCh0aGlzLngucmVkU3ViKHQueCkucmVkSW52bSgpKSk7dmFyIGk9ci5yZWRTcXIoKS5yZWRJU3ViKHRoaXMueCkucmVkSVN1Yih0LngpLG49ci5yZWRNdWwodGhpcy54LnJlZFN1YihpKSkucmVkSVN1Yih0aGlzLnkpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50KGksbil9LER0LnByb3RvdHlwZS5kYmw9ZnVuY3Rpb24oKXtpZih0aGlzLmluZilyZXR1cm4gdGhpczt2YXIgdD10aGlzLnkucmVkQWRkKHRoaXMueSk7aWYodC5jbXBuKDApPT09MClyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciByPXRoaXMuY3VydmUuYSxpPXRoaXMueC5yZWRTcXIoKSxuPXQucmVkSW52bSgpLG89aS5yZWRBZGQoaSkucmVkSUFkZChpKS5yZWRJQWRkKHIpLnJlZE11bChuKSxoPW8ucmVkU3FyKCkucmVkSVN1Yih0aGlzLngucmVkQWRkKHRoaXMueCkpLHA9by5yZWRNdWwodGhpcy54LnJlZFN1YihoKSkucmVkSVN1Yih0aGlzLnkpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50KGgscCl9LER0LnByb3RvdHlwZS5nZXRYPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueC5mcm9tUmVkKCl9LER0LnByb3RvdHlwZS5nZXRZPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueS5mcm9tUmVkKCl9LER0LnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bmV3IEsodCwxNiksdGhpcy5pc0luZmluaXR5KCk/dGhpczp0aGlzLl9oYXNEb3VibGVzKHQpP3RoaXMuY3VydmUuX2ZpeGVkTmFmTXVsKHRoaXMsdCk6dGhpcy5jdXJ2ZS5lbmRvP3RoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKFt0aGlzXSxbdF0pOnRoaXMuY3VydmUuX3duYWZNdWwodGhpcyx0KX0sRHQucHJvdG90eXBlLm11bEFkZD1mdW5jdGlvbih0LHIsaSl7dmFyIG49W3RoaXMscl0sbz1bdCxpXTtyZXR1cm4gdGhpcy5jdXJ2ZS5lbmRvP3RoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKG4sbyk6dGhpcy5jdXJ2ZS5fd25hZk11bEFkZCgxLG4sbywyKX0sRHQucHJvdG90eXBlLmptdWxBZGQ9ZnVuY3Rpb24odCxyLGkpe3ZhciBuPVt0aGlzLHJdLG89W3QsaV07cmV0dXJuIHRoaXMuY3VydmUuZW5kbz90aGlzLmN1cnZlLl9lbmRvV25hZk11bEFkZChuLG8sITApOnRoaXMuY3VydmUuX3duYWZNdWxBZGQoMSxuLG8sMiwhMCl9LER0LnByb3RvdHlwZS5lcT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcz09PXR8fHRoaXMuaW5mPT09dC5pbmYmJih0aGlzLmluZnx8dGhpcy54LmNtcCh0LngpPT09MCYmdGhpcy55LmNtcCh0LnkpPT09MCl9LER0LnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24odCl7aWYodGhpcy5pbmYpcmV0dXJuIHRoaXM7dmFyIHI9dGhpcy5jdXJ2ZS5wb2ludCh0aGlzLngsdGhpcy55LnJlZE5lZygpKTtpZih0JiZ0aGlzLnByZWNvbXB1dGVkKXt2YXIgaT10aGlzLnByZWNvbXB1dGVkLG49ZnVuY3Rpb24obyl7cmV0dXJuIG8ubmVnKCl9O3IucHJlY29tcHV0ZWQ9e25hZjppLm5hZiYme3duZDppLm5hZi53bmQscG9pbnRzOmkubmFmLnBvaW50cy5tYXAobil9LGRvdWJsZXM6aS5kb3VibGVzJiZ7c3RlcDppLmRvdWJsZXMuc3RlcCxwb2ludHM6aS5kb3VibGVzLnBvaW50cy5tYXAobil9fX1yZXR1cm4gcn0sRHQucHJvdG90eXBlLnRvSj1mdW5jdGlvbigpe2lmKHRoaXMuaW5mKXJldHVybiB0aGlzLmN1cnZlLmpwb2ludChudWxsLG51bGwsbnVsbCk7dmFyIHQ9dGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LHRoaXMueSx0aGlzLmN1cnZlLm9uZSk7cmV0dXJuIHR9O2Z1bmN0aW9uIEZ0KGUsdCxyLGkpeyRlLkJhc2VQb2ludC5jYWxsKHRoaXMsZSxcImphY29iaWFuXCIpLHQ9PT1udWxsJiZyPT09bnVsbCYmaT09PW51bGw/KHRoaXMueD10aGlzLmN1cnZlLm9uZSx0aGlzLnk9dGhpcy5jdXJ2ZS5vbmUsdGhpcy56PW5ldyBLKDApKToodGhpcy54PW5ldyBLKHQsMTYpLHRoaXMueT1uZXcgSyhyLDE2KSx0aGlzLno9bmV3IEsoaSwxNikpLHRoaXMueC5yZWR8fCh0aGlzLng9dGhpcy54LnRvUmVkKHRoaXMuY3VydmUucmVkKSksdGhpcy55LnJlZHx8KHRoaXMueT10aGlzLnkudG9SZWQodGhpcy5jdXJ2ZS5yZWQpKSx0aGlzLnoucmVkfHwodGhpcy56PXRoaXMuei50b1JlZCh0aGlzLmN1cnZlLnJlZCkpLHRoaXMuek9uZT10aGlzLno9PT10aGlzLmN1cnZlLm9uZX1LaShGdCwkZS5CYXNlUG9pbnQpLHRlLnByb3RvdHlwZS5qcG9pbnQ9ZnVuY3Rpb24odCxyLGkpe3JldHVybiBuZXcgRnQodGhpcyx0LHIsaSl9LEZ0LnByb3RvdHlwZS50b1A9ZnVuY3Rpb24oKXtpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciB0PXRoaXMuei5yZWRJbnZtKCkscj10LnJlZFNxcigpLGk9dGhpcy54LnJlZE11bChyKSxuPXRoaXMueS5yZWRNdWwocikucmVkTXVsKHQpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50KGksbil9LEZ0LnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LHRoaXMueS5yZWROZWcoKSx0aGlzLnopfSxGdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0O2lmKHQuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO3ZhciByPXQuei5yZWRTcXIoKSxpPXRoaXMuei5yZWRTcXIoKSxuPXRoaXMueC5yZWRNdWwociksbz10LngucmVkTXVsKGkpLGg9dGhpcy55LnJlZE11bChyLnJlZE11bCh0LnopKSxwPXQueS5yZWRNdWwoaS5yZWRNdWwodGhpcy56KSksQT1uLnJlZFN1YihvKSx2PWgucmVkU3ViKHApO2lmKEEuY21wbigwKT09PTApcmV0dXJuIHYuY21wbigwKSE9PTA/dGhpcy5jdXJ2ZS5qcG9pbnQobnVsbCxudWxsLG51bGwpOnRoaXMuZGJsKCk7dmFyIHc9QS5yZWRTcXIoKSx5PXcucmVkTXVsKEEpLFM9bi5yZWRNdWwodyksTj12LnJlZFNxcigpLnJlZElBZGQoeSkucmVkSVN1YihTKS5yZWRJU3ViKFMpLEk9di5yZWRNdWwoUy5yZWRJU3ViKE4pKS5yZWRJU3ViKGgucmVkTXVsKHkpKSxDPXRoaXMuei5yZWRNdWwodC56KS5yZWRNdWwoQSk7cmV0dXJuIHRoaXMuY3VydmUuanBvaW50KE4sSSxDKX0sRnQucHJvdG90eXBlLm1peGVkQWRkPWZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0LnRvSigpO2lmKHQuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO3ZhciByPXRoaXMuei5yZWRTcXIoKSxpPXRoaXMueCxuPXQueC5yZWRNdWwociksbz10aGlzLnksaD10LnkucmVkTXVsKHIpLnJlZE11bCh0aGlzLnopLHA9aS5yZWRTdWIobiksQT1vLnJlZFN1YihoKTtpZihwLmNtcG4oMCk9PT0wKXJldHVybiBBLmNtcG4oMCkhPT0wP3RoaXMuY3VydmUuanBvaW50KG51bGwsbnVsbCxudWxsKTp0aGlzLmRibCgpO3ZhciB2PXAucmVkU3FyKCksdz12LnJlZE11bChwKSx5PWkucmVkTXVsKHYpLFM9QS5yZWRTcXIoKS5yZWRJQWRkKHcpLnJlZElTdWIoeSkucmVkSVN1Yih5KSxOPUEucmVkTXVsKHkucmVkSVN1YihTKSkucmVkSVN1YihvLnJlZE11bCh3KSksST10aGlzLnoucmVkTXVsKHApO3JldHVybiB0aGlzLmN1cnZlLmpwb2ludChTLE4sSSl9LEZ0LnByb3RvdHlwZS5kYmxwPWZ1bmN0aW9uKHQpe2lmKHQ9PT0wKXJldHVybiB0aGlzO2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO2lmKCF0KXJldHVybiB0aGlzLmRibCgpO3ZhciByO2lmKHRoaXMuY3VydmUuemVyb0F8fHRoaXMuY3VydmUudGhyZWVBKXt2YXIgaT10aGlzO2ZvcihyPTA7cjx0O3IrKylpPWkuZGJsKCk7cmV0dXJuIGl9dmFyIG49dGhpcy5jdXJ2ZS5hLG89dGhpcy5jdXJ2ZS50aW52LGg9dGhpcy54LHA9dGhpcy55LEE9dGhpcy56LHY9QS5yZWRTcXIoKS5yZWRTcXIoKSx3PXAucmVkQWRkKHApO2ZvcihyPTA7cjx0O3IrKyl7dmFyIHk9aC5yZWRTcXIoKSxTPXcucmVkU3FyKCksTj1TLnJlZFNxcigpLEk9eS5yZWRBZGQoeSkucmVkSUFkZCh5KS5yZWRJQWRkKG4ucmVkTXVsKHYpKSxDPWgucmVkTXVsKFMpLEQ9SS5yZWRTcXIoKS5yZWRJU3ViKEMucmVkQWRkKEMpKSxVPUMucmVkSVN1YihEKSxKPUkucmVkTXVsKFUpO0o9Si5yZWRJQWRkKEopLnJlZElTdWIoTik7dmFyIEJ0PXcucmVkTXVsKEEpO3IrMTx0JiYodj12LnJlZE11bChOKSksaD1ELEE9QnQsdz1KfXJldHVybiB0aGlzLmN1cnZlLmpwb2ludChoLHcucmVkTXVsKG8pLEEpfSxGdC5wcm90b3R5cGUuZGJsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNJbmZpbml0eSgpP3RoaXM6dGhpcy5jdXJ2ZS56ZXJvQT90aGlzLl96ZXJvRGJsKCk6dGhpcy5jdXJ2ZS50aHJlZUE/dGhpcy5fdGhyZWVEYmwoKTp0aGlzLl9kYmwoKX0sRnQucHJvdG90eXBlLl96ZXJvRGJsPWZ1bmN0aW9uKCl7dmFyIHQscixpO2lmKHRoaXMuek9uZSl7dmFyIG49dGhpcy54LnJlZFNxcigpLG89dGhpcy55LnJlZFNxcigpLGg9by5yZWRTcXIoKSxwPXRoaXMueC5yZWRBZGQobykucmVkU3FyKCkucmVkSVN1YihuKS5yZWRJU3ViKGgpO3A9cC5yZWRJQWRkKHApO3ZhciBBPW4ucmVkQWRkKG4pLnJlZElBZGQobiksdj1BLnJlZFNxcigpLnJlZElTdWIocCkucmVkSVN1YihwKSx3PWgucmVkSUFkZChoKTt3PXcucmVkSUFkZCh3KSx3PXcucmVkSUFkZCh3KSx0PXYscj1BLnJlZE11bChwLnJlZElTdWIodikpLnJlZElTdWIodyksaT10aGlzLnkucmVkQWRkKHRoaXMueSl9ZWxzZXt2YXIgeT10aGlzLngucmVkU3FyKCksUz10aGlzLnkucmVkU3FyKCksTj1TLnJlZFNxcigpLEk9dGhpcy54LnJlZEFkZChTKS5yZWRTcXIoKS5yZWRJU3ViKHkpLnJlZElTdWIoTik7ST1JLnJlZElBZGQoSSk7dmFyIEM9eS5yZWRBZGQoeSkucmVkSUFkZCh5KSxEPUMucmVkU3FyKCksVT1OLnJlZElBZGQoTik7VT1VLnJlZElBZGQoVSksVT1VLnJlZElBZGQoVSksdD1ELnJlZElTdWIoSSkucmVkSVN1YihJKSxyPUMucmVkTXVsKEkucmVkSVN1Yih0KSkucmVkSVN1YihVKSxpPXRoaXMueS5yZWRNdWwodGhpcy56KSxpPWkucmVkSUFkZChpKX1yZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQodCxyLGkpfSxGdC5wcm90b3R5cGUuX3RocmVlRGJsPWZ1bmN0aW9uKCl7dmFyIHQscixpO2lmKHRoaXMuek9uZSl7dmFyIG49dGhpcy54LnJlZFNxcigpLG89dGhpcy55LnJlZFNxcigpLGg9by5yZWRTcXIoKSxwPXRoaXMueC5yZWRBZGQobykucmVkU3FyKCkucmVkSVN1YihuKS5yZWRJU3ViKGgpO3A9cC5yZWRJQWRkKHApO3ZhciBBPW4ucmVkQWRkKG4pLnJlZElBZGQobikucmVkSUFkZCh0aGlzLmN1cnZlLmEpLHY9QS5yZWRTcXIoKS5yZWRJU3ViKHApLnJlZElTdWIocCk7dD12O3ZhciB3PWgucmVkSUFkZChoKTt3PXcucmVkSUFkZCh3KSx3PXcucmVkSUFkZCh3KSxyPUEucmVkTXVsKHAucmVkSVN1Yih2KSkucmVkSVN1Yih3KSxpPXRoaXMueS5yZWRBZGQodGhpcy55KX1lbHNle3ZhciB5PXRoaXMuei5yZWRTcXIoKSxTPXRoaXMueS5yZWRTcXIoKSxOPXRoaXMueC5yZWRNdWwoUyksST10aGlzLngucmVkU3ViKHkpLnJlZE11bCh0aGlzLngucmVkQWRkKHkpKTtJPUkucmVkQWRkKEkpLnJlZElBZGQoSSk7dmFyIEM9Ti5yZWRJQWRkKE4pO0M9Qy5yZWRJQWRkKEMpO3ZhciBEPUMucmVkQWRkKEMpO3Q9SS5yZWRTcXIoKS5yZWRJU3ViKEQpLGk9dGhpcy55LnJlZEFkZCh0aGlzLnopLnJlZFNxcigpLnJlZElTdWIoUykucmVkSVN1Yih5KTt2YXIgVT1TLnJlZFNxcigpO1U9VS5yZWRJQWRkKFUpLFU9VS5yZWRJQWRkKFUpLFU9VS5yZWRJQWRkKFUpLHI9SS5yZWRNdWwoQy5yZWRJU3ViKHQpKS5yZWRJU3ViKFUpfXJldHVybiB0aGlzLmN1cnZlLmpwb2ludCh0LHIsaSl9LEZ0LnByb3RvdHlwZS5fZGJsPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jdXJ2ZS5hLHI9dGhpcy54LGk9dGhpcy55LG49dGhpcy56LG89bi5yZWRTcXIoKS5yZWRTcXIoKSxoPXIucmVkU3FyKCkscD1pLnJlZFNxcigpLEE9aC5yZWRBZGQoaCkucmVkSUFkZChoKS5yZWRJQWRkKHQucmVkTXVsKG8pKSx2PXIucmVkQWRkKHIpO3Y9di5yZWRJQWRkKHYpO3ZhciB3PXYucmVkTXVsKHApLHk9QS5yZWRTcXIoKS5yZWRJU3ViKHcucmVkQWRkKHcpKSxTPXcucmVkSVN1Yih5KSxOPXAucmVkU3FyKCk7Tj1OLnJlZElBZGQoTiksTj1OLnJlZElBZGQoTiksTj1OLnJlZElBZGQoTik7dmFyIEk9QS5yZWRNdWwoUykucmVkSVN1YihOKSxDPWkucmVkQWRkKGkpLnJlZE11bChuKTtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoeSxJLEMpfSxGdC5wcm90b3R5cGUudHJwbD1mdW5jdGlvbigpe2lmKCF0aGlzLmN1cnZlLnplcm9BKXJldHVybiB0aGlzLmRibCgpLmFkZCh0aGlzKTt2YXIgdD10aGlzLngucmVkU3FyKCkscj10aGlzLnkucmVkU3FyKCksaT10aGlzLnoucmVkU3FyKCksbj1yLnJlZFNxcigpLG89dC5yZWRBZGQodCkucmVkSUFkZCh0KSxoPW8ucmVkU3FyKCkscD10aGlzLngucmVkQWRkKHIpLnJlZFNxcigpLnJlZElTdWIodCkucmVkSVN1YihuKTtwPXAucmVkSUFkZChwKSxwPXAucmVkQWRkKHApLnJlZElBZGQocCkscD1wLnJlZElTdWIoaCk7dmFyIEE9cC5yZWRTcXIoKSx2PW4ucmVkSUFkZChuKTt2PXYucmVkSUFkZCh2KSx2PXYucmVkSUFkZCh2KSx2PXYucmVkSUFkZCh2KTt2YXIgdz1vLnJlZElBZGQocCkucmVkU3FyKCkucmVkSVN1YihoKS5yZWRJU3ViKEEpLnJlZElTdWIodikseT1yLnJlZE11bCh3KTt5PXkucmVkSUFkZCh5KSx5PXkucmVkSUFkZCh5KTt2YXIgUz10aGlzLngucmVkTXVsKEEpLnJlZElTdWIoeSk7Uz1TLnJlZElBZGQoUyksUz1TLnJlZElBZGQoUyk7dmFyIE49dGhpcy55LnJlZE11bCh3LnJlZE11bCh2LnJlZElTdWIodykpLnJlZElTdWIocC5yZWRNdWwoQSkpKTtOPU4ucmVkSUFkZChOKSxOPU4ucmVkSUFkZChOKSxOPU4ucmVkSUFkZChOKTt2YXIgST10aGlzLnoucmVkQWRkKHApLnJlZFNxcigpLnJlZElTdWIoaSkucmVkSVN1YihBKTtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoUyxOLEkpfSxGdC5wcm90b3R5cGUubXVsPWZ1bmN0aW9uKHQscil7cmV0dXJuIHQ9bmV3IEsodCxyKSx0aGlzLmN1cnZlLl93bmFmTXVsKHRoaXMsdCl9LEZ0LnByb3RvdHlwZS5lcT1mdW5jdGlvbih0KXtpZih0LnR5cGU9PT1cImFmZmluZVwiKXJldHVybiB0aGlzLmVxKHQudG9KKCkpO2lmKHRoaXM9PT10KXJldHVybiEwO3ZhciByPXRoaXMuei5yZWRTcXIoKSxpPXQuei5yZWRTcXIoKTtpZih0aGlzLngucmVkTXVsKGkpLnJlZElTdWIodC54LnJlZE11bChyKSkuY21wbigwKSE9PTApcmV0dXJuITE7dmFyIG49ci5yZWRNdWwodGhpcy56KSxvPWkucmVkTXVsKHQueik7cmV0dXJuIHRoaXMueS5yZWRNdWwobykucmVkSVN1Yih0LnkucmVkTXVsKG4pKS5jbXBuKDApPT09MH0sRnQucHJvdG90eXBlLmVxWFRvUD1mdW5jdGlvbih0KXt2YXIgcj10aGlzLnoucmVkU3FyKCksaT10LnRvUmVkKHRoaXMuY3VydmUucmVkKS5yZWRNdWwocik7aWYodGhpcy54LmNtcChpKT09PTApcmV0dXJuITA7Zm9yKHZhciBuPXQuY2xvbmUoKSxvPXRoaXMuY3VydmUucmVkTi5yZWRNdWwocik7Oyl7aWYobi5pYWRkKHRoaXMuY3VydmUubiksbi5jbXAodGhpcy5jdXJ2ZS5wKT49MClyZXR1cm4hMTtpZihpLnJlZElBZGQobyksdGhpcy54LmNtcChpKT09PTApcmV0dXJuITB9fSxGdC5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzSW5maW5pdHkoKT9cIjxFQyBKUG9pbnQgSW5maW5pdHk+XCI6XCI8RUMgSlBvaW50IHg6IFwiK3RoaXMueC50b1N0cmluZygxNiwyKStcIiB5OiBcIit0aGlzLnkudG9TdHJpbmcoMTYsMikrXCIgejogXCIrdGhpcy56LnRvU3RyaW5nKDE2LDIpK1wiPlwifSxGdC5wcm90b3R5cGUuaXNJbmZpbml0eT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnouY21wbigwKT09PTB9O3ZhciB6cj1scihmdW5jdGlvbihlLHQpe3ZhciByPXQ7ci5iYXNlPSRlLHIuc2hvcnQ9VmEsci5tb250PW51bGwsci5lZHdhcmRzPW51bGx9KSxqcj1scihmdW5jdGlvbihlLHQpe3ZhciByPXQsaT1HdC5hc3NlcnQ7ZnVuY3Rpb24gbihwKXtwLnR5cGU9PT1cInNob3J0XCI/dGhpcy5jdXJ2ZT1uZXcgenIuc2hvcnQocCk6cC50eXBlPT09XCJlZHdhcmRzXCI/dGhpcy5jdXJ2ZT1uZXcgenIuZWR3YXJkcyhwKTp0aGlzLmN1cnZlPW5ldyB6ci5tb250KHApLHRoaXMuZz10aGlzLmN1cnZlLmcsdGhpcy5uPXRoaXMuY3VydmUubix0aGlzLmhhc2g9cC5oYXNoLGkodGhpcy5nLnZhbGlkYXRlKCksXCJJbnZhbGlkIGN1cnZlXCIpLGkodGhpcy5nLm11bCh0aGlzLm4pLmlzSW5maW5pdHkoKSxcIkludmFsaWQgY3VydmUsIEcqTiAhPSBPXCIpfXIuUHJlc2V0Q3VydmU9bjtmdW5jdGlvbiBvKHAsQSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHIscCx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7dmFyIHY9bmV3IG4oQSk7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLHAse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiEwLHZhbHVlOnZ9KSx2fX0pfW8oXCJwMTkyXCIse3R5cGU6XCJzaG9ydFwiLHByaW1lOlwicDE5MlwiLHA6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmZlwiLGE6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmY1wiLGI6XCI2NDIxMDUxOSBlNTljODBlNyAwZmE3ZTlhYiA3MjI0MzA0OSBmZWI4ZGVlYyBjMTQ2YjliMVwiLG46XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiA5OWRlZjgzNiAxNDZiYzliMSBiNGQyMjgzMVwiLGhhc2g6c2Uuc2hhMjU2LGdSZWQ6ITEsZzpbXCIxODhkYTgwZSBiMDMwOTBmNiA3Y2JmMjBlYiA0M2ExODgwMCBmNGZmMGFmZCA4MmZmMTAxMlwiLFwiMDcxOTJiOTUgZmZjOGRhNzggNjMxMDExZWQgNmIyNGNkZDUgNzNmOTc3YTEgMWU3OTQ4MTFcIl19KSxvKFwicDIyNFwiLHt0eXBlOlwic2hvcnRcIixwcmltZTpcInAyMjRcIixwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDFcIixhOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmVcIixiOlwiYjQwNTBhODUgMGMwNGIzYWIgZjU0MTMyNTYgNTA0NGIwYjcgZDdiZmQ4YmEgMjcwYjM5NDMgMjM1NWZmYjRcIixuOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZjE2YTIgZTBiOGYwM2UgMTNkZDI5NDUgNWM1YzJhM2RcIixoYXNoOnNlLnNoYTI1NixnUmVkOiExLGc6W1wiYjcwZTBjYmQgNmJiNGJmN2YgMzIxMzkwYjkgNGEwM2MxZDMgNTZjMjExMjIgMzQzMjgwZDYgMTE1YzFkMjFcIixcImJkMzc2Mzg4IGI1ZjcyM2ZiIDRjMjJkZmU2IGNkNDM3NWEwIDVhMDc0NzY0IDQ0ZDU4MTk5IDg1MDA3ZTM0XCJdfSksbyhcInAyNTZcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmZcIixhOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmNcIixiOlwiNWFjNjM1ZDggYWEzYTkzZTcgYjNlYmJkNTUgNzY5ODg2YmMgNjUxZDA2YjAgY2M1M2IwZjYgM2JjZTNjM2UgMjdkMjYwNGJcIixuOlwiZmZmZmZmZmYgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgYmNlNmZhYWQgYTcxNzllODQgZjNiOWNhYzIgZmM2MzI1NTFcIixoYXNoOnNlLnNoYTI1NixnUmVkOiExLGc6W1wiNmIxN2QxZjIgZTEyYzQyNDcgZjhiY2U2ZTUgNjNhNDQwZjIgNzcwMzdkODEgMmRlYjMzYTAgZjRhMTM5NDUgZDg5OGMyOTZcIixcIjRmZTM0MmUyIGZlMWE3ZjliIDhlZTdlYjRhIDdjMGY5ZTE2IDJiY2UzMzU3IDZiMzE1ZWNlIGNiYjY0MDY4IDM3YmY1MWY1XCJdfSksbyhcInAzODRcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmZcIixhOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmNcIixiOlwiYjMzMTJmYTcgZTIzZWU3ZTQgOTg4ZTA1NmIgZTNmODJkMTkgMTgxZDljNmUgZmU4MTQxMTIgMDMxNDA4OGYgNTAxMzg3NWEgYzY1NjM5OGQgOGEyZWQxOWQgMmE4NWM4ZWQgZDNlYzJhZWZcIixuOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgYzc2MzRkODEgZjQzNzJkZGYgNTgxYTBkYjIgNDhiMGE3N2EgZWNlYzE5NmEgY2NjNTI5NzNcIixoYXNoOnNlLnNoYTM4NCxnUmVkOiExLGc6W1wiYWE4N2NhMjIgYmU4YjA1MzcgOGViMWM3MWUgZjMyMGFkNzQgNmUxZDNiNjIgOGJhNzliOTggNTlmNzQxZTAgODI1NDJhMzggNTUwMmYyNWQgYmY1NTI5NmMgM2E1NDVlMzggNzI3NjBhYjdcIixcIjM2MTdkZTRhIDk2MjYyYzZmIDVkOWU5OGJmIDkyOTJkYzI5IGY4ZjQxZGJkIDI4OWExNDdjIGU5ZGEzMTEzIGI1ZjBiOGMwIDBhNjBiMWNlIDFkN2U4MTlkIDdhNDMxZDdjIDkwZWEwZTVmXCJdfSksbyhcInA1MjFcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmZcIixhOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmNcIixiOlwiMDAwMDAwNTEgOTUzZWI5NjEgOGUxYzlhMWYgOTI5YTIxYTAgYjY4NTQwZWUgYTJkYTcyNWIgOTliMzE1ZjMgYjhiNDg5OTEgOGVmMTA5ZTEgNTYxOTM5NTEgZWM3ZTkzN2IgMTY1MmMwYmQgM2JiMWJmMDcgMzU3M2RmODggM2QyYzM0ZjEgZWY0NTFmZDQgNmI1MDNmMDBcIixuOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmEgNTE4Njg3ODMgYmYyZjk2NmIgN2ZjYzAxNDggZjcwOWE1ZDAgM2JiNWM5YjggODk5YzQ3YWUgYmI2ZmI3MWUgOTEzODY0MDlcIixoYXNoOnNlLnNoYTUxMixnUmVkOiExLGc6W1wiMDAwMDAwYzYgODU4ZTA2YjcgMDQwNGU5Y2QgOWUzZWNiNjYgMjM5NWI0NDIgOWM2NDgxMzkgMDUzZmI1MjEgZjgyOGFmNjAgNmI0ZDNkYmEgYTE0YjVlNzcgZWZlNzU5MjggZmUxZGMxMjcgYTJmZmE4ZGUgMzM0OGIzYzEgODU2YTQyOWIgZjk3ZTdlMzEgYzJlNWJkNjZcIixcIjAwMDAwMTE4IDM5Mjk2YTc4IDlhM2JjMDA0IDVjOGE1ZmI0IDJjN2QxYmQ5IDk4ZjU0NDQ5IDU3OWI0NDY4IDE3YWZiZDE3IDI3M2U2NjJjIDk3ZWU3Mjk5IDVlZjQyNjQwIGM1NTBiOTAxIDNmYWQwNzYxIDM1M2M3MDg2IGEyNzJjMjQwIDg4YmU5NDc2IDlmZDE2NjUwXCJdfSksbyhcImN1cnZlMjU1MTlcIix7dHlwZTpcIm1vbnRcIixwcmltZTpcInAyNTUxOVwiLHA6XCI3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkXCIsYTpcIjc2ZDA2XCIsYjpcIjFcIixuOlwiMTAwMDAwMDAwMDAwMDAwMCAwMDAwMDAwMDAwMDAwMDAwIDE0ZGVmOWRlYTJmNzljZDYgNTgxMjYzMWE1Y2Y1ZDNlZFwiLGhhc2g6c2Uuc2hhMjU2LGdSZWQ6ITEsZzpbXCI5XCJdfSksbyhcImVkMjU1MTlcIix7dHlwZTpcImVkd2FyZHNcIixwcmltZTpcInAyNTUxOVwiLHA6XCI3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkXCIsYTpcIi0xXCIsYzpcIjFcIixkOlwiNTIwMzZjZWUyYjZmZmU3MyA4Y2M3NDA3OTc3NzllODk4IDAwNzAwYTRkNDE0MWQ4YWIgNzVlYjRkY2ExMzU5NzhhM1wiLG46XCIxMDAwMDAwMDAwMDAwMDAwIDAwMDAwMDAwMDAwMDAwMDAgMTRkZWY5ZGVhMmY3OWNkNiA1ODEyNjMxYTVjZjVkM2VkXCIsaGFzaDpzZS5zaGEyNTYsZ1JlZDohMSxnOltcIjIxNjkzNmQzY2Q2ZTUzZmVjMGE0ZTIzMWZkZDZkYzVjNjkyY2M3NjA5NTI1YTdiMmM5NTYyZDYwOGYyNWQ1MWFcIixcIjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NThcIl19KTt2YXIgaDt0cnl7aD1udWxsLmNyYXNoKCl9Y2F0Y2h7aD12b2lkIDB9byhcInNlY3AyNTZrMVwiLHt0eXBlOlwic2hvcnRcIixwcmltZTpcImsyNTZcIixwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZjMmZcIixhOlwiMFwiLGI6XCI3XCIsbjpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGJhYWVkY2U2IGFmNDhhMDNiIGJmZDI1ZThjIGQwMzY0MTQxXCIsaDpcIjFcIixoYXNoOnNlLnNoYTI1NixiZXRhOlwiN2FlOTZhMmI2NTdjMDcxMDZlNjQ0NzllYWMzNDM0ZTk5Y2YwNDk3NTEyZjU4OTk1YzEzOTZjMjg3MTk1MDFlZVwiLGxhbWJkYTpcIjUzNjNhZDRjYzA1YzMwZTBhNTI2MWMwMjg4MTI2NDVhMTIyZTIyZWEyMDgxNjY3OGRmMDI5NjdjMWIyM2JkNzJcIixiYXNpczpbe2E6XCIzMDg2ZDIyMWE3ZDQ2YmNkZTg2YzkwZTQ5Mjg0ZWIxNVwiLGI6XCItZTQ0MzdlZDYwMTBlODgyODZmNTQ3ZmE5MGFiZmU0YzNcIn0se2E6XCIxMTRjYTUwZjdhOGUyZjNmNjU3YzExMDhkOWQ0NGNmZDhcIixiOlwiMzA4NmQyMjFhN2Q0NmJjZGU4NmM5MGU0OTI4NGViMTVcIn1dLGdSZWQ6ITEsZzpbXCI3OWJlNjY3ZWY5ZGNiYmFjNTVhMDYyOTVjZTg3MGIwNzAyOWJmY2RiMmRjZTI4ZDk1OWYyODE1YjE2ZjgxNzk4XCIsXCI0ODNhZGE3NzI2YTNjNDY1NWRhNGZiZmMwZTExMDhhOGZkMTdiNDQ4YTY4NTU0MTk5YzQ3ZDA4ZmZiMTBkNGI4XCIsaF19KX0pO2Z1bmN0aW9uIFJlKGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFJlKSlyZXR1cm4gbmV3IFJlKGUpO3RoaXMuaGFzaD1lLmhhc2gsdGhpcy5wcmVkUmVzaXN0PSEhZS5wcmVkUmVzaXN0LHRoaXMub3V0TGVuPXRoaXMuaGFzaC5vdXRTaXplLHRoaXMubWluRW50cm9weT1lLm1pbkVudHJvcHl8fHRoaXMuaGFzaC5obWFjU3RyZW5ndGgsdGhpcy5fcmVzZWVkPW51bGwsdGhpcy5yZXNlZWRJbnRlcnZhbD1udWxsLHRoaXMuSz1udWxsLHRoaXMuVj1udWxsO3ZhciB0PWZlLnRvQXJyYXkoZS5lbnRyb3B5LGUuZW50cm9weUVuY3x8XCJoZXhcIikscj1mZS50b0FycmF5KGUubm9uY2UsZS5ub25jZUVuY3x8XCJoZXhcIiksaT1mZS50b0FycmF5KGUucGVycyxlLnBlcnNFbmN8fFwiaGV4XCIpO3FpKHQubGVuZ3RoPj10aGlzLm1pbkVudHJvcHkvOCxcIk5vdCBlbm91Z2ggZW50cm9weS4gTWluaW11bSBpczogXCIrdGhpcy5taW5FbnRyb3B5K1wiIGJpdHNcIiksdGhpcy5faW5pdCh0LHIsaSl9dmFyIHFmPVJlO1JlLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbih0LHIsaSl7dmFyIG49dC5jb25jYXQocikuY29uY2F0KGkpO3RoaXMuSz1uZXcgQXJyYXkodGhpcy5vdXRMZW4vOCksdGhpcy5WPW5ldyBBcnJheSh0aGlzLm91dExlbi84KTtmb3IodmFyIG89MDtvPHRoaXMuVi5sZW5ndGg7bysrKXRoaXMuS1tvXT0wLHRoaXMuVltvXT0xO3RoaXMuX3VwZGF0ZShuKSx0aGlzLl9yZXNlZWQ9MSx0aGlzLnJlc2VlZEludGVydmFsPTI4MTQ3NDk3NjcxMDY1Nn0sUmUucHJvdG90eXBlLl9obWFjPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzZS5obWFjKHRoaXMuaGFzaCx0aGlzLkspfSxSZS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbih0KXt2YXIgcj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikudXBkYXRlKFswXSk7dCYmKHI9ci51cGRhdGUodCkpLHRoaXMuSz1yLmRpZ2VzdCgpLHRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCksdCYmKHRoaXMuSz10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikudXBkYXRlKFsxXSkudXBkYXRlKHQpLmRpZ2VzdCgpLHRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCkpfSxSZS5wcm90b3R5cGUucmVzZWVkPWZ1bmN0aW9uKHQscixpLG4pe3R5cGVvZiByIT1cInN0cmluZ1wiJiYobj1pLGk9cixyPW51bGwpLHQ9ZmUudG9BcnJheSh0LHIpLGk9ZmUudG9BcnJheShpLG4pLHFpKHQubGVuZ3RoPj10aGlzLm1pbkVudHJvcHkvOCxcIk5vdCBlbm91Z2ggZW50cm9weS4gTWluaW11bSBpczogXCIrdGhpcy5taW5FbnRyb3B5K1wiIGJpdHNcIiksdGhpcy5fdXBkYXRlKHQuY29uY2F0KGl8fFtdKSksdGhpcy5fcmVzZWVkPTF9LFJlLnByb3RvdHlwZS5nZW5lcmF0ZT1mdW5jdGlvbih0LHIsaSxuKXtpZih0aGlzLl9yZXNlZWQ+dGhpcy5yZXNlZWRJbnRlcnZhbCl0aHJvdyBuZXcgRXJyb3IoXCJSZXNlZWQgaXMgcmVxdWlyZWRcIik7dHlwZW9mIHIhPVwic3RyaW5nXCImJihuPWksaT1yLHI9bnVsbCksaSYmKGk9ZmUudG9BcnJheShpLG58fFwiaGV4XCIpLHRoaXMuX3VwZGF0ZShpKSk7Zm9yKHZhciBvPVtdO28ubGVuZ3RoPHQ7KXRoaXMuVj10aGlzLl9obWFjKCkudXBkYXRlKHRoaXMuVikuZGlnZXN0KCksbz1vLmNvbmNhdCh0aGlzLlYpO3ZhciBoPW8uc2xpY2UoMCx0KTtyZXR1cm4gdGhpcy5fdXBkYXRlKGkpLHRoaXMuX3Jlc2VlZCsrLGZlLmVuY29kZShoLHIpfTt2YXIgSGk9R3QuYXNzZXJ0O2Z1bmN0aW9uIGt0KGUsdCl7dGhpcy5lYz1lLHRoaXMucHJpdj1udWxsLHRoaXMucHViPW51bGwsdC5wcml2JiZ0aGlzLl9pbXBvcnRQcml2YXRlKHQucHJpdix0LnByaXZFbmMpLHQucHViJiZ0aGlzLl9pbXBvcnRQdWJsaWModC5wdWIsdC5wdWJFbmMpfXZhciBMaT1rdDtrdC5mcm9tUHVibGljPWZ1bmN0aW9uKHQscixpKXtyZXR1cm4gciBpbnN0YW5jZW9mIGt0P3I6bmV3IGt0KHQse3B1YjpyLHB1YkVuYzppfSl9LGt0LmZyb21Qcml2YXRlPWZ1bmN0aW9uKHQscixpKXtyZXR1cm4gciBpbnN0YW5jZW9mIGt0P3I6bmV3IGt0KHQse3ByaXY6cixwcml2RW5jOml9KX0sa3QucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRQdWJsaWMoKTtyZXR1cm4gdC5pc0luZmluaXR5KCk/e3Jlc3VsdDohMSxyZWFzb246XCJJbnZhbGlkIHB1YmxpYyBrZXlcIn06dC52YWxpZGF0ZSgpP3QubXVsKHRoaXMuZWMuY3VydmUubikuaXNJbmZpbml0eSgpP3tyZXN1bHQ6ITAscmVhc29uOm51bGx9OntyZXN1bHQ6ITEscmVhc29uOlwiUHVibGljIGtleSAqIE4gIT0gT1wifTp7cmVzdWx0OiExLHJlYXNvbjpcIlB1YmxpYyBrZXkgaXMgbm90IGEgcG9pbnRcIn19LGt0LnByb3RvdHlwZS5nZXRQdWJsaWM9ZnVuY3Rpb24odCxyKXtyZXR1cm4gdHlwZW9mIHQ9PVwic3RyaW5nXCImJihyPXQsdD1udWxsKSx0aGlzLnB1Ynx8KHRoaXMucHViPXRoaXMuZWMuZy5tdWwodGhpcy5wcml2KSkscj90aGlzLnB1Yi5lbmNvZGUocix0KTp0aGlzLnB1Yn0sa3QucHJvdG90eXBlLmdldFByaXZhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1cImhleFwiP3RoaXMucHJpdi50b1N0cmluZygxNiwyKTp0aGlzLnByaXZ9LGt0LnByb3RvdHlwZS5faW1wb3J0UHJpdmF0ZT1mdW5jdGlvbih0LHIpe3RoaXMucHJpdj1uZXcgSyh0LHJ8fDE2KSx0aGlzLnByaXY9dGhpcy5wcml2LnVtb2QodGhpcy5lYy5jdXJ2ZS5uKX0sa3QucHJvdG90eXBlLl9pbXBvcnRQdWJsaWM9ZnVuY3Rpb24odCxyKXtpZih0Lnh8fHQueSl7dGhpcy5lYy5jdXJ2ZS50eXBlPT09XCJtb250XCI/SGkodC54LFwiTmVlZCB4IGNvb3JkaW5hdGVcIik6KHRoaXMuZWMuY3VydmUudHlwZT09PVwic2hvcnRcInx8dGhpcy5lYy5jdXJ2ZS50eXBlPT09XCJlZHdhcmRzXCIpJiZIaSh0LngmJnQueSxcIk5lZWQgYm90aCB4IGFuZCB5IGNvb3JkaW5hdGVcIiksdGhpcy5wdWI9dGhpcy5lYy5jdXJ2ZS5wb2ludCh0LngsdC55KTtyZXR1cm59dGhpcy5wdWI9dGhpcy5lYy5jdXJ2ZS5kZWNvZGVQb2ludCh0LHIpfSxrdC5wcm90b3R5cGUuZGVyaXZlPWZ1bmN0aW9uKHQpe3JldHVybiB0LnZhbGlkYXRlKCl8fEhpKHQudmFsaWRhdGUoKSxcInB1YmxpYyBwb2ludCBub3QgdmFsaWRhdGVkXCIpLHQubXVsKHRoaXMucHJpdikuZ2V0WCgpfSxrdC5wcm90b3R5cGUuc2lnbj1mdW5jdGlvbih0LHIsaSl7cmV0dXJuIHRoaXMuZWMuc2lnbih0LHRoaXMscixpKX0sa3QucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbih0LHIpe3JldHVybiB0aGlzLmVjLnZlcmlmeSh0LHIsdGhpcyl9LGt0LnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuXCI8S2V5IHByaXY6IFwiKyh0aGlzLnByaXYmJnRoaXMucHJpdi50b1N0cmluZygxNiwyKSkrXCIgcHViOiBcIisodGhpcy5wdWImJnRoaXMucHViLmluc3BlY3QoKSkrXCIgPlwifTt2YXIgV2E9R3QuYXNzZXJ0O2Z1bmN0aW9uIFFyKGUsdCl7aWYoZSBpbnN0YW5jZW9mIFFyKXJldHVybiBlO3RoaXMuX2ltcG9ydERFUihlLHQpfHwoV2EoZS5yJiZlLnMsXCJTaWduYXR1cmUgd2l0aG91dCByIG9yIHNcIiksdGhpcy5yPW5ldyBLKGUuciwxNiksdGhpcy5zPW5ldyBLKGUucywxNiksZS5yZWNvdmVyeVBhcmFtPT09dm9pZCAwP3RoaXMucmVjb3ZlcnlQYXJhbT1udWxsOnRoaXMucmVjb3ZlcnlQYXJhbT1lLnJlY292ZXJ5UGFyYW0pfXZhciBKcj1RcjtmdW5jdGlvbiBYYSgpe3RoaXMucGxhY2U9MH1mdW5jdGlvbiB6aShlLHQpe3ZhciByPWVbdC5wbGFjZSsrXTtpZighKHImMTI4KSlyZXR1cm4gcjt2YXIgaT1yJjE1O2lmKGk9PT0wfHxpPjQpcmV0dXJuITE7Zm9yKHZhciBuPTAsbz0wLGg9dC5wbGFjZTtvPGk7bysrLGgrKyluPDw9OCxufD1lW2hdLG4+Pj49MDtyZXR1cm4gbjw9MTI3PyExOih0LnBsYWNlPWgsbil9ZnVuY3Rpb24gS2YoZSl7Zm9yKHZhciB0PTAscj1lLmxlbmd0aC0xOyFlW3RdJiYhKGVbdCsxXSYxMjgpJiZ0PHI7KXQrKztyZXR1cm4gdD09PTA/ZTplLnNsaWNlKHQpfVFyLnByb3RvdHlwZS5faW1wb3J0REVSPWZ1bmN0aW9uKHQscil7dD1HdC50b0FycmF5KHQscik7dmFyIGk9bmV3IFhhO2lmKHRbaS5wbGFjZSsrXSE9PTQ4KXJldHVybiExO3ZhciBuPXppKHQsaSk7aWYobj09PSExfHxuK2kucGxhY2UhPT10Lmxlbmd0aHx8dFtpLnBsYWNlKytdIT09MilyZXR1cm4hMTt2YXIgbz16aSh0LGkpO2lmKG89PT0hMSlyZXR1cm4hMTt2YXIgaD10LnNsaWNlKGkucGxhY2UsbytpLnBsYWNlKTtpZihpLnBsYWNlKz1vLHRbaS5wbGFjZSsrXSE9PTIpcmV0dXJuITE7dmFyIHA9emkodCxpKTtpZihwPT09ITF8fHQubGVuZ3RoIT09cCtpLnBsYWNlKXJldHVybiExO3ZhciBBPXQuc2xpY2UoaS5wbGFjZSxwK2kucGxhY2UpO2lmKGhbMF09PT0wKWlmKGhbMV0mMTI4KWg9aC5zbGljZSgxKTtlbHNlIHJldHVybiExO2lmKEFbMF09PT0wKWlmKEFbMV0mMTI4KUE9QS5zbGljZSgxKTtlbHNlIHJldHVybiExO3JldHVybiB0aGlzLnI9bmV3IEsoaCksdGhpcy5zPW5ldyBLKEEpLHRoaXMucmVjb3ZlcnlQYXJhbT1udWxsLCEwfTtmdW5jdGlvbiBqaShlLHQpe2lmKHQ8MTI4KXtlLnB1c2godCk7cmV0dXJufXZhciByPTErKE1hdGgubG9nKHQpL01hdGguTE4yPj4+Myk7Zm9yKGUucHVzaChyfDEyOCk7LS1yOyllLnB1c2godD4+PihyPDwzKSYyNTUpO2UucHVzaCh0KX1Rci5wcm90b3R5cGUudG9ERVI9ZnVuY3Rpb24odCl7dmFyIHI9dGhpcy5yLnRvQXJyYXkoKSxpPXRoaXMucy50b0FycmF5KCk7Zm9yKHJbMF0mMTI4JiYocj1bMF0uY29uY2F0KHIpKSxpWzBdJjEyOCYmKGk9WzBdLmNvbmNhdChpKSkscj1LZihyKSxpPUtmKGkpOyFpWzBdJiYhKGlbMV0mMTI4KTspaT1pLnNsaWNlKDEpO3ZhciBuPVsyXTtqaShuLHIubGVuZ3RoKSxuPW4uY29uY2F0KHIpLG4ucHVzaCgyKSxqaShuLGkubGVuZ3RoKTt2YXIgbz1uLmNvbmNhdChpKSxoPVs0OF07cmV0dXJuIGppKGgsby5sZW5ndGgpLGg9aC5jb25jYXQobyksR3QuZW5jb2RlKGgsdCl9O3ZhciAkYT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInVuc3VwcG9ydGVkXCIpfSxIZj1HdC5hc3NlcnQ7ZnVuY3Rpb24gZWUoZSl7aWYoISh0aGlzIGluc3RhbmNlb2YgZWUpKXJldHVybiBuZXcgZWUoZSk7dHlwZW9mIGU9PVwic3RyaW5nXCImJihIZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoanIsZSksXCJVbmtub3duIGN1cnZlIFwiK2UpLGU9anJbZV0pLGUgaW5zdGFuY2VvZiBqci5QcmVzZXRDdXJ2ZSYmKGU9e2N1cnZlOmV9KSx0aGlzLmN1cnZlPWUuY3VydmUuY3VydmUsdGhpcy5uPXRoaXMuY3VydmUubix0aGlzLm5oPXRoaXMubi51c2hybigxKSx0aGlzLmc9dGhpcy5jdXJ2ZS5nLHRoaXMuZz1lLmN1cnZlLmcsdGhpcy5nLnByZWNvbXB1dGUoZS5jdXJ2ZS5uLmJpdExlbmd0aCgpKzEpLHRoaXMuaGFzaD1lLmhhc2h8fGUuY3VydmUuaGFzaH12YXIgWmE9ZWU7ZWUucHJvdG90eXBlLmtleVBhaXI9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBMaSh0aGlzLHQpfSxlZS5wcm90b3R5cGUua2V5RnJvbVByaXZhdGU9ZnVuY3Rpb24odCxyKXtyZXR1cm4gTGkuZnJvbVByaXZhdGUodGhpcyx0LHIpfSxlZS5wcm90b3R5cGUua2V5RnJvbVB1YmxpYz1mdW5jdGlvbih0LHIpe3JldHVybiBMaS5mcm9tUHVibGljKHRoaXMsdCxyKX0sZWUucHJvdG90eXBlLmdlbktleVBhaXI9ZnVuY3Rpb24odCl7dHx8KHQ9e30pO2Zvcih2YXIgcj1uZXcgcWYoe2hhc2g6dGhpcy5oYXNoLHBlcnM6dC5wZXJzLHBlcnNFbmM6dC5wZXJzRW5jfHxcInV0ZjhcIixlbnRyb3B5OnQuZW50cm9weXx8JGEodGhpcy5oYXNoLmhtYWNTdHJlbmd0aCksZW50cm9weUVuYzp0LmVudHJvcHkmJnQuZW50cm9weUVuY3x8XCJ1dGY4XCIsbm9uY2U6dGhpcy5uLnRvQXJyYXkoKX0pLGk9dGhpcy5uLmJ5dGVMZW5ndGgoKSxuPXRoaXMubi5zdWIobmV3IEsoMikpOzspe3ZhciBvPW5ldyBLKHIuZ2VuZXJhdGUoaSkpO2lmKCEoby5jbXAobik+MCkpcmV0dXJuIG8uaWFkZG4oMSksdGhpcy5rZXlGcm9tUHJpdmF0ZShvKX19LGVlLnByb3RvdHlwZS5fdHJ1bmNhdGVUb049ZnVuY3Rpb24odCxyKXt2YXIgaT10LmJ5dGVMZW5ndGgoKSo4LXRoaXMubi5iaXRMZW5ndGgoKTtyZXR1cm4gaT4wJiYodD10LnVzaHJuKGkpKSwhciYmdC5jbXAodGhpcy5uKT49MD90LnN1Yih0aGlzLm4pOnR9LGVlLnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uKHQscixpLG4pe3R5cGVvZiBpPT1cIm9iamVjdFwiJiYobj1pLGk9bnVsbCksbnx8KG49e30pLHI9dGhpcy5rZXlGcm9tUHJpdmF0ZShyLGkpLHQ9dGhpcy5fdHJ1bmNhdGVUb04obmV3IEsodCwxNikpO2Zvcih2YXIgbz10aGlzLm4uYnl0ZUxlbmd0aCgpLGg9ci5nZXRQcml2YXRlKCkudG9BcnJheShcImJlXCIsbykscD10LnRvQXJyYXkoXCJiZVwiLG8pLEE9bmV3IHFmKHtoYXNoOnRoaXMuaGFzaCxlbnRyb3B5Omgsbm9uY2U6cCxwZXJzOm4ucGVycyxwZXJzRW5jOm4ucGVyc0VuY3x8XCJ1dGY4XCJ9KSx2PXRoaXMubi5zdWIobmV3IEsoMSkpLHc9MDs7dysrKXt2YXIgeT1uLms/bi5rKHcpOm5ldyBLKEEuZ2VuZXJhdGUodGhpcy5uLmJ5dGVMZW5ndGgoKSkpO2lmKHk9dGhpcy5fdHJ1bmNhdGVUb04oeSwhMCksISh5LmNtcG4oMSk8PTB8fHkuY21wKHYpPj0wKSl7dmFyIFM9dGhpcy5nLm11bCh5KTtpZighUy5pc0luZmluaXR5KCkpe3ZhciBOPVMuZ2V0WCgpLEk9Ti51bW9kKHRoaXMubik7aWYoSS5jbXBuKDApIT09MCl7dmFyIEM9eS5pbnZtKHRoaXMubikubXVsKEkubXVsKHIuZ2V0UHJpdmF0ZSgpKS5pYWRkKHQpKTtpZihDPUMudW1vZCh0aGlzLm4pLEMuY21wbigwKSE9PTApe3ZhciBEPShTLmdldFkoKS5pc09kZCgpPzE6MCl8KE4uY21wKEkpIT09MD8yOjApO3JldHVybiBuLmNhbm9uaWNhbCYmQy5jbXAodGhpcy5uaCk+MCYmKEM9dGhpcy5uLnN1YihDKSxEXj0xKSxuZXcgSnIoe3I6SSxzOkMscmVjb3ZlcnlQYXJhbTpEfSl9fX19fX0sZWUucHJvdG90eXBlLnZlcmlmeT1mdW5jdGlvbih0LHIsaSxuKXt0PXRoaXMuX3RydW5jYXRlVG9OKG5ldyBLKHQsMTYpKSxpPXRoaXMua2V5RnJvbVB1YmxpYyhpLG4pLHI9bmV3IEpyKHIsXCJoZXhcIik7dmFyIG89ci5yLGg9ci5zO2lmKG8uY21wbigxKTwwfHxvLmNtcCh0aGlzLm4pPj0wfHxoLmNtcG4oMSk8MHx8aC5jbXAodGhpcy5uKT49MClyZXR1cm4hMTt2YXIgcD1oLmludm0odGhpcy5uKSxBPXAubXVsKHQpLnVtb2QodGhpcy5uKSx2PXAubXVsKG8pLnVtb2QodGhpcy5uKSx3O3JldHVybiB0aGlzLmN1cnZlLl9tYXh3ZWxsVHJpY2s/KHc9dGhpcy5nLmptdWxBZGQoQSxpLmdldFB1YmxpYygpLHYpLHcuaXNJbmZpbml0eSgpPyExOncuZXFYVG9QKG8pKToodz10aGlzLmcubXVsQWRkKEEsaS5nZXRQdWJsaWMoKSx2KSx3LmlzSW5maW5pdHkoKT8hMTp3LmdldFgoKS51bW9kKHRoaXMubikuY21wKG8pPT09MCl9LGVlLnByb3RvdHlwZS5yZWNvdmVyUHViS2V5PWZ1bmN0aW9uKGUsdCxyLGkpe0hmKCgzJnIpPT09cixcIlRoZSByZWNvdmVyeSBwYXJhbSBpcyBtb3JlIHRoYW4gdHdvIGJpdHNcIiksdD1uZXcgSnIodCxpKTt2YXIgbj10aGlzLm4sbz1uZXcgSyhlKSxoPXQucixwPXQucyxBPXImMSx2PXI+PjE7aWYoaC5jbXAodGhpcy5jdXJ2ZS5wLnVtb2QodGhpcy5jdXJ2ZS5uKSk+PTAmJnYpdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIGZpbmQgc2VuY29uZCBrZXkgY2FuZGluYXRlXCIpO3Y/aD10aGlzLmN1cnZlLnBvaW50RnJvbVgoaC5hZGQodGhpcy5jdXJ2ZS5uKSxBKTpoPXRoaXMuY3VydmUucG9pbnRGcm9tWChoLEEpO3ZhciB3PXQuci5pbnZtKG4pLHk9bi5zdWIobykubXVsKHcpLnVtb2QobiksUz1wLm11bCh3KS51bW9kKG4pO3JldHVybiB0aGlzLmcubXVsQWRkKHksaCxTKX0sZWUucHJvdG90eXBlLmdldEtleVJlY292ZXJ5UGFyYW09ZnVuY3Rpb24oZSx0LHIsaSl7aWYodD1uZXcgSnIodCxpKSx0LnJlY292ZXJ5UGFyYW0hPT1udWxsKXJldHVybiB0LnJlY292ZXJ5UGFyYW07Zm9yKHZhciBuPTA7bjw0O24rKyl7dmFyIG87dHJ5e289dGhpcy5yZWNvdmVyUHViS2V5KGUsdCxuKX1jYXRjaHtjb250aW51ZX1pZihvLmVxKHIpKXJldHVybiBufXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBmaW5kIHZhbGlkIHJlY292ZXJ5IGZhY3RvclwiKX07dmFyIHR1PWxyKGZ1bmN0aW9uKGUsdCl7dmFyIHI9dDtyLnZlcnNpb249XCI2LjUuNFwiLHIudXRpbHM9R3Qsci5yYW5kPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwidW5zdXBwb3J0ZWRcIil9LHIuY3VydmU9enIsci5jdXJ2ZXM9anIsci5lYz1aYSxyLmVkZHNhPW51bGx9KSxldT10dS5lYztjb25zdCBydT1cInNpZ25pbmcta2V5LzUuNy4wXCIsUWk9bmV3IHoocnUpO2xldCBKaT1udWxsO2Z1bmN0aW9uIHZlKCl7cmV0dXJuIEppfHwoSmk9bmV3IGV1KFwic2VjcDI1NmsxXCIpKSxKaX1jbGFzcyBpdXtjb25zdHJ1Y3Rvcih0KXt3cih0aGlzLFwiY3VydmVcIixcInNlY3AyNTZrMVwiKSx3cih0aGlzLFwicHJpdmF0ZUtleVwiLEt0KHQpKSxVcyh0aGlzLnByaXZhdGVLZXkpIT09MzImJlFpLnRocm93QXJndW1lbnRFcnJvcihcImludmFsaWQgcHJpdmF0ZSBrZXlcIixcInByaXZhdGVLZXlcIixcIltbIFJFREFDVEVEIF1dXCIpO2NvbnN0IHI9dmUoKS5rZXlGcm9tUHJpdmF0ZShPdCh0aGlzLnByaXZhdGVLZXkpKTt3cih0aGlzLFwicHVibGljS2V5XCIsXCIweFwiK3IuZ2V0UHVibGljKCExLFwiaGV4XCIpKSx3cih0aGlzLFwiY29tcHJlc3NlZFB1YmxpY0tleVwiLFwiMHhcIityLmdldFB1YmxpYyghMCxcImhleFwiKSksd3IodGhpcyxcIl9pc1NpZ25pbmdLZXlcIiwhMCl9X2FkZFBvaW50KHQpe2NvbnN0IHI9dmUoKS5rZXlGcm9tUHVibGljKE90KHRoaXMucHVibGljS2V5KSksaT12ZSgpLmtleUZyb21QdWJsaWMoT3QodCkpO3JldHVyblwiMHhcIityLnB1Yi5hZGQoaS5wdWIpLmVuY29kZUNvbXByZXNzZWQoXCJoZXhcIil9c2lnbkRpZ2VzdCh0KXtjb25zdCByPXZlKCkua2V5RnJvbVByaXZhdGUoT3QodGhpcy5wcml2YXRlS2V5KSksaT1PdCh0KTtpLmxlbmd0aCE9PTMyJiZRaS50aHJvd0FyZ3VtZW50RXJyb3IoXCJiYWQgZGlnZXN0IGxlbmd0aFwiLFwiZGlnZXN0XCIsdCk7Y29uc3Qgbj1yLnNpZ24oaSx7Y2Fub25pY2FsOiEwfSk7cmV0dXJuIFduKHtyZWNvdmVyeVBhcmFtOm4ucmVjb3ZlcnlQYXJhbSxyOm9lKFwiMHhcIituLnIudG9TdHJpbmcoMTYpLDMyKSxzOm9lKFwiMHhcIituLnMudG9TdHJpbmcoMTYpLDMyKX0pfWNvbXB1dGVTaGFyZWRTZWNyZXQodCl7Y29uc3Qgcj12ZSgpLmtleUZyb21Qcml2YXRlKE90KHRoaXMucHJpdmF0ZUtleSkpLGk9dmUoKS5rZXlGcm9tUHVibGljKE90KExmKHQpKSk7cmV0dXJuIG9lKFwiMHhcIityLmRlcml2ZShpLmdldFB1YmxpYygpKS50b1N0cmluZygxNiksMzIpfXN0YXRpYyBpc1NpZ25pbmdLZXkodCl7cmV0dXJuISEodCYmdC5faXNTaWduaW5nS2V5KX19ZnVuY3Rpb24gbnUoZSx0KXtjb25zdCByPVduKHQpLGk9e3I6T3Qoci5yKSxzOk90KHIucyl9O3JldHVyblwiMHhcIit2ZSgpLnJlY292ZXJQdWJLZXkoT3QoZSksaSxyLnJlY292ZXJ5UGFyYW0pLmVuY29kZShcImhleFwiLCExKX1mdW5jdGlvbiBMZihlLHQpe2NvbnN0IHI9T3QoZSk7aWYoci5sZW5ndGg9PT0zMil7Y29uc3QgaT1uZXcgaXUocik7cmV0dXJuIHQ/XCIweFwiK3ZlKCkua2V5RnJvbVByaXZhdGUocikuZ2V0UHVibGljKCEwLFwiaGV4XCIpOmkucHVibGljS2V5fWVsc2V7aWYoci5sZW5ndGg9PT0zMylyZXR1cm4gdD9LdChyKTpcIjB4XCIrdmUoKS5rZXlGcm9tUHVibGljKHIpLmdldFB1YmxpYyghMSxcImhleFwiKTtpZihyLmxlbmd0aD09PTY1KXJldHVybiB0P1wiMHhcIit2ZSgpLmtleUZyb21QdWJsaWMocikuZ2V0UHVibGljKCEwLFwiaGV4XCIpOkt0KHIpfXJldHVybiBRaS50aHJvd0FyZ3VtZW50RXJyb3IoXCJpbnZhbGlkIHB1YmxpYyBvciBwcml2YXRlIGtleVwiLFwia2V5XCIsXCJbUkVEQUNURURdXCIpfWNvbnN0IGZ1PVwidHJhbnNhY3Rpb25zLzUuNy4wXCI7bmV3IHooZnUpO3ZhciB6ZjsoZnVuY3Rpb24oZSl7ZVtlLmxlZ2FjeT0wXT1cImxlZ2FjeVwiLGVbZS5laXAyOTMwPTFdPVwiZWlwMjkzMFwiLGVbZS5laXAxNTU5PTJdPVwiZWlwMTU1OVwifSkoemZ8fCh6Zj17fSkpO2Z1bmN0aW9uIG91KGUpe2NvbnN0IHQ9TGYoZSk7cmV0dXJuIHYwKFZuKElpKFZuKHQsMSkpLDEyKSl9ZnVuY3Rpb24gc3UoZSx0KXtyZXR1cm4gb3UobnUoT3QoZSksdCkpfWNvbnN0IGF1PVwiaHR0cHM6Ly9ycGMud2FsbGV0Y29ubmVjdC5vcmcvdjFcIjthc3luYyBmdW5jdGlvbiBqZihlLHQscixpLG4sbyl7c3dpdGNoKHIudCl7Y2FzZVwiZWlwMTkxXCI6cmV0dXJuIFFmKGUsdCxyLnMpO2Nhc2VcImVpcDEyNzFcIjpyZXR1cm4gYXdhaXQgSmYoZSx0LHIucyxpLG4sbyk7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYHZlcmlmeVNpZ25hdHVyZSBmYWlsZWQ6IEF0dGVtcHRlZCB0byB2ZXJpZnkgQ2FjYW9TaWduYXR1cmUgd2l0aCB1bmtub3duIHR5cGU6ICR7ci50fWApfX1mdW5jdGlvbiBRZihlLHQscil7cmV0dXJuIHN1KGRmKHQpLHIpLnRvTG93ZXJDYXNlKCk9PT1lLnRvTG93ZXJDYXNlKCl9YXN5bmMgZnVuY3Rpb24gSmYoZSx0LHIsaSxuLG8pe3RyeXtjb25zdCBoPVwiMHgxNjI2YmE3ZVwiLHA9XCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQwXCIsQT1cIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDFcIix2PXIuc3Vic3RyaW5nKDIpLHc9ZGYodCkuc3Vic3RyaW5nKDIpLHk9aCt3K3ArQSt2LFM9YXdhaXQgZmV0Y2goYCR7b3x8YXV9Lz9jaGFpbklkPSR7aX0mcHJvamVjdElkPSR7bn1gLHttZXRob2Q6XCJQT1NUXCIsYm9keTpKU09OLnN0cmluZ2lmeSh7aWQ6dXUoKSxqc29ucnBjOlwiMi4wXCIsbWV0aG9kOlwiZXRoX2NhbGxcIixwYXJhbXM6W3t0bzplLGRhdGE6eX0sXCJsYXRlc3RcIl19KX0pLHtyZXN1bHQ6Tn09YXdhaXQgUy5qc29uKCk7cmV0dXJuIE4/Ti5zbGljZSgwLGgubGVuZ3RoKS50b0xvd2VyQ2FzZSgpPT09aC50b0xvd2VyQ2FzZSgpOiExfWNhdGNoKGgpe3JldHVybiBjb25zb2xlLmVycm9yKFwiaXNWYWxpZEVpcDEyNzFTaWduYXR1cmU6IFwiLGgpLCExfX1mdW5jdGlvbiB1dSgpe3JldHVybiBEYXRlLm5vdygpK01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxZTMpfXZhciBodT1PYmplY3QuZGVmaW5lUHJvcGVydHksY3U9T2JqZWN0LmRlZmluZVByb3BlcnRpZXMsbHU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMsR2Y9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxkdT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHB1PU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUsWWY9KGUsdCxyKT0+dCBpbiBlP2h1KGUsdCx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6cn0pOmVbdF09cixHaT0oZSx0KT0+e2Zvcih2YXIgciBpbiB0fHwodD17fSkpZHUuY2FsbCh0LHIpJiZZZihlLHIsdFtyXSk7aWYoR2YpZm9yKHZhciByIG9mIEdmKHQpKXB1LmNhbGwodCxyKSYmWWYoZSxyLHRbcl0pO3JldHVybiBlfSxWZj0oZSx0KT0+Y3UoZSxsdSh0KSk7Y29uc3QgdnU9XCJkaWQ6cGtoOlwiLEdyPWU9PmU/LnNwbGl0KFwiOlwiKSxZaT1lPT57Y29uc3QgdD1lJiZHcihlKTtpZih0KXJldHVybiBlLmluY2x1ZGVzKHZ1KT90WzNdOnRbMV19LGd1PWU9Pntjb25zdCB0PWUmJkdyKGUpO2lmKHQpcmV0dXJuIHRbMl0rXCI6XCIrdFszXX0sVmk9ZT0+e2NvbnN0IHQ9ZSYmR3IoZSk7aWYodClyZXR1cm4gdC5wb3AoKX07YXN5bmMgZnVuY3Rpb24gbXUoZSl7Y29uc3R7Y2FjYW86dCxwcm9qZWN0SWQ6cn09ZSx7czppLHA6bn09dCxvPVdmKG4sbi5pc3MpLGg9Vmkobi5pc3MpO3JldHVybiBhd2FpdCBqZihoLG8saSxZaShuLmlzcykscil9Y29uc3QgV2Y9KGUsdCk9Pntjb25zdCByPWAke2UuZG9tYWlufSB3YW50cyB5b3UgdG8gc2lnbiBpbiB3aXRoIHlvdXIgRXRoZXJldW0gYWNjb3VudDpgLGk9VmkodCk7aWYoIWUuYXVkJiYhZS51cmkpdGhyb3cgbmV3IEVycm9yKFwiRWl0aGVyIGBhdWRgIG9yIGB1cmlgIGlzIHJlcXVpcmVkIHRvIGNvbnN0cnVjdCB0aGUgbWVzc2FnZVwiKTtsZXQgbj1lLnN0YXRlbWVudHx8dm9pZCAwO2NvbnN0IG89YFVSSTogJHtlLmF1ZHx8ZS51cml9YCxoPWBWZXJzaW9uOiAke2UudmVyc2lvbn1gLHA9YENoYWluIElEOiAke1lpKHQpfWAsQT1gTm9uY2U6ICR7ZS5ub25jZX1gLHY9YElzc3VlZCBBdDogJHtlLmlhdH1gLHc9ZS5leHA/YEV4cGlyYXRpb24gVGltZTogJHtlLmV4cH1gOnZvaWQgMCx5PWUubmJmP2BOb3QgQmVmb3JlOiAke2UubmJmfWA6dm9pZCAwLFM9ZS5yZXF1ZXN0SWQ/YFJlcXVlc3QgSUQ6ICR7ZS5yZXF1ZXN0SWR9YDp2b2lkIDAsTj1lLnJlc291cmNlcz9gUmVzb3VyY2VzOiR7ZS5yZXNvdXJjZXMubWFwKEM9PmBcbi0gJHtDfWApLmpvaW4oXCJcIil9YDp2b2lkIDAsST1WcihlLnJlc291cmNlcyk7aWYoSSl7Y29uc3QgQz1PZShJKTtuPSRpKG4sQyl9cmV0dXJuW3IsaSxcIlwiLG4sXCJcIixvLGgscCxBLHYsdyx5LFMsTl0uZmlsdGVyKEM9PkMhPW51bGwpLmpvaW4oYFxuYCl9O2Z1bmN0aW9uIEF1KGUsdCxyKXtyZXR1cm4gci5pbmNsdWRlcyhcImRpZDpwa2g6XCIpfHwocj1gZGlkOnBraDoke3J9YCkse2g6e3Q6XCJjYWlwMTIyXCJ9LHA6e2lzczpyLGRvbWFpbjplLmRvbWFpbixhdWQ6ZS5hdWQsdmVyc2lvbjplLnZlcnNpb24sbm9uY2U6ZS5ub25jZSxpYXQ6ZS5pYXQsc3RhdGVtZW50OmUuc3RhdGVtZW50LHJlcXVlc3RJZDplLnJlcXVlc3RJZCxyZXNvdXJjZXM6ZS5yZXNvdXJjZXMsbmJmOmUubmJmLGV4cDplLmV4cH0sczp0fX1mdW5jdGlvbiBidShlKXt2YXIgdDtjb25zdHthdXRoUGF5bG9hZDpyLGNoYWluczppLG1ldGhvZHM6bn09ZSxvPXIuc3RhdGVtZW50fHxcIlwiO2lmKCEoaSE9bnVsbCYmaS5sZW5ndGgpKXJldHVybiByO2NvbnN0IGg9ci5jaGFpbnMscD13aShoLGkpO2lmKCEocCE9bnVsbCYmcC5sZW5ndGgpKXRocm93IG5ldyBFcnJvcihcIk5vIHN1cHBvcnRlZCBjaGFpbnNcIik7Y29uc3QgQT1YZihyLnJlc291cmNlcyk7aWYoIUEpcmV0dXJuIHI7Z2UoQSk7Y29uc3Qgdj0kZihBLFwiZWlwMTU1XCIpO2xldCB3PXI/LnJlc291cmNlc3x8W107aWYodiE9bnVsbCYmdi5sZW5ndGgpe2NvbnN0IHk9WmYodiksUz13aSh5LG4pO2lmKCEoUyE9bnVsbCYmUy5sZW5ndGgpKXRocm93IG5ldyBFcnJvcihgU3VwcG9ydGVkIG1ldGhvZHMgZG9uJ3Qgc2F0aXNmeSB0aGUgcmVxdWVzdGVkOiAke0pTT04uc3RyaW5naWZ5KHkpfSwgc3VwcG9ydGVkOiAke0pTT04uc3RyaW5naWZ5KG4pfWApO2NvbnN0IE49V2koXCJyZXF1ZXN0XCIsUyx7Y2hhaW5zOnB9KSxJPWlvKEEsXCJlaXAxNTVcIixOKTt3PSgodD1yPy5yZXNvdXJjZXMpPT1udWxsP3ZvaWQgMDp0LnNsaWNlKDAsLTEpKXx8W10sdy5wdXNoKFlyKEkpKX1yZXR1cm4gVmYoR2koe30scikse3N0YXRlbWVudDpmbyhvLFZyKHcpKSxjaGFpbnM6cCxyZXNvdXJjZXM6ciE9bnVsbCYmci5yZXNvdXJjZXN8fHcubGVuZ3RoPjA/dzp2b2lkIDB9KX1mdW5jdGlvbiBYZihlKXtjb25zdCB0PVZyKGUpO2lmKHQmJlhpKHQpKXJldHVybiBPZSh0KX1mdW5jdGlvbiB5dShlLHQpe3ZhciByO3JldHVybihyPWU/LmF0dCk9PW51bGw/dm9pZCAwOnIuaGFzT3duUHJvcGVydHkodCl9ZnVuY3Rpb24gJGYoZSx0KXt2YXIgcixpO3JldHVybihyPWU/LmF0dCkhPW51bGwmJnJbdF0/T2JqZWN0LmtleXMoKGk9ZT8uYXR0KT09bnVsbD92b2lkIDA6aVt0XSk6W119ZnVuY3Rpb24gd3UoZSl7cmV0dXJuIGU/Lm1hcCh0PT5PYmplY3Qua2V5cyh0KSl8fFtdfWZ1bmN0aW9uIFpmKGUpe3JldHVybiBlPy5tYXAodD0+e3ZhciByO3JldHVybihyPXQuc3BsaXQoXCIvXCIpKT09bnVsbD92b2lkIDA6clsxXX0pfHxbXX1mdW5jdGlvbiB0byhlKXtyZXR1cm4gQnVmZmVyLmZyb20oSlNPTi5zdHJpbmdpZnkoZSkpLnRvU3RyaW5nKFwiYmFzZTY0XCIpfWZ1bmN0aW9uIGVvKGUpe3JldHVybiBKU09OLnBhcnNlKEJ1ZmZlci5mcm9tKGUsXCJiYXNlNjRcIikudG9TdHJpbmcoXCJ1dGYtOFwiKSl9ZnVuY3Rpb24gZ2UoZSl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKFwiTm8gcmVjYXAgcHJvdmlkZWQsIHZhbHVlIGlzIHVuZGVmaW5lZFwiKTtpZighZS5hdHQpdGhyb3cgbmV3IEVycm9yKFwiTm8gYGF0dGAgcHJvcGVydHkgZm91bmRcIik7Y29uc3QgdD1PYmplY3Qua2V5cyhlLmF0dCk7aWYoISh0IT1udWxsJiZ0Lmxlbmd0aCkpdGhyb3cgbmV3IEVycm9yKFwiTm8gcmVzb3VyY2VzIGZvdW5kIGluIGBhdHRgIHByb3BlcnR5XCIpO3QuZm9yRWFjaChyPT57Y29uc3QgaT1lLmF0dFtyXTtpZihBcnJheS5pc0FycmF5KGkpKXRocm93IG5ldyBFcnJvcihgUmVzb3VyY2UgbXVzdCBiZSBhbiBvYmplY3Q6ICR7cn1gKTtpZih0eXBlb2YgaSE9XCJvYmplY3RcIil0aHJvdyBuZXcgRXJyb3IoYFJlc291cmNlIG11c3QgYmUgYW4gb2JqZWN0OiAke3J9YCk7aWYoIU9iamVjdC5rZXlzKGkpLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoYFJlc291cmNlIG9iamVjdCBpcyBlbXB0eTogJHtyfWApO09iamVjdC5rZXlzKGkpLmZvckVhY2gobj0+e2NvbnN0IG89aVtuXTtpZighQXJyYXkuaXNBcnJheShvKSl0aHJvdyBuZXcgRXJyb3IoYEFiaWxpdHkgbGltaXRzICR7bn0gbXVzdCBiZSBhbiBhcnJheSBvZiBvYmplY3RzLCBmb3VuZDogJHtvfWApO2lmKCFvLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoYFZhbHVlIG9mICR7bn0gaXMgZW1wdHkgYXJyYXksIG11c3QgYmUgYW4gYXJyYXkgd2l0aCBvYmplY3RzYCk7by5mb3JFYWNoKGg9PntpZih0eXBlb2YgaCE9XCJvYmplY3RcIil0aHJvdyBuZXcgRXJyb3IoYEFiaWxpdHkgbGltaXRzICgke259KSBtdXN0IGJlIGFuIGFycmF5IG9mIG9iamVjdHMsIGZvdW5kOiAke2h9YCl9KX0pfSl9ZnVuY3Rpb24gcm8oZSx0LHIsaT17fSl7cmV0dXJuIHI/LnNvcnQoKG4sbyk9Pm4ubG9jYWxlQ29tcGFyZShvKSkse2F0dDp7W2VdOldpKHQscixpKX19fWZ1bmN0aW9uIGlvKGUsdCxyKXt2YXIgaTtyZXR1cm4gZS5hdHRbdF09R2koe30sciksKChpPU9iamVjdC5rZXlzKGUuYXR0KSk9PW51bGw/dm9pZCAwOmkuc29ydCgobixvKT0+bi5sb2NhbGVDb21wYXJlKG8pKSkucmVkdWNlKChuLG8pPT4obi5hdHRbb109ZS5hdHRbb10sbikse2F0dDp7fX0pfWZ1bmN0aW9uIFdpKGUsdCxyPXt9KXt0PXQ/LnNvcnQoKG4sbyk9Pm4ubG9jYWxlQ29tcGFyZShvKSk7Y29uc3QgaT10Lm1hcChuPT4oe1tgJHtlfS8ke259YF06W3JdfSkpO3JldHVybiBPYmplY3QuYXNzaWduKHt9LC4uLmkpfWZ1bmN0aW9uIFlyKGUpe3JldHVybiBnZShlKSxgdXJuOnJlY2FwOiR7dG8oZSkucmVwbGFjZSgvPS9nLFwiXCIpfWB9ZnVuY3Rpb24gT2UoZSl7Y29uc3QgdD1lbyhlLnJlcGxhY2UoXCJ1cm46cmVjYXA6XCIsXCJcIikpO3JldHVybiBnZSh0KSx0fWZ1bmN0aW9uIHh1KGUsdCxyKXtjb25zdCBpPXJvKGUsdCxyKTtyZXR1cm4gWXIoaSl9ZnVuY3Rpb24gWGkoZSl7cmV0dXJuIGUmJmUuaW5jbHVkZXMoXCJ1cm46cmVjYXA6XCIpfWZ1bmN0aW9uIE11KGUsdCl7Y29uc3Qgcj1PZShlKSxpPU9lKHQpLG49bm8ocixpKTtyZXR1cm4gWXIobil9ZnVuY3Rpb24gbm8oZSx0KXtnZShlKSxnZSh0KTtjb25zdCByPU9iamVjdC5rZXlzKGUuYXR0KS5jb25jYXQoT2JqZWN0LmtleXModC5hdHQpKS5zb3J0KChuLG8pPT5uLmxvY2FsZUNvbXBhcmUobykpLGk9e2F0dDp7fX07cmV0dXJuIHIuZm9yRWFjaChuPT57dmFyIG8saDtPYmplY3Qua2V5cygoKG89ZS5hdHQpPT1udWxsP3ZvaWQgMDpvW25dKXx8e30pLmNvbmNhdChPYmplY3Qua2V5cygoKGg9dC5hdHQpPT1udWxsP3ZvaWQgMDpoW25dKXx8e30pKS5zb3J0KChwLEEpPT5wLmxvY2FsZUNvbXBhcmUoQSkpLmZvckVhY2gocD0+e3ZhciBBLHY7aS5hdHRbbl09VmYoR2koe30saS5hdHRbbl0pLHtbcF06KChBPWUuYXR0W25dKT09bnVsbD92b2lkIDA6QVtwXSl8fCgodj10LmF0dFtuXSk9PW51bGw/dm9pZCAwOnZbcF0pfSl9KX0pLGl9ZnVuY3Rpb24gJGkoZT1cIlwiLHQpe2dlKHQpO2NvbnN0IHI9XCJJIGZ1cnRoZXIgYXV0aG9yaXplIHRoZSBzdGF0ZWQgVVJJIHRvIHBlcmZvcm0gdGhlIGZvbGxvd2luZyBhY3Rpb25zIG9uIG15IGJlaGFsZjogXCI7aWYoZS5pbmNsdWRlcyhyKSlyZXR1cm4gZTtjb25zdCBpPVtdO2xldCBuPTA7T2JqZWN0LmtleXModC5hdHQpLmZvckVhY2gocD0+e2NvbnN0IEE9T2JqZWN0LmtleXModC5hdHRbcF0pLm1hcCh5PT4oe2FiaWxpdHk6eS5zcGxpdChcIi9cIilbMF0sYWN0aW9uOnkuc3BsaXQoXCIvXCIpWzFdfSkpO0Euc29ydCgoeSxTKT0+eS5hY3Rpb24ubG9jYWxlQ29tcGFyZShTLmFjdGlvbikpO2NvbnN0IHY9e307QS5mb3JFYWNoKHk9Pnt2W3kuYWJpbGl0eV18fCh2W3kuYWJpbGl0eV09W10pLHZbeS5hYmlsaXR5XS5wdXNoKHkuYWN0aW9uKX0pO2NvbnN0IHc9T2JqZWN0LmtleXModikubWFwKHk9PihuKyssYCgke259KSAnJHt5fSc6ICcke3ZbeV0uam9pbihcIicsICdcIil9JyBmb3IgJyR7cH0nLmApKTtpLnB1c2gody5qb2luKFwiLCBcIikucmVwbGFjZShcIi4sXCIsXCIuXCIpKX0pO2NvbnN0IG89aS5qb2luKFwiIFwiKSxoPWAke3J9JHtvfWA7cmV0dXJuYCR7ZT9lK1wiIFwiOlwiXCJ9JHtofWB9ZnVuY3Rpb24gRXUoZSl7dmFyIHQ7Y29uc3Qgcj1PZShlKTtnZShyKTtjb25zdCBpPSh0PXIuYXR0KT09bnVsbD92b2lkIDA6dC5laXAxNTU7cmV0dXJuIGk/T2JqZWN0LmtleXMoaSkubWFwKG49Pm4uc3BsaXQoXCIvXCIpWzFdKTpbXX1mdW5jdGlvbiBTdShlKXtjb25zdCB0PU9lKGUpO2dlKHQpO2NvbnN0IHI9W107cmV0dXJuIE9iamVjdC52YWx1ZXModC5hdHQpLmZvckVhY2goaT0+e09iamVjdC52YWx1ZXMoaSkuZm9yRWFjaChuPT57dmFyIG87KG89bj8uWzBdKSE9bnVsbCYmby5jaGFpbnMmJnIucHVzaChuWzBdLmNoYWlucyl9KX0pLFsuLi5uZXcgU2V0KHIuZmxhdCgpKV19ZnVuY3Rpb24gZm8oZSx0KXtpZighdClyZXR1cm4gZTtjb25zdCByPU9lKHQpO3JldHVybiBnZShyKSwkaShlLHIpfWZ1bmN0aW9uIFZyKGUpe2lmKCFlKXJldHVybjtjb25zdCB0PWU/LltlLmxlbmd0aC0xXTtyZXR1cm4gWGkodCk/dDp2b2lkIDB9Y29uc3QgWmk9XCJiYXNlMTBcIixMdD1cImJhc2UxNlwiLHRuPVwiYmFzZTY0cGFkXCIsSXU9XCJiYXNlNjR1cmxcIixkcj1cInV0ZjhcIixlbj0wLHByPTEsU3I9MixOdT0wLG9vPTEsSXI9MTIscm49MzI7ZnVuY3Rpb24gX3UoKXtjb25zdCBlPW1uLmdlbmVyYXRlS2V5UGFpcigpO3JldHVybntwcml2YXRlS2V5OlF0KGUuc2VjcmV0S2V5LEx0KSxwdWJsaWNLZXk6UXQoZS5wdWJsaWNLZXksTHQpfX1mdW5jdGlvbiBCdSgpe2NvbnN0IGU9Q3Iocm4pO3JldHVybiBRdChlLEx0KX1mdW5jdGlvbiBDdShlLHQpe2NvbnN0IHI9bW4uc2hhcmVkS2V5KFh0KGUsTHQpLFh0KHQsTHQpLCEwKSxpPW5ldyBqbyh2bixyKS5leHBhbmQocm4pO3JldHVybiBRdChpLEx0KX1mdW5jdGlvbiBSdShlKXtjb25zdCB0PWduKFh0KGUsTHQpKTtyZXR1cm4gUXQodCxMdCl9ZnVuY3Rpb24gT3UoZSl7Y29uc3QgdD1nbihYdChlLGRyKSk7cmV0dXJuIFF0KHQsTHQpfWZ1bmN0aW9uIG5uKGUpe3JldHVybiBYdChgJHtlfWAsWmkpfWZ1bmN0aW9uIFplKGUpe3JldHVybiBOdW1iZXIoUXQoZSxaaSkpfWZ1bmN0aW9uIFB1KGUpe2NvbnN0IHQ9bm4odHlwZW9mIGUudHlwZTxcInVcIj9lLnR5cGU6ZW4pO2lmKFplKHQpPT09cHImJnR5cGVvZiBlLnNlbmRlclB1YmxpY0tleT5cInVcIil0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHNlbmRlciBwdWJsaWMga2V5IGZvciB0eXBlIDEgZW52ZWxvcGVcIik7Y29uc3Qgcj10eXBlb2YgZS5zZW5kZXJQdWJsaWNLZXk8XCJ1XCI/WHQoZS5zZW5kZXJQdWJsaWNLZXksTHQpOnZvaWQgMCxpPXR5cGVvZiBlLml2PFwidVwiP1h0KGUuaXYsTHQpOkNyKElyKSxuPW5ldyBwbihYdChlLnN5bUtleSxMdCkpLnNlYWwoaSxYdChlLm1lc3NhZ2UsZHIpKTtyZXR1cm4gZm4oe3R5cGU6dCxzZWFsZWQ6bixpdjppLHNlbmRlclB1YmxpY0tleTpyLGVuY29kaW5nOmUuZW5jb2Rpbmd9KX1mdW5jdGlvbiBUdShlLHQpe2NvbnN0IHI9bm4oU3IpLGk9Q3IoSXIpLG49WHQoZSxkcik7cmV0dXJuIGZuKHt0eXBlOnIsc2VhbGVkOm4saXY6aSxlbmNvZGluZzp0fSl9ZnVuY3Rpb24gRHUoZSl7Y29uc3QgdD1uZXcgcG4oWHQoZS5zeW1LZXksTHQpKSx7c2VhbGVkOnIsaXY6aX09V3Ioe2VuY29kZWQ6ZS5lbmNvZGVkLGVuY29kaW5nOmU/LmVuY29kaW5nfSksbj10Lm9wZW4oaSxyKTtpZihuPT09bnVsbCl0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZGVjcnlwdFwiKTtyZXR1cm4gUXQobixkcil9ZnVuY3Rpb24gRnUoZSx0KXtjb25zdHtzZWFsZWQ6cn09V3Ioe2VuY29kZWQ6ZSxlbmNvZGluZzp0fSk7cmV0dXJuIFF0KHIsZHIpfWZ1bmN0aW9uIGZuKGUpe2NvbnN0e2VuY29kaW5nOnQ9dG59PWU7aWYoWmUoZS50eXBlKT09PVNyKXJldHVybiBRdCh2aShbZS50eXBlLGUuc2VhbGVkXSksdCk7aWYoWmUoZS50eXBlKT09PXByKXtpZih0eXBlb2YgZS5zZW5kZXJQdWJsaWNLZXk+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBzZW5kZXIgcHVibGljIGtleSBmb3IgdHlwZSAxIGVudmVsb3BlXCIpO3JldHVybiBRdCh2aShbZS50eXBlLGUuc2VuZGVyUHVibGljS2V5LGUuaXYsZS5zZWFsZWRdKSx0KX1yZXR1cm4gUXQodmkoW2UudHlwZSxlLml2LGUuc2VhbGVkXSksdCl9ZnVuY3Rpb24gV3IoZSl7Y29uc3R7ZW5jb2RlZDp0LGVuY29kaW5nOnI9dG59PWUsaT1YdCh0LHIpLG49aS5zbGljZShOdSxvbyksbz1vbztpZihaZShuKT09PXByKXtjb25zdCB2PW8rcm4sdz12K0lyLHk9aS5zbGljZShvLHYpLFM9aS5zbGljZSh2LHcpLE49aS5zbGljZSh3KTtyZXR1cm57dHlwZTpuLHNlYWxlZDpOLGl2OlMsc2VuZGVyUHVibGljS2V5Onl9fWlmKFplKG4pPT09U3Ipe2NvbnN0IHY9aS5zbGljZShvKSx3PUNyKElyKTtyZXR1cm57dHlwZTpuLHNlYWxlZDp2LGl2Ond9fWNvbnN0IGg9bytJcixwPWkuc2xpY2UobyxoKSxBPWkuc2xpY2UoaCk7cmV0dXJue3R5cGU6bixzZWFsZWQ6QSxpdjpwfX1mdW5jdGlvbiBVdShlLHQpe2NvbnN0IHI9V3Ioe2VuY29kZWQ6ZSxlbmNvZGluZzp0Py5lbmNvZGluZ30pO3JldHVybiBzbyh7dHlwZTpaZShyLnR5cGUpLHNlbmRlclB1YmxpY0tleTp0eXBlb2Ygci5zZW5kZXJQdWJsaWNLZXk8XCJ1XCI/UXQoci5zZW5kZXJQdWJsaWNLZXksTHQpOnZvaWQgMCxyZWNlaXZlclB1YmxpY0tleTp0Py5yZWNlaXZlclB1YmxpY0tleX0pfWZ1bmN0aW9uIHNvKGUpe2NvbnN0IHQ9ZT8udHlwZXx8ZW47aWYodD09PXByKXtpZih0eXBlb2YgZT8uc2VuZGVyUHVibGljS2V5PlwidVwiKXRocm93IG5ldyBFcnJvcihcIm1pc3Npbmcgc2VuZGVyIHB1YmxpYyBrZXlcIik7aWYodHlwZW9mIGU/LnJlY2VpdmVyUHVibGljS2V5PlwidVwiKXRocm93IG5ldyBFcnJvcihcIm1pc3NpbmcgcmVjZWl2ZXIgcHVibGljIGtleVwiKX1yZXR1cm57dHlwZTp0LHNlbmRlclB1YmxpY0tleTplPy5zZW5kZXJQdWJsaWNLZXkscmVjZWl2ZXJQdWJsaWNLZXk6ZT8ucmVjZWl2ZXJQdWJsaWNLZXl9fWZ1bmN0aW9uIGt1KGUpe3JldHVybiBlLnR5cGU9PT1wciYmdHlwZW9mIGUuc2VuZGVyUHVibGljS2V5PT1cInN0cmluZ1wiJiZ0eXBlb2YgZS5yZWNlaXZlclB1YmxpY0tleT09XCJzdHJpbmdcIn1mdW5jdGlvbiBxdShlKXtyZXR1cm4gZS50eXBlPT09U3J9ZnVuY3Rpb24gYW8oZSl7cmV0dXJuIG5ldyBRbyhcInAyNTZcIikua2V5RnJvbVB1YmxpYyh7eDpCdWZmZXIuZnJvbShlLngsXCJiYXNlNjRcIikudG9TdHJpbmcoXCJoZXhcIikseTpCdWZmZXIuZnJvbShlLnksXCJiYXNlNjRcIikudG9TdHJpbmcoXCJoZXhcIil9LFwiaGV4XCIpfWZ1bmN0aW9uIEt1KGUpe2xldCB0PWUucmVwbGFjZSgvLS9nLFwiK1wiKS5yZXBsYWNlKC9fL2csXCIvXCIpO2NvbnN0IHI9dC5sZW5ndGglNDtyZXR1cm4gcj4wJiYodCs9XCI9XCIucmVwZWF0KDQtcikpLHR9ZnVuY3Rpb24gSHUoZSl7cmV0dXJuIEJ1ZmZlci5mcm9tKEt1KGUpLFwiYmFzZTY0XCIpfWZ1bmN0aW9uIEx1KGUsdCl7Y29uc3RbcixpLG5dPWUuc3BsaXQoXCIuXCIpLG89SHUobik7aWYoby5sZW5ndGghPT02NCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNpZ25hdHVyZSBsZW5ndGhcIik7Y29uc3QgaD1vLnNsaWNlKDAsMzIpLnRvU3RyaW5nKFwiaGV4XCIpLHA9by5zbGljZSgzMiw2NCkudG9TdHJpbmcoXCJoZXhcIiksQT1gJHtyfS4ke2l9YCx2PW5ldyB2bigpLnVwZGF0ZShCdWZmZXIuZnJvbShBKSkuZGlnZXN0KCksdz1hbyh0KSx5PUJ1ZmZlci5mcm9tKHYpLnRvU3RyaW5nKFwiaGV4XCIpO2lmKCF3LnZlcmlmeSh5LHtyOmgsczpwfSkpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzaWduYXR1cmVcIik7cmV0dXJuIEpvKGUpLnBheWxvYWR9Y29uc3QgdW89XCJpcm5cIjtmdW5jdGlvbiB6dShlKXtyZXR1cm4gZT8ucmVsYXl8fHtwcm90b2NvbDp1b319ZnVuY3Rpb24ganUoZSl7Y29uc3QgdD1Hb1tlXTtpZih0eXBlb2YgdD5cInVcIil0aHJvdyBuZXcgRXJyb3IoYFJlbGF5IFByb3RvY29sIG5vdCBzdXBwb3J0ZWQ6ICR7ZX1gKTtyZXR1cm4gdH12YXIgUXU9T2JqZWN0LmRlZmluZVByb3BlcnR5LEp1PU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLEd1PU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzLGhvPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsWXU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxWdT1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLGNvPShlLHQscik9PnQgaW4gZT9RdShlLHQse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnJ9KTplW3RdPXIsbG89KGUsdCk9Pntmb3IodmFyIHIgaW4gdHx8KHQ9e30pKVl1LmNhbGwodCxyKSYmY28oZSxyLHRbcl0pO2lmKGhvKWZvcih2YXIgciBvZiBobyh0KSlWdS5jYWxsKHQscikmJmNvKGUscix0W3JdKTtyZXR1cm4gZX0sV3U9KGUsdCk9Pkp1KGUsR3UodCkpO2Z1bmN0aW9uIHBvKGUsdD1cIi1cIil7Y29uc3Qgcj17fSxpPVwicmVsYXlcIit0O3JldHVybiBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKG49PntpZihuLnN0YXJ0c1dpdGgoaSkpe2NvbnN0IG89bi5yZXBsYWNlKGksXCJcIiksaD1lW25dO3Jbb109aH19KSxyfWZ1bmN0aW9uIFh1KGUpe2lmKCFlLmluY2x1ZGVzKFwid2M6XCIpKXtjb25zdCBBPXhpKGUpO0EhPW51bGwmJkEuaW5jbHVkZXMoXCJ3YzpcIikmJihlPUEpfWU9ZS5pbmNsdWRlcyhcIndjOi8vXCIpP2UucmVwbGFjZShcIndjOi8vXCIsXCJcIik6ZSxlPWUuaW5jbHVkZXMoXCJ3YzpcIik/ZS5yZXBsYWNlKFwid2M6XCIsXCJcIik6ZTtjb25zdCB0PWUuaW5kZXhPZihcIjpcIikscj1lLmluZGV4T2YoXCI/XCIpIT09LTE/ZS5pbmRleE9mKFwiP1wiKTp2b2lkIDAsaT1lLnN1YnN0cmluZygwLHQpLG49ZS5zdWJzdHJpbmcodCsxLHIpLnNwbGl0KFwiQFwiKSxvPXR5cGVvZiByPFwidVwiP2Uuc3Vic3RyaW5nKHIpOlwiXCIsaD1Cci5wYXJzZShvKSxwPXR5cGVvZiBoLm1ldGhvZHM9PVwic3RyaW5nXCI/aC5tZXRob2RzLnNwbGl0KFwiLFwiKTp2b2lkIDA7cmV0dXJue3Byb3RvY29sOmksdG9waWM6dm8oblswXSksdmVyc2lvbjpwYXJzZUludChuWzFdLDEwKSxzeW1LZXk6aC5zeW1LZXkscmVsYXk6cG8oaCksbWV0aG9kczpwLGV4cGlyeVRpbWVzdGFtcDpoLmV4cGlyeVRpbWVzdGFtcD9wYXJzZUludChoLmV4cGlyeVRpbWVzdGFtcCwxMCk6dm9pZCAwfX1mdW5jdGlvbiB2byhlKXtyZXR1cm4gZS5zdGFydHNXaXRoKFwiLy9cIik/ZS5zdWJzdHJpbmcoMik6ZX1mdW5jdGlvbiBnbyhlLHQ9XCItXCIpe2NvbnN0IHI9XCJyZWxheVwiLGk9e307cmV0dXJuIE9iamVjdC5rZXlzKGUpLmZvckVhY2gobj0+e2NvbnN0IG89cit0K247ZVtuXSYmKGlbb109ZVtuXSl9KSxpfWZ1bmN0aW9uICR1KGUpe3JldHVybmAke2UucHJvdG9jb2x9OiR7ZS50b3BpY31AJHtlLnZlcnNpb259P2ArQnIuc3RyaW5naWZ5KGxvKFd1KGxvKHtzeW1LZXk6ZS5zeW1LZXl9LGdvKGUucmVsYXkpKSx7ZXhwaXJ5VGltZXN0YW1wOmUuZXhwaXJ5VGltZXN0YW1wfSksZS5tZXRob2RzP3ttZXRob2RzOmUubWV0aG9kcy5qb2luKFwiLFwiKX06e30pKX1mdW5jdGlvbiBadShlLHQscil7cmV0dXJuYCR7ZX0/d2NfZXY9JHtyfSZ0b3BpYz0ke3R9YH12YXIgdGg9T2JqZWN0LmRlZmluZVByb3BlcnR5LGVoPU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzLHJoPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzLG1vPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMsaWg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxuaD1PYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLEFvPShlLHQscik9PnQgaW4gZT90aChlLHQse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnJ9KTplW3RdPXIsZmg9KGUsdCk9Pntmb3IodmFyIHIgaW4gdHx8KHQ9e30pKWloLmNhbGwodCxyKSYmQW8oZSxyLHRbcl0pO2lmKG1vKWZvcih2YXIgciBvZiBtbyh0KSluaC5jYWxsKHQscikmJkFvKGUscix0W3JdKTtyZXR1cm4gZX0sb2g9KGUsdCk9PmVoKGUscmgodCkpO2Z1bmN0aW9uIHRyKGUpe2NvbnN0IHQ9W107cmV0dXJuIGUuZm9yRWFjaChyPT57Y29uc3RbaSxuXT1yLnNwbGl0KFwiOlwiKTt0LnB1c2goYCR7aX06JHtufWApfSksdH1mdW5jdGlvbiBibyhlKXtjb25zdCB0PVtdO3JldHVybiBPYmplY3QudmFsdWVzKGUpLmZvckVhY2gocj0+e3QucHVzaCguLi50cihyLmFjY291bnRzKSl9KSx0fWZ1bmN0aW9uIHlvKGUsdCl7Y29uc3Qgcj1bXTtyZXR1cm4gT2JqZWN0LnZhbHVlcyhlKS5mb3JFYWNoKGk9Pnt0cihpLmFjY291bnRzKS5pbmNsdWRlcyh0KSYmci5wdXNoKC4uLmkubWV0aG9kcyl9KSxyfWZ1bmN0aW9uIHdvKGUsdCl7Y29uc3Qgcj1bXTtyZXR1cm4gT2JqZWN0LnZhbHVlcyhlKS5mb3JFYWNoKGk9Pnt0cihpLmFjY291bnRzKS5pbmNsdWRlcyh0KSYmci5wdXNoKC4uLmkuZXZlbnRzKX0pLHJ9ZnVuY3Rpb24gc2goZSx0KXtjb25zdCByPU9vKGUsdCk7aWYocil0aHJvdyBuZXcgRXJyb3Ioci5tZXNzYWdlKTtjb25zdCBpPXt9O2Zvcihjb25zdFtuLG9db2YgT2JqZWN0LmVudHJpZXMoZSkpaVtuXT17bWV0aG9kczpvLm1ldGhvZHMsZXZlbnRzOm8uZXZlbnRzLGNoYWluczpvLmFjY291bnRzLm1hcChoPT5gJHtoLnNwbGl0KFwiOlwiKVswXX06JHtoLnNwbGl0KFwiOlwiKVsxXX1gKX07cmV0dXJuIGl9ZnVuY3Rpb24gYWgoZSl7Y29uc3R7cHJvcG9zYWw6e3JlcXVpcmVkTmFtZXNwYWNlczp0LG9wdGlvbmFsTmFtZXNwYWNlczpyPXt9fSxzdXBwb3J0ZWROYW1lc3BhY2VzOml9PWUsbj1zbih0KSxvPXNuKHIpLGg9e307T2JqZWN0LmtleXMoaSkuZm9yRWFjaCh2PT57Y29uc3Qgdz1pW3ZdLmNoYWlucyx5PWlbdl0ubWV0aG9kcyxTPWlbdl0uZXZlbnRzLE49aVt2XS5hY2NvdW50czt3LmZvckVhY2goST0+e2lmKCFOLnNvbWUoQz0+Qy5pbmNsdWRlcyhJKSkpdGhyb3cgbmV3IEVycm9yKGBObyBhY2NvdW50cyBwcm92aWRlZCBmb3IgY2hhaW4gJHtJfSBpbiBuYW1lc3BhY2UgJHt2fWApfSksaFt2XT17Y2hhaW5zOncsbWV0aG9kczp5LGV2ZW50czpTLGFjY291bnRzOk59fSk7Y29uc3QgcD1Ubyh0LGgsXCJhcHByb3ZlKClcIik7aWYocCl0aHJvdyBuZXcgRXJyb3IocC5tZXNzYWdlKTtjb25zdCBBPXt9O3JldHVybiFPYmplY3Qua2V5cyh0KS5sZW5ndGgmJiFPYmplY3Qua2V5cyhyKS5sZW5ndGg/aDooT2JqZWN0LmtleXMobikuZm9yRWFjaCh2PT57Y29uc3Qgdz1pW3ZdLmNoYWlucy5maWx0ZXIoST0+e3ZhciBDLEQ7cmV0dXJuKEQ9KEM9blt2XSk9PW51bGw/dm9pZCAwOkMuY2hhaW5zKT09bnVsbD92b2lkIDA6RC5pbmNsdWRlcyhJKX0pLHk9aVt2XS5tZXRob2RzLmZpbHRlcihJPT57dmFyIEMsRDtyZXR1cm4oRD0oQz1uW3ZdKT09bnVsbD92b2lkIDA6Qy5tZXRob2RzKT09bnVsbD92b2lkIDA6RC5pbmNsdWRlcyhJKX0pLFM9aVt2XS5ldmVudHMuZmlsdGVyKEk9Pnt2YXIgQyxEO3JldHVybihEPShDPW5bdl0pPT1udWxsP3ZvaWQgMDpDLmV2ZW50cyk9PW51bGw/dm9pZCAwOkQuaW5jbHVkZXMoSSl9KSxOPXcubWFwKEk9Pmlbdl0uYWNjb3VudHMuZmlsdGVyKEM9PkMuaW5jbHVkZXMoYCR7SX06YCkpKS5mbGF0KCk7QVt2XT17Y2hhaW5zOncsbWV0aG9kczp5LGV2ZW50czpTLGFjY291bnRzOk59fSksT2JqZWN0LmtleXMobykuZm9yRWFjaCh2PT57dmFyIHcseSxTLE4sSSxDO2lmKCFpW3ZdKXJldHVybjtjb25zdCBEPSh5PSh3PW9bdl0pPT1udWxsP3ZvaWQgMDp3LmNoYWlucyk9PW51bGw/dm9pZCAwOnkuZmlsdGVyKEc9Pmlbdl0uY2hhaW5zLmluY2x1ZGVzKEcpKSxVPWlbdl0ubWV0aG9kcy5maWx0ZXIoRz0+e3ZhciBILEw7cmV0dXJuKEw9KEg9b1t2XSk9PW51bGw/dm9pZCAwOkgubWV0aG9kcyk9PW51bGw/dm9pZCAwOkwuaW5jbHVkZXMoRyl9KSxKPWlbdl0uZXZlbnRzLmZpbHRlcihHPT57dmFyIEgsTDtyZXR1cm4oTD0oSD1vW3ZdKT09bnVsbD92b2lkIDA6SC5ldmVudHMpPT1udWxsP3ZvaWQgMDpMLmluY2x1ZGVzKEcpfSksQnQ9RD8ubWFwKEc9Pmlbdl0uYWNjb3VudHMuZmlsdGVyKEg9PkguaW5jbHVkZXMoYCR7R306YCkpKS5mbGF0KCk7QVt2XT17Y2hhaW5zOm1lKChTPUFbdl0pPT1udWxsP3ZvaWQgMDpTLmNoYWlucyxEKSxtZXRob2RzOm1lKChOPUFbdl0pPT1udWxsP3ZvaWQgMDpOLm1ldGhvZHMsVSksZXZlbnRzOm1lKChJPUFbdl0pPT1udWxsP3ZvaWQgMDpJLmV2ZW50cyxKKSxhY2NvdW50czptZSgoQz1BW3ZdKT09bnVsbD92b2lkIDA6Qy5hY2NvdW50cyxCdCl9fSksQSl9ZnVuY3Rpb24gb24oZSl7cmV0dXJuIGUuaW5jbHVkZXMoXCI6XCIpfWZ1bmN0aW9uIHhvKGUpe3JldHVybiBvbihlKT9lLnNwbGl0KFwiOlwiKVswXTplfWZ1bmN0aW9uIHNuKGUpe3ZhciB0LHIsaTtjb25zdCBuPXt9O2lmKCFYcihlKSlyZXR1cm4gbjtmb3IoY29uc3RbbyxoXW9mIE9iamVjdC5lbnRyaWVzKGUpKXtjb25zdCBwPW9uKG8pP1tvXTpoLmNoYWlucyxBPWgubWV0aG9kc3x8W10sdj1oLmV2ZW50c3x8W10sdz14byhvKTtuW3ddPW9oKGZoKHt9LG5bd10pLHtjaGFpbnM6bWUocCwodD1uW3ddKT09bnVsbD92b2lkIDA6dC5jaGFpbnMpLG1ldGhvZHM6bWUoQSwocj1uW3ddKT09bnVsbD92b2lkIDA6ci5tZXRob2RzKSxldmVudHM6bWUodiwoaT1uW3ddKT09bnVsbD92b2lkIDA6aS5ldmVudHMpfSl9cmV0dXJuIG59ZnVuY3Rpb24gTW8oZSl7Y29uc3QgdD17fTtyZXR1cm4gZT8uZm9yRWFjaChyPT57Y29uc3RbaSxuXT1yLnNwbGl0KFwiOlwiKTt0W2ldfHwodFtpXT17YWNjb3VudHM6W10sY2hhaW5zOltdLGV2ZW50czpbXX0pLHRbaV0uYWNjb3VudHMucHVzaChyKSx0W2ldLmNoYWlucy5wdXNoKGAke2l9OiR7bn1gKX0pLHR9ZnVuY3Rpb24gdWgoZSx0KXt0PXQubWFwKGk9PmkucmVwbGFjZShcImRpZDpwa2g6XCIsXCJcIikpO2NvbnN0IHI9TW8odCk7Zm9yKGNvbnN0W2ksbl1vZiBPYmplY3QuZW50cmllcyhyKSluLm1ldGhvZHM/bi5tZXRob2RzPW1lKG4ubWV0aG9kcyxlKTpuLm1ldGhvZHM9ZSxuLmV2ZW50cz1bXCJjaGFpbkNoYW5nZWRcIixcImFjY291bnRzQ2hhbmdlZFwiXTtyZXR1cm4gcn1jb25zdCBFbz17SU5WQUxJRF9NRVRIT0Q6e21lc3NhZ2U6XCJJbnZhbGlkIG1ldGhvZC5cIixjb2RlOjEwMDF9LElOVkFMSURfRVZFTlQ6e21lc3NhZ2U6XCJJbnZhbGlkIGV2ZW50LlwiLGNvZGU6MTAwMn0sSU5WQUxJRF9VUERBVEVfUkVRVUVTVDp7bWVzc2FnZTpcIkludmFsaWQgdXBkYXRlIHJlcXVlc3QuXCIsY29kZToxMDAzfSxJTlZBTElEX0VYVEVORF9SRVFVRVNUOnttZXNzYWdlOlwiSW52YWxpZCBleHRlbmQgcmVxdWVzdC5cIixjb2RlOjEwMDR9LElOVkFMSURfU0VTU0lPTl9TRVRUTEVfUkVRVUVTVDp7bWVzc2FnZTpcIkludmFsaWQgc2Vzc2lvbiBzZXR0bGUgcmVxdWVzdC5cIixjb2RlOjEwMDV9LFVOQVVUSE9SSVpFRF9NRVRIT0Q6e21lc3NhZ2U6XCJVbmF1dGhvcml6ZWQgbWV0aG9kLlwiLGNvZGU6MzAwMX0sVU5BVVRIT1JJWkVEX0VWRU5UOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIGV2ZW50LlwiLGNvZGU6MzAwMn0sVU5BVVRIT1JJWkVEX1VQREFURV9SRVFVRVNUOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIHVwZGF0ZSByZXF1ZXN0LlwiLGNvZGU6MzAwM30sVU5BVVRIT1JJWkVEX0VYVEVORF9SRVFVRVNUOnttZXNzYWdlOlwiVW5hdXRob3JpemVkIGV4dGVuZCByZXF1ZXN0LlwiLGNvZGU6MzAwNH0sVVNFUl9SRUpFQ1RFRDp7bWVzc2FnZTpcIlVzZXIgcmVqZWN0ZWQuXCIsY29kZTo1ZTN9LFVTRVJfUkVKRUNURURfQ0hBSU5TOnttZXNzYWdlOlwiVXNlciByZWplY3RlZCBjaGFpbnMuXCIsY29kZTo1MDAxfSxVU0VSX1JFSkVDVEVEX01FVEhPRFM6e21lc3NhZ2U6XCJVc2VyIHJlamVjdGVkIG1ldGhvZHMuXCIsY29kZTo1MDAyfSxVU0VSX1JFSkVDVEVEX0VWRU5UUzp7bWVzc2FnZTpcIlVzZXIgcmVqZWN0ZWQgZXZlbnRzLlwiLGNvZGU6NTAwM30sVU5TVVBQT1JURURfQ0hBSU5TOnttZXNzYWdlOlwiVW5zdXBwb3J0ZWQgY2hhaW5zLlwiLGNvZGU6NTEwMH0sVU5TVVBQT1JURURfTUVUSE9EUzp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIG1ldGhvZHMuXCIsY29kZTo1MTAxfSxVTlNVUFBPUlRFRF9FVkVOVFM6e21lc3NhZ2U6XCJVbnN1cHBvcnRlZCBldmVudHMuXCIsY29kZTo1MTAyfSxVTlNVUFBPUlRFRF9BQ0NPVU5UUzp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIGFjY291bnRzLlwiLGNvZGU6NTEwM30sVU5TVVBQT1JURURfTkFNRVNQQUNFX0tFWTp7bWVzc2FnZTpcIlVuc3VwcG9ydGVkIG5hbWVzcGFjZSBrZXkuXCIsY29kZTo1MTA0fSxVU0VSX0RJU0NPTk5FQ1RFRDp7bWVzc2FnZTpcIlVzZXIgZGlzY29ubmVjdGVkLlwiLGNvZGU6NmUzfSxTRVNTSU9OX1NFVFRMRU1FTlRfRkFJTEVEOnttZXNzYWdlOlwiU2Vzc2lvbiBzZXR0bGVtZW50IGZhaWxlZC5cIixjb2RlOjdlM30sV0NfTUVUSE9EX1VOU1VQUE9SVEVEOnttZXNzYWdlOlwiVW5zdXBwb3J0ZWQgd2NfIG1ldGhvZC5cIixjb2RlOjEwMDAxfX0sU289e05PVF9JTklUSUFMSVpFRDp7bWVzc2FnZTpcIk5vdCBpbml0aWFsaXplZC5cIixjb2RlOjF9LE5PX01BVENISU5HX0tFWTp7bWVzc2FnZTpcIk5vIG1hdGNoaW5nIGtleS5cIixjb2RlOjJ9LFJFU1RPUkVfV0lMTF9PVkVSUklERTp7bWVzc2FnZTpcIlJlc3RvcmUgd2lsbCBvdmVycmlkZS5cIixjb2RlOjN9LFJFU1VCU0NSSUJFRDp7bWVzc2FnZTpcIlJlc3Vic2NyaWJlZC5cIixjb2RlOjR9LE1JU1NJTkdfT1JfSU5WQUxJRDp7bWVzc2FnZTpcIk1pc3Npbmcgb3IgaW52YWxpZC5cIixjb2RlOjV9LEVYUElSRUQ6e21lc3NhZ2U6XCJFeHBpcmVkLlwiLGNvZGU6Nn0sVU5LTk9XTl9UWVBFOnttZXNzYWdlOlwiVW5rbm93biB0eXBlLlwiLGNvZGU6N30sTUlTTUFUQ0hFRF9UT1BJQzp7bWVzc2FnZTpcIk1pc21hdGNoZWQgdG9waWMuXCIsY29kZTo4fSxOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTOnttZXNzYWdlOlwiTm9uIGNvbmZvcm1pbmcgbmFtZXNwYWNlcy5cIixjb2RlOjl9fTtmdW5jdGlvbiB4ZShlLHQpe2NvbnN0e21lc3NhZ2U6cixjb2RlOml9PVNvW2VdO3JldHVybnttZXNzYWdlOnQ/YCR7cn0gJHt0fWA6cixjb2RlOml9fWZ1bmN0aW9uIGVyKGUsdCl7Y29uc3R7bWVzc2FnZTpyLGNvZGU6aX09RW9bZV07cmV0dXJue21lc3NhZ2U6dD9gJHtyfSAke3R9YDpyLGNvZGU6aX19ZnVuY3Rpb24gTnIoZSx0KXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT90eXBlb2YgdDxcInVcIiYmZS5sZW5ndGg/ZS5ldmVyeSh0KTohMDohMX1mdW5jdGlvbiBYcihlKXtyZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKGUpPT09T2JqZWN0LnByb3RvdHlwZSYmT2JqZWN0LmtleXMoZSkubGVuZ3RofWZ1bmN0aW9uIFBlKGUpe3JldHVybiB0eXBlb2YgZT5cInVcIn1mdW5jdGlvbiBZdChlLHQpe3JldHVybiB0JiZQZShlKT8hMDp0eXBlb2YgZT09XCJzdHJpbmdcIiYmISFlLnRyaW0oKS5sZW5ndGh9ZnVuY3Rpb24gJHIoZSx0KXtyZXR1cm4gdCYmUGUoZSk/ITA6dHlwZW9mIGU9PVwibnVtYmVyXCImJiFpc05hTihlKX1mdW5jdGlvbiBoaChlLHQpe2NvbnN0e3JlcXVpcmVkTmFtZXNwYWNlczpyfT10LGk9T2JqZWN0LmtleXMoZS5uYW1lc3BhY2VzKSxuPU9iamVjdC5rZXlzKHIpO2xldCBvPSEwO3JldHVybiBfZShuLGkpPyhpLmZvckVhY2goaD0+e2NvbnN0e2FjY291bnRzOnAsbWV0aG9kczpBLGV2ZW50czp2fT1lLm5hbWVzcGFjZXNbaF0sdz10cihwKSx5PXJbaF07KCFfZShPcihoLHkpLHcpfHwhX2UoeS5tZXRob2RzLEEpfHwhX2UoeS5ldmVudHMsdikpJiYobz0hMSl9KSxvKTohMX1mdW5jdGlvbiBfcihlKXtyZXR1cm4gWXQoZSwhMSkmJmUuaW5jbHVkZXMoXCI6XCIpP2Uuc3BsaXQoXCI6XCIpLmxlbmd0aD09PTI6ITF9ZnVuY3Rpb24gSW8oZSl7aWYoWXQoZSwhMSkmJmUuaW5jbHVkZXMoXCI6XCIpKXtjb25zdCB0PWUuc3BsaXQoXCI6XCIpO2lmKHQubGVuZ3RoPT09Myl7Y29uc3Qgcj10WzBdK1wiOlwiK3RbMV07cmV0dXJuISF0WzJdJiZfcihyKX19cmV0dXJuITF9ZnVuY3Rpb24gY2goZSl7ZnVuY3Rpb24gdChyKXt0cnl7cmV0dXJuIHR5cGVvZiBuZXcgVVJMKHIpPFwidVwifWNhdGNoe3JldHVybiExfX10cnl7aWYoWXQoZSwhMSkpe2lmKHQoZSkpcmV0dXJuITA7Y29uc3Qgcj14aShlKTtyZXR1cm4gdChyKX19Y2F0Y2h7fXJldHVybiExfWZ1bmN0aW9uIGxoKGUpe3ZhciB0O3JldHVybih0PWU/LnByb3Bvc2VyKT09bnVsbD92b2lkIDA6dC5wdWJsaWNLZXl9ZnVuY3Rpb24gZGgoZSl7cmV0dXJuIGU/LnRvcGljfWZ1bmN0aW9uIHBoKGUsdCl7bGV0IHI9bnVsbDtyZXR1cm4gWXQoZT8ucHVibGljS2V5LCExKXx8KHI9eGUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgJHt0fSBjb250cm9sbGVyIHB1YmxpYyBrZXkgc2hvdWxkIGJlIGEgc3RyaW5nYCkpLHJ9ZnVuY3Rpb24gYW4oZSl7bGV0IHQ9ITA7cmV0dXJuIE5yKGUpP2UubGVuZ3RoJiYodD1lLmV2ZXJ5KHI9Pll0KHIsITEpKSk6dD0hMSx0fWZ1bmN0aW9uIE5vKGUsdCxyKXtsZXQgaT1udWxsO3JldHVybiBOcih0KSYmdC5sZW5ndGg/dC5mb3JFYWNoKG49PntpfHxfcihuKXx8KGk9ZXIoXCJVTlNVUFBPUlRFRF9DSEFJTlNcIixgJHtyfSwgY2hhaW4gJHtufSBzaG91bGQgYmUgYSBzdHJpbmcgYW5kIGNvbmZvcm0gdG8gXCJuYW1lc3BhY2U6Y2hhaW5JZFwiIGZvcm1hdGApKX0pOl9yKGUpfHwoaT1lcihcIlVOU1VQUE9SVEVEX0NIQUlOU1wiLGAke3J9LCBjaGFpbnMgbXVzdCBiZSBkZWZpbmVkIGFzIFwibmFtZXNwYWNlOmNoYWluSWRcIiBlLmcuIFwiZWlwMTU1OjFcIjogey4uLn0gaW4gdGhlIG5hbWVzcGFjZSBrZXkgT1IgYXMgYW4gYXJyYXkgb2YgQ0FJUC0yIGNoYWluSWRzIGUuZy4gZWlwMTU1OiB7IGNoYWluczogW1wiZWlwMTU1OjFcIiwgXCJlaXAxNTU6NVwiXSB9YCkpLGl9ZnVuY3Rpb24gX28oZSx0LHIpe2xldCBpPW51bGw7cmV0dXJuIE9iamVjdC5lbnRyaWVzKGUpLmZvckVhY2goKFtuLG9dKT0+e2lmKGkpcmV0dXJuO2NvbnN0IGg9Tm8obixPcihuLG8pLGAke3R9ICR7cn1gKTtoJiYoaT1oKX0pLGl9ZnVuY3Rpb24gQm8oZSx0KXtsZXQgcj1udWxsO3JldHVybiBOcihlKT9lLmZvckVhY2goaT0+e3J8fElvKGkpfHwocj1lcihcIlVOU1VQUE9SVEVEX0FDQ09VTlRTXCIsYCR7dH0sIGFjY291bnQgJHtpfSBzaG91bGQgYmUgYSBzdHJpbmcgYW5kIGNvbmZvcm0gdG8gXCJuYW1lc3BhY2U6Y2hhaW5JZDphZGRyZXNzXCIgZm9ybWF0YCkpfSk6cj1lcihcIlVOU1VQUE9SVEVEX0FDQ09VTlRTXCIsYCR7dH0sIGFjY291bnRzIHNob3VsZCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzIGNvbmZvcm1pbmcgdG8gXCJuYW1lc3BhY2U6Y2hhaW5JZDphZGRyZXNzXCIgZm9ybWF0YCkscn1mdW5jdGlvbiBDbyhlLHQpe2xldCByPW51bGw7cmV0dXJuIE9iamVjdC52YWx1ZXMoZSkuZm9yRWFjaChpPT57aWYocilyZXR1cm47Y29uc3Qgbj1CbyhpPy5hY2NvdW50cyxgJHt0fSBuYW1lc3BhY2VgKTtuJiYocj1uKX0pLHJ9ZnVuY3Rpb24gUm8oZSx0KXtsZXQgcj1udWxsO3JldHVybiBhbihlPy5tZXRob2RzKT9hbihlPy5ldmVudHMpfHwocj1lcihcIlVOU1VQUE9SVEVEX0VWRU5UU1wiLGAke3R9LCBldmVudHMgc2hvdWxkIGJlIGFuIGFycmF5IG9mIHN0cmluZ3Mgb3IgZW1wdHkgYXJyYXkgZm9yIG5vIGV2ZW50c2ApKTpyPWVyKFwiVU5TVVBQT1JURURfTUVUSE9EU1wiLGAke3R9LCBtZXRob2RzIHNob3VsZCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzIG9yIGVtcHR5IGFycmF5IGZvciBubyBtZXRob2RzYCkscn1mdW5jdGlvbiB1bihlLHQpe2xldCByPW51bGw7cmV0dXJuIE9iamVjdC52YWx1ZXMoZSkuZm9yRWFjaChpPT57aWYocilyZXR1cm47Y29uc3Qgbj1SbyhpLGAke3R9LCBuYW1lc3BhY2VgKTtuJiYocj1uKX0pLHJ9ZnVuY3Rpb24gdmgoZSx0LHIpe2xldCBpPW51bGw7aWYoZSYmWHIoZSkpe2NvbnN0IG49dW4oZSx0KTtuJiYoaT1uKTtjb25zdCBvPV9vKGUsdCxyKTtvJiYoaT1vKX1lbHNlIGk9eGUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgJHt0fSwgJHtyfSBzaG91bGQgYmUgYW4gb2JqZWN0IHdpdGggZGF0YWApO3JldHVybiBpfWZ1bmN0aW9uIE9vKGUsdCl7bGV0IHI9bnVsbDtpZihlJiZYcihlKSl7Y29uc3QgaT11bihlLHQpO2kmJihyPWkpO2NvbnN0IG49Q28oZSx0KTtuJiYocj1uKX1lbHNlIHI9eGUoXCJNSVNTSU5HX09SX0lOVkFMSURcIixgJHt0fSwgbmFtZXNwYWNlcyBzaG91bGQgYmUgYW4gb2JqZWN0IHdpdGggZGF0YWApO3JldHVybiByfWZ1bmN0aW9uIFBvKGUpe3JldHVybiBZdChlLnByb3RvY29sLCEwKX1mdW5jdGlvbiBnaChlLHQpe2xldCByPSExO3JldHVybiB0JiYhZT9yPSEwOmUmJk5yKGUpJiZlLmxlbmd0aCYmZS5mb3JFYWNoKGk9PntyPVBvKGkpfSkscn1mdW5jdGlvbiBtaChlKXtyZXR1cm4gdHlwZW9mIGU9PVwibnVtYmVyXCJ9ZnVuY3Rpb24gQWgoZSl7cmV0dXJuIHR5cGVvZiBlPFwidVwiJiZ0eXBlb2YgZSE9PW51bGx9ZnVuY3Rpb24gYmgoZSl7cmV0dXJuISghZXx8dHlwZW9mIGUhPVwib2JqZWN0XCJ8fCFlLmNvZGV8fCEkcihlLmNvZGUsITEpfHwhZS5tZXNzYWdlfHwhWXQoZS5tZXNzYWdlLCExKSl9ZnVuY3Rpb24geWgoZSl7cmV0dXJuIShQZShlKXx8IVl0KGUubWV0aG9kLCExKSl9ZnVuY3Rpb24gd2goZSl7cmV0dXJuIShQZShlKXx8UGUoZS5yZXN1bHQpJiZQZShlLmVycm9yKXx8ISRyKGUuaWQsITEpfHwhWXQoZS5qc29ucnBjLCExKSl9ZnVuY3Rpb24geGgoZSl7cmV0dXJuIShQZShlKXx8IVl0KGUubmFtZSwhMSkpfWZ1bmN0aW9uIE1oKGUsdCl7cmV0dXJuISghX3IodCl8fCFibyhlKS5pbmNsdWRlcyh0KSl9ZnVuY3Rpb24gRWgoZSx0LHIpe3JldHVybiBZdChyLCExKT95byhlLHQpLmluY2x1ZGVzKHIpOiExfWZ1bmN0aW9uIFNoKGUsdCxyKXtyZXR1cm4gWXQociwhMSk/d28oZSx0KS5pbmNsdWRlcyhyKTohMX1mdW5jdGlvbiBUbyhlLHQscil7bGV0IGk9bnVsbDtjb25zdCBuPUloKGUpLG89TmgodCksaD1PYmplY3Qua2V5cyhuKSxwPU9iamVjdC5rZXlzKG8pLEE9RG8oT2JqZWN0LmtleXMoZSkpLHY9RG8oT2JqZWN0LmtleXModCkpLHc9QS5maWx0ZXIoeT0+IXYuaW5jbHVkZXMoeSkpO3JldHVybiB3Lmxlbmd0aCYmKGk9eGUoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7cn0gbmFtZXNwYWNlcyBrZXlzIGRvbid0IHNhdGlzZnkgcmVxdWlyZWROYW1lc3BhY2VzLlxuICAgICAgUmVxdWlyZWQ6ICR7dy50b1N0cmluZygpfVxuICAgICAgUmVjZWl2ZWQ6ICR7T2JqZWN0LmtleXModCkudG9TdHJpbmcoKX1gKSksX2UoaCxwKXx8KGk9eGUoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7cn0gbmFtZXNwYWNlcyBjaGFpbnMgZG9uJ3Qgc2F0aXNmeSByZXF1aXJlZCBuYW1lc3BhY2VzLlxuICAgICAgUmVxdWlyZWQ6ICR7aC50b1N0cmluZygpfVxuICAgICAgQXBwcm92ZWQ6ICR7cC50b1N0cmluZygpfWApKSxPYmplY3Qua2V5cyh0KS5mb3JFYWNoKHk9PntpZigheS5pbmNsdWRlcyhcIjpcIil8fGkpcmV0dXJuO2NvbnN0IFM9dHIodFt5XS5hY2NvdW50cyk7Uy5pbmNsdWRlcyh5KXx8KGk9eGUoXCJOT05fQ09ORk9STUlOR19OQU1FU1BBQ0VTXCIsYCR7cn0gbmFtZXNwYWNlcyBhY2NvdW50cyBkb24ndCBzYXRpc2Z5IG5hbWVzcGFjZSBhY2NvdW50cyBmb3IgJHt5fVxuICAgICAgICBSZXF1aXJlZDogJHt5fVxuICAgICAgICBBcHByb3ZlZDogJHtTLnRvU3RyaW5nKCl9YCkpfSksaC5mb3JFYWNoKHk9PntpfHwoX2Uoblt5XS5tZXRob2RzLG9beV0ubWV0aG9kcyk/X2Uoblt5XS5ldmVudHMsb1t5XS5ldmVudHMpfHwoaT14ZShcIk5PTl9DT05GT1JNSU5HX05BTUVTUEFDRVNcIixgJHtyfSBuYW1lc3BhY2VzIGV2ZW50cyBkb24ndCBzYXRpc2Z5IG5hbWVzcGFjZSBldmVudHMgZm9yICR7eX1gKSk6aT14ZShcIk5PTl9DT05GT1JNSU5HX05BTUVTUEFDRVNcIixgJHtyfSBuYW1lc3BhY2VzIG1ldGhvZHMgZG9uJ3Qgc2F0aXNmeSBuYW1lc3BhY2UgbWV0aG9kcyBmb3IgJHt5fWApKX0pLGl9ZnVuY3Rpb24gSWgoZSl7Y29uc3QgdD17fTtyZXR1cm4gT2JqZWN0LmtleXMoZSkuZm9yRWFjaChyPT57dmFyIGk7ci5pbmNsdWRlcyhcIjpcIik/dFtyXT1lW3JdOihpPWVbcl0uY2hhaW5zKT09bnVsbHx8aS5mb3JFYWNoKG49Pnt0W25dPXttZXRob2RzOmVbcl0ubWV0aG9kcyxldmVudHM6ZVtyXS5ldmVudHN9fSl9KSx0fWZ1bmN0aW9uIERvKGUpe3JldHVyblsuLi5uZXcgU2V0KGUubWFwKHQ9PnQuaW5jbHVkZXMoXCI6XCIpP3Quc3BsaXQoXCI6XCIpWzBdOnQpKV19ZnVuY3Rpb24gTmgoZSl7Y29uc3QgdD17fTtyZXR1cm4gT2JqZWN0LmtleXMoZSkuZm9yRWFjaChyPT57aWYoci5pbmNsdWRlcyhcIjpcIikpdFtyXT1lW3JdO2Vsc2V7Y29uc3QgaT10cihlW3JdLmFjY291bnRzKTtpPy5mb3JFYWNoKG49Pnt0W25dPXthY2NvdW50czplW3JdLmFjY291bnRzLmZpbHRlcihvPT5vLmluY2x1ZGVzKGAke259OmApKSxtZXRob2RzOmVbcl0ubWV0aG9kcyxldmVudHM6ZVtyXS5ldmVudHN9fSl9fSksdH1mdW5jdGlvbiBfaChlLHQpe3JldHVybiAkcihlLCExKSYmZTw9dC5tYXgmJmU+PXQubWlufWZ1bmN0aW9uIEJoKCl7Y29uc3QgZT1XZSgpO3JldHVybiBuZXcgUHJvbWlzZSh0PT57c3dpdGNoKGUpe2Nhc2UgcXQuYnJvd3Nlcjp0KEZvKCkpO2JyZWFrO2Nhc2UgcXQucmVhY3ROYXRpdmU6dChVbygpKTticmVhaztjYXNlIHF0Lm5vZGU6dChrbygpKTticmVhaztkZWZhdWx0OnQoITApfX0pfWZ1bmN0aW9uIEZvKCl7cmV0dXJuIGdyKCkmJm5hdmlnYXRvcj8ub25MaW5lfWFzeW5jIGZ1bmN0aW9uIFVvKCl7aWYocnIoKSYmdHlwZW9mIGdsb2JhbDxcInVcIiYmZ2xvYmFsIT1udWxsJiZnbG9iYWwuTmV0SW5mbyl7Y29uc3QgZT1hd2FpdChnbG9iYWw9PW51bGw/dm9pZCAwOmdsb2JhbC5OZXRJbmZvLmZldGNoKCkpO3JldHVybiBlPy5pc0Nvbm5lY3RlZH1yZXR1cm4hMH1mdW5jdGlvbiBrbygpe3JldHVybiEwfWZ1bmN0aW9uIENoKGUpe3N3aXRjaChXZSgpKXtjYXNlIHF0LmJyb3dzZXI6cW8oZSk7YnJlYWs7Y2FzZSBxdC5yZWFjdE5hdGl2ZTpLbyhlKTticmVhaztjYXNlIHF0Lm5vZGU6YnJlYWt9fWZ1bmN0aW9uIHFvKGUpeyFycigpJiZncigpJiYod2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwoKT0+ZSghMCkpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib2ZmbGluZVwiLCgpPT5lKCExKSkpfWZ1bmN0aW9uIEtvKGUpe3JyKCkmJnR5cGVvZiBnbG9iYWw8XCJ1XCImJmdsb2JhbCE9bnVsbCYmZ2xvYmFsLk5ldEluZm8mJmdsb2JhbD8uTmV0SW5mby5hZGRFdmVudExpc3RlbmVyKHQ9PmUodD8uaXNDb25uZWN0ZWQpKX1jb25zdCBobj17fTtjbGFzcyBSaHtzdGF0aWMgZ2V0KHQpe3JldHVybiBoblt0XX1zdGF0aWMgc2V0KHQscil7aG5bdF09cn1zdGF0aWMgZGVsZXRlKHQpe2RlbGV0ZSBoblt0XX19ZXhwb3J0e1ppIGFzIEJBU0UxMCxMdCBhcyBCQVNFMTYsdG4gYXMgQkFTRTY0LEl1IGFzIEJBU0U2NFVSTCxycyBhcyBDT0xPTixBaSBhcyBERUZBVUxUX0RFUFRILFByIGFzIEVNUFRZX1NQQUNFLHF0IGFzIEVOVl9NQVAsU28gYXMgSU5URVJOQUxfRVJST1JTLFJoIGFzIE1lbW9yeVN0b3JlLGlzIGFzIE9ORV9USE9VU0FORCxObiBhcyBSRUFDVF9OQVRJVkVfUFJPRFVDVCx1byBhcyBSRUxBWUVSX0RFRkFVTFRfUFJPVE9DT0wsRW8gYXMgU0RLX0VSUk9SUyxCbiBhcyBTREtfVFlQRSxfbiBhcyBTTEFTSCxlbiBhcyBUWVBFXzAscHIgYXMgVFlQRV8xLFNyIGFzIFRZUEVfMixkciBhcyBVVEY4LGlvIGFzIGFkZFJlc291cmNlVG9SZWNhcCxDbiBhcyBhcHBlbmRUb1F1ZXJ5U3RyaW5nLHVzIGFzIGFzc2VydFR5cGUsV2kgYXMgYXNzaWduQWJpbGl0eVRvQWN0aW9ucyxlbyBhcyBiYXNlNjREZWNvZGUsdG8gYXMgYmFzZTY0RW5jb2RlLGFoIGFzIGJ1aWxkQXBwcm92ZWROYW1lc3BhY2VzLEF1IGFzIGJ1aWxkQXV0aE9iamVjdCx1aCBhcyBidWlsZE5hbWVzcGFjZXNGcm9tQXV0aCxmbyBhcyBidWlsZFJlY2FwU3RhdGVtZW50LHdzIGFzIGNhbGNFeHBpcnksdnMgYXMgY2FwaXRhbGl6ZSxGbiBhcyBjYXBpdGFsaXplV29yZCxncyBhcyBjcmVhdGVEZWxheWVkUHJvbWlzZSx4dSBhcyBjcmVhdGVFbmNvZGVkUmVjYXAsbXMgYXMgY3JlYXRlRXhwaXJpbmdQcm9taXNlLHJvIGFzIGNyZWF0ZVJlY2FwLE9lIGFzIGRlY29kZVJlY2FwLFplIGFzIGRlY29kZVR5cGVCeXRlLEZ1IGFzIGRlY29kZVR5cGVUd29FbnZlbG9wZSxEdSBhcyBkZWNyeXB0LEN1IGFzIGRlcml2ZVN5bUtleSxXciBhcyBkZXNlcmlhbGl6ZSxZciBhcyBlbmNvZGVSZWNhcCxubiBhcyBlbmNvZGVUeXBlQnl0ZSxUdSBhcyBlbmNvZGVUeXBlVHdvRW52ZWxvcGUsUHUgYXMgZW5jcnlwdCxNcyBhcyBlbmdpbmVFdmVudCxwcyBhcyBlbnVtaWZ5LHluIGFzIGZvcm1hdEFjY291bnRJZCxZbyBhcyBmb3JtYXRBY2NvdW50V2l0aENoYWluLGJuIGFzIGZvcm1hdENoYWluSWQsVW4gYXMgZm9ybWF0RGVlcGxpbmtVcmwseWkgYXMgZm9ybWF0RXhwaXJlclRhcmdldCxicyBhcyBmb3JtYXRJZFRhcmdldCxXZiBhcyBmb3JtYXRNZXNzYWdlLGhzIGFzIGZvcm1hdE1lc3NhZ2VDb250ZXh0LGdvIGFzIGZvcm1hdFJlbGF5UGFyYW1zLHNzIGFzIGZvcm1hdFJlbGF5UnBjVXJsLCRpIGFzIGZvcm1hdFN0YXRlbWVudEZyb21SZWNhcCxBcyBhcyBmb3JtYXRUb3BpY1RhcmdldCxQbiBhcyBmb3JtYXRVQSwkdSBhcyBmb3JtYXRVcmkseGkgYXMgZnJvbUJhc2U2NCxfdSBhcyBnZW5lcmF0ZUtleVBhaXIsQnUgYXMgZ2VuZXJhdGVSYW5kb21CeXRlczMyLHRyIGFzIGdldEFjY291bnRzQ2hhaW5zLFdvIGFzIGdldEFjY291bnRzRnJvbU5hbWVzcGFjZXMsd24gYXMgZ2V0QWRkcmVzc0Zyb21BY2NvdW50LFZvIGFzIGdldEFkZHJlc3Nlc0Zyb21BY2NvdW50cyxmcyBhcyBnZXRBcHBNZXRhZGF0YSxGbyBhcyBnZXRCcm93c2VyT25saW5lU3RhdHVzLG5zIGFzIGdldEJ1bmRsZUlkLHhuIGFzIGdldENoYWluRnJvbUFjY291bnQsTW4gYXMgZ2V0Q2hhaW5zRnJvbUFjY291bnRzLE9yIGFzIGdldENoYWluc0Zyb21OYW1lc3BhY2UsWG8gYXMgZ2V0Q2hhaW5zRnJvbU5hbWVzcGFjZXMsU3UgYXMgZ2V0Q2hhaW5zRnJvbVJlY2FwLCRvIGFzIGdldENoYWluc0Zyb21SZXF1aXJlZE5hbWVzcGFjZXMsd2kgYXMgZ2V0Q29tbW9uVmFsdWVzSW5BcnJheXMsYW8gYXMgZ2V0Q3J5cHRvS2V5RnJvbUtleURhdGEsWGYgYXMgZ2V0RGVjb2RlZFJlY2FwRnJvbVJlc291cmNlcyxTcyBhcyBnZXREZWVwTGluayxWaSBhcyBnZXREaWRBZGRyZXNzLEdyIGFzIGdldERpZEFkZHJlc3NTZWdtZW50cyxZaSBhcyBnZXREaWRDaGFpbklkLFdlIGFzIGdldEVudmlyb25tZW50LGFzIGFzIGdldEh0dHBVcmwseGUgYXMgZ2V0SW50ZXJuYWxFcnJvcixPbiBhcyBnZXRKYXZhc2NyaXB0SUQsUm4gYXMgZ2V0SmF2YXNjcmlwdE9TLERuIGFzIGdldExhc3RJdGVtcyxadSBhcyBnZXRMaW5rTW9kZVVSTCxFdSBhcyBnZXRNZXRob2RzRnJvbVJlY2FwLGd1IGFzIGdldE5hbWVzcGFjZWREaWRDaGFpbklkLGJvIGFzIGdldE5hbWVzcGFjZXNDaGFpbnMsd28gYXMgZ2V0TmFtZXNwYWNlc0V2ZW50c0ZvckNoYWluSWQsTW8gYXMgZ2V0TmFtZXNwYWNlc0Zyb21BY2NvdW50cyx5byBhcyBnZXROYW1lc3BhY2VzTWV0aG9kc0ZvckNoYWluSWQsa28gYXMgZ2V0Tm9kZU9ubGluZVN0YXR1cyxaZiBhcyBnZXRSZUNhcEFjdGlvbnMsVW8gYXMgZ2V0UmVhY3ROYXRpdmVPbmxpbmVTdGF0dXMsd3UgYXMgZ2V0UmVjYXBBYmlsaXRpZXNGcm9tUmVzb3VyY2UsVnIgYXMgZ2V0UmVjYXBGcm9tUmVzb3VyY2VzLCRmIGFzIGdldFJlY2FwUmVzb3VyY2Usb3MgYXMgZ2V0UmVsYXlDbGllbnRNZXRhZGF0YSxqdSBhcyBnZXRSZWxheVByb3RvY29sQXBpLHp1IGFzIGdldFJlbGF5UHJvdG9jb2xOYW1lLHNoIGFzIGdldFJlcXVpcmVkTmFtZXNwYWNlc0Zyb21OYW1lc3BhY2VzLGVyIGFzIGdldFNka0Vycm9yLElzIGFzIGdldFNlYXJjaFBhcmFtRnJvbVVSTCxtaSBhcyBnZXRVbmlxdWVWYWx1ZXMsRXMgYXMgaGFuZGxlRGVlcGxpbmtSZWRpcmVjdCxfZSBhcyBoYXNPdmVybGFwLFJ1IGFzIGhhc2hLZXksT3UgYXMgaGFzaE1lc3NhZ2UsZ3IgYXMgaXNCcm93c2VyLG9uIGFzIGlzQ2FpcE5hbWVzcGFjZSxUbyBhcyBpc0NvbmZvcm1pbmdOYW1lc3BhY2VzLHhzIGFzIGlzRXhwaXJlZCxiaSBhcyBpc05vZGUsQmggYXMgaXNPbmxpbmUsbGggYXMgaXNQcm9wb3NhbFN0cnVjdCxyciBhcyBpc1JlYWN0TmF0aXZlLFhpIGFzIGlzUmVjYXAsaGggYXMgaXNTZXNzaW9uQ29tcGF0aWJsZSxkaCBhcyBpc1Nlc3Npb25TdHJ1Y3Qsa24gYXMgaXNUZWxlZ3JhbSxfcyBhcyBpc1Rlc3RSdW4sa3UgYXMgaXNUeXBlT25lRW52ZWxvcGUscXUgYXMgaXNUeXBlVHdvRW52ZWxvcGUsUGUgYXMgaXNVbmRlZmluZWQsSW8gYXMgaXNWYWxpZEFjY291bnRJZCxCbyBhcyBpc1ZhbGlkQWNjb3VudHMsUm8gYXMgaXNWYWxpZEFjdGlvbnMsTnIgYXMgaXNWYWxpZEFycmF5LF9yIGFzIGlzVmFsaWRDaGFpbklkLE5vIGFzIGlzVmFsaWRDaGFpbnMscGggYXMgaXNWYWxpZENvbnRyb2xsZXIsSmYgYXMgaXNWYWxpZEVpcDEyNzFTaWduYXR1cmUsUWYgYXMgaXNWYWxpZEVpcDE5MVNpZ25hdHVyZSxiaCBhcyBpc1ZhbGlkRXJyb3JSZWFzb24seGggYXMgaXNWYWxpZEV2ZW50LG1oIGFzIGlzVmFsaWRJZCxDbyBhcyBpc1ZhbGlkTmFtZXNwYWNlQWNjb3VudHMsdW4gYXMgaXNWYWxpZE5hbWVzcGFjZUFjdGlvbnMsX28gYXMgaXNWYWxpZE5hbWVzcGFjZUNoYWlucyxhbiBhcyBpc1ZhbGlkTmFtZXNwYWNlTWV0aG9kc09yRXZlbnRzLE9vIGFzIGlzVmFsaWROYW1lc3BhY2VzLE1oIGFzIGlzVmFsaWROYW1lc3BhY2VzQ2hhaW5JZCxTaCBhcyBpc1ZhbGlkTmFtZXNwYWNlc0V2ZW50LEVoIGFzIGlzVmFsaWROYW1lc3BhY2VzUmVxdWVzdCwkciBhcyBpc1ZhbGlkTnVtYmVyLFhyIGFzIGlzVmFsaWRPYmplY3QsQWggYXMgaXNWYWxpZFBhcmFtcyxnZSBhcyBpc1ZhbGlkUmVjYXAsUG8gYXMgaXNWYWxpZFJlbGF5LGdoIGFzIGlzVmFsaWRSZWxheXMseWggYXMgaXNWYWxpZFJlcXVlc3QsX2ggYXMgaXNWYWxpZFJlcXVlc3RFeHBpcnksdmggYXMgaXNWYWxpZFJlcXVpcmVkTmFtZXNwYWNlcyx3aCBhcyBpc1ZhbGlkUmVzcG9uc2UsWXQgYXMgaXNWYWxpZFN0cmluZyxjaCBhcyBpc1ZhbGlkVXJsLGRzIGFzIG1hcEVudHJpZXMsY3MgYXMgbWFwVG9PYmosbWUgYXMgbWVyZ2VBcnJheXMsTXUgYXMgbWVyZ2VFbmNvZGVkUmVjYXBzLG5vIGFzIG1lcmdlUmVjYXBzLHNuIGFzIG5vcm1hbGl6ZU5hbWVzcGFjZXMsbHMgYXMgb2JqVG9NYXAsZ2kgYXMgcGFyc2VBY2NvdW50SWQsQW4gYXMgcGFyc2VDaGFpbklkLFRuIGFzIHBhcnNlQ29udGV4dE5hbWVzLHlzIGFzIHBhcnNlRXhwaXJlclRhcmdldCx4byBhcyBwYXJzZU5hbWVzcGFjZUtleSxwbyBhcyBwYXJzZVJlbGF5UGFyYW1zLHZvIGFzIHBhcnNlVG9waWMsWHUgYXMgcGFyc2VVcmksYnUgYXMgcG9wdWxhdGVBdXRoUGF5bG9hZCx5dSBhcyByZWNhcEhhc1Jlc291cmNlLGZuIGFzIHNlcmlhbGl6ZSxxbyBhcyBzdWJzY3JpYmVUb0Jyb3dzZXJOZXR3b3JrQ2hhbmdlLENoIGFzIHN1YnNjcmliZVRvTmV0d29ya0NoYW5nZSxLbyBhcyBzdWJzY3JpYmVUb1JlYWN0TmF0aXZlTmV0d29ya0NoYW5nZSxxbiBhcyB0b0Jhc2U2NCxOcyBhcyB1dWlkdjQsVXUgYXMgdmFsaWRhdGVEZWNvZGluZyxzbyBhcyB2YWxpZGF0ZUVuY29kaW5nLG11IGFzIHZhbGlkYXRlU2lnbmVkQ2FjYW8sTHUgYXMgdmVyaWZ5UDI1Nkp3dCxqZiBhcyB2ZXJpZnlTaWduYXR1cmV9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiZGV0ZWN0IiwiSG8iLCJ0b01pbGlzZWNvbmRzIiwiZGkiLCJGSVZFX01JTlVURVMiLCJjbiIsImZyb21NaWxpc2Vjb25kcyIsIkxvIiwiZ2V0RG9jdW1lbnQiLCJwaSIsImdldE5hdmlnYXRvciIsImxuIiwiZ2V0TG9jYXRpb24iLCJkbiIsImdldFdpbmRvd01ldGFkYXRhIiwiem8iLCJCciIsIkNoYUNoYTIwUG9seTEzMDUiLCJwbiIsIkhLREYiLCJqbyIsInJhbmRvbUJ5dGVzIiwiQ3IiLCJTSEEyNTYiLCJ2biIsImhhc2giLCJnbiIsIm1uIiwidG9TdHJpbmciLCJRdCIsImZyb21TdHJpbmciLCJYdCIsImNvbmNhdCIsInZpIiwiZWMiLCJRbyIsImRlY29kZUpXVCIsIkpvIiwiUkVMQVlfSlNPTlJQQyIsIkdvIiwiUnIiLCJBbiIsImUiLCJ0IiwiciIsInNwbGl0IiwibmFtZXNwYWNlIiwicmVmZXJlbmNlIiwiYm4iLCJqb2luIiwiZ2kiLCJpIiwiYWRkcmVzcyIsInluIiwibWkiLCJmb3JFYWNoIiwibiIsImluY2x1ZGVzIiwicHVzaCIsInduIiwieG4iLCJZbyIsIlZvIiwiTW4iLCJXbyIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJhY2NvdW50cyIsIlhvIiwiJG8iLCJPciIsImNoYWlucyIsIlpvIiwiZGVmaW5lUHJvcGVydHkiLCJFbiIsImdldE93blByb3BlcnR5U3ltYm9scyIsInRzIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJlcyIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiU24iLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIkluIiwiY2FsbCIsIk5uIiwicXQiLCJyZWFjdE5hdGl2ZSIsIm5vZGUiLCJicm93c2VyIiwidW5rbm93biIsIlByIiwicnMiLCJfbiIsIkFpIiwiaXMiLCJCbiIsImJpIiwicHJvY2VzcyIsInZlcnNpb25zIiwicnIiLCJuYXZpZ2F0b3IiLCJwcm9kdWN0IiwiZ3IiLCJXZSIsIm5zIiwiZ2xvYmFsIiwiQXBwbGljYXRpb24iLCJhcHBsaWNhdGlvbklkIiwiQ24iLCJwYXJzZSIsInN0cmluZ2lmeSIsImZzIiwibmFtZSIsImRlc2NyaXB0aW9uIiwidXJsIiwiaWNvbnMiLCJvcyIsInByb3RvY29sIiwidmVyc2lvbiIsImVudiIsImhvc3QiLCJSbiIsIlBsYXRmb3JtIiwiT1MiLCJWZXJzaW9uIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwidHlwZSIsIk9uIiwiUG4iLCJzcyIsInJlbGF5VXJsIiwic2RrVmVyc2lvbiIsImF1dGgiLCJwcm9qZWN0SWQiLCJvIiwidXNlT25DbG9zZUV2ZW50IiwiaCIsImJ1bmRsZUlkIiwicCIsIkEiLCJ2IiwidyIsInVhIiwib3JpZ2luIiwieSIsImFzIiwibWF0Y2giLCJ1cyIsIkVycm9yIiwiVG4iLCJEbiIsImhzIiwiX2UiLCJmaWx0ZXIiLCJzbGljZSIsIk1hdGgiLCJtYXgiLCJjcyIsImZyb21FbnRyaWVzIiwiZW50cmllcyIsImxzIiwiTWFwIiwiZHMiLCJwcyIsIkZuIiwidHJpbSIsInRvVXBwZXJDYXNlIiwidnMiLCJtYXAiLCJncyIsInJlc29sdmUiLCJjbGVhclRpbWVvdXQiLCJyZWplY3QiLCJkb25lIiwiUHJvbWlzZSIsInNldFRpbWVvdXQiLCJtcyIsInlpIiwic3RhcnRzV2l0aCIsIkFzIiwiYnMiLCJ5cyIsImlkIiwidG9waWMiLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJ3cyIsIkRhdGUiLCJub3ciLCJ4cyIsIk1zIiwibWUiLCJTZXQiLCJFcyIsIndjRGVlcExpbmsiLCJKU09OIiwiaHJlZiIsIlVuIiwiaGFzRm9jdXMiLCJjb25zb2xlIiwid2FybiIsIndpbmRvdyIsIm9wZW4iLCJrbiIsIkxpbmtpbmciLCJvcGVuVVJMIiwiZXJyb3IiLCJlbmRzV2l0aCIsInFuIiwiU3MiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwid2kiLCJJcyIsImluZGV4T2YiLCJOcyIsImNyeXB0byIsInJhbmRvbVVVSUQiLCJyYW5kb20iLCJfcyIsIklTX1ZJVEVTVCIsIlRlbGVncmFtV2Vidmlld1Byb3h5IiwiVGVsZWdyYW0iLCJUZWxlZ3JhbVdlYnZpZXdQcm94eVByb3RvIiwiQnVmZmVyIiwiZnJvbSIsInhpIiwiS24iLCJnbG9iYWxUaGlzIiwic2VsZiIsIkJzIiwiZGVmYXVsdCIsImFwcGx5IiwiYXJndW1lbnRzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0IiwiSG4iLCJleHBvcnRzIiwiSlNfU0hBM19OT19XSU5ET1ciLCJKU19TSEEzX05PX05PREVfSlMiLCJKU19TSEEzX05PX0NPTU1PTl9KUyIsIkpTX1NIQTNfTk9fQVJSQVlfQlVGRkVSIiwiQXJyYXlCdWZmZXIiLCJTIiwiTiIsIkkiLCJDIiwiRCIsIlUiLCJKIiwiQnQiLCJBcnJheSIsImlzQXJyYXkiLCJ1IiwiSlNfU0hBM19OT19BUlJBWV9CVUZGRVJfSVNfVklFVyIsImlzVmlldyIsImJ1ZmZlciIsImNvbnN0cnVjdG9yIiwiRyIsIkUiLCJfIiwiQiIsInMiLCJ1cGRhdGUiLCJIIiwiUiIsIkwiLCJGIiwiUCIsImYiLCJQdCIsIlciLCJSdCIsImNyZWF0ZSIsIlZ0IiwiWSIsImJ5dGVwYWQiLCJPIiwiV3QiLCJnIiwiYiIsInBhZGRpbmciLCJiaXRzIiwiY3JlYXRlTWV0aG9kIiwiYSIsImMiLCJkIiwibSIsIngiLCJNIiwibCIsImJsb2NrcyIsIm91dHB1dEJpdHMiLCJyZXNldCIsImZpbmFsaXplZCIsImJsb2NrIiwic3RhcnQiLCJibG9ja0NvdW50IiwiYnl0ZUNvdW50Iiwib3V0cHV0QmxvY2tzIiwiZXh0cmFCeXRlcyIsIlVpbnQ4QXJyYXkiLCJDdCIsIlQiLCJxIiwiY2hhckNvZGVBdCIsImxhc3RCeXRlSW5kZXgiLCJrIiwiZW5jb2RlIiwidW5zaGlmdCIsImVuY29kZVN0cmluZyIsImZpbmFsaXplIiwiaGV4IiwiYXJyYXlCdWZmZXIiLCJVaW50MzJBcnJheSIsImRpZ2VzdCIsImFycmF5IiwiVGUiLCJYIiwiJCIsIkRlIiwiWiIsInR0IiwiRmUiLCJldCIsInJ0IiwiVWUiLCJpdCIsIm50Iiwia2UiLCJmdCIsIm90IiwicWUiLCJzdCIsImF0IiwiS2UiLCJ1dCIsImh0IiwiSGUiLCJjdCIsImx0IiwiTGUiLCJkdCIsInB0IiwiemUiLCJ2dCIsImd0IiwiamUiLCJtdCIsIkF0IiwiUWUiLCJidCIsInl0IiwiSmUiLCJ3dCIsInh0IiwiR2UiLCJNdCIsIkV0IiwiWWUiLCJTdCIsIkl0IiwiVmUiLCJOdCIsIl90IiwiTWUiLCJFZSIsIlNlIiwiSWUiLCJOZSIsIkNzIiwiUnMiLCJMbiIsInpuIiwiVHIiLCJkZWJ1ZyIsImluZm8iLCJ3YXJuaW5nIiwib2ZmIiwiam4iLCJNaSIsIk9zIiwibm9ybWFsaXplIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwibWVzc2FnZSIsIlFuIiwiRWkiLCJERUJVRyIsIklORk8iLCJXQVJOSU5HIiwiRVJST1IiLCJPRkYiLCJyZSIsIlVOS05PV05fRVJST1IiLCJOT1RfSU1QTEVNRU5URUQiLCJVTlNVUFBPUlRFRF9PUEVSQVRJT04iLCJORVRXT1JLX0VSUk9SIiwiU0VSVkVSX0VSUk9SIiwiVElNRU9VVCIsIkJVRkZFUl9PVkVSUlVOIiwiTlVNRVJJQ19GQVVMVCIsIk1JU1NJTkdfTkVXIiwiSU5WQUxJRF9BUkdVTUVOVCIsIk1JU1NJTkdfQVJHVU1FTlQiLCJVTkVYUEVDVEVEX0FSR1VNRU5UIiwiQ0FMTF9FWENFUFRJT04iLCJJTlNVRkZJQ0lFTlRfRlVORFMiLCJOT05DRV9FWFBJUkVEIiwiUkVQTEFDRU1FTlRfVU5ERVJQUklDRUQiLCJVTlBSRURJQ1RBQkxFX0dBU19MSU1JVCIsIlRSQU5TQUNUSU9OX1JFUExBQ0VEIiwiQUNUSU9OX1JFSkVDVEVEIiwiSm4iLCJ6IiwiX2xvZyIsInRocm93QXJndW1lbnRFcnJvciIsImxvZyIsImxldmVscyIsIm1ha2VFcnJvciIsImVycm9ycyIsInJlYXNvbiIsImNvZGUiLCJ0aHJvd0Vycm9yIiwiYXJndW1lbnQiLCJhc3NlcnQiLCJhc3NlcnRBcmd1bWVudCIsImNoZWNrTm9ybWFsaXplIiwib3BlcmF0aW9uIiwiZm9ybSIsImNoZWNrU2FmZVVpbnQ1MyIsImZhdWx0IiwiY2hlY2tBcmd1bWVudENvdW50IiwiY291bnQiLCJleHBlY3RlZENvdW50IiwiY2hlY2tOZXciLCJjaGVja0Fic3RyYWN0IiwiZ2xvYmFsTG9nZ2VyIiwic2V0Q2Vuc29yc2hpcCIsInNldExvZ0xldmVsIiwiUHMiLCJUdCIsIkduIiwidG9IZXhTdHJpbmciLCJpciIsIlRzIiwiSnQiLCJuciIsIlluIiwiT3QiLCJwYXJzZUludCIsImFsbG93TWlzc2luZ1ByZWZpeCIsInN1YnN0cmluZyIsImhleFBhZCIsIkRzIiwicmVkdWNlIiwic2V0IiwiRnMiLCJTaSIsIkt0IiwiZmxvb3IiLCJVcyIsIlZuIiwib2UiLCJXbiIsIl92cyIsInJlY292ZXJ5UGFyYW0iLCJ5UGFyaXR5QW5kUyIsImNvbXBhY3QiLCJJaSIsImtlY2Nha18yNTYiLCJYbiIsImtzIiwicXMiLCJmcmVlemUiLCJfX3Byb3RvX18iLCJLcyIsInN1cGVyXyIsImlzQk4iLCJuZWdhdGl2ZSIsIndvcmRzIiwicmVkIiwiX2luaXQiLCJCTiIsIndvcmRTaXplIiwiY21wIiwibWluIiwiX2luaXROdW1iZXIiLCJfaW5pdEFycmF5IiwiX3BhcnNlSGV4IiwiX3BhcnNlQmFzZSIsInRvQXJyYXkiLCJjZWlsIiwiX3N0cmlwIiwiaW11bG4iLCJfaWFkZG4iLCJjb3B5IiwiX21vdmUiLCJjbG9uZSIsIl9leHBhbmQiLCJfbm9ybVNpZ24iLCJTeW1ib2wiLCJmb3IiLCJpbnNwZWN0IiwiaXNaZXJvIiwibW9kcm4iLCJpZGl2biIsInRvTnVtYmVyIiwidG9KU09OIiwidG9CdWZmZXIiLCJ0b0FycmF5TGlrZSIsImFsbG9jVW5zYWZlIiwiYnl0ZUxlbmd0aCIsIl90b0FycmF5TGlrZUxFIiwiX3RvQXJyYXlMaWtlQkUiLCJjbHozMiIsIl9jb3VudEJpdHMiLCJfemVyb0JpdHMiLCJiaXRMZW5ndGgiLCJ6ZXJvQml0cyIsInRvVHdvcyIsImFicyIsImlub3RuIiwiaWFkZG4iLCJmcm9tVHdvcyIsInRlc3RuIiwibm90biIsImluZWciLCJpc05lZyIsIm5lZyIsIml1b3IiLCJpb3IiLCJvciIsInVvciIsIml1YW5kIiwiaWFuZCIsImFuZCIsInVhbmQiLCJpdXhvciIsIml4b3IiLCJ4b3IiLCJ1eG9yIiwic2V0biIsImlhZGQiLCJpc3ViIiwiYWRkIiwic3ViIiwiaW11bCIsIlpyIiwidGkiLCJlaSIsInJpIiwiaWkiLCJuaSIsImZpIiwib2kiLCJzaSIsImFpIiwidWkiLCJoaSIsImNpIiwibGkiLCJtdWxUbyIsIm11bCIsIm11bGYiLCJtdWxuIiwic3FyIiwiaXNxciIsInBvdyIsIml1c2hsbiIsImlzaGxuIiwiaXVzaHJuIiwiaXNocm4iLCJzaGxuIiwidXNobG4iLCJzaHJuIiwidXNocm4iLCJpbWFza24iLCJtYXNrbiIsImlzdWJuIiwiYWRkbiIsInN1Ym4iLCJpYWJzIiwiX2lzaGxuc3VibXVsIiwiX3dvcmREaXYiLCJkaXYiLCJtb2QiLCJkaXZtb2QiLCJkaXZuIiwidW1vZCIsImRpdlJvdW5kIiwiYW5kbG4iLCJtb2RuIiwiZWdjZCIsImlzRXZlbiIsImlzT2RkIiwiZ2NkIiwiX2ludm1wIiwiY21wbiIsImludm0iLCJiaW5jbiIsInVjbXAiLCJndG4iLCJndGVuIiwiZ3RlIiwibHRuIiwibHRlbiIsImx0ZSIsImVxbiIsImVxIiwidG9SZWQiLCJjb252ZXJ0VG8iLCJfZm9yY2VSZWQiLCJmcm9tUmVkIiwiY29udmVydEZyb20iLCJmb3JjZVJlZCIsInJlZEFkZCIsInJlZElBZGQiLCJyZWRTdWIiLCJyZWRJU3ViIiwicmVkU2hsIiwic2hsIiwicmVkTXVsIiwiX3ZlcmlmeTIiLCJyZWRJTXVsIiwicmVkU3FyIiwiX3ZlcmlmeTEiLCJyZWRJU3FyIiwicmVkU3FydCIsInNxcnQiLCJyZWRJbnZtIiwicmVkTmVnIiwicmVkUG93IiwiazI1NiIsInAyMjQiLCJwMTkyIiwicDI1NTE5IiwidG1wIiwiX3RtcCIsImlyZWR1Y2UiLCJpbXVsSyIsInN0cmlwIiwiX3ByaW1lIiwicHJpbWUiLCJpbW9kIiwibW9udCIsInNoaWZ0IiwicjIiLCJyaW52IiwibWludiIsIksiLCIkbiIsIkRyIiwiQWUiLCJOaSIsIlpuIiwiSHMiLCJWIiwiaXNCaWdOdW1iZXIiLCJ0ZiIsIl9oZXgiLCJfaXNCaWdOdW1iZXIiLCJ6dCIsImoiLCIkdCIsImlzTmVnYXRpdmUiLCJtYXNrIiwic2hyIiwidG9CaWdJbnQiLCJCaWdJbnQiLCJtciIsIkxzIiwiSHQiLCJBciIsImVmIiwicmYiLCJuZiIsImJyIiwiX2kiLCJCaSIsImJlIiwidnIiLCJzaWduZWQiLCJ3aWR0aCIsImRlY2ltYWxzIiwiX211bHRpcGxpZXIiLCJVdCIsImZvcm1hdCIsIl92YWx1ZSIsIl9pc0ZpeGVkTnVtYmVyIiwiX2NoZWNrRm9ybWF0IiwiYWRkVW5zYWZlIiwiZnJvbVZhbHVlIiwic3ViVW5zYWZlIiwibXVsVW5zYWZlIiwiZGl2VW5zYWZlIiwiZmYiLCJ0b0Zvcm1hdCIsImNlaWxpbmciLCJyb3VuZCIsInpzIiwidG9VbnNhZmVGbG9hdCIsInBhcnNlRmxvYXQiLCJmcm9tQnl0ZXMiLCJpc0ZpeGVkTnVtYmVyIiwianMiLCJvZiIsIkZyIiwiY3VycmVudCIsIk5GQyIsIk5GRCIsIk5GS0MiLCJORktEIiwiZnIiLCJVTkVYUEVDVEVEX0NPTlRJTlVFIiwiQkFEX1BSRUZJWCIsIk9WRVJSVU4iLCJNSVNTSU5HX0NPTlRJTlVFIiwiT1VUX09GX1JBTkdFIiwiVVRGMTZfU1VSUk9HQVRFIiwiT1ZFUkxPTkciLCJRcyIsInNmIiwiSnMiLCJpZ25vcmUiLCJDaSIsIkdzIiwiUmkiLCJhZiIsInVmIiwiWXMiLCJhdG9iIiwiaGYiLCJWcyIsIldzIiwiWHMiLCIkcyIsIlpzIiwidDAiLCJjZiIsImUwIiwiVXIiLCJyMCIsIm4wIiwiZjAiLCJpMCIsImxmIiwiZmlsbCIsIm8wIiwic29ydCIsInNpemUiLCJicmFuY2hlcyIsInZhbGlkIiwiZmUwZiIsInNhdmUiLCJjaGVjayIsInMwIiwia3IiLCJhMCIsInUwIiwiZGYiLCJoMCIsImMwIiwieXIiLCJwZiIsImwwIiwiZDAiLCJsb2cxMCIsIkxOMTAiLCJPaSIsInZmIiwicDAiLCJ2MCIsImcwIiwid3IiLCJtMCIsIkEwIiwiYjAiLCJzZSIsIlEiLCJ4ciIsImdmIiwiZXF1YWwiLCJQaSIsInkwIiwidzAiLCJpbmhlcml0cyIsIngwIiwiTTAiLCJFMCIsIkFmIiwidG9IZXgiLCJtZiIsImh0b25sIiwiUzAiLCJiZiIsInRvSGV4MzIiLCJ6ZXJvMiIsInplcm84IiwiSTAiLCJqb2luMzIiLCJOMCIsInNwbGl0MzIiLCJfMCIsInJvdHIzMiIsIkIwIiwicm90bDMyIiwiQzAiLCJzdW0zMiIsIlIwIiwic3VtMzJfMyIsIk8wIiwic3VtMzJfNCIsIlAwIiwic3VtMzJfNSIsIlQwIiwic3VtNjQiLCJEMCIsInN1bTY0X2hpIiwiRjAiLCJzdW02NF9sbyIsIlUwIiwic3VtNjRfNF9oaSIsImswIiwic3VtNjRfNF9sbyIsInEwIiwic3VtNjRfNV9oaSIsIkswIiwic3VtNjRfNV9sbyIsIkgwIiwicm90cjY0X2hpIiwiTDAiLCJyb3RyNjRfbG8iLCJ6MCIsInNocjY0X2hpIiwiajAiLCJzaHI2NF9sbyIsInlmIiwiUTAiLCJxciIsInBlbmRpbmciLCJwZW5kaW5nVG90YWwiLCJibG9ja1NpemUiLCJvdXRTaXplIiwiaG1hY1N0cmVuZ3RoIiwicGFkTGVuZ3RoIiwiZW5kaWFuIiwiX2RlbHRhOCIsIl9kZWx0YTMyIiwiQmxvY2tIYXNoIiwiX3VwZGF0ZSIsIl9wYWQiLCJfZGlnZXN0Iiwic3IiLCJhZSIsIkowIiwidWUiLCJHMCIsIndmIiwiTWYiLCJ4ZiIsImZ0XzEiLCJjaDMyIiwibWFqMzIiLCJwMzIiLCJZMCIsInMwXzI1NiIsIlYwIiwiczFfMjU2IiwiVzAiLCJnMF8yNTYiLCJYMCIsImcxXzI1NiIsImFyIiwiJDAiLCJaMCIsIlRpIiwiTXIiLCJ0YSIsImVhIiwiRWYiLCJyYSIsImhlIiwiaWEiLCJ1ciIsIm5hIiwiaHIiLCJmYSIsImllIiwib2EiLCJzYSIsImFhIiwiaGEiLCJjYSIsImxhIiwiZGEiLCJTZiIsInBhIiwiY2UiLCJJZiIsIkRpIiwiTmYiLCJ5ZSIsInZhIiwianQiLCJnYSIsIm1hIiwibGUiLCJkZSIsIl9mIiwiQmYiLCJCZSIsIkZpIiwiVWkiLCJBYSIsImJhIiwieWEiLCJ3YSIsIkNmIiwieGEiLCJuZSIsIlJmIiwiX3ByZXBhcmVCbG9jayIsIlBhIiwiVGEiLCJSYSIsIk9hIiwiQmEiLCJDYSIsIk1hIiwiRWEiLCJOYSIsIl9hIiwiU2EiLCJJYSIsImtpIiwiT2YiLCJ3ZSIsIkRhIiwic2hhMSIsInNoYTIyNCIsInNoYTI1NiIsInNoYTM4NCIsInNoYTUxMiIsIlBmIiwiWGUiLCJGYSIsIktyIiwiVGYiLCJFciIsIkRmIiwiRmYiLCJwZSIsInJpcGVtZDE2MCIsIlVmIiwicWEiLCJVYSIsIkhhIiwiS2EiLCJrYSIsIkxhIiwiemEiLCJqYSIsImNyIiwiSGFzaCIsImlubmVyIiwib3V0ZXIiLCJRYSIsInV0aWxzIiwiY29tbW9uIiwic2hhIiwicmlwZW1kIiwiaG1hYyIsImxyIiwicGF0aCIsInJlcXVpcmUiLCJKYSIsInFpIiwia2YiLCJmZSIsIkd0IiwiZ2V0TkFGIiwiZ2V0SlNGIiwiY2FjaGVkUHJvcGVydHkiLCJwYXJzZUJ5dGVzIiwiaW50RnJvbUxFIiwiSHIiLCJHYSIsIkxyIiwiQ2UiLCJ6ZXJvIiwib25lIiwidHdvIiwicG9pbnRGcm9tSlNPTiIsImdSZWQiLCJfd25hZlQxIiwiX3duYWZUMiIsIl93bmFmVDMiLCJfd25hZlQ0IiwiX2JpdExlbmd0aCIsInJlZE4iLCJfbWF4d2VsbFRyaWNrIiwiJGUiLCJwb2ludCIsInZhbGlkYXRlIiwiX2ZpeGVkTmFmTXVsIiwicHJlY29tcHV0ZWQiLCJfZ2V0RG91YmxlcyIsInN0ZXAiLCJqcG9pbnQiLCJtaXhlZEFkZCIsInBvaW50cyIsInRvUCIsIl93bmFmTXVsIiwiX2dldE5BRlBvaW50cyIsInduZCIsImRibHAiLCJfd25hZk11bEFkZCIsInRvSiIsIlp0IiwiY3VydmUiLCJCYXNlUG9pbnQiLCJkZWNvZGVQb2ludCIsInBvaW50RnJvbVgiLCJlbmNvZGVDb21wcmVzc2VkIiwiX2VuY29kZSIsImdldFgiLCJnZXRZIiwicHJlY29tcHV0ZSIsImRvdWJsZXMiLCJuYWYiLCJiZXRhIiwiX2dldEJldGEiLCJfaGFzRG91YmxlcyIsImRibCIsIktpIiwiWWEiLCJ0ZSIsInRpbnYiLCJ6ZXJvQSIsInRocmVlQSIsImVuZG8iLCJfZ2V0RW5kb21vcnBoaXNtIiwiX2VuZG9XbmFmVDEiLCJfZW5kb1duYWZUMiIsIlZhIiwiX2dldEVuZG9Sb290cyIsImxhbWJkYSIsImJhc2lzIiwiX2dldEVuZG9CYXNpcyIsIl9lbmRvU3BsaXQiLCJrMSIsImsyIiwiaW5mIiwiX2VuZG9XbmFmTXVsQWRkIiwiRHQiLCJmcm9tSlNPTiIsImlzSW5maW5pdHkiLCJtdWxBZGQiLCJqbXVsQWRkIiwiRnQiLCJ6T25lIiwiX3plcm9EYmwiLCJfdGhyZWVEYmwiLCJfZGJsIiwidHJwbCIsImVxWFRvUCIsInpyIiwiYmFzZSIsInNob3J0IiwiZWR3YXJkcyIsImpyIiwiUHJlc2V0Q3VydmUiLCJjcmFzaCIsIlJlIiwicHJlZFJlc2lzdCIsIm91dExlbiIsIm1pbkVudHJvcHkiLCJfcmVzZWVkIiwicmVzZWVkSW50ZXJ2YWwiLCJlbnRyb3B5IiwiZW50cm9weUVuYyIsIm5vbmNlIiwibm9uY2VFbmMiLCJwZXJzIiwicGVyc0VuYyIsInFmIiwiX2htYWMiLCJyZXNlZWQiLCJnZW5lcmF0ZSIsIkhpIiwia3QiLCJwcml2IiwicHViIiwiX2ltcG9ydFByaXZhdGUiLCJwcml2RW5jIiwiX2ltcG9ydFB1YmxpYyIsInB1YkVuYyIsIkxpIiwiZnJvbVB1YmxpYyIsImZyb21Qcml2YXRlIiwiZ2V0UHVibGljIiwicmVzdWx0IiwiZ2V0UHJpdmF0ZSIsImRlcml2ZSIsInNpZ24iLCJ2ZXJpZnkiLCJXYSIsIlFyIiwiX2ltcG9ydERFUiIsIkpyIiwiWGEiLCJwbGFjZSIsInppIiwiS2YiLCJqaSIsIkxOMiIsInRvREVSIiwiJGEiLCJIZiIsImVlIiwibmgiLCJaYSIsImtleVBhaXIiLCJrZXlGcm9tUHJpdmF0ZSIsImtleUZyb21QdWJsaWMiLCJnZW5LZXlQYWlyIiwiX3RydW5jYXRlVG9OIiwiY2Fub25pY2FsIiwicmVjb3ZlclB1YktleSIsImdldEtleVJlY292ZXJ5UGFyYW0iLCJ0dSIsInJhbmQiLCJjdXJ2ZXMiLCJlZGRzYSIsImV1IiwicnUiLCJRaSIsIkppIiwidmUiLCJpdSIsInByaXZhdGVLZXkiLCJfYWRkUG9pbnQiLCJwdWJsaWNLZXkiLCJzaWduRGlnZXN0IiwiY29tcHV0ZVNoYXJlZFNlY3JldCIsIkxmIiwiaXNTaWduaW5nS2V5IiwiX2lzU2lnbmluZ0tleSIsIm51IiwiZnUiLCJ6ZiIsImxlZ2FjeSIsImVpcDI5MzAiLCJlaXAxNTU5Iiwib3UiLCJzdSIsImF1IiwiamYiLCJRZiIsIkpmIiwiZmV0Y2giLCJtZXRob2QiLCJib2R5IiwidXUiLCJqc29ucnBjIiwicGFyYW1zIiwidG8iLCJkYXRhIiwianNvbiIsImh1IiwiY3UiLCJkZWZpbmVQcm9wZXJ0aWVzIiwibHUiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiR2YiLCJkdSIsInB1IiwiWWYiLCJHaSIsIlZmIiwidnUiLCJHciIsIllpIiwiZ3UiLCJWaSIsInBvcCIsIm11IiwiY2FjYW8iLCJXZiIsImlzcyIsImRvbWFpbiIsImF1ZCIsInVyaSIsInN0YXRlbWVudCIsImlhdCIsImV4cCIsIm5iZiIsInJlcXVlc3RJZCIsInJlc291cmNlcyIsIlZyIiwiT2UiLCIkaSIsIkF1IiwiYnUiLCJhdXRoUGF5bG9hZCIsIm1ldGhvZHMiLCJYZiIsImdlIiwiJGYiLCJaZiIsIldpIiwiaW8iLCJZciIsImZvIiwiWGkiLCJ5dSIsImF0dCIsInd1IiwiZW8iLCJybyIsImxvY2FsZUNvbXBhcmUiLCJhc3NpZ24iLCJ4dSIsIk11Iiwibm8iLCJhYmlsaXR5IiwiYWN0aW9uIiwiRXUiLCJlaXAxNTUiLCJTdSIsInZhbHVlcyIsImZsYXQiLCJaaSIsIkx0IiwidG4iLCJJdSIsImRyIiwiZW4iLCJwciIsIlNyIiwiTnUiLCJvbyIsIklyIiwicm4iLCJfdSIsImdlbmVyYXRlS2V5UGFpciIsInNlY3JldEtleSIsIkJ1IiwiQ3UiLCJzaGFyZWRLZXkiLCJleHBhbmQiLCJSdSIsIk91Iiwibm4iLCJaZSIsIlB1Iiwic2VuZGVyUHVibGljS2V5IiwiaXYiLCJzeW1LZXkiLCJzZWFsIiwiZm4iLCJzZWFsZWQiLCJlbmNvZGluZyIsIlR1IiwiRHUiLCJXciIsImVuY29kZWQiLCJGdSIsIlV1Iiwic28iLCJyZWNlaXZlclB1YmxpY0tleSIsImt1IiwicXUiLCJhbyIsIkt1IiwicmVwZWF0IiwiSHUiLCJMdSIsInBheWxvYWQiLCJ1byIsInp1IiwicmVsYXkiLCJqdSIsIlF1IiwiSnUiLCJHdSIsImhvIiwiWXUiLCJWdSIsImNvIiwibG8iLCJXdSIsInBvIiwiWHUiLCJ2byIsImV4cGlyeVRpbWVzdGFtcCIsImdvIiwiJHUiLCJadSIsInRoIiwiZWgiLCJyaCIsIm1vIiwiaWgiLCJBbyIsImZoIiwib2giLCJ0ciIsImJvIiwieW8iLCJ3byIsImV2ZW50cyIsInNoIiwiT28iLCJhaCIsInByb3Bvc2FsIiwicmVxdWlyZWROYW1lc3BhY2VzIiwib3B0aW9uYWxOYW1lc3BhY2VzIiwic3VwcG9ydGVkTmFtZXNwYWNlcyIsInNuIiwic29tZSIsIlRvIiwib24iLCJ4byIsIlhyIiwiTW8iLCJ1aCIsIkVvIiwiSU5WQUxJRF9NRVRIT0QiLCJJTlZBTElEX0VWRU5UIiwiSU5WQUxJRF9VUERBVEVfUkVRVUVTVCIsIklOVkFMSURfRVhURU5EX1JFUVVFU1QiLCJJTlZBTElEX1NFU1NJT05fU0VUVExFX1JFUVVFU1QiLCJVTkFVVEhPUklaRURfTUVUSE9EIiwiVU5BVVRIT1JJWkVEX0VWRU5UIiwiVU5BVVRIT1JJWkVEX1VQREFURV9SRVFVRVNUIiwiVU5BVVRIT1JJWkVEX0VYVEVORF9SRVFVRVNUIiwiVVNFUl9SRUpFQ1RFRCIsIlVTRVJfUkVKRUNURURfQ0hBSU5TIiwiVVNFUl9SRUpFQ1RFRF9NRVRIT0RTIiwiVVNFUl9SRUpFQ1RFRF9FVkVOVFMiLCJVTlNVUFBPUlRFRF9DSEFJTlMiLCJVTlNVUFBPUlRFRF9NRVRIT0RTIiwiVU5TVVBQT1JURURfRVZFTlRTIiwiVU5TVVBQT1JURURfQUNDT1VOVFMiLCJVTlNVUFBPUlRFRF9OQU1FU1BBQ0VfS0VZIiwiVVNFUl9ESVNDT05ORUNURUQiLCJTRVNTSU9OX1NFVFRMRU1FTlRfRkFJTEVEIiwiV0NfTUVUSE9EX1VOU1VQUE9SVEVEIiwiU28iLCJOT1RfSU5JVElBTElaRUQiLCJOT19NQVRDSElOR19LRVkiLCJSRVNUT1JFX1dJTExfT1ZFUlJJREUiLCJSRVNVQlNDUklCRUQiLCJNSVNTSU5HX09SX0lOVkFMSUQiLCJFWFBJUkVEIiwiVU5LTk9XTl9UWVBFIiwiTUlTTUFUQ0hFRF9UT1BJQyIsIk5PTl9DT05GT1JNSU5HX05BTUVTUEFDRVMiLCJ4ZSIsImVyIiwiTnIiLCJldmVyeSIsImdldFByb3RvdHlwZU9mIiwiUGUiLCJZdCIsIiRyIiwiaXNOYU4iLCJoaCIsIm5hbWVzcGFjZXMiLCJfciIsIklvIiwiY2giLCJVUkwiLCJsaCIsInByb3Bvc2VyIiwiZGgiLCJwaCIsImFuIiwiTm8iLCJfbyIsIkJvIiwiQ28iLCJSbyIsInVuIiwidmgiLCJQbyIsImdoIiwibWgiLCJBaCIsImJoIiwieWgiLCJ3aCIsInhoIiwiTWgiLCJFaCIsIlNoIiwiSWgiLCJOaCIsIkRvIiwiX2giLCJCaCIsIkZvIiwiVW8iLCJrbyIsIm9uTGluZSIsIk5ldEluZm8iLCJpc0Nvbm5lY3RlZCIsIkNoIiwicW8iLCJLbyIsImFkZEV2ZW50TGlzdGVuZXIiLCJobiIsIlJoIiwiZGVsZXRlIiwiQkFTRTEwIiwiQkFTRTE2IiwiQkFTRTY0IiwiQkFTRTY0VVJMIiwiQ09MT04iLCJERUZBVUxUX0RFUFRIIiwiRU1QVFlfU1BBQ0UiLCJFTlZfTUFQIiwiSU5URVJOQUxfRVJST1JTIiwiTWVtb3J5U3RvcmUiLCJPTkVfVEhPVVNBTkQiLCJSRUFDVF9OQVRJVkVfUFJPRFVDVCIsIlJFTEFZRVJfREVGQVVMVF9QUk9UT0NPTCIsIlNES19FUlJPUlMiLCJTREtfVFlQRSIsIlNMQVNIIiwiVFlQRV8wIiwiVFlQRV8xIiwiVFlQRV8yIiwiVVRGOCIsImFkZFJlc291cmNlVG9SZWNhcCIsImFwcGVuZFRvUXVlcnlTdHJpbmciLCJhc3NlcnRUeXBlIiwiYXNzaWduQWJpbGl0eVRvQWN0aW9ucyIsImJhc2U2NERlY29kZSIsImJhc2U2NEVuY29kZSIsImJ1aWxkQXBwcm92ZWROYW1lc3BhY2VzIiwiYnVpbGRBdXRoT2JqZWN0IiwiYnVpbGROYW1lc3BhY2VzRnJvbUF1dGgiLCJidWlsZFJlY2FwU3RhdGVtZW50IiwiY2FsY0V4cGlyeSIsImNhcGl0YWxpemUiLCJjYXBpdGFsaXplV29yZCIsImNyZWF0ZURlbGF5ZWRQcm9taXNlIiwiY3JlYXRlRW5jb2RlZFJlY2FwIiwiY3JlYXRlRXhwaXJpbmdQcm9taXNlIiwiY3JlYXRlUmVjYXAiLCJkZWNvZGVSZWNhcCIsImRlY29kZVR5cGVCeXRlIiwiZGVjb2RlVHlwZVR3b0VudmVsb3BlIiwiZGVjcnlwdCIsImRlcml2ZVN5bUtleSIsImRlc2VyaWFsaXplIiwiZW5jb2RlUmVjYXAiLCJlbmNvZGVUeXBlQnl0ZSIsImVuY29kZVR5cGVUd29FbnZlbG9wZSIsImVuY3J5cHQiLCJlbmdpbmVFdmVudCIsImVudW1pZnkiLCJmb3JtYXRBY2NvdW50SWQiLCJmb3JtYXRBY2NvdW50V2l0aENoYWluIiwiZm9ybWF0Q2hhaW5JZCIsImZvcm1hdERlZXBsaW5rVXJsIiwiZm9ybWF0RXhwaXJlclRhcmdldCIsImZvcm1hdElkVGFyZ2V0IiwiZm9ybWF0TWVzc2FnZSIsImZvcm1hdE1lc3NhZ2VDb250ZXh0IiwiZm9ybWF0UmVsYXlQYXJhbXMiLCJmb3JtYXRSZWxheVJwY1VybCIsImZvcm1hdFN0YXRlbWVudEZyb21SZWNhcCIsImZvcm1hdFRvcGljVGFyZ2V0IiwiZm9ybWF0VUEiLCJmb3JtYXRVcmkiLCJmcm9tQmFzZTY0IiwiZ2VuZXJhdGVSYW5kb21CeXRlczMyIiwiZ2V0QWNjb3VudHNDaGFpbnMiLCJnZXRBY2NvdW50c0Zyb21OYW1lc3BhY2VzIiwiZ2V0QWRkcmVzc0Zyb21BY2NvdW50IiwiZ2V0QWRkcmVzc2VzRnJvbUFjY291bnRzIiwiZ2V0QXBwTWV0YWRhdGEiLCJnZXRCcm93c2VyT25saW5lU3RhdHVzIiwiZ2V0QnVuZGxlSWQiLCJnZXRDaGFpbkZyb21BY2NvdW50IiwiZ2V0Q2hhaW5zRnJvbUFjY291bnRzIiwiZ2V0Q2hhaW5zRnJvbU5hbWVzcGFjZSIsImdldENoYWluc0Zyb21OYW1lc3BhY2VzIiwiZ2V0Q2hhaW5zRnJvbVJlY2FwIiwiZ2V0Q2hhaW5zRnJvbVJlcXVpcmVkTmFtZXNwYWNlcyIsImdldENvbW1vblZhbHVlc0luQXJyYXlzIiwiZ2V0Q3J5cHRvS2V5RnJvbUtleURhdGEiLCJnZXREZWNvZGVkUmVjYXBGcm9tUmVzb3VyY2VzIiwiZ2V0RGVlcExpbmsiLCJnZXREaWRBZGRyZXNzIiwiZ2V0RGlkQWRkcmVzc1NlZ21lbnRzIiwiZ2V0RGlkQ2hhaW5JZCIsImdldEVudmlyb25tZW50IiwiZ2V0SHR0cFVybCIsImdldEludGVybmFsRXJyb3IiLCJnZXRKYXZhc2NyaXB0SUQiLCJnZXRKYXZhc2NyaXB0T1MiLCJnZXRMYXN0SXRlbXMiLCJnZXRMaW5rTW9kZVVSTCIsImdldE1ldGhvZHNGcm9tUmVjYXAiLCJnZXROYW1lc3BhY2VkRGlkQ2hhaW5JZCIsImdldE5hbWVzcGFjZXNDaGFpbnMiLCJnZXROYW1lc3BhY2VzRXZlbnRzRm9yQ2hhaW5JZCIsImdldE5hbWVzcGFjZXNGcm9tQWNjb3VudHMiLCJnZXROYW1lc3BhY2VzTWV0aG9kc0ZvckNoYWluSWQiLCJnZXROb2RlT25saW5lU3RhdHVzIiwiZ2V0UmVDYXBBY3Rpb25zIiwiZ2V0UmVhY3ROYXRpdmVPbmxpbmVTdGF0dXMiLCJnZXRSZWNhcEFiaWxpdGllc0Zyb21SZXNvdXJjZSIsImdldFJlY2FwRnJvbVJlc291cmNlcyIsImdldFJlY2FwUmVzb3VyY2UiLCJnZXRSZWxheUNsaWVudE1ldGFkYXRhIiwiZ2V0UmVsYXlQcm90b2NvbEFwaSIsImdldFJlbGF5UHJvdG9jb2xOYW1lIiwiZ2V0UmVxdWlyZWROYW1lc3BhY2VzRnJvbU5hbWVzcGFjZXMiLCJnZXRTZGtFcnJvciIsImdldFNlYXJjaFBhcmFtRnJvbVVSTCIsImdldFVuaXF1ZVZhbHVlcyIsImhhbmRsZURlZXBsaW5rUmVkaXJlY3QiLCJoYXNPdmVybGFwIiwiaGFzaEtleSIsImhhc2hNZXNzYWdlIiwiaXNCcm93c2VyIiwiaXNDYWlwTmFtZXNwYWNlIiwiaXNDb25mb3JtaW5nTmFtZXNwYWNlcyIsImlzRXhwaXJlZCIsImlzTm9kZSIsImlzT25saW5lIiwiaXNQcm9wb3NhbFN0cnVjdCIsImlzUmVhY3ROYXRpdmUiLCJpc1JlY2FwIiwiaXNTZXNzaW9uQ29tcGF0aWJsZSIsImlzU2Vzc2lvblN0cnVjdCIsImlzVGVsZWdyYW0iLCJpc1Rlc3RSdW4iLCJpc1R5cGVPbmVFbnZlbG9wZSIsImlzVHlwZVR3b0VudmVsb3BlIiwiaXNVbmRlZmluZWQiLCJpc1ZhbGlkQWNjb3VudElkIiwiaXNWYWxpZEFjY291bnRzIiwiaXNWYWxpZEFjdGlvbnMiLCJpc1ZhbGlkQXJyYXkiLCJpc1ZhbGlkQ2hhaW5JZCIsImlzVmFsaWRDaGFpbnMiLCJpc1ZhbGlkQ29udHJvbGxlciIsImlzVmFsaWRFaXAxMjcxU2lnbmF0dXJlIiwiaXNWYWxpZEVpcDE5MVNpZ25hdHVyZSIsImlzVmFsaWRFcnJvclJlYXNvbiIsImlzVmFsaWRFdmVudCIsImlzVmFsaWRJZCIsImlzVmFsaWROYW1lc3BhY2VBY2NvdW50cyIsImlzVmFsaWROYW1lc3BhY2VBY3Rpb25zIiwiaXNWYWxpZE5hbWVzcGFjZUNoYWlucyIsImlzVmFsaWROYW1lc3BhY2VNZXRob2RzT3JFdmVudHMiLCJpc1ZhbGlkTmFtZXNwYWNlcyIsImlzVmFsaWROYW1lc3BhY2VzQ2hhaW5JZCIsImlzVmFsaWROYW1lc3BhY2VzRXZlbnQiLCJpc1ZhbGlkTmFtZXNwYWNlc1JlcXVlc3QiLCJpc1ZhbGlkTnVtYmVyIiwiaXNWYWxpZE9iamVjdCIsImlzVmFsaWRQYXJhbXMiLCJpc1ZhbGlkUmVjYXAiLCJpc1ZhbGlkUmVsYXkiLCJpc1ZhbGlkUmVsYXlzIiwiaXNWYWxpZFJlcXVlc3QiLCJpc1ZhbGlkUmVxdWVzdEV4cGlyeSIsImlzVmFsaWRSZXF1aXJlZE5hbWVzcGFjZXMiLCJpc1ZhbGlkUmVzcG9uc2UiLCJpc1ZhbGlkU3RyaW5nIiwiaXNWYWxpZFVybCIsIm1hcEVudHJpZXMiLCJtYXBUb09iaiIsIm1lcmdlQXJyYXlzIiwibWVyZ2VFbmNvZGVkUmVjYXBzIiwibWVyZ2VSZWNhcHMiLCJub3JtYWxpemVOYW1lc3BhY2VzIiwib2JqVG9NYXAiLCJwYXJzZUFjY291bnRJZCIsInBhcnNlQ2hhaW5JZCIsInBhcnNlQ29udGV4dE5hbWVzIiwicGFyc2VFeHBpcmVyVGFyZ2V0IiwicGFyc2VOYW1lc3BhY2VLZXkiLCJwYXJzZVJlbGF5UGFyYW1zIiwicGFyc2VUb3BpYyIsInBhcnNlVXJpIiwicG9wdWxhdGVBdXRoUGF5bG9hZCIsInJlY2FwSGFzUmVzb3VyY2UiLCJzZXJpYWxpemUiLCJzdWJzY3JpYmVUb0Jyb3dzZXJOZXR3b3JrQ2hhbmdlIiwic3Vic2NyaWJlVG9OZXR3b3JrQ2hhbmdlIiwic3Vic2NyaWJlVG9SZWFjdE5hdGl2ZU5ldHdvcmtDaGFuZ2UiLCJ0b0Jhc2U2NCIsInV1aWR2NCIsInZhbGlkYXRlRGVjb2RpbmciLCJ2YWxpZGF0ZUVuY29kaW5nIiwidmFsaWRhdGVTaWduZWRDYWNhbyIsInZlcmlmeVAyNTZKd3QiLCJ2ZXJpZnlTaWduYXR1cmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (false) {}\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvd2luZG93LWdldHRlcnMvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHQSw4QkFBOEIsR0FBR0EsaUJBQWlCLEdBQUdBLHdCQUF3QixHQUFHQSxtQkFBbUIsR0FBR0EsMEJBQTBCLEdBQUdBLG9CQUFvQixHQUFHQSwyQkFBMkIsR0FBR0EsbUJBQW1CLEdBQUdBLDBCQUEwQixHQUFHQSw0QkFBNEIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUNqVSxTQUFTYSxjQUFjQyxJQUFJO0lBQ3ZCLElBQUlDLE1BQU1DO0lBQ1YsSUFBSSxLQUFvRSxFQUFFLEVBRXpFO0lBQ0QsT0FBT0Q7QUFDWDtBQUNBZixxQkFBcUIsR0FBR2E7QUFDeEIsU0FBU0QscUJBQXFCRSxJQUFJO0lBQzlCLE1BQU1DLE1BQU1GLGNBQWNDO0lBQzFCLElBQUksQ0FBQ0MsS0FBSztRQUNOLE1BQU0sSUFBSUcsTUFBTSxDQUFDLEVBQUVKLEtBQUsseUJBQXlCLENBQUM7SUFDdEQ7SUFDQSxPQUFPQztBQUNYO0FBQ0FmLDRCQUE0QixHQUFHWTtBQUMvQixTQUFTRDtJQUNMLE9BQU9DLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR1c7QUFDN0IsU0FBU0Q7SUFDTCxPQUFPRyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHVTtBQUN0QixTQUFTRDtJQUNMLE9BQU9HLHFCQUFxQjtBQUNoQztBQUNBWiwyQkFBMkIsR0FBR1M7QUFDOUIsU0FBU0Q7SUFDTCxPQUFPSyxjQUFjO0FBQ3pCO0FBQ0FiLG9CQUFvQixHQUFHUTtBQUN2QixTQUFTRDtJQUNMLE9BQU9LLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR087QUFDN0IsU0FBU0Q7SUFDTCxPQUFPTyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHTTtBQUN0QixTQUFTRDtJQUNMLE9BQU9PLHFCQUFxQjtBQUNoQztBQUNBWix3QkFBd0IsR0FBR0s7QUFDM0IsU0FBU0Q7SUFDTCxPQUFPUyxjQUFjO0FBQ3pCO0FBQ0FiLGlCQUFpQixHQUFHSTtBQUNwQixTQUFTRDtJQUNMLE9BQU9TLHFCQUFxQjtBQUNoQztBQUNBWiw4QkFBOEIsR0FBR0c7QUFDakMsU0FBU0Q7SUFDTCxPQUFPVyxjQUFjO0FBQ3pCO0FBQ0FiLHVCQUF1QixHQUFHRSxpQkFDMUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXVsdGl2ZXJzeC1kYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3dpbmRvdy1nZXR0ZXJzL2Rpc3QvY2pzL2luZGV4LmpzPzdiMjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldExvY2FsU3RvcmFnZSA9IGV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdyA9IGV4cG9ydHMuZ2V0Q3J5cHRvID0gZXhwb3J0cy5nZXRDcnlwdG9PclRocm93ID0gZXhwb3J0cy5nZXRMb2NhdGlvbiA9IGV4cG9ydHMuZ2V0TG9jYXRpb25PclRocm93ID0gZXhwb3J0cy5nZXROYXZpZ2F0b3IgPSBleHBvcnRzLmdldE5hdmlnYXRvck9yVGhyb3cgPSBleHBvcnRzLmdldERvY3VtZW50ID0gZXhwb3J0cy5nZXREb2N1bWVudE9yVGhyb3cgPSBleHBvcnRzLmdldEZyb21XaW5kb3dPclRocm93ID0gZXhwb3J0cy5nZXRGcm9tV2luZG93ID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0RnJvbVdpbmRvdyhuYW1lKSB7XG4gICAgbGV0IHJlcyA9IHVuZGVmaW5lZDtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93W25hbWVdICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJlcyA9IHdpbmRvd1tuYW1lXTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydHMuZ2V0RnJvbVdpbmRvdyA9IGdldEZyb21XaW5kb3c7XG5mdW5jdGlvbiBnZXRGcm9tV2luZG93T3JUaHJvdyhuYW1lKSB7XG4gICAgY29uc3QgcmVzID0gZ2V0RnJvbVdpbmRvdyhuYW1lKTtcbiAgICBpZiAoIXJlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bmFtZX0gaXMgbm90IGRlZmluZWQgaW4gV2luZG93YCk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5leHBvcnRzLmdldEZyb21XaW5kb3dPclRocm93ID0gZ2V0RnJvbVdpbmRvd09yVGhyb3c7XG5mdW5jdGlvbiBnZXREb2N1bWVudE9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwiZG9jdW1lbnRcIik7XG59XG5leHBvcnRzLmdldERvY3VtZW50T3JUaHJvdyA9IGdldERvY3VtZW50T3JUaHJvdztcbmZ1bmN0aW9uIGdldERvY3VtZW50KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwiZG9jdW1lbnRcIik7XG59XG5leHBvcnRzLmdldERvY3VtZW50ID0gZ2V0RG9jdW1lbnQ7XG5mdW5jdGlvbiBnZXROYXZpZ2F0b3JPclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcIm5hdmlnYXRvclwiKTtcbn1cbmV4cG9ydHMuZ2V0TmF2aWdhdG9yT3JUaHJvdyA9IGdldE5hdmlnYXRvck9yVGhyb3c7XG5mdW5jdGlvbiBnZXROYXZpZ2F0b3IoKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJuYXZpZ2F0b3JcIik7XG59XG5leHBvcnRzLmdldE5hdmlnYXRvciA9IGdldE5hdmlnYXRvcjtcbmZ1bmN0aW9uIGdldExvY2F0aW9uT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJsb2NhdGlvblwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYXRpb25PclRocm93ID0gZ2V0TG9jYXRpb25PclRocm93O1xuZnVuY3Rpb24gZ2V0TG9jYXRpb24oKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJsb2NhdGlvblwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYXRpb24gPSBnZXRMb2NhdGlvbjtcbmZ1bmN0aW9uIGdldENyeXB0b09yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwiY3J5cHRvXCIpO1xufVxuZXhwb3J0cy5nZXRDcnlwdG9PclRocm93ID0gZ2V0Q3J5cHRvT3JUaHJvdztcbmZ1bmN0aW9uIGdldENyeXB0bygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImNyeXB0b1wiKTtcbn1cbmV4cG9ydHMuZ2V0Q3J5cHRvID0gZ2V0Q3J5cHRvO1xuZnVuY3Rpb24gZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJsb2NhbFN0b3JhZ2VcIik7XG59XG5leHBvcnRzLmdldExvY2FsU3RvcmFnZU9yVGhyb3cgPSBnZXRMb2NhbFN0b3JhZ2VPclRocm93O1xuZnVuY3Rpb24gZ2V0TG9jYWxTdG9yYWdlKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwibG9jYWxTdG9yYWdlXCIpO1xufVxuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2UgPSBnZXRMb2NhbFN0b3JhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRMb2NhbFN0b3JhZ2UiLCJnZXRMb2NhbFN0b3JhZ2VPclRocm93IiwiZ2V0Q3J5cHRvIiwiZ2V0Q3J5cHRvT3JUaHJvdyIsImdldExvY2F0aW9uIiwiZ2V0TG9jYXRpb25PclRocm93IiwiZ2V0TmF2aWdhdG9yIiwiZ2V0TmF2aWdhdG9yT3JUaHJvdyIsImdldERvY3VtZW50IiwiZ2V0RG9jdW1lbnRPclRocm93IiwiZ2V0RnJvbVdpbmRvd09yVGhyb3ciLCJnZXRGcm9tV2luZG93IiwibmFtZSIsInJlcyIsInVuZGVmaW5lZCIsIndpbmRvdyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    } catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for(let i = 0; i < links.length; i++){\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            } else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        } else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        } else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for(let i = 0; i < metaTags.length; i++){\n            const tag = metaTags[i];\n            const attributes = [\n                \"itemprop\",\n                \"property\",\n                \"name\"\n            ].map((target)=>tag.getAttribute(target)).filter((attr)=>{\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\n");

/***/ })

};
;